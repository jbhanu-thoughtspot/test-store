import Oe from "https://cdn.skypack.dev/pin/react@v17.0.1-yH0aYV1FOvoIPeKBbHxg/mode=imports,min/optimized/react.js";
import qs from "https://cdn.skypack.dev/pin/react-dom@v17.0.1-oZ1BXZ5opQ1DbTh7nu9r/mode=imports,min/optimized/react-dom.js";
import Eu from "https://cdn.skypack.dev/pin/react-dom@v17.0.1-oZ1BXZ5opQ1DbTh7nu9r/dist=es2020,mode=imports,min/unoptimized/cjs/react-dom-server.browser.production.min.js";
import { r as Ru } from "./chunk-libs-aa7c0e73.js";
var j = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function oR(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function Nd(n) {
  if (n.__esModule)
    return n;
  var t = n.default;
  if (typeof t == "function") {
    var e = function r() {
      if (this instanceof r) {
        var o = [null];
        o.push.apply(o, arguments);
        var i = Function.bind.apply(t, o);
        return new i();
      }
      return t.apply(this, arguments);
    };
    e.prototype = t.prototype;
  } else
    e = {};
  return Object.defineProperty(e, "__esModule", { value: !0 }), Object.keys(n).forEach(function(r) {
    var o = Object.getOwnPropertyDescriptor(n, r);
    Object.defineProperty(e, r, o.get ? o : {
      enumerable: !0,
      get: function() {
        return n[r];
      }
    });
  }), e;
}
var Mn = {}, ll = {
  get exports() {
    return Mn;
  },
  set exports(n) {
    Mn = n;
  }
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var mi, ul;
function xd() {
  if (ul)
    return mi;
  ul = 1;
  var n = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, e = Object.prototype.propertyIsEnumerable;
  function r(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var s = {}, a = 0; a < 10; a++)
        s["_" + String.fromCharCode(a)] = a;
      var l = Object.getOwnPropertyNames(s).map(function(p) {
        return s[p];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(p) {
        u[p] = p;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return mi = o() ? Object.assign : function(i, s) {
    for (var a, l = r(i), u, p = 1; p < arguments.length; p++) {
      a = Object(arguments[p]);
      for (var c in a)
        t.call(a, c) && (l[c] = a[c]);
      if (n) {
        u = n(a);
        for (var d = 0; d < u.length; d++)
          e.call(a, u[d]) && (l[u[d]] = a[u[d]]);
      }
    }
    return l;
  }, mi;
}
var _i, pl;
function Xs() {
  if (pl)
    return _i;
  pl = 1;
  var n = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return _i = n, _i;
}
var wi, cl;
function Su() {
  return cl || (cl = 1, wi = Function.call.bind(Object.prototype.hasOwnProperty)), wi;
}
var Ei, dl;
function Hd() {
  if (dl)
    return Ei;
  dl = 1;
  var n = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = Xs(), e = {}, r = Su();
    n = function(i) {
      var s = "Warning: " + i;
      typeof console < "u" && console.error(s);
      try {
        throw new Error(s);
      } catch {
      }
    };
  }
  function o(i, s, a, l, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var p in i)
        if (r(i, p)) {
          var c;
          try {
            if (typeof i[p] != "function") {
              var d = Error(
                (l || "React class") + ": " + a + " type `" + p + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[p] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw d.name = "Invariant Violation", d;
            }
            c = i[p](s, p, l, a, null, t);
          } catch (g) {
            c = g;
          }
          if (c && !(c instanceof Error) && n(
            (l || "React class") + ": type specification of " + a + " `" + p + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof c + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), c instanceof Error && !(c.message in e)) {
            e[c.message] = !0;
            var f = u ? u() : "";
            n(
              "Failed " + a + " type: " + c.message + (f ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (e = {});
  }, Ei = o, Ei;
}
var Ri, hl;
function Wd() {
  if (hl)
    return Ri;
  hl = 1;
  var n = Ru(), t = xd(), e = Xs(), r = Su(), o = Hd(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(a) {
    var l = "Warning: " + a;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function s() {
    return null;
  }
  return Ri = function(a, l) {
    var u = typeof Symbol == "function" && Symbol.iterator, p = "@@iterator";
    function c(L) {
      var k = L && (u && L[u] || L[p]);
      if (typeof k == "function")
        return k;
    }
    var d = "<<anonymous>>", f = {
      array: m("array"),
      bigint: m("bigint"),
      bool: m("boolean"),
      func: m("function"),
      number: m("number"),
      object: m("object"),
      string: m("string"),
      symbol: m("symbol"),
      any: _(),
      arrayOf: E,
      element: S(),
      elementType: b(),
      instanceOf: x,
      node: V(),
      objectOf: A,
      oneOf: I,
      oneOfType: M,
      shape: z,
      exact: $
    };
    function g(L, k) {
      return L === k ? L !== 0 || 1 / L === 1 / k : L !== L && k !== k;
    }
    function y(L, k) {
      this.message = L, this.data = k && typeof k == "object" ? k : {}, this.stack = "";
    }
    y.prototype = Error.prototype;
    function C(L) {
      if (process.env.NODE_ENV !== "production")
        var k = {}, W = 0;
      function N(ne, re, oe, ie, he, ae, nt) {
        if (ie = ie || d, ae = ae || oe, nt !== e) {
          if (l) {
            var be = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw be.name = "Invariant Violation", be;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var pt = ie + ":" + oe;
            !k[pt] && // Avoid spamming the console because they are often not actionable except for lib authors
            W < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + ae + "` prop on `" + ie + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), k[pt] = !0, W++);
          }
        }
        return re[oe] == null ? ne ? re[oe] === null ? new y("The " + he + " `" + ae + "` is marked as required " + ("in `" + ie + "`, but its value is `null`.")) : new y("The " + he + " `" + ae + "` is marked as required in " + ("`" + ie + "`, but its value is `undefined`.")) : null : L(re, oe, ie, he, ae);
      }
      var Y = N.bind(null, !1);
      return Y.isRequired = N.bind(null, !0), Y;
    }
    function m(L) {
      function k(W, N, Y, ne, re, oe) {
        var ie = W[N], he = ce(ie);
        if (he !== L) {
          var ae = Fe(ie);
          return new y(
            "Invalid " + ne + " `" + re + "` of type " + ("`" + ae + "` supplied to `" + Y + "`, expected ") + ("`" + L + "`."),
            { expectedType: L }
          );
        }
        return null;
      }
      return C(k);
    }
    function _() {
      return C(s);
    }
    function E(L) {
      function k(W, N, Y, ne, re) {
        if (typeof L != "function")
          return new y("Property `" + re + "` of component `" + Y + "` has invalid PropType notation inside arrayOf.");
        var oe = W[N];
        if (!Array.isArray(oe)) {
          var ie = ce(oe);
          return new y("Invalid " + ne + " `" + re + "` of type " + ("`" + ie + "` supplied to `" + Y + "`, expected an array."));
        }
        for (var he = 0; he < oe.length; he++) {
          var ae = L(oe, he, Y, ne, re + "[" + he + "]", e);
          if (ae instanceof Error)
            return ae;
        }
        return null;
      }
      return C(k);
    }
    function S() {
      function L(k, W, N, Y, ne) {
        var re = k[W];
        if (!a(re)) {
          var oe = ce(re);
          return new y("Invalid " + Y + " `" + ne + "` of type " + ("`" + oe + "` supplied to `" + N + "`, expected a single ReactElement."));
        }
        return null;
      }
      return C(L);
    }
    function b() {
      function L(k, W, N, Y, ne) {
        var re = k[W];
        if (!n.isValidElementType(re)) {
          var oe = ce(re);
          return new y("Invalid " + Y + " `" + ne + "` of type " + ("`" + oe + "` supplied to `" + N + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return C(L);
    }
    function x(L) {
      function k(W, N, Y, ne, re) {
        if (!(W[N] instanceof L)) {
          var oe = L.name || d, ie = Je(W[N]);
          return new y("Invalid " + ne + " `" + re + "` of type " + ("`" + ie + "` supplied to `" + Y + "`, expected ") + ("instance of `" + oe + "`."));
        }
        return null;
      }
      return C(k);
    }
    function I(L) {
      if (!Array.isArray(L))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), s;
      function k(W, N, Y, ne, re) {
        for (var oe = W[N], ie = 0; ie < L.length; ie++)
          if (g(oe, L[ie]))
            return null;
        var he = JSON.stringify(L, function(nt, be) {
          var pt = Fe(be);
          return pt === "symbol" ? String(be) : be;
        });
        return new y("Invalid " + ne + " `" + re + "` of value `" + String(oe) + "` " + ("supplied to `" + Y + "`, expected one of " + he + "."));
      }
      return C(k);
    }
    function A(L) {
      function k(W, N, Y, ne, re) {
        if (typeof L != "function")
          return new y("Property `" + re + "` of component `" + Y + "` has invalid PropType notation inside objectOf.");
        var oe = W[N], ie = ce(oe);
        if (ie !== "object")
          return new y("Invalid " + ne + " `" + re + "` of type " + ("`" + ie + "` supplied to `" + Y + "`, expected an object."));
        for (var he in oe)
          if (r(oe, he)) {
            var ae = L(oe, he, Y, ne, re + "." + he, e);
            if (ae instanceof Error)
              return ae;
          }
        return null;
      }
      return C(k);
    }
    function M(L) {
      if (!Array.isArray(L))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), s;
      for (var k = 0; k < L.length; k++) {
        var W = L[k];
        if (typeof W != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Gt(W) + " at index " + k + "."
          ), s;
      }
      function N(Y, ne, re, oe, ie) {
        for (var he = [], ae = 0; ae < L.length; ae++) {
          var nt = L[ae], be = nt(Y, ne, re, oe, ie, e);
          if (be == null)
            return null;
          be.data && r(be.data, "expectedType") && he.push(be.data.expectedType);
        }
        var pt = he.length > 0 ? ", expected one of type [" + he.join(", ") + "]" : "";
        return new y("Invalid " + oe + " `" + ie + "` supplied to " + ("`" + re + "`" + pt + "."));
      }
      return C(N);
    }
    function V() {
      function L(k, W, N, Y, ne) {
        return Z(k[W]) ? null : new y("Invalid " + Y + " `" + ne + "` supplied to " + ("`" + N + "`, expected a ReactNode."));
      }
      return C(L);
    }
    function H(L, k, W, N, Y) {
      return new y(
        (L || "React class") + ": " + k + " type `" + W + "." + N + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Y + "`."
      );
    }
    function z(L) {
      function k(W, N, Y, ne, re) {
        var oe = W[N], ie = ce(oe);
        if (ie !== "object")
          return new y("Invalid " + ne + " `" + re + "` of type `" + ie + "` " + ("supplied to `" + Y + "`, expected `object`."));
        for (var he in L) {
          var ae = L[he];
          if (typeof ae != "function")
            return H(Y, ne, re, he, Fe(ae));
          var nt = ae(oe, he, Y, ne, re + "." + he, e);
          if (nt)
            return nt;
        }
        return null;
      }
      return C(k);
    }
    function $(L) {
      function k(W, N, Y, ne, re) {
        var oe = W[N], ie = ce(oe);
        if (ie !== "object")
          return new y("Invalid " + ne + " `" + re + "` of type `" + ie + "` " + ("supplied to `" + Y + "`, expected `object`."));
        var he = t({}, W[N], L);
        for (var ae in he) {
          var nt = L[ae];
          if (r(L, ae) && typeof nt != "function")
            return H(Y, ne, re, ae, Fe(nt));
          if (!nt)
            return new y(
              "Invalid " + ne + " `" + re + "` key `" + ae + "` supplied to `" + Y + "`.\nBad object: " + JSON.stringify(W[N], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(L), null, "  ")
            );
          var be = nt(oe, ae, Y, ne, re + "." + ae, e);
          if (be)
            return be;
        }
        return null;
      }
      return C(k);
    }
    function Z(L) {
      switch (typeof L) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !L;
        case "object":
          if (Array.isArray(L))
            return L.every(Z);
          if (L === null || a(L))
            return !0;
          var k = c(L);
          if (k) {
            var W = k.call(L), N;
            if (k !== L.entries) {
              for (; !(N = W.next()).done; )
                if (!Z(N.value))
                  return !1;
            } else
              for (; !(N = W.next()).done; ) {
                var Y = N.value;
                if (Y && !Z(Y[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function X(L, k) {
      return L === "symbol" ? !0 : k ? k["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && k instanceof Symbol : !1;
    }
    function ce(L) {
      var k = typeof L;
      return Array.isArray(L) ? "array" : L instanceof RegExp ? "object" : X(k, L) ? "symbol" : k;
    }
    function Fe(L) {
      if (typeof L > "u" || L === null)
        return "" + L;
      var k = ce(L);
      if (k === "object") {
        if (L instanceof Date)
          return "date";
        if (L instanceof RegExp)
          return "regexp";
      }
      return k;
    }
    function Gt(L) {
      var k = Fe(L);
      switch (k) {
        case "array":
        case "object":
          return "an " + k;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + k;
        default:
          return k;
      }
    }
    function Je(L) {
      return !L.constructor || !L.constructor.name ? d : L.constructor.name;
    }
    return f.checkPropTypes = o, f.resetWarningCache = o.resetWarningCache, f.PropTypes = f, f;
  }, Ri;
}
var Si, fl;
function Vd() {
  if (fl)
    return Si;
  fl = 1;
  var n = Xs();
  function t() {
  }
  function e() {
  }
  return e.resetWarningCache = t, Si = function() {
    function r(s, a, l, u, p, c) {
      if (c !== n) {
        var d = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw d.name = "Invariant Violation", d;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var i = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: e,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, Si;
}
if (process.env.NODE_ENV !== "production") {
  var Bd = Ru(), jd = !0;
  ll.exports = Wd()(Bd.isElement, jd);
} else
  ll.exports = Vd()();
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function $r(n) {
  return n == null || n === "" ? null : n;
}
function O(n, t) {
  return t === void 0 && (t = !1), n != null && (n !== "" || t);
}
function K(n) {
  return !O(n);
}
function gt(n) {
  return n == null || n.length === 0;
}
function Qs(n) {
  return n != null && typeof n.toString == "function" ? n.toString() : null;
}
function Tt(n) {
  if (n !== void 0) {
    if (n === null || n === "")
      return null;
    if (typeof n == "number")
      return isNaN(n) ? void 0 : n;
    var t = parseInt(n, 10);
    return isNaN(t) ? void 0 : t;
  }
}
function Kt(n) {
  if (n !== void 0)
    return n === null || n === "" ? !1 : typeof n == "boolean" ? n : /true/i.test(n);
}
function Ud(n) {
  if (!(n == null || n === ""))
    return n;
}
function kd(n, t) {
  return n == null && t == null ? !0 : n == null && t != null || n != null && t == null ? !1 : n === t;
}
function zd(n, t) {
  var e = n ? JSON.stringify(n) : null, r = t ? JSON.stringify(t) : null;
  return e === r;
}
function ws(n, t, e) {
  e === void 0 && (e = !1);
  var r = n == null, o = t == null;
  if (n && n.toNumber && (n = n.toNumber()), t && t.toNumber && (t = t.toNumber()), r && o)
    return 0;
  if (r)
    return -1;
  if (o)
    return 1;
  function i(s, a) {
    return s > a ? 1 : s < a ? -1 : 0;
  }
  if (typeof n != "string" || !e)
    return i(n, t);
  try {
    return n.localeCompare(t);
  } catch {
    return i(n, t);
  }
}
function Or(n) {
  if (n instanceof Set || n instanceof Map) {
    var t = [];
    return n.forEach(function(e) {
      return t.push(e);
    }), t;
  }
  return Object.values(n);
}
const $d = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  attrToBoolean: Kt,
  attrToNumber: Tt,
  attrToString: Ud,
  defaultComparator: ws,
  exists: O,
  jsonEquals: zd,
  makeNull: $r,
  missing: K,
  missingOrEmpty: gt,
  referenceCompare: kd,
  toStringOrNull: Qs,
  values: Or
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ou = (
  /** @class */
  function() {
    function n() {
      this.existingKeys = {};
    }
    return n.prototype.addExistingKeys = function(t) {
      for (var e = 0; e < t.length; e++)
        this.existingKeys[t[e]] = !0;
    }, n.prototype.getUniqueKey = function(t, e) {
      t = Qs(t);
      for (var r = 0; ; ) {
        var o = void 0;
        if (t ? (o = t, r !== 0 && (o += "_" + r)) : e ? (o = e, r !== 0 && (o += "_" + r)) : o = "" + r, !this.existingKeys[o])
          return this.existingKeys[o] = !0, o;
        r++;
      }
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function ge(n, t) {
  n != null && (Array.isArray(n) ? n.forEach(function(e, r) {
    return t("" + r, e);
  }) : Object.keys(n).forEach(function(e) {
    return t(e, n[e]);
  }));
}
function Js(n) {
  for (var t = {}, e = Object.keys(n), r = 0; r < e.length; r++) {
    var o = e[r], i = n[o];
    t[o] = i;
  }
  return t;
}
function Kd(n) {
  return JSON.parse(JSON.stringify(n));
}
function Ln(n, t) {
  if (n) {
    var e = n, r = {};
    return Object.keys(e).forEach(function(o) {
      if (!(t && t.indexOf(o) >= 0)) {
        var i = e[o], s = Xr(i) && i.constructor === Object;
        s ? r[o] = Ln(i) : r[o] = i;
      }
    }), r;
  }
}
function Tu(n, t) {
  return n[t];
}
function Pu(n, t, e) {
  n[t] = e;
}
function Yd(n, t) {
  for (var e = [], r = 2; r < arguments.length; r++)
    e[r - 2] = arguments[r];
  e.forEach(function(o) {
    return bu(n, t, o);
  });
}
function bu(n, t, e, r) {
  var o = Tu(n, e);
  o !== void 0 && Pu(t, e, r ? r(o) : o);
}
function Du(n) {
  var t = {};
  return n.filter(function(e) {
    return e != null;
  }).forEach(function(e) {
    Object.keys(e).forEach(function(r) {
      return t[r] = null;
    });
  }), Object.keys(t);
}
function Lt(n) {
  if (!n)
    return [];
  var t = Object;
  if (typeof t.values == "function")
    return t.values(n);
  var e = [];
  for (var r in n)
    n.hasOwnProperty(r) && n.propertyIsEnumerable(r) && e.push(n[r]);
  return e;
}
function Pt(n, t, e, r) {
  e === void 0 && (e = !0), r === void 0 && (r = !1), O(t) && ge(t, function(o, i) {
    var s = n[o];
    if (s !== i) {
      if (r) {
        var a = s == null && i != null;
        if (a) {
          var l = typeof i == "object" && i.constructor === Object, u = l;
          u && (s = {}, n[o] = s);
        }
      }
      Xr(i) && Xr(s) && !Array.isArray(s) ? Pt(s, i, e, r) : (e || i !== void 0) && (n[o] = i);
    }
  });
}
function qd(n) {
  return K(n) || Object.keys(n).length === 0;
}
function Xd(n, t, e) {
  if (n == null)
    return e;
  for (var r = t.split("."), o = n; r.length > 1; )
    if (o = o[r.shift()], o == null)
      return e;
  var i = o[r[0]];
  return i ?? e;
}
function Qd(n, t, e) {
  if (n != null) {
    for (var r = t.split("."), o = n; r.length > 1; )
      if (o = o[r.shift()], o == null)
        return;
    o[r[0]] = e;
  }
}
function Au(n) {
  return Object.freeze(n), Or(n).forEach(function(t) {
    (Xr(t) || typeof t == "function") && Au(t);
  }), n;
}
function Gn(n, t, e) {
  if (!(!t || !n)) {
    if (!e)
      return n[t];
    for (var r = t.split("."), o = n, i = 0; i < r.length; i++) {
      if (o == null)
        return;
      o = o[r[i]];
    }
    return o;
  }
}
function Fu(n, t) {
  Object.keys(n).forEach(function(o) {
    var i = n[o];
    typeof i == "object" && (n[o] = void 0);
  });
  var e = Object.getPrototypeOf(n), r = {};
  Object.keys(e).forEach(function(o) {
    var i = e[o];
    if (typeof i == "function") {
      var s = function() {
        console.warn("AG Grid: " + t + " function " + o + `() cannot be called as the grid has been destroyed.
                     Please don't call grid API functions on destroyed grids - as a matter of fact you shouldn't
                     be keeping the API reference, your application has a memory leak! Remove the API reference
                     when the grid is destroyed.`);
      };
      r[o] = { value: s, writable: !0 };
    }
  }), Object.defineProperties(n, r);
}
function Xr(n) {
  return typeof n == "object" && n !== null;
}
const Jd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  cloneObject: Js,
  copyPropertiesIfPresent: Yd,
  copyPropertyIfPresent: bu,
  deepCloneDefinition: Ln,
  deepCloneObject: Kd,
  deepFreeze: Au,
  get: Xd,
  getAllKeysInObjects: Du,
  getAllValuesInObject: Lt,
  getProperty: Tu,
  getValueUsingField: Gn,
  isNonNullObject: Xr,
  iterateObject: ge,
  mergeDeep: Pt,
  missingOrEmptyObject: qd,
  removeAllReferences: Fu,
  set: Qd,
  setProperty: Pu
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Zd = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, eh = /([^\s,]+)/g, gl = {};
function ve(n, t) {
  gl[t] || (n(), gl[t] = !0);
}
function Zn(n) {
  if (n.name)
    return n.name;
  var t = /function\s+([^\(]+)/.exec(n.toString());
  return t && t.length === 2 ? t[1].trim() : null;
}
function th(n) {
  var t = n.toString().replace(Zd, "");
  return t.slice(t.indexOf("(") + 1, t.indexOf(")")).match(eh) || [];
}
function Zs(n) {
  return !!(n && n.constructor && n.call && n.apply);
}
function Iu(n) {
  Mu(n, 400);
}
var Oi = [], Ti = !1;
function Es(n) {
  Oi.push(n), !Ti && (Ti = !0, window.setTimeout(function() {
    var t = Oi.slice();
    Oi.length = 0, Ti = !1, t.forEach(function(e) {
      return e();
    });
  }, 0));
}
function Mu(n, t) {
  t === void 0 && (t = 0), n.length > 0 && window.setTimeout(function() {
    return n.forEach(function(e) {
      return e();
    });
  }, t);
}
function ur(n, t, e) {
  e === void 0 && (e = !1);
  var r;
  return function() {
    for (var o = [], i = 0; i < arguments.length; i++)
      o[i] = arguments[i];
    var s = this, a = e && !r;
    window.clearTimeout(r), r = window.setTimeout(function() {
      r = null, e || n.apply(s, o);
    }, t), a && n.apply(s, o);
  };
}
function Lu(n, t, e, r) {
  e === void 0 && (e = 100);
  var o = (/* @__PURE__ */ new Date()).getTime(), i = null, s = !1, a = function() {
    var l = (/* @__PURE__ */ new Date()).getTime() - o > e;
    (n() || l) && (t(), s = !0, i != null && (window.clearInterval(i), i = null), l && r && console.warn(r));
  };
  a(), s || (i = window.setInterval(a, 10));
}
function rh() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n[t] = arguments[t];
  return function(e) {
    return n.reduce(function(r, o) {
      return o(r);
    }, e);
  };
}
function Gu(n) {
  n && n();
}
const oh = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  callIfPresent: Gu,
  compose: rh,
  debounce: ur,
  doOnce: ve,
  executeAfter: Mu,
  executeInAWhile: Iu,
  executeNextVMTurn: Es,
  getFunctionName: Zn,
  getFunctionParameters: th,
  isFunction: Zs,
  waitUntil: Lu
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Nu = (
  /** @class */
  function() {
    function n(t, e) {
      if (this.beanWrappers = {}, this.destroyed = !1, !(!t || !t.beanClasses)) {
        this.contextParams = t, this.logger = e, this.logger.log(">> creating ag-Application Context"), this.createBeans();
        var r = this.getBeanInstances();
        this.wireBeans(r), this.logger.log(">> ag-Application Context ready - component is alive");
      }
    }
    return n.prototype.getBeanInstances = function() {
      return Or(this.beanWrappers).map(function(t) {
        return t.beanInstance;
      });
    }, n.prototype.createBean = function(t, e) {
      if (!t)
        throw Error("Can't wire to bean since it is null");
      return this.wireBeans([t], e), t;
    }, n.prototype.wireBeans = function(t, e) {
      this.autoWireBeans(t), this.methodWireBeans(t), this.callLifeCycleMethods(t, "preConstructMethods"), O(e) && t.forEach(e), this.callLifeCycleMethods(t, "postConstructMethods");
    }, n.prototype.createBeans = function() {
      var t = this;
      this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)), ge(this.beanWrappers, function(r, o) {
        var i;
        o.bean.__agBeanMetaData && o.bean.__agBeanMetaData.autowireMethods && o.bean.__agBeanMetaData.autowireMethods.agConstructor && (i = o.bean.__agBeanMetaData.autowireMethods.agConstructor);
        var s = t.getBeansForParameters(i, o.bean.name), a = nh(o.bean, s);
        o.beanInstance = a;
      });
      var e = Object.keys(this.beanWrappers).join(", ");
      this.logger.log("created beans: " + e);
    }, n.prototype.createBeanWrapper = function(t) {
      var e = t.__agBeanMetaData;
      if (!e) {
        var r = void 0;
        t.prototype.constructor ? r = Zn(t.prototype.constructor) : r = "" + t, console.error("Context item " + r + " is not a bean");
        return;
      }
      var o = {
        bean: t,
        beanInstance: null,
        beanName: e.beanName
      };
      this.beanWrappers[e.beanName] = o;
    }, n.prototype.autoWireBeans = function(t) {
      var e = this;
      t.forEach(function(r) {
        e.forEachMetaDataInHierarchy(r, function(o, i) {
          var s = o.agClassAttributes;
          s && s.forEach(function(a) {
            var l = e.lookupBeanInstance(i, a.beanName, a.optional);
            r[a.attributeName] = l;
          });
        });
      });
    }, n.prototype.methodWireBeans = function(t) {
      var e = this;
      t.forEach(function(r) {
        e.forEachMetaDataInHierarchy(r, function(o, i) {
          ge(o.autowireMethods, function(s, a) {
            if (s !== "agConstructor") {
              var l = e.getBeansForParameters(a, i);
              r[s].apply(r, l);
            }
          });
        });
      });
    }, n.prototype.forEachMetaDataInHierarchy = function(t, e) {
      for (var r = Object.getPrototypeOf(t); r != null; ) {
        var o = r.constructor;
        if (o.hasOwnProperty("__agBeanMetaData")) {
          var i = o.__agBeanMetaData, s = this.getBeanName(o);
          e(i, s);
        }
        r = Object.getPrototypeOf(r);
      }
    }, n.prototype.getBeanName = function(t) {
      if (t.__agBeanMetaData && t.__agBeanMetaData.beanName)
        return t.__agBeanMetaData.beanName;
      var e = t.toString(), r = e.substring(9, e.indexOf("("));
      return r;
    }, n.prototype.getBeansForParameters = function(t, e) {
      var r = this, o = [];
      return t && ge(t, function(i, s) {
        var a = r.lookupBeanInstance(e, s);
        o[Number(i)] = a;
      }), o;
    }, n.prototype.lookupBeanInstance = function(t, e, r) {
      if (r === void 0 && (r = !1), e === "context")
        return this;
      if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(e))
        return this.contextParams.providedBeanInstances[e];
      var o = this.beanWrappers[e];
      return o ? o.beanInstance : (r || console.error("AG Grid: unable to find bean reference " + e + " while initialising " + t), null);
    }, n.prototype.callLifeCycleMethods = function(t, e) {
      var r = this;
      t.forEach(function(o) {
        return r.callLifeCycleMethodsOnBean(o, e);
      });
    }, n.prototype.callLifeCycleMethodsOnBean = function(t, e, r) {
      var o = {};
      this.forEachMetaDataInHierarchy(t, function(s) {
        var a = s[e];
        a && a.forEach(function(l) {
          l != r && (o[l] = !0);
        });
      });
      var i = Object.keys(o);
      i.forEach(function(s) {
        return t[s]();
      });
    }, n.prototype.getBean = function(t) {
      return this.lookupBeanInstance("getBean", t, !0);
    }, n.prototype.destroy = function() {
      if (!this.destroyed) {
        this.logger.log(">> Shutting down ag-Application Context");
        var t = this.getBeanInstances();
        this.destroyBeans(t), this.contextParams.providedBeanInstances = null, this.destroyed = !0, this.logger.log(">> ag-Application Context shut down - component is dead");
      }
    }, n.prototype.destroyBean = function(t) {
      t && this.destroyBeans([t]);
    }, n.prototype.destroyBeans = function(t) {
      var e = this;
      return t ? (t.forEach(function(r) {
        e.callLifeCycleMethodsOnBean(r, "preDestroyMethods", "destroy");
        var o = r;
        typeof o.destroy == "function" && o.destroy();
      }), []) : [];
    }, n;
  }()
);
function nh(n, t) {
  var e = [null].concat(t), r = n.bind.apply(n, e);
  return new r();
}
function Rs(n, t, e) {
  var r = Er(n.constructor);
  r.preConstructMethods || (r.preConstructMethods = []), r.preConstructMethods.push(t);
}
function G(n, t, e) {
  var r = Er(n.constructor);
  r.postConstructMethods || (r.postConstructMethods = []), r.postConstructMethods.push(t);
}
function ot(n, t, e) {
  var r = Er(n.constructor);
  r.preDestroyMethods || (r.preDestroyMethods = []), r.preDestroyMethods.push(t);
}
function U(n) {
  return function(t) {
    var e = Er(t);
    e.beanName = n;
  };
}
function h(n) {
  return function(t, e, r) {
    xu(t, n, !1, t, e, null);
  };
}
function de(n) {
  return function(t, e, r) {
    xu(t, n, !0, t, e, null);
  };
}
function xu(n, t, e, r, o, i) {
  if (t === null) {
    console.error("AG Grid: Autowired name should not be null");
    return;
  }
  if (typeof i == "number") {
    console.error("AG Grid: Autowired should be on an attribute");
    return;
  }
  var s = Er(n.constructor);
  s.agClassAttributes || (s.agClassAttributes = []), s.agClassAttributes.push({
    attributeName: o,
    beanName: t,
    optional: e
  });
}
function tt(n) {
  return function(t, e, r) {
    var o = typeof t == "function" ? t : t.constructor, i;
    if (typeof r == "number") {
      var s = void 0;
      e ? (i = Er(o), s = e) : (i = Er(o), s = "agConstructor"), i.autowireMethods || (i.autowireMethods = {}), i.autowireMethods[s] || (i.autowireMethods[s] = {}), i.autowireMethods[s][r] = n;
    }
  };
}
function Er(n) {
  return n.hasOwnProperty("__agBeanMetaData") || (n.__agBeanMetaData = {}), n.__agBeanMetaData;
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var vl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Jo = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, qt = (
  /** @class */
  function() {
    function n() {
      this.allSyncListeners = /* @__PURE__ */ new Map(), this.allAsyncListeners = /* @__PURE__ */ new Map(), this.globalSyncListeners = /* @__PURE__ */ new Set(), this.globalAsyncListeners = /* @__PURE__ */ new Set(), this.asyncFunctionsQueue = [], this.scheduled = !1, this.firedEvents = {};
    }
    return n.prototype.setBeans = function(t, e, r, o) {
      if (o === void 0 && (o = null), this.frameworkOverrides = r, o) {
        var i = e.useAsyncEvents();
        this.addGlobalListener(o, i);
      }
    }, n.prototype.getListeners = function(t, e, r) {
      var o = e ? this.allAsyncListeners : this.allSyncListeners, i = o.get(t);
      return !i && r && (i = /* @__PURE__ */ new Set(), o.set(t, i)), i;
    }, n.prototype.noRegisteredListenersExist = function() {
      return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;
    }, n.prototype.addEventListener = function(t, e, r) {
      r === void 0 && (r = !1), this.getListeners(t, r, !0).add(e);
    }, n.prototype.removeEventListener = function(t, e, r) {
      r === void 0 && (r = !1);
      var o = this.getListeners(t, r, !1);
      if (o && (o.delete(e), o.size === 0)) {
        var i = r ? this.allAsyncListeners : this.allSyncListeners;
        i.delete(t);
      }
    }, n.prototype.addGlobalListener = function(t, e) {
      e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).add(t);
    }, n.prototype.removeGlobalListener = function(t, e) {
      e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).delete(t);
    }, n.prototype.dispatchEvent = function(t) {
      this.dispatchToListeners(t, !0), this.dispatchToListeners(t, !1), this.firedEvents[t.type] = !0;
    }, n.prototype.dispatchEventOnce = function(t) {
      this.firedEvents[t.type] || this.dispatchEvent(t);
    }, n.prototype.dispatchToListeners = function(t, e) {
      var r = this, o = t.type, i = function(l) {
        return l.forEach(function(u) {
          e ? r.dispatchAsync(function() {
            return u(t);
          }) : u(t);
        });
      }, s = this.getListeners(o, e, !1);
      s && i(s);
      var a = e ? this.globalAsyncListeners : this.globalSyncListeners;
      a.forEach(function(l) {
        e ? r.dispatchAsync(function() {
          return r.frameworkOverrides.dispatchEvent(o, function() {
            return l(o, t);
          }, !0);
        }) : r.frameworkOverrides.dispatchEvent(o, function() {
          return l(o, t);
        }, !0);
      });
    }, n.prototype.dispatchAsync = function(t) {
      this.asyncFunctionsQueue.push(t), this.scheduled || (window.setTimeout(this.flushAsyncQueue.bind(this), 0), this.scheduled = !0);
    }, n.prototype.flushAsyncQueue = function() {
      this.scheduled = !1;
      var t = this.asyncFunctionsQueue.slice();
      this.asyncFunctionsQueue = [], t.forEach(function(e) {
        return e();
      });
    }, vl([
      Jo(0, tt("loggerFactory")),
      Jo(1, tt("gridOptionsWrapper")),
      Jo(2, tt("frameworkOverrides")),
      Jo(3, tt("globalEventListener"))
    ], n.prototype, "setBeans", null), n = vl([
      U("eventService")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var w = (
  /** @class */
  function() {
    function n() {
    }
    return n.ROW_BUFFER_SIZE = 10, n.LAYOUT_INTERVAL = 500, n.BATCH_WAIT_MILLIS = 50, n.EXPORT_TYPE_DRAG_COPY = "dragCopy", n.EXPORT_TYPE_CLIPBOARD = "clipboard", n.EXPORT_TYPE_EXCEL = "excel", n.EXPORT_TYPE_CSV = "csv", n.ROW_MODEL_TYPE_INFINITE = "infinite", n.ROW_MODEL_TYPE_VIEWPORT = "viewport", n.ROW_MODEL_TYPE_CLIENT_SIDE = "clientSide", n.ROW_MODEL_TYPE_SERVER_SIDE = "serverSide", n.ALWAYS = "always", n.ONLY_WHEN_GROUPING = "onlyWhenGrouping", n.PINNED_TOP = "top", n.PINNED_BOTTOM = "bottom", n.DOM_LAYOUT_NORMAL = "normal", n.DOM_LAYOUT_PRINT = "print", n.DOM_LAYOUT_AUTO_HEIGHT = "autoHeight", n.GROUP_AUTO_COLUMN_ID = "ag-Grid-AutoColumn", n.SOURCE_PASTE = "paste", n.PINNED_RIGHT = "right", n.PINNED_LEFT = "left", n.SORT_ASC = "asc", n.SORT_DESC = "desc", n.INPUT_SELECTOR = "input, select, button, textarea", n.FOCUSABLE_SELECTOR = "[tabindex], input, select, button, textarea", n.FOCUSABLE_EXCLUDE = ".ag-hidden, .ag-hidden *, [disabled], .ag-disabled, .ag-disabled *", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var q;
(function(n) {
  n.CommunityCoreModule = "@ag-grid-community/core", n.CommunityAllModules = "@ag-grid-community/all", n.InfiniteRowModelModule = "@ag-grid-community/infinite-row-model", n.ClientSideRowModelModule = "@ag-grid-community/client-side-row-model", n.CsvExportModule = "@ag-grid-community/csv-export", n.EnterpriseCoreModule = "@ag-grid-enterprise/core", n.EnterpriseAllModules = "@ag-grid-enterprise/all", n.RowGroupingModule = "@ag-grid-enterprise/row-grouping", n.ColumnToolPanelModule = "@ag-grid-enterprise/column-tool-panel", n.FiltersToolPanelModule = "@ag-grid-enterprise/filter-tool-panel", n.MenuModule = "@ag-grid-enterprise/menu", n.SetFilterModule = "@ag-grid-enterprise/set-filter", n.MultiFilterModule = "@ag-grid-enterprise/multi-filter", n.StatusBarModule = "@ag-grid-enterprise/status-bar", n.SideBarModule = "@ag-grid-enterprise/side-bar", n.RangeSelectionModule = "@ag-grid-enterprise/range-selection", n.MasterDetailModule = "@ag-grid-enterprise/master-detail", n.RichSelectModule = "@ag-grid-enterprise/rich-select", n.GridChartsModule = "@ag-grid-enterprise/charts", n.ViewportRowModelModule = "@ag-grid-enterprise/viewport-row-model", n.ServerSideRowModelModule = "@ag-grid-enterprise/server-side-row-model", n.ExcelExportModule = "@ag-grid-enterprise/excel-export", n.ClipboardModule = "@ag-grid-enterprise/clipboard", n.SparklinesModule = "@ag-grid-enterprise/sparklines", n.AngularModule = "@ag-grid-community/angular", n.ReactModule = "@ag-grid-community/react", n.VueModule = "@ag-grid-community/vue", n.PolymerModule = "@ag-grid-community/polymer";
})(q || (q = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Q = (
  /** @class */
  function() {
    function n() {
    }
    return n.register = function(t, e) {
      e === void 0 && (e = !0), n.modulesMap[t.moduleName] = t, n.moduleBased === void 0 ? n.moduleBased = e : n.moduleBased !== e && ve(function() {
        console.warn("AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms."), console.warn("Please see https://www.ag-grid.com/javascript-grid/packages-modules/ for more information.");
      }, "ModulePackageCheck");
    }, n.registerModules = function(t, e) {
      e === void 0 && (e = !0), t && t.forEach(function(r) {
        return n.register(r, e);
      });
    }, n.assertRegistered = function(t, e) {
      if (this.isRegistered(t))
        return !0;
      var r = e + t, o;
      return n.moduleBased ? o = "AG Grid: unable to use " + e + " as module " + t + " is not present. Please see: https://www.ag-grid.com/javascript-grid/modules/" : o = "AG Grid: unable to use " + e + " as package 'ag-grid-enterprise' is not present. Please see: https://www.ag-grid.com/javascript-grid/packages/", ve(function() {
        console.warn(o);
      }, r), !1;
    }, n.isRegistered = function(t) {
      return !!n.modulesMap[t];
    }, n.getRegisteredModules = function() {
      return Or(n.modulesMap);
    }, n.isPackageBased = function() {
      return !n.moduleBased;
    }, n.modulesMap = {}, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Dr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ih = 0, pe = (
  /** @class */
  function() {
    function n(t, e, r, o) {
      this.instanceId = ih++, this.moving = !1, this.menuVisible = !1, this.filterActive = !1, this.eventService = new qt(), this.rowGroupActive = !1, this.pivotActive = !1, this.aggregationActive = !1, this.colDef = t, this.userProvidedColDef = e, this.colId = r, this.primary = o, this.setState(t);
    }
    return n.prototype.getInstanceId = function() {
      return this.instanceId;
    }, n.prototype.setState = function(t) {
      t.sort !== void 0 ? (t.sort === w.SORT_ASC || t.sort === w.SORT_DESC) && (this.sort = t.sort) : (t.initialSort === w.SORT_ASC || t.initialSort === w.SORT_DESC) && (this.sort = t.initialSort);
      var e = Tt(t.sortIndex), r = Tt(t.initialSortIndex);
      e !== void 0 ? e !== null && (this.sortIndex = e) : r !== null && (this.sortIndex = r);
      var o = Kt(t.hide), i = Kt(t.initialHide);
      o !== void 0 ? this.visible = !o : this.visible = !i, t.pinned !== void 0 ? this.setPinned(t.pinned) : this.setPinned(t.initialPinned);
      var s = Tt(t.flex), a = Tt(t.initialFlex);
      s !== void 0 ? this.flex = s : a !== void 0 && (this.flex = a);
    }, n.prototype.setColDef = function(t, e) {
      this.colDef = t, this.userProvidedColDef = e, this.initMinAndMaxWidths(), this.initDotNotation();
    }, n.prototype.getUserProvidedColDef = function() {
      return this.userProvidedColDef;
    }, n.prototype.setParent = function(t) {
      this.parent = t;
    }, n.prototype.getParent = function() {
      return this.parent;
    }, n.prototype.setOriginalParent = function(t) {
      this.originalParent = t;
    }, n.prototype.getOriginalParent = function() {
      return this.originalParent;
    }, n.prototype.initialise = function() {
      this.initMinAndMaxWidths(), this.resetActualWidth("gridInitializing"), this.initDotNotation(), this.validate();
    }, n.prototype.initDotNotation = function() {
      var t = this.gridOptionsWrapper.isSuppressFieldDotNotation();
      this.fieldContainsDots = O(this.colDef.field) && this.colDef.field.indexOf(".") >= 0 && !t, this.tooltipFieldContainsDots = O(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(".") >= 0 && !t;
    }, n.prototype.initMinAndMaxWidths = function() {
      var t = this.colDef;
      this.minWidth = this.columnUtils.calculateColMinWidth(t), this.maxWidth = this.columnUtils.calculateColMaxWidth(t);
    }, n.prototype.resetActualWidth = function(t) {
      t === void 0 && (t = "api");
      var e = this.columnUtils.calculateColInitialWidth(this.colDef);
      this.setActualWidth(e, t, !0);
    }, n.prototype.isEmptyGroup = function() {
      return !1;
    }, n.prototype.isRowGroupDisplayed = function(t) {
      if (K(this.colDef) || K(this.colDef.showRowGroup))
        return !1;
      var e = this.colDef.showRowGroup === !0, r = this.colDef.showRowGroup === t;
      return e || r;
    }, n.prototype.isPrimary = function() {
      return this.primary;
    }, n.prototype.isFilterAllowed = function() {
      var t = !!this.colDef.filter || !!this.colDef.filterFramework;
      return this.primary && t;
    }, n.prototype.isFieldContainsDots = function() {
      return this.fieldContainsDots;
    }, n.prototype.isTooltipFieldContainsDots = function() {
      return this.tooltipFieldContainsDots;
    }, n.prototype.validate = function() {
      var t = this.colDef;
      function e(s, a, l) {
        ve(function() {
          l ? console.warn(s, l) : ve(function() {
            return console.warn(s);
          }, a);
        }, a);
      }
      var r = this.gridOptionsWrapper.isRowModelDefault();
      if (r && !Q.isRegistered(q.RowGroupingModule)) {
        var o = ["enableRowGroup", "rowGroup", "rowGroupIndex", "enablePivot", "enableValue", "pivot", "pivotIndex", "aggFunc"];
        o.forEach(function(s) {
          O(t[s]) && (Q.isPackageBased() ? e("AG Grid: " + s + " is only valid in ag-grid-enterprise, your column definition should not have " + s, "ColumnRowGroupingMissing" + s) : e("AG Grid: " + s + " is only valid with AG Grid Enterprise Module " + q.RowGroupingModule + " - your column definition should not have " + s, "ColumnRowGroupingMissing" + s));
        });
      }
      if (Q.isRegistered(q.RichSelectModule) || this.colDef.cellEditor === "agRichSelect" && (Q.isPackageBased() ? e("AG Grid: " + this.colDef.cellEditor + " can only be used with ag-grid-enterprise", "ColumnRichSelectMissing") : e("AG Grid: " + this.colDef.cellEditor + " can only be used with AG Grid Enterprise Module " + q.RichSelectModule, "ColumnRichSelectMissing")), this.gridOptionsWrapper.isTreeData()) {
        var i = ["rowGroup", "rowGroupIndex", "pivot", "pivotIndex"];
        i.forEach(function(s) {
          O(t[s]) && e("AG Grid: " + s + " is not possible when doing tree data, your column definition should not have " + s, "TreeDataCannotRowGroup");
        });
      }
      O(this.colDef.width) && typeof this.colDef.width != "number" && e("AG Grid: colDef.width should be a number, not " + typeof this.colDef.width, "ColumnCheck_asdfawef"), t.pinnedRowCellRenderer && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowCellRendererParams && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowCellRendererFramework && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowValueGetter && e("AG Grid: pinnedRowCellRenderer is deprecated, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue.", "colDef.pinnedRowCellRenderer-deprecated");
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService.removeEventListener(t, e);
    }, n.prototype.createColumnFunctionCallbackParams = function(t) {
      return {
        node: t,
        data: t.data,
        column: this,
        colDef: this.colDef,
        context: this.gridOptionsWrapper.getContext(),
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi()
      };
    }, n.prototype.isSuppressNavigable = function(t) {
      if (typeof this.colDef.suppressNavigable == "boolean")
        return this.colDef.suppressNavigable;
      if (typeof this.colDef.suppressNavigable == "function") {
        var e = this.createColumnFunctionCallbackParams(t), r = this.colDef.suppressNavigable;
        return r(e);
      }
      return !1;
    }, n.prototype.isCellEditable = function(t) {
      return t.group && !this.gridOptionsWrapper.isEnableGroupEdit() ? !1 : this.isColumnFunc(t, this.colDef.editable);
    }, n.prototype.isSuppressFillHandle = function() {
      return !!Kt(this.colDef.suppressFillHandle);
    }, n.prototype.isAutoHeight = function() {
      return !!Kt(this.colDef.autoHeight);
    }, n.prototype.isRowDrag = function(t) {
      return this.isColumnFunc(t, this.colDef.rowDrag);
    }, n.prototype.isDndSource = function(t) {
      return this.isColumnFunc(t, this.colDef.dndSource);
    }, n.prototype.isCellCheckboxSelection = function(t) {
      return this.isColumnFunc(t, this.colDef.checkboxSelection);
    }, n.prototype.isSuppressPaste = function(t) {
      return this.isColumnFunc(t, this.colDef ? this.colDef.suppressPaste : null);
    }, n.prototype.isResizable = function() {
      return !!Kt(this.colDef.resizable);
    }, n.prototype.isColumnFunc = function(t, e) {
      if (typeof e == "boolean")
        return e;
      if (typeof e == "function") {
        var r = this.createColumnFunctionCallbackParams(t), o = e;
        return o(r);
      }
      return !1;
    }, n.prototype.setMoving = function(t, e) {
      e === void 0 && (e = "api"), this.moving = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_MOVING_CHANGED, e));
    }, n.prototype.createColumnEvent = function(t, e) {
      return {
        api: this.gridApi,
        columnApi: this.columnApi,
        type: t,
        column: this,
        columns: [this],
        source: e
      };
    }, n.prototype.isMoving = function() {
      return this.moving;
    }, n.prototype.getSort = function() {
      return this.sort;
    }, n.prototype.setSort = function(t, e) {
      e === void 0 && (e = "api"), this.sort !== t && (this.sort = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_SORT_CHANGED, e)));
    }, n.prototype.setMenuVisible = function(t, e) {
      e === void 0 && (e = "api"), this.menuVisible !== t && (this.menuVisible = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_MENU_VISIBLE_CHANGED, e)));
    }, n.prototype.isMenuVisible = function() {
      return this.menuVisible;
    }, n.prototype.isSortAscending = function() {
      return this.sort === w.SORT_ASC;
    }, n.prototype.isSortDescending = function() {
      return this.sort === w.SORT_DESC;
    }, n.prototype.isSortNone = function() {
      return K(this.sort);
    }, n.prototype.isSorting = function() {
      return O(this.sort);
    }, n.prototype.getSortIndex = function() {
      return this.sortIndex;
    }, n.prototype.setSortIndex = function(t) {
      this.sortIndex = t;
    }, n.prototype.setAggFunc = function(t) {
      this.aggFunc = t;
    }, n.prototype.getAggFunc = function() {
      return this.aggFunc;
    }, n.prototype.getLeft = function() {
      return this.left;
    }, n.prototype.getOldLeft = function() {
      return this.oldLeft;
    }, n.prototype.getRight = function() {
      return this.left + this.actualWidth;
    }, n.prototype.setLeft = function(t, e) {
      e === void 0 && (e = "api"), this.oldLeft = this.left, this.left !== t && (this.left = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_LEFT_CHANGED, e)));
    }, n.prototype.isFilterActive = function() {
      return this.filterActive;
    }, n.prototype.setFilterActive = function(t, e, r) {
      e === void 0 && (e = "api"), this.filterActive !== t && (this.filterActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_FILTER_ACTIVE_CHANGED, e)));
      var o = this.createColumnEvent(n.EVENT_FILTER_CHANGED, e);
      r && Pt(o, r), this.eventService.dispatchEvent(o);
    }, n.prototype.setPinned = function(t) {
      t === !0 || t === w.PINNED_LEFT ? this.pinned = w.PINNED_LEFT : t === w.PINNED_RIGHT ? this.pinned = w.PINNED_RIGHT : this.pinned = null;
    }, n.prototype.setFirstRightPinned = function(t, e) {
      e === void 0 && (e = "api"), this.firstRightPinned !== t && (this.firstRightPinned = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_FIRST_RIGHT_PINNED_CHANGED, e)));
    }, n.prototype.setLastLeftPinned = function(t, e) {
      e === void 0 && (e = "api"), this.lastLeftPinned !== t && (this.lastLeftPinned = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_LAST_LEFT_PINNED_CHANGED, e)));
    }, n.prototype.isFirstRightPinned = function() {
      return this.firstRightPinned;
    }, n.prototype.isLastLeftPinned = function() {
      return this.lastLeftPinned;
    }, n.prototype.isPinned = function() {
      return this.pinned === w.PINNED_LEFT || this.pinned === w.PINNED_RIGHT;
    }, n.prototype.isPinnedLeft = function() {
      return this.pinned === w.PINNED_LEFT;
    }, n.prototype.isPinnedRight = function() {
      return this.pinned === w.PINNED_RIGHT;
    }, n.prototype.getPinned = function() {
      return this.pinned;
    }, n.prototype.setVisible = function(t, e) {
      e === void 0 && (e = "api");
      var r = t === !0;
      this.visible !== r && (this.visible = r, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_VISIBLE_CHANGED, e)));
    }, n.prototype.isVisible = function() {
      return this.visible;
    }, n.prototype.getColDef = function() {
      return this.colDef;
    }, n.prototype.getColumnGroupShow = function() {
      return this.colDef.columnGroupShow;
    }, n.prototype.getColId = function() {
      return this.colId;
    }, n.prototype.getId = function() {
      return this.getColId();
    }, n.prototype.getUniqueId = function() {
      return this.getId();
    }, n.prototype.getDefinition = function() {
      return this.colDef;
    }, n.prototype.getActualWidth = function() {
      return this.actualWidth;
    }, n.prototype.createBaseColDefParams = function(t) {
      var e = {
        node: t,
        data: t.data,
        colDef: this.colDef,
        column: this,
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        context: this.gridOptionsWrapper.getContext()
      };
      return e;
    }, n.prototype.getColSpan = function(t) {
      if (K(this.colDef.colSpan))
        return 1;
      var e = this.createBaseColDefParams(t), r = this.colDef.colSpan(e);
      return Math.max(r, 1);
    }, n.prototype.getRowSpan = function(t) {
      if (K(this.colDef.rowSpan))
        return 1;
      var e = this.createBaseColDefParams(t), r = this.colDef.rowSpan(e);
      return Math.max(r, 1);
    }, n.prototype.setActualWidth = function(t, e, r) {
      e === void 0 && (e = "api"), r === void 0 && (r = !1), this.minWidth != null && (t = Math.max(t, this.minWidth)), this.maxWidth != null && (t = Math.min(t, this.maxWidth)), this.actualWidth !== t && (this.actualWidth = t, this.flex && e !== "flex" && e !== "gridInitializing" && (this.flex = null), r || this.fireColumnWidthChangedEvent(e));
    }, n.prototype.fireColumnWidthChangedEvent = function(t) {
      this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_WIDTH_CHANGED, t));
    }, n.prototype.isGreaterThanMax = function(t) {
      return this.maxWidth != null ? t > this.maxWidth : !1;
    }, n.prototype.getMinWidth = function() {
      return this.minWidth;
    }, n.prototype.getMaxWidth = function() {
      return this.maxWidth;
    }, n.prototype.getFlex = function() {
      return this.flex || 0;
    }, n.prototype.setFlex = function(t) {
      this.flex !== t && (this.flex = t);
    }, n.prototype.setMinimum = function(t) {
      t === void 0 && (t = "api"), O(this.minWidth) && this.setActualWidth(this.minWidth, t);
    }, n.prototype.setRowGroupActive = function(t, e) {
      e === void 0 && (e = "api"), this.rowGroupActive !== t && (this.rowGroupActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_ROW_GROUP_CHANGED, e)));
    }, n.prototype.isRowGroupActive = function() {
      return this.rowGroupActive;
    }, n.prototype.setPivotActive = function(t, e) {
      e === void 0 && (e = "api"), this.pivotActive !== t && (this.pivotActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_PIVOT_CHANGED, e)));
    }, n.prototype.isPivotActive = function() {
      return this.pivotActive;
    }, n.prototype.isAnyFunctionActive = function() {
      return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();
    }, n.prototype.isAnyFunctionAllowed = function() {
      return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();
    }, n.prototype.setValueActive = function(t, e) {
      e === void 0 && (e = "api"), this.aggregationActive !== t && (this.aggregationActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_VALUE_CHANGED, e)));
    }, n.prototype.isValueActive = function() {
      return this.aggregationActive;
    }, n.prototype.isAllowPivot = function() {
      return this.colDef.enablePivot === !0;
    }, n.prototype.isAllowValue = function() {
      return this.colDef.enableValue === !0;
    }, n.prototype.isAllowRowGroup = function() {
      return this.colDef.enableRowGroup === !0;
    }, n.prototype.getMenuTabs = function(t) {
      var e = this.getColDef().menuTabs;
      return e == null && (e = t), e;
    }, n.prototype.isLockPosition = function() {
      return console.warn("AG Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead."), this.colDef ? !!this.colDef.lockPosition : !1;
    }, n.prototype.isLockVisible = function() {
      return console.warn("AG Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead."), this.colDef ? !!this.colDef.lockVisible : !1;
    }, n.prototype.isLockPinned = function() {
      return console.warn("AG Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead."), this.colDef ? !!this.colDef.lockPinned : !1;
    }, n.EVENT_MOVING_CHANGED = "movingChanged", n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_WIDTH_CHANGED = "widthChanged", n.EVENT_LAST_LEFT_PINNED_CHANGED = "lastLeftPinnedChanged", n.EVENT_FIRST_RIGHT_PINNED_CHANGED = "firstRightPinnedChanged", n.EVENT_VISIBLE_CHANGED = "visibleChanged", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_ACTIVE_CHANGED = "filterActiveChanged", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_MENU_VISIBLE_CHANGED = "menuVisibleChanged", n.EVENT_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_VALUE_CHANGED = "columnValueChanged", Dr([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), Dr([
      h("columnUtils")
    ], n.prototype, "columnUtils", void 0), Dr([
      h("columnApi")
    ], n.prototype, "columnApi", void 0), Dr([
      h("gridApi")
    ], n.prototype, "gridApi", void 0), Dr([
      h("context")
    ], n.prototype, "context", void 0), Dr([
      G
    ], n.prototype, "initialise", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Hu() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n[t] = arguments[t];
  for (var e = 0; e < n.length; e++) {
    var r = n[e];
    if (O(r))
      return r;
  }
  return null;
}
function sh(n) {
  return n != null && n.length > 0;
}
function _e(n) {
  if (!(!n || !n.length))
    return n[n.length - 1];
}
function _r(n, t, e) {
  return n == null && t == null ? !0 : n != null && t != null && n.length === t.length && n.every(function(r, o) {
    return e ? e(r, t[o]) : t[o] === r;
  });
}
function ah(n, t) {
  return _r(n, t);
}
function lh(n, t) {
  return _r(n, t);
}
function Wu(n) {
  return n.sort(function(t, e) {
    return t - e;
  });
}
function uh(n, t) {
  if (n)
    for (var e = n.length - 2; e >= 0; e--) {
      var r = n[e] === t, o = n[e + 1] === t;
      r && o && n.splice(e + 1, 1);
    }
}
function Ye(n, t) {
  var e = n.indexOf(t);
  e >= 0 && n.splice(e, 1);
}
function ea(n, t) {
  t.forEach(function(e) {
    return Ye(n, e);
  });
}
function xo(n, t, e) {
  n.splice(e, 0, t);
}
function ph(n, t, e) {
  if (!(n == null || t == null))
    for (var r = t.length - 1; r >= 0; r--) {
      var o = t[r];
      xo(n, o, e);
    }
}
function Ss(n, t, e) {
  ea(n, t), t.slice().reverse().forEach(function(r) {
    return xo(n, r, e);
  });
}
function yt(n, t) {
  return n.indexOf(t) > -1;
}
function ch(n) {
  return [].concat.apply([], n);
}
function Os(n, t) {
  t == null || n == null || t.forEach(function(e) {
    return n.push(e);
  });
}
function dh(n) {
  return n.map(Qs);
}
function hh(n, t) {
  if (n != null)
    for (var e = n.length - 1; e >= 0; e--)
      t(n[e], e);
}
const fh = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  areEqual: _r,
  compareArrays: ah,
  existsAndNotEmpty: sh,
  firstExistingValue: Hu,
  flatten: ch,
  forEachReverse: hh,
  includes: yt,
  insertArrayIntoArray: ph,
  insertIntoArray: xo,
  last: _e,
  moveInArray: Ss,
  pushAll: Os,
  removeAllFromArray: ea,
  removeFromArray: Ye,
  removeRepeatsFromArray: uh,
  shallowCompare: lh,
  sortNumerically: Wu,
  toStrings: dh
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var gh = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, qe = (
  /** @class */
  function() {
    function n(t, e, r, o) {
      this.displayedChildren = [], this.localEventService = new qt(), this.groupId = e, this.instanceId = r, this.providedColumnGroup = t, this.pinned = o;
    }
    return n.createUniqueId = function(t, e) {
      return t + "_" + e;
    }, n.prototype.reset = function() {
      this.parent = null, this.children = null, this.displayedChildren = null;
    }, n.prototype.getParent = function() {
      return this.parent;
    }, n.prototype.setParent = function(t) {
      this.parent = t;
    }, n.prototype.getUniqueId = function() {
      return n.createUniqueId(this.groupId, this.instanceId);
    }, n.prototype.isEmptyGroup = function() {
      return this.displayedChildren.length === 0;
    }, n.prototype.isMoving = function() {
      var t = this.getProvidedColumnGroup().getLeafColumns();
      return !t || t.length === 0 ? !1 : t.every(function(e) {
        return e.isMoving();
      });
    }, n.prototype.checkLeft = function() {
      if (this.displayedChildren.forEach(function(o) {
        o instanceof n && o.checkLeft();
      }), this.displayedChildren.length > 0)
        if (this.gridOptionsWrapper.isEnableRtl()) {
          var t = _e(this.displayedChildren), e = t.getLeft();
          this.setLeft(e);
        } else {
          var r = this.displayedChildren[0].getLeft();
          this.setLeft(r);
        }
      else
        this.setLeft(null);
    }, n.prototype.getLeft = function() {
      return this.left;
    }, n.prototype.getOldLeft = function() {
      return this.oldLeft;
    }, n.prototype.setLeft = function(t) {
      this.oldLeft = t, this.left !== t && (this.left = t, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_LEFT_CHANGED)));
    }, n.prototype.getPinned = function() {
      return this.pinned;
    }, n.prototype.createAgEvent = function(t) {
      return { type: t };
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService.removeEventListener(t, e);
    }, n.prototype.getGroupId = function() {
      return this.groupId;
    }, n.prototype.getInstanceId = function() {
      return this.instanceId;
    }, n.prototype.isChildInThisGroupDeepSearch = function(t) {
      var e = !1;
      return this.children.forEach(function(r) {
        t === r && (e = !0), r instanceof n && r.isChildInThisGroupDeepSearch(t) && (e = !0);
      }), e;
    }, n.prototype.getActualWidth = function() {
      var t = 0;
      return this.displayedChildren && this.displayedChildren.forEach(function(e) {
        t += e.getActualWidth();
      }), t;
    }, n.prototype.isResizable = function() {
      if (!this.displayedChildren)
        return !1;
      var t = !1;
      return this.displayedChildren.forEach(function(e) {
        e.isResizable() && (t = !0);
      }), t;
    }, n.prototype.getMinWidth = function() {
      var t = 0;
      return this.displayedChildren.forEach(function(e) {
        t += e.getMinWidth() || 0;
      }), t;
    }, n.prototype.addChild = function(t) {
      this.children || (this.children = []), this.children.push(t);
    }, n.prototype.getDisplayedChildren = function() {
      return this.displayedChildren;
    }, n.prototype.getLeafColumns = function() {
      var t = [];
      return this.addLeafColumns(t), t;
    }, n.prototype.getDisplayedLeafColumns = function() {
      var t = [];
      return this.addDisplayedLeafColumns(t), t;
    }, n.prototype.getDefinition = function() {
      return this.providedColumnGroup.getColGroupDef();
    }, n.prototype.getColGroupDef = function() {
      return this.providedColumnGroup.getColGroupDef();
    }, n.prototype.isPadding = function() {
      return this.providedColumnGroup.isPadding();
    }, n.prototype.isExpandable = function() {
      return this.providedColumnGroup.isExpandable();
    }, n.prototype.isExpanded = function() {
      return this.providedColumnGroup.isExpanded();
    }, n.prototype.setExpanded = function(t) {
      this.providedColumnGroup.setExpanded(t);
    }, n.prototype.addDisplayedLeafColumns = function(t) {
      this.displayedChildren.forEach(function(e) {
        e instanceof pe ? t.push(e) : e instanceof n && e.addDisplayedLeafColumns(t);
      });
    }, n.prototype.addLeafColumns = function(t) {
      this.children.forEach(function(e) {
        e instanceof pe ? t.push(e) : e instanceof n && e.addLeafColumns(t);
      });
    }, n.prototype.getChildren = function() {
      return this.children;
    }, n.prototype.getColumnGroupShow = function() {
      return this.providedColumnGroup.getColumnGroupShow();
    }, n.prototype.getProvidedColumnGroup = function() {
      return this.providedColumnGroup;
    }, n.prototype.getOriginalColumnGroup = function() {
      return console.warn("AG Grid: columnGroup.getOriginalColumnGroup() is deprecated due to a method rename, use columnGroup.getProvidedColumnGroup() instead"), this.getProvidedColumnGroup();
    }, n.prototype.getPaddingLevel = function() {
      var t = this.getParent();
      return !this.isPadding() || !t || !t.isPadding() ? 0 : 1 + t.getPaddingLevel();
    }, n.prototype.calculateDisplayedColumns = function() {
      var t = this;
      this.displayedChildren = [];
      for (var e = this; e != null && e.isPadding(); )
        e = e.getParent();
      var r = e ? e.providedColumnGroup.isExpandable() : !1;
      if (!r) {
        this.displayedChildren = this.children, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
        return;
      }
      this.children.forEach(function(o) {
        var i = o instanceof n && (!o.displayedChildren || !o.displayedChildren.length);
        if (!i) {
          var s = o.getColumnGroupShow();
          switch (s) {
            case n.HEADER_GROUP_SHOW_OPEN:
              e.providedColumnGroup.isExpanded() && t.displayedChildren.push(o);
              break;
            case n.HEADER_GROUP_SHOW_CLOSED:
              e.providedColumnGroup.isExpanded() || t.displayedChildren.push(o);
              break;
            default:
              t.displayedChildren.push(o);
              break;
          }
        }
      }), this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
    }, n.HEADER_GROUP_SHOW_OPEN = "open", n.HEADER_GROUP_SHOW_CLOSED = "closed", n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_DISPLAYED_CHILDREN_CHANGED = "displayedChildrenChanged", gh([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Pe = (
  /** @class */
  function() {
    function n(t, e, r, o) {
      this.localEventService = new qt(), this.expandable = !1, this.colGroupDef = t, this.groupId = e, this.expanded = !!t && !!t.openByDefault, this.padding = r, this.level = o;
    }
    return n.prototype.setOriginalParent = function(t) {
      this.originalParent = t;
    }, n.prototype.getOriginalParent = function() {
      return this.originalParent;
    }, n.prototype.getLevel = function() {
      return this.level;
    }, n.prototype.isVisible = function() {
      return this.children ? this.children.some(function(t) {
        return t.isVisible();
      }) : !1;
    }, n.prototype.isPadding = function() {
      return this.padding;
    }, n.prototype.setExpanded = function(t) {
      this.expanded = t === void 0 ? !1 : t;
      var e = {
        type: n.EVENT_EXPANDED_CHANGED
      };
      this.localEventService.dispatchEvent(e);
    }, n.prototype.isExpandable = function() {
      return this.expandable;
    }, n.prototype.isExpanded = function() {
      return this.expanded;
    }, n.prototype.getGroupId = function() {
      return this.groupId;
    }, n.prototype.getId = function() {
      return this.getGroupId();
    }, n.prototype.setChildren = function(t) {
      this.children = t;
    }, n.prototype.getChildren = function() {
      return this.children;
    }, n.prototype.getColGroupDef = function() {
      return this.colGroupDef;
    }, n.prototype.getLeafColumns = function() {
      var t = [];
      return this.addLeafColumns(t), t;
    }, n.prototype.addLeafColumns = function(t) {
      this.children && this.children.forEach(function(e) {
        e instanceof pe ? t.push(e) : e instanceof n && e.addLeafColumns(t);
      });
    }, n.prototype.getColumnGroupShow = function() {
      var t = this.colGroupDef;
      if (t)
        return t.columnGroupShow;
    }, n.prototype.setupExpandable = function() {
      var t = this;
      this.setExpandable(), this.getLeafColumns().forEach(function(e) {
        return e.addEventListener(pe.EVENT_VISIBLE_CHANGED, t.onColumnVisibilityChanged.bind(t));
      });
    }, n.prototype.setExpandable = function() {
      if (!this.isPadding()) {
        for (var t = !1, e = !1, r = !1, o = this.findChildrenRemovingPadding(), i = 0, s = o.length; i < s; i++) {
          var a = o[i];
          if (a.isVisible()) {
            var l = a.getColumnGroupShow();
            l === qe.HEADER_GROUP_SHOW_OPEN ? (t = !0, r = !0) : l === qe.HEADER_GROUP_SHOW_CLOSED ? (e = !0, r = !0) : (t = !0, e = !0);
          }
        }
        var u = t && e && r;
        if (this.expandable !== u) {
          this.expandable = u;
          var p = {
            type: n.EVENT_EXPANDABLE_CHANGED
          };
          this.localEventService.dispatchEvent(p);
        }
      }
    }, n.prototype.findChildrenRemovingPadding = function() {
      var t = [], e = function(r) {
        r.forEach(function(o) {
          var i = o instanceof n && o.isPadding();
          i ? e(o.children) : t.push(o);
        });
      };
      return e(this.children), t;
    }, n.prototype.onColumnVisibilityChanged = function() {
      this.setExpandable();
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService.removeEventListener(t, e);
    }, n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_EXPANDABLE_CHANGED = "expandableChanged", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var vh = {
  numericColumn: {
    headerClass: "ag-right-aligned-header",
    cellClass: "ag-right-aligned-cell"
  },
  rightAligned: {
    headerClass: "ag-right-aligned-header",
    cellClass: "ag-right-aligned-cell"
  }
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Vu = "__ag_Grid_Stop_Propagation", yh = ["touchstart", "touchend", "touchmove", "touchcancel"], Pi = {};
function Qr(n) {
  n[Vu] = !0;
}
function Bt(n) {
  return n[Vu] === !0;
}
var ta = function() {
  var n = {
    select: "input",
    change: "input",
    submit: "form",
    reset: "form",
    error: "img",
    load: "img",
    abort: "img"
  }, t = function(e) {
    if (typeof Pi[e] == "boolean")
      return Pi[e];
    var r = document.createElement(n[e] || "div");
    return e = "on" + e, Pi[e] = e in r;
  };
  return t;
}();
function Nn(n, t, e) {
  for (var r = t.target; r; ) {
    var o = n.getDomData(r, e);
    if (o)
      return o;
    r = r.parentElement;
  }
  return null;
}
function Ch(n, t) {
  n.addEventListener("changed", t), n.addEventListener("paste", t), n.addEventListener("input", t);
}
function xn(n, t) {
  return !t || !n ? !1 : ra(t).indexOf(n) >= 0;
}
function Bu(n) {
  for (var t = [], e = n.target; e; )
    t.push(e), e = e.parentElement;
  return t;
}
function mh(n) {
  n.__agGridEventPath = ra(n);
}
function ra(n) {
  var t = n;
  return t.path ? t.path : t.composedPath ? t.composedPath() : t.__agGridEventPath ? t.__agGridEventPath : Bu(n);
}
function ju(n, t, e, r) {
  var o = yt(yh, e), i = o ? { passive: !0 } : void 0;
  n && n.addEventListener && n.addEventListener(t, e, r, i);
}
const _h = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  addAgGridEventPath: mh,
  addChangeListener: Ch,
  addSafePassiveEventListener: ju,
  createEventPath: Bu,
  getCtrlForEvent: Nn,
  getEventPath: ra,
  isElementInEventPath: xn,
  isEventSupported: ta,
  isStopPropagationForAgGrid: Bt,
  stopPropagationForAgGrid: Qr
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var co = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, D = (
  /** @class */
  function() {
    function n() {
      var t = this;
      this.destroyFunctions = [], this.destroyed = !1, this.__v_skip = !0, this.isAlive = function() {
        return !t.destroyed;
      };
    }
    return n.prototype.getFrameworkOverrides = function() {
      return this.frameworkOverrides;
    }, n.prototype.getContext = function() {
      return this.context;
    }, n.prototype.destroy = function() {
      this.destroyFunctions.forEach(function(t) {
        return t();
      }), this.destroyFunctions.length = 0, this.destroyed = !0, this.dispatchEvent({ type: n.EVENT_DESTROYED });
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService || (this.localEventService = new qt()), this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService && this.localEventService.removeEventListener(t, e);
    }, n.prototype.dispatchEventAsync = function(t) {
      var e = this;
      window.setTimeout(function() {
        return e.dispatchEvent(t);
      }, 0);
    }, n.prototype.dispatchEvent = function(t) {
      this.localEventService && this.localEventService.dispatchEvent(t);
    }, n.prototype.addManagedListener = function(t, e, r) {
      var o = this;
      if (!this.destroyed) {
        t instanceof HTMLElement ? ju(this.getFrameworkOverrides(), t, e, r) : t.addEventListener(e, r);
        var i = function() {
          return t.removeEventListener(e, r), o.destroyFunctions = o.destroyFunctions.filter(function(s) {
            return s !== i;
          }), null;
        };
        return this.destroyFunctions.push(i), i;
      }
    }, n.prototype.addDestroyFunc = function(t) {
      this.isAlive() ? this.destroyFunctions.push(t) : t();
    }, n.prototype.createManagedBean = function(t, e) {
      var r = this.createBean(t, e);
      return this.addDestroyFunc(this.destroyBean.bind(this, t, e)), r;
    }, n.prototype.createBean = function(t, e, r) {
      return (e || this.getContext()).createBean(t, r);
    }, n.prototype.destroyBean = function(t, e) {
      return (e || this.getContext()).destroyBean(t);
    }, n.prototype.destroyBeans = function(t, e) {
      var r = this;
      return t && t.forEach(function(o) {
        return r.destroyBean(o, e);
      }), [];
    }, n.EVENT_DESTROYED = "destroyed", co([
      h("frameworkOverrides")
    ], n.prototype, "frameworkOverrides", void 0), co([
      h("context")
    ], n.prototype, "context", void 0), co([
      h("eventService")
    ], n.prototype, "eventService", void 0), co([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), co([
      ot
    ], n.prototype, "destroy", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var wh = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), bi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Eh = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Uu = (
  /** @class */
  function(n) {
    wh(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("ColumnFactory");
    }, t.prototype.createColumnTree = function(e, r, o) {
      var i = new Ou(), s = this.extractExistingTreeData(o), a = s.existingCols, l = s.existingGroups, u = s.existingColKeys;
      i.addExistingKeys(u);
      var p = this.recursivelyCreateColumns(e, 0, r, a, i, l), c = this.findMaxDept(p, 0);
      this.logger.log("Number of levels for grouped columns is " + c);
      var d = this.balanceColumnTree(p, 0, c, i), f = function(g, y) {
        g instanceof Pe && g.setupExpandable(), g.setOriginalParent(y);
      };
      return this.columnUtils.depthFirstOriginalTreeSearch(null, d, f), {
        columnTree: d,
        treeDept: c
      };
    }, t.prototype.extractExistingTreeData = function(e) {
      var r = [], o = [], i = [];
      return e && this.columnUtils.depthFirstOriginalTreeSearch(null, e, function(s) {
        if (s instanceof Pe) {
          var a = s;
          o.push(a);
        } else {
          var l = s;
          i.push(l.getId()), r.push(l);
        }
      }), { existingCols: r, existingGroups: o, existingColKeys: i };
    }, t.prototype.createForAutoGroups = function(e, r) {
      var o = this, i = [];
      return e.forEach(function(s) {
        var a = o.createAutoGroupTreeItem(r, s);
        i.push(a);
      }), i;
    }, t.prototype.createAutoGroupTreeItem = function(e, r) {
      for (var o = this.findDepth(e), i = r, s = o - 1; s >= 0; s--) {
        var a = new Pe(null, "FAKE_PATH_" + r.getId() + "}_" + s, !0, s);
        this.context.createBean(a), a.setChildren([i]), i.setOriginalParent(a), i = a;
      }
      return i;
    }, t.prototype.findDepth = function(e) {
      for (var r = 0, o = e; o && o[0] && o[0] instanceof Pe; )
        r++, o = o[0].getChildren();
      return r;
    }, t.prototype.balanceColumnTree = function(e, r, o, i) {
      for (var s = [], a = 0; a < e.length; a++) {
        var l = e[a];
        if (l instanceof Pe) {
          var u = l, p = this.balanceColumnTree(u.getChildren(), r + 1, o, i);
          u.setChildren(p), s.push(u);
        } else {
          for (var c = void 0, d = void 0, f = o - 1; f >= r; f--) {
            var g = i.getUniqueKey(null, null), y = this.createMergedColGroupDef(null), C = new Pe(y, g, !0, r);
            this.context.createBean(C), d && d.setChildren([C]), d = C, c || (c = d);
          }
          if (c && d) {
            s.push(c);
            var m = e.some(function(_) {
              return _ instanceof Pe;
            });
            if (m) {
              d.setChildren([l]);
              continue;
            } else {
              d.setChildren(e);
              break;
            }
          }
          s.push(l);
        }
      }
      return s;
    }, t.prototype.findMaxDept = function(e, r) {
      for (var o = r, i = 0; i < e.length; i++) {
        var s = e[i];
        if (s instanceof Pe) {
          var a = s, l = this.findMaxDept(a.getChildren(), r + 1);
          o < l && (o = l);
        }
      }
      return o;
    }, t.prototype.recursivelyCreateColumns = function(e, r, o, i, s, a) {
      var l = this, u = [];
      return e && e.forEach(function(p) {
        var c;
        l.isColumnGroup(p) ? c = l.createColumnGroup(o, p, r, i, s, a) : c = l.createColumn(o, p, i, s), u.push(c);
      }), u;
    }, t.prototype.createColumnGroup = function(e, r, o, i, s, a) {
      var l = this.createMergedColGroupDef(r), u = s.getUniqueKey(l.groupId || null, null), p = new Pe(l, u, !1, o);
      this.context.createBean(p);
      var c = this.findExistingGroup(r, a);
      c && c.isExpanded() && p.setExpanded(!0);
      var d = this.recursivelyCreateColumns(l.children, o + 1, e, i, s, a);
      return p.setChildren(d), p;
    }, t.prototype.createMergedColGroupDef = function(e) {
      var r = {};
      return Object.assign(r, this.gridOptionsWrapper.getDefaultColGroupDef()), Object.assign(r, e), this.checkForDeprecatedItems(r), r;
    }, t.prototype.createColumn = function(e, r, o, i) {
      var s = this.mergeColDefs(r);
      this.checkForDeprecatedItems(s);
      var a = this.findExistingColumn(r, o);
      if (a)
        a.setColDef(s, r), this.applyColumnState(a, s);
      else {
        var l = i.getUniqueKey(s.colId, s.field);
        a = new pe(s, r, l, e), this.context.createBean(a);
      }
      return a;
    }, t.prototype.applyColumnState = function(e, r) {
      var o = Tt(r.flex);
      o !== void 0 && e.setFlex(o);
      var i = e.getFlex() <= 0;
      if (i) {
        var s = Tt(r.width);
        if (s != null)
          e.setActualWidth(s);
        else {
          var a = e.getActualWidth();
          e.setActualWidth(a);
        }
      }
      r.sort !== void 0 && (r.sort == w.SORT_ASC || r.sort == w.SORT_DESC ? e.setSort(r.sort) : e.setSort(void 0));
      var l = Tt(r.sortIndex);
      l !== void 0 && e.setSortIndex(l);
      var u = Kt(r.hide);
      u !== void 0 && e.setVisible(!u), r.pinned !== void 0 && e.setPinned(r.pinned);
    }, t.prototype.findExistingColumn = function(e, r) {
      var o = (r || []).find(function(i) {
        var s = i.getUserProvidedColDef();
        if (!s)
          return !1;
        var a = e.colId != null, l = e.field != null;
        return a ? i.getId() === e.colId : l ? s.field === e.field : s === e;
      });
      return r && o && Ye(r, o), o || null;
    }, t.prototype.findExistingGroup = function(e, r) {
      var o = r.find(function(i) {
        var s = i.getColGroupDef();
        if (!s)
          return !1;
        var a = e.groupId != null;
        return a ? i.getId() === e.groupId : !1;
      });
      return o && Ye(r, o), o || null;
    }, t.prototype.mergeColDefs = function(e) {
      var r = {}, o = this.gridOptionsWrapper.getDefaultColDef();
      Pt(r, o, !1, !0);
      var i = e.type;
      return i || (i = o && o.type), i && this.assignColumnTypes(i, r), Pt(r, e, !1, !0), r;
    }, t.prototype.assignColumnTypes = function(e, r) {
      var o = [];
      if (e instanceof Array) {
        var i = e.some(function(l) {
          return typeof l != "string";
        });
        i ? console.warn("AG Grid: if colDef.type is supplied an array it should be of type 'string[]'") : o = e;
      } else if (typeof e == "string")
        o = e.split(",");
      else {
        console.warn("AG Grid: colDef.type should be of type 'string' | 'string[]'");
        return;
      }
      var s = Object.assign({}, vh), a = this.gridOptionsWrapper.getColumnTypes() || {};
      ge(a, function(l, u) {
        l in s ? console.warn("AG Grid: the column type '" + l + "' is a default column type and cannot be overridden.") : s[l] = u;
      }), o.forEach(function(l) {
        var u = s[l.trim()];
        u ? Pt(r, u, !1, !0) : console.warn("AG Grid: colDef.type '" + l + "' does not correspond to defined gridOptions.columnTypes");
      });
    }, t.prototype.checkForDeprecatedItems = function(e) {
      if (e) {
        var r = e;
        r.group !== void 0 && console.warn("AG Grid: colDef.group is invalid, please check documentation on how to do grouping as it changed in version 3"), r.headerGroup !== void 0 && console.warn("AG Grid: colDef.headerGroup is invalid, please check documentation on how to do grouping as it changed in version 3"), r.headerGroupShow !== void 0 && console.warn("AG Grid: colDef.headerGroupShow is invalid, should be columnGroupShow, please check documentation on how to do grouping as it changed in version 3"), r.suppressRowGroup !== void 0 && console.warn("AG Grid: colDef.suppressRowGroup is deprecated, please use colDef.type instead"), r.suppressAggregation !== void 0 && console.warn("AG Grid: colDef.suppressAggregation is deprecated, please use colDef.type instead"), (r.suppressRowGroup || r.suppressAggregation) && console.warn("AG Grid: colDef.suppressAggregation and colDef.suppressRowGroup are deprecated, use allowRowGroup, allowPivot and allowValue instead"), r.displayName && (console.warn("AG Grid: Found displayName " + r.displayName + ", please use headerName instead, displayName is deprecated."), r.headerName = r.displayName);
      }
    }, t.prototype.isColumnGroup = function(e) {
      return e.children !== void 0;
    }, bi([
      h("columnUtils")
    ], t.prototype, "columnUtils", void 0), bi([
      Eh(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), t = bi([
      U("columnFactory")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var v = (
  /** @class */
  function() {
    function n() {
    }
    return n.EVENT_COLUMN_EVERYTHING_CHANGED = "columnEverythingChanged", n.EVENT_NEW_COLUMNS_LOADED = "newColumnsLoaded", n.EVENT_COLUMN_PIVOT_MODE_CHANGED = "columnPivotModeChanged", n.EVENT_COLUMN_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_EXPAND_COLLAPSE_ALL = "expandOrCollapseAll", n.EVENT_COLUMN_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_GRID_COLUMNS_CHANGED = "gridColumnsChanged", n.EVENT_COLUMN_VALUE_CHANGED = "columnValueChanged", n.EVENT_COLUMN_MOVED = "columnMoved", n.EVENT_COLUMN_VISIBLE = "columnVisible", n.EVENT_COLUMN_PINNED = "columnPinned", n.EVENT_COLUMN_GROUP_OPENED = "columnGroupOpened", n.EVENT_COLUMN_RESIZED = "columnResized", n.EVENT_DISPLAYED_COLUMNS_CHANGED = "displayedColumnsChanged", n.EVENT_VIRTUAL_COLUMNS_CHANGED = "virtualColumnsChanged", n.EVENT_ASYNC_TRANSACTIONS_FLUSHED = "asyncTransactionsFlushed", n.EVENT_ROW_GROUP_OPENED = "rowGroupOpened", n.EVENT_ROW_DATA_CHANGED = "rowDataChanged", n.EVENT_ROW_DATA_UPDATED = "rowDataUpdated", n.EVENT_PINNED_ROW_DATA_CHANGED = "pinnedRowDataChanged", n.EVENT_RANGE_SELECTION_CHANGED = "rangeSelectionChanged", n.EVENT_CHART_CREATED = "chartCreated", n.EVENT_CHART_RANGE_SELECTION_CHANGED = "chartRangeSelectionChanged", n.EVENT_CHART_OPTIONS_CHANGED = "chartOptionsChanged", n.EVENT_CHART_DESTROYED = "chartDestroyed", n.EVENT_TOOL_PANEL_VISIBLE_CHANGED = "toolPanelVisibleChanged", n.EVENT_COLUMN_PANEL_ITEM_DRAG_START = "columnPanelItemDragStart", n.EVENT_COLUMN_PANEL_ITEM_DRAG_END = "columnPanelItemDragEnd", n.EVENT_MODEL_UPDATED = "modelUpdated", n.EVENT_PASTE_START = "pasteStart", n.EVENT_PASTE_END = "pasteEnd", n.EVENT_FILL_START = "fillStart", n.EVENT_FILL_END = "fillEnd", n.EVENT_CELL_CLICKED = "cellClicked", n.EVENT_CELL_DOUBLE_CLICKED = "cellDoubleClicked", n.EVENT_CELL_MOUSE_DOWN = "cellMouseDown", n.EVENT_CELL_CONTEXT_MENU = "cellContextMenu", n.EVENT_CELL_VALUE_CHANGED = "cellValueChanged", n.EVENT_CELL_EDIT_REQUEST = "cellEditRequest", n.EVENT_ROW_VALUE_CHANGED = "rowValueChanged", n.EVENT_CELL_FOCUSED = "cellFocused", n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_SELECTION_CHANGED = "selectionChanged", n.EVENT_CELL_KEY_DOWN = "cellKeyDown", n.EVENT_CELL_KEY_PRESS = "cellKeyPress", n.EVENT_CELL_MOUSE_OVER = "cellMouseOver", n.EVENT_CELL_MOUSE_OUT = "cellMouseOut", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_MODIFIED = "filterModified", n.EVENT_FILTER_OPENED = "filterOpened", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_VIRTUAL_ROW_REMOVED = "virtualRowRemoved", n.EVENT_ROW_CLICKED = "rowClicked", n.EVENT_ROW_DOUBLE_CLICKED = "rowDoubleClicked", n.EVENT_GRID_READY = "gridReady", n.EVENT_GRID_SIZE_CHANGED = "gridSizeChanged", n.EVENT_VIEWPORT_CHANGED = "viewportChanged", n.EVENT_SCROLLBAR_WIDTH_CHANGED = "scrollbarWidthChanged", n.EVENT_FIRST_DATA_RENDERED = "firstDataRendered", n.EVENT_DRAG_STARTED = "dragStarted", n.EVENT_DRAG_STOPPED = "dragStopped", n.EVENT_CHECKBOX_CHANGED = "checkboxChanged", n.EVENT_ROW_EDITING_STARTED = "rowEditingStarted", n.EVENT_ROW_EDITING_STOPPED = "rowEditingStopped", n.EVENT_CELL_EDITING_STARTED = "cellEditingStarted", n.EVENT_CELL_EDITING_STOPPED = "cellEditingStopped", n.EVENT_BODY_SCROLL = "bodyScroll", n.EVENT_BODY_SCROLL_END = "bodyScrollEnd", n.EVENT_HEIGHT_SCALE_CHANGED = "heightScaleChanged", n.EVENT_PAGINATION_CHANGED = "paginationChanged", n.EVENT_COMPONENT_STATE_CHANGED = "componentStateChanged", n.EVENT_BODY_HEIGHT_CHANGED = "bodyHeightChanged", n.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = "displayedColumnsWidthChanged", n.EVENT_SCROLL_VISIBILITY_CHANGED = "scrollVisibilityChanged", n.EVENT_COLUMN_HOVER_CHANGED = "columnHoverChanged", n.EVENT_FLASH_CELLS = "flashCells", n.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = "paginationPixelOffsetChanged", n.EVENT_DISPLAYED_ROWS_CHANGED = "displayedRowsChanged", n.EVENT_LEFT_PINNED_WIDTH_CHANGED = "leftPinnedWidthChanged", n.EVENT_RIGHT_PINNED_WIDTH_CHANGED = "rightPinnedWidthChanged", n.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = "rowContainerHeightChanged", n.EVENT_ROW_DRAG_ENTER = "rowDragEnter", n.EVENT_ROW_DRAG_MOVE = "rowDragMove", n.EVENT_ROW_DRAG_LEAVE = "rowDragLeave", n.EVENT_ROW_DRAG_END = "rowDragEnd", n.EVENT_POPUP_TO_FRONT = "popupToFront", n.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = "columnRowGroupChangeRequest", n.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = "columnPivotChangeRequest", n.EVENT_COLUMN_VALUE_CHANGE_REQUEST = "columnValueChangeRequest", n.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = "columnAggFuncChangeRequest", n.EVENT_KEYBOARD_FOCUS = "keyboardFocus", n.EVENT_MOUSE_FOCUS = "mouseFocus", n.EVENT_STORE_UPDATED = "storeUpdated", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ku = (
  /** @class */
  function() {
    function n() {
      this.existingIds = {};
    }
    return n.prototype.getInstanceIdForKey = function(t) {
      var e = this.existingIds[t], r;
      return typeof e != "number" ? r = 0 : r = e + 1, this.existingIds[t] = r, r;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Rh = /[&<>"']/g, Sh = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function Oh(n) {
  var t = String.fromCharCode;
  function e(c) {
    var d = [];
    if (!c)
      return [];
    for (var f = c.length, g = 0, y, C; g < f; )
      y = c.charCodeAt(g++), y >= 55296 && y <= 56319 && g < f ? (C = c.charCodeAt(g++), (C & 64512) == 56320 ? d.push(((y & 1023) << 10) + (C & 1023) + 65536) : (d.push(y), g--)) : d.push(y);
    return d;
  }
  function r(c) {
    if (c >= 55296 && c <= 57343)
      throw Error("Lone surrogate U+" + c.toString(16).toUpperCase() + " is not a scalar value");
  }
  function o(c, d) {
    return t(c >> d & 63 | 128);
  }
  function i(c) {
    if (c >= 0 && c <= 31 && c !== 10) {
      var d = c.toString(16).toUpperCase(), f = d.padStart(4, "0");
      return "_x" + f + "_";
    }
    if (!(c & 4294967168))
      return t(c);
    var g = "";
    return c & 4294965248 ? c & 4294901760 ? c & 4292870144 || (g = t(c >> 18 & 7 | 240), g += o(c, 12), g += o(c, 6)) : (r(c), g = t(c >> 12 & 15 | 224), g += o(c, 6)) : g = t(c >> 6 & 31 | 192), g += t(c & 63 | 128), g;
  }
  for (var s = e(n), a = s.length, l = -1, u, p = ""; ++l < a; )
    u = s[l], p += i(u);
  return p;
}
function zu(n) {
  return n == null ? null : n.replace(/([A-Z])/g, function(t) {
    return "-" + t[0].toLowerCase();
  });
}
function $u(n) {
  return n == null ? null : n.replace(/-([a-z])/g, function(t) {
    return t[1].toUpperCase();
  });
}
function Ts(n) {
  return n[0].toUpperCase() + n.substr(1).toLowerCase();
}
function kt(n) {
  return n == null ? null : n.toString().toString().replace(Rh, function(t) {
    return Sh[t];
  });
}
function oa(n) {
  if (!n || n == null)
    return null;
  var t = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g, e = n.replace(t, "$1$4 $2$3$5").replace(".", " ").split(" ");
  return e.map(function(r) {
    return r.substring(0, 1).toUpperCase() + (r.length > 1 ? r.substring(1, r.length) : "");
  }).join(" ");
}
const Th = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  camelCaseToHumanText: oa,
  camelCaseToHyphen: zu,
  capitalise: Ts,
  escapeString: kt,
  hyphenToCamelCase: $u,
  utf8_encode: Oh
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function or(n) {
  var t = /* @__PURE__ */ new Map();
  return n.forEach(function(e) {
    return t.set(e[0], e[1]);
  }), t;
}
function Ph(n, t) {
  var e = /* @__PURE__ */ new Map();
  return n.forEach(function(r) {
    return e.set(t(r), r);
  }), e;
}
function bh(n) {
  var t = [];
  return n.forEach(function(e, r) {
    return t.push(r);
  }), t;
}
const Dh = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  convertToMap: or,
  keys: bh,
  mapById: Ph
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ah = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), He = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Fh = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, yl = globalThis && globalThis.__values || function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Ih = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Cl = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Ih(arguments[t]));
  return n;
}, Ku = (
  /** @class */
  function(n) {
    Ah(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.primaryHeaderRowCount = 0, e.secondaryHeaderRowCount = 0, e.secondaryColumnsPresent = !1, e.gridHeaderRowCount = 0, e.displayedColumnsLeft = [], e.displayedColumnsRight = [], e.displayedColumnsCenter = [], e.displayedColumns = [], e.displayedColumnsAndGroupsMap = {}, e.viewportColumns = [], e.viewportColumnsCenter = [], e.autoHeightActiveAtLeastOnce = !1, e.rowGroupColumns = [], e.valueColumns = [], e.pivotColumns = [], e.ready = !1, e.autoGroupsNeedBuilding = !1, e.forceRecreateAutoGroups = !1, e.pivotMode = !1, e.bodyWidth = 0, e.leftWidth = 0, e.rightWidth = 0, e.bodyWidthDirty = !0, e.colDefVersion = 0, e.flexColsCalculatedAtLestOnce = !1, e;
    }
    return t.prototype.init = function() {
      var e = this;
      this.suppressColumnVirtualisation = this.gridOptionsWrapper.isSuppressColumnVirtualisation();
      var r = this.gridOptionsWrapper.isPivotMode();
      this.isPivotSettingAllowed(r) && (this.pivotMode = r), this.usingTreeData = this.gridOptionsWrapper.isTreeData(), this.addManagedListener(this.gridOptionsWrapper, "autoGroupColumnDef", function() {
        return e.onAutoGroupColumnDefChanged();
      }), this.addManagedListener(this.gridOptionsWrapper, "defaultColDef", function() {
        return e.onDefaultColDefChanged();
      });
    }, t.prototype.onAutoGroupColumnDefChanged = function() {
      this.autoGroupsNeedBuilding = !0, this.forceRecreateAutoGroups = !0, this.updateGridColumns(), this.updateDisplayedColumns("gridOptionsChanged");
    }, t.prototype.onDefaultColDefChanged = function() {
      this.colDefVersion++, this.forceRecreateAutoGroups = !0, this.createColumnsFromColumnDefs(!0);
    }, t.prototype.getColDefVersion = function() {
      return this.colDefVersion;
    }, t.prototype.setColumnDefs = function(e, r) {
      r === void 0 && (r = "api");
      var o = !!this.columnDefs;
      this.colDefVersion++, this.columnDefs = e, this.createColumnsFromColumnDefs(o, r);
    }, t.prototype.createColumnsFromColumnDefs = function(e, r) {
      var o = this;
      r === void 0 && (r = "api");
      var i = e ? this.compareColumnStatesAndRaiseEvents(r) : void 0;
      this.valueCache.expire(), this.autoGroupsNeedBuilding = !0;
      var s = this.primaryColumns, a = this.primaryColumnTree, l = this.columnFactory.createColumnTree(this.columnDefs, !0, a);
      this.primaryColumnTree = l.columnTree, this.primaryHeaderRowCount = l.treeDept + 1, this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree), this.primaryColumnsMap = {}, this.primaryColumns.forEach(function(c) {
        return o.primaryColumnsMap[c.getId()] = c;
      }), this.extractRowGroupColumns(r, s), this.extractPivotColumns(r, s), this.extractValueColumns(r, s), this.ready = !0;
      var u = this.gridColsArePrimary === void 0, p = this.gridColsArePrimary || u;
      p && (this.updateGridColumns(), e && !this.gridOptionsWrapper.isMaintainColumnOrder() && this.orderGridColumnsLikePrimary(), this.updateDisplayedColumns(r), this.checkViewportColumns()), this.dispatchEverythingChanged(r), i && i(), this.dispatchNewColumnsLoaded();
    }, t.prototype.dispatchNewColumnsLoaded = function() {
      var e = {
        type: v.EVENT_NEW_COLUMNS_LOADED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.dispatchEverythingChanged = function(e) {
      e === void 0 && (e = "api");
      var r = {
        type: v.EVENT_COLUMN_EVERYTHING_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi,
        source: e
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.orderGridColumnsLikePrimary = function() {
      var e = this, r = this.primaryColumns;
      r && this.gridColumns.sort(function(o, i) {
        var s = r.indexOf(o), a = r.indexOf(i), l = s >= 0, u = a >= 0;
        if (l && u)
          return s - a;
        if (l)
          return 1;
        if (u)
          return -1;
        var p = e.gridColumns.indexOf(o), c = e.gridColumns.indexOf(i);
        return p - c;
      });
    }, t.prototype.getAllDisplayedAutoHeightCols = function() {
      return this.displayedAutoHeightCols;
    }, t.prototype.setViewport = function() {
      this.gridOptionsWrapper.isEnableRtl() ? (this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth, this.viewportRight = this.bodyWidth - this.scrollPosition) : (this.viewportLeft = this.scrollPosition, this.viewportRight = this.scrollWidth + this.scrollPosition);
    }, t.prototype.getDisplayedColumnsStartingAt = function(e) {
      for (var r = e, o = []; r != null; )
        o.push(r), r = this.getDisplayedColAfter(r);
      return o;
    }, t.prototype.checkViewportColumns = function() {
      if (this.displayedColumnsCenter != null) {
        var e = this.viewportColumns.map(function(i) {
          return i.getId();
        }).join("#");
        this.extractViewport();
        var r = this.viewportColumns.map(function(i) {
          return i.getId();
        }).join("#");
        if (e !== r) {
          var o = {
            type: v.EVENT_VIRTUAL_COLUMNS_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(o);
        }
      }
    }, t.prototype.setViewportPosition = function(e, r) {
      (e !== this.scrollWidth || r !== this.scrollPosition || this.bodyWidthDirty) && (this.scrollWidth = e, this.scrollPosition = r, this.bodyWidthDirty = !0, this.setViewport(), this.ready && this.checkViewportColumns());
    }, t.prototype.isPivotMode = function() {
      return this.pivotMode;
    }, t.prototype.isPivotSettingAllowed = function(e) {
      return e && this.gridOptionsWrapper.isTreeData() ? (console.warn("AG Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'"), !1) : !0;
    }, t.prototype.setPivotMode = function(e, r) {
      if (r === void 0 && (r = "api"), !(e === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode))) {
        this.pivotMode = e, this.autoGroupsNeedBuilding = !0, this.updateGridColumns(), this.updateDisplayedColumns(r);
        var o = {
          type: v.EVENT_COLUMN_PIVOT_MODE_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(o);
      }
    }, t.prototype.getSecondaryPivotColumn = function(e, r) {
      if (!this.secondaryColumnsPresent || !this.secondaryColumns)
        return null;
      var o = this.getPrimaryColumn(r), i = null;
      return this.secondaryColumns.forEach(function(s) {
        var a = s.getColDef().pivotKeys, l = s.getColDef().pivotValueColumn, u = _r(a, e), p = l === o;
        u && p && (i = s);
      }), i;
    }, t.prototype.setBeans = function(e) {
      this.logger = e.create("columnModel");
    }, t.prototype.setFirstRightAndLastLeftPinned = function(e) {
      var r, o;
      this.gridOptionsWrapper.isEnableRtl() ? (r = this.displayedColumnsLeft ? this.displayedColumnsLeft[0] : null, o = this.displayedColumnsRight ? _e(this.displayedColumnsRight) : null) : (r = this.displayedColumnsLeft ? _e(this.displayedColumnsLeft) : null, o = this.displayedColumnsRight ? this.displayedColumnsRight[0] : null), this.gridColumns.forEach(function(i) {
        i.setLastLeftPinned(i === r, e), i.setFirstRightPinned(i === o, e);
      });
    }, t.prototype.autoSizeColumns = function(e) {
      var r = this, o = e.columns, i = e.skipHeader, s = e.skipHeaderGroups, a = e.stopAtGroup, l = e.source, u = l === void 0 ? "api" : l;
      this.animationFrameService.flushAllFrames();
      for (var p = [], c = -1, d = i ?? this.gridOptionsWrapper.isSkipHeaderOnAutoSize(), f = s ?? d; c !== 0; )
        c = 0, this.actionOnGridColumns(o, function(g) {
          if (p.indexOf(g) >= 0)
            return !1;
          var y = r.autoWidthCalculator.getPreferredWidthForColumn(g, d);
          if (y > 0) {
            var C = r.normaliseColumnWidth(g, y);
            g.setActualWidth(C, u), p.push(g), c++;
          }
          return !0;
        }, u);
      f || this.autoSizeColumnGroupsByColumns(o, a), this.fireColumnResizedEvent(p, !0, "autosizeColumns");
    }, t.prototype.fireColumnResizedEvent = function(e, r, o, i) {
      if (i === void 0 && (i = null), e && e.length) {
        var s = {
          type: v.EVENT_COLUMN_RESIZED,
          columns: e,
          column: e.length === 1 ? e[0] : null,
          flexColumns: i,
          finished: r,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: o
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.autoSizeColumn = function(e, r, o) {
      o === void 0 && (o = "api"), e && this.autoSizeColumns({ columns: [e], skipHeader: r, skipHeaderGroups: !0, source: o });
    }, t.prototype.autoSizeColumnGroupsByColumns = function(e, r) {
      var o, i, s, a, l = /* @__PURE__ */ new Set(), u = this.getGridColumns(e);
      u.forEach(function(_) {
        for (var E = _.getParent(); E && E != r; )
          E.isPadding() || l.add(E), E = E.getParent();
      });
      var p, c = [];
      try {
        for (var d = yl(l), f = d.next(); !f.done; f = d.next()) {
          var g = f.value;
          try {
            for (var y = (s = void 0, yl(this.ctrlsService.getHeaderRowContainerCtrls())), C = y.next(); !C.done; C = y.next()) {
              var m = C.value;
              if (p = m.getHeaderCtrlForColumn(g), p)
                break;
            }
          } catch (_) {
            s = { error: _ };
          } finally {
            try {
              C && !C.done && (a = y.return) && a.call(y);
            } finally {
              if (s)
                throw s.error;
            }
          }
          p && p.resizeLeafColumnsToFit();
        }
      } catch (_) {
        o = { error: _ };
      } finally {
        try {
          f && !f.done && (i = d.return) && i.call(d);
        } finally {
          if (o)
            throw o.error;
        }
      }
      return c;
    }, t.prototype.autoSizeAllColumns = function(e, r) {
      r === void 0 && (r = "api");
      var o = this.getAllDisplayedColumns();
      this.autoSizeColumns({ columns: o, skipHeader: e, source: r });
    }, t.prototype.getColumnsFromTree = function(e) {
      var r = [], o = function(i) {
        for (var s = 0; s < i.length; s++) {
          var a = i[s];
          a instanceof pe ? r.push(a) : a instanceof Pe && o(a.getChildren());
        }
      };
      return o(e), r;
    }, t.prototype.getAllDisplayedTrees = function() {
      return this.displayedTreeLeft && this.displayedTreeRight && this.displayedTreeCentre ? this.displayedTreeLeft.concat(this.displayedTreeCentre).concat(this.displayedTreeRight) : null;
    }, t.prototype.getPrimaryColumnTree = function() {
      return this.primaryColumnTree;
    }, t.prototype.getHeaderRowCount = function() {
      return this.gridHeaderRowCount;
    }, t.prototype.getDisplayedTreeLeft = function() {
      return this.displayedTreeLeft;
    }, t.prototype.getDisplayedTreeRight = function() {
      return this.displayedTreeRight;
    }, t.prototype.getDisplayedTreeCentre = function() {
      return this.displayedTreeCentre;
    }, t.prototype.isColumnDisplayed = function(e) {
      return this.getAllDisplayedColumns().indexOf(e) >= 0;
    }, t.prototype.getAllDisplayedColumns = function() {
      return this.displayedColumns;
    }, t.prototype.getViewportColumns = function() {
      return this.viewportColumns;
    }, t.prototype.getDisplayedLeftColumnsForRow = function(e) {
      return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsLeft) : this.displayedColumnsLeft;
    }, t.prototype.getDisplayedRightColumnsForRow = function(e) {
      return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsRight) : this.displayedColumnsRight;
    }, t.prototype.getDisplayedColumnsForRow = function(e, r, o, i) {
      for (var s = [], a = null, l = function(c) {
        var d = r[c], f = r.length - c, g = Math.min(d.getColSpan(e), f), y = [d];
        if (g > 1) {
          for (var C = g - 1, m = 1; m <= C; m++)
            y.push(r[c + m]);
          c += C;
        }
        var _;
        if (o ? (_ = !1, y.forEach(function(S) {
          o(S) && (_ = !0);
        })) : _ = !0, _) {
          if (s.length === 0 && a) {
            var E = i ? i(d) : !1;
            E && s.push(a);
          }
          s.push(d);
        }
        a = d, u = c;
      }, u, p = 0; p < r.length; p++)
        l(p), p = u;
      return s;
    }, t.prototype.getViewportCenterColumnsForRow = function(e) {
      var r = this;
      if (!this.colSpanActive)
        return this.viewportColumnsCenter;
      var o = function(s) {
        var a = s.getLeft();
        return O(a) && a > r.viewportLeft;
      }, i = this.suppressColumnVirtualisation ? null : this.isColumnInViewport.bind(this);
      return this.getDisplayedColumnsForRow(e, this.displayedColumnsCenter, i, o);
    }, t.prototype.getAriaColumnIndex = function(e) {
      return this.getAllGridColumns().indexOf(e) + 1;
    }, t.prototype.isColumnInViewport = function(e) {
      if (e.isAutoHeight())
        return !0;
      var r = e.getLeft() || 0, o = r + e.getActualWidth(), i = this.viewportLeft - 200, s = this.viewportRight + 200, a = r < i && o < i, l = r > s && o > s;
      return !a && !l;
    }, t.prototype.getDisplayedColumnsLeftWidth = function() {
      return this.getWidthOfColsInList(this.displayedColumnsLeft);
    }, t.prototype.getDisplayedColumnsRightWidth = function() {
      return this.getWidthOfColsInList(this.displayedColumnsRight);
    }, t.prototype.updatePrimaryColumnList = function(e, r, o, i, s, a) {
      var l = this;
      if (a === void 0 && (a = "api"), !(!e || gt(e))) {
        var u = !1;
        if (e.forEach(function(c) {
          var d = l.getPrimaryColumn(c);
          if (d) {
            if (o) {
              if (r.indexOf(d) >= 0)
                return;
              r.push(d);
            } else {
              if (r.indexOf(d) < 0)
                return;
              Ye(r, d);
            }
            i(d), u = !0;
          }
        }), !!u) {
          this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(a);
          var p = {
            type: s,
            columns: r,
            column: r.length === 1 ? r[0] : null,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: a
          };
          this.eventService.dispatchEvent(p);
        }
      }
    }, t.prototype.setRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.setPrimaryColumnList(e, this.rowGroupColumns, v.EVENT_COLUMN_ROW_GROUP_CHANGED, this.setRowGroupActive.bind(this), r);
    }, t.prototype.setRowGroupActive = function(e, r, o) {
      e !== r.isRowGroupActive() && (r.setRowGroupActive(e, o), !e && !this.gridOptionsWrapper.isSuppressMakeColumnVisibleAfterUnGroup() && r.setVisible(!0, o));
    }, t.prototype.addRowGroupColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.addRowGroupColumns([e], r);
    }, t.prototype.addRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !0, this.setRowGroupActive.bind(this, !0), v.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
    }, t.prototype.removeRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !1, this.setRowGroupActive.bind(this, !1), v.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
    }, t.prototype.removeRowGroupColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.removeRowGroupColumns([e], r);
    }, t.prototype.addPivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !0, function(o) {
        return o.setPivotActive(!0, r);
      }, v.EVENT_COLUMN_PIVOT_CHANGED, r);
    }, t.prototype.setPivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.pivotColumns, v.EVENT_COLUMN_PIVOT_CHANGED, function(o, i) {
        i.setPivotActive(o, r);
      }, r);
    }, t.prototype.addPivotColumn = function(e, r) {
      r === void 0 && (r = "api"), this.addPivotColumns([e], r);
    }, t.prototype.removePivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !1, function(o) {
        return o.setPivotActive(!1, r);
      }, v.EVENT_COLUMN_PIVOT_CHANGED, r);
    }, t.prototype.removePivotColumn = function(e, r) {
      r === void 0 && (r = "api"), this.removePivotColumns([e], r);
    }, t.prototype.setPrimaryColumnList = function(e, r, o, i, s) {
      var a = this;
      r.length = 0, O(e) && e.forEach(function(l) {
        var u = a.getPrimaryColumn(l);
        u && r.push(u);
      }), (this.primaryColumns || []).forEach(function(l) {
        var u = r.indexOf(l) >= 0;
        i(u, l);
      }), this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(s), this.fireColumnEvent(o, r, s);
    }, t.prototype.setValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.valueColumns, v.EVENT_COLUMN_VALUE_CHANGED, this.setValueActive.bind(this), r);
    }, t.prototype.setValueActive = function(e, r, o) {
      if (e !== r.isValueActive() && (r.setValueActive(e, o), e && !r.getAggFunc())) {
        var i = this.aggFuncService.getDefaultAggFunc(r);
        r.setAggFunc(i);
      }
    }, t.prototype.addValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !0, this.setValueActive.bind(this, !0), v.EVENT_COLUMN_VALUE_CHANGED, r);
    }, t.prototype.addValueColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.addValueColumns([e], r);
    }, t.prototype.removeValueColumn = function(e, r) {
      r === void 0 && (r = "api"), this.removeValueColumns([e], r);
    }, t.prototype.removeValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !1, this.setValueActive.bind(this, !1), v.EVENT_COLUMN_VALUE_CHANGED, r);
    }, t.prototype.normaliseColumnWidth = function(e, r) {
      var o = e.getMinWidth();
      O(o) && r < o && (r = o);
      var i = e.getMaxWidth();
      return O(i) && e.isGreaterThanMax(r) && (r = i), r;
    }, t.prototype.getPrimaryOrGridColumn = function(e) {
      var r = this.getPrimaryColumn(e);
      return r || this.getGridColumn(e);
    }, t.prototype.setColumnWidths = function(e, r, o, i) {
      var s = this;
      i === void 0 && (i = "api");
      var a = [];
      e.forEach(function(l) {
        var u = s.getPrimaryOrGridColumn(l.key);
        if (u) {
          a.push({
            width: l.newWidth,
            ratios: [1],
            columns: [u]
          });
          var p = s.gridOptionsWrapper.getColResizeDefault() === "shift";
          if (p && (r = !r), r) {
            var c = s.getDisplayedColAfter(u);
            if (!c)
              return;
            var d = u.getActualWidth() - l.newWidth, f = c.getActualWidth() + d;
            a.push({
              width: f,
              ratios: [1],
              columns: [c]
            });
          }
        }
      }), a.length !== 0 && this.resizeColumnSets({
        resizeSets: a,
        finished: o,
        source: i
      });
    }, t.prototype.checkMinAndMaxWidthsForSet = function(e) {
      var r = e.columns, o = e.width, i = 0, s = 0, a = !0;
      r.forEach(function(p) {
        var c = p.getMinWidth();
        i += c || 0;
        var d = p.getMaxWidth();
        O(d) && d > 0 ? s += d : a = !1;
      });
      var l = o >= i, u = !a || o <= s;
      return l && u;
    }, t.prototype.resizeColumnSets = function(e) {
      var r = this, o = e.resizeSets, i = e.finished, s = e.source, a = !o || o.every(function(g) {
        return r.checkMinAndMaxWidthsForSet(g);
      });
      if (!a) {
        if (i) {
          var l = o && o.length > 0 ? o[0].columns : null;
          this.fireColumnResizedEvent(l, i, s);
        }
        return;
      }
      var u = [], p = [];
      o.forEach(function(g) {
        var y = g.width, C = g.columns, m = g.ratios, _ = {}, E = {};
        C.forEach(function(A) {
          return p.push(A);
        });
        for (var S = !0, b = 0, x = function() {
          if (b++, b > 1e3)
            return console.error("AG Grid: infinite loop in resizeColumnSets"), "break";
          S = !1;
          var A = [], M = 0, V = y;
          C.forEach(function(z, $) {
            var Z = E[z.getId()];
            if (Z)
              V -= _[z.getId()];
            else {
              A.push(z);
              var X = m[$];
              M += X;
            }
          });
          var H = 1 / M;
          A.forEach(function(z, $) {
            var Z = $ === A.length - 1, X;
            Z ? X = V : (X = Math.round(m[$] * y * H), V -= X);
            var ce = z.getMinWidth(), Fe = z.getMaxWidth();
            O(ce) && X < ce ? (X = ce, E[z.getId()] = !0, S = !0) : O(Fe) && Fe > 0 && X > Fe && (X = Fe, E[z.getId()] = !0, S = !0), _[z.getId()] = X;
          });
        }; S; ) {
          var I = x();
          if (I === "break")
            break;
        }
        C.forEach(function(A) {
          var M = _[A.getId()], V = A.getActualWidth();
          V !== M && (A.setActualWidth(M, s), u.push(A));
        });
      });
      var c = u.length > 0, d = this.refreshFlexedColumns({ resizingCols: p, skipSetLeft: !0 });
      c && (this.setLeftValues(s), this.updateBodyWidths(), this.checkViewportColumns());
      var f = p.concat(d);
      (c || i) && this.fireColumnResizedEvent(f, i, s, d);
    }, t.prototype.setColumnAggFunc = function(e, r, o) {
      if (o === void 0 && (o = "api"), !!e) {
        var i = this.getPrimaryColumn(e);
        i && (i.setAggFunc(r), this.fireColumnEvent(v.EVENT_COLUMN_VALUE_CHANGED, [i], o));
      }
    }, t.prototype.fireColumnEvent = function(e, r, o) {
      var i = {
        type: e,
        columns: r,
        column: r && r.length == 1 ? r[0] : null,
        api: this.gridApi,
        columnApi: this.columnApi,
        source: o
      };
      this.eventService.dispatchEvent(i);
    }, t.prototype.moveRowGroupColumn = function(e, r, o) {
      o === void 0 && (o = "api");
      var i = this.rowGroupColumns[e];
      this.rowGroupColumns.splice(e, 1), this.rowGroupColumns.splice(r, 0, i);
      var s = {
        type: v.EVENT_COLUMN_ROW_GROUP_CHANGED,
        columns: this.rowGroupColumns,
        column: this.rowGroupColumns.length === 1 ? this.rowGroupColumns[0] : null,
        api: this.gridApi,
        columnApi: this.columnApi,
        source: o
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.moveColumns = function(e, r, o) {
      if (o === void 0 && (o = "api"), this.columnAnimationService.start(), r > this.gridColumns.length - e.length) {
        console.warn("AG Grid: tried to insert columns in invalid location, toIndex = " + r), console.warn("AG Grid: remember that you should not count the moving columns when calculating the new index");
        return;
      }
      var i = this.getGridColumns(e), s = !this.doesMovePassRules(i, r);
      if (!s) {
        Ss(this.gridColumns, i, r), this.updateDisplayedColumns(o);
        var a = {
          type: v.EVENT_COLUMN_MOVED,
          columns: i,
          column: i.length === 1 ? i[0] : null,
          toIndex: r,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: o
        };
        this.eventService.dispatchEvent(a), this.columnAnimationService.finish();
      }
    }, t.prototype.doesMovePassRules = function(e, r) {
      var o = this.gridColumns.slice();
      return Ss(o, e, r), !(!this.doesMovePassMarryChildren(o) || !this.doesMovePassLockedPositions(o));
    }, t.prototype.sortColumnsLikeGridColumns = function(e) {
      var r = this;
      if (!(!e || e.length <= 1)) {
        var o = e.filter(function(i) {
          return r.gridColumns.indexOf(i) < 0;
        }).length > 0;
        o || e.sort(function(i, s) {
          var a = r.gridColumns.indexOf(i), l = r.gridColumns.indexOf(s);
          return a - l;
        });
      }
    }, t.prototype.doesMovePassLockedPositions = function(e) {
      var r = !1, o = !0;
      return e.forEach(function(i) {
        i.getColDef().lockPosition ? r && (o = !1) : r = !0;
      }), o;
    }, t.prototype.doesMovePassMarryChildren = function(e) {
      var r = !0;
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(o) {
        if (o instanceof Pe) {
          var i = o, s = i.getColGroupDef(), a = s && s.marryChildren;
          if (a) {
            var l = [];
            i.getLeafColumns().forEach(function(f) {
              var g = e.indexOf(f);
              l.push(g);
            });
            var u = Math.max.apply(Math, l), p = Math.min.apply(Math, l), c = u - p, d = i.getLeafColumns().length - 1;
            c > d && (r = !1);
          }
        }
      }), r;
    }, t.prototype.moveColumn = function(e, r, o) {
      o === void 0 && (o = "api"), this.moveColumns([e], r, o);
    }, t.prototype.moveColumnByIndex = function(e, r, o) {
      o === void 0 && (o = "api");
      var i = this.gridColumns[e];
      this.moveColumn(i, r, o);
    }, t.prototype.getColumnDefs = function() {
      var e = this;
      if (this.primaryColumns) {
        var r = this.primaryColumns.slice();
        return this.gridColsArePrimary ? r.sort(function(o, i) {
          return e.gridColumns.indexOf(o) - e.gridColumns.indexOf(i);
        }) : this.lastPrimaryOrder && r.sort(function(o, i) {
          return e.lastPrimaryOrder.indexOf(o) - e.lastPrimaryOrder.indexOf(i);
        }), this.columnDefFactory.buildColumnDefs(r, this.rowGroupColumns, this.pivotColumns);
      }
    }, t.prototype.getBodyContainerWidth = function() {
      return this.bodyWidth;
    }, t.prototype.getContainerWidth = function(e) {
      switch (e) {
        case w.PINNED_LEFT:
          return this.leftWidth;
        case w.PINNED_RIGHT:
          return this.rightWidth;
        default:
          return this.bodyWidth;
      }
    }, t.prototype.updateBodyWidths = function() {
      var e = this.getWidthOfColsInList(this.displayedColumnsCenter), r = this.getWidthOfColsInList(this.displayedColumnsLeft), o = this.getWidthOfColsInList(this.displayedColumnsRight);
      this.bodyWidthDirty = this.bodyWidth !== e;
      var i = this.bodyWidth !== e || this.leftWidth !== r || this.rightWidth !== o;
      if (i) {
        this.bodyWidth = e, this.leftWidth = r, this.rightWidth = o;
        var s = {
          type: v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.getValueColumns = function() {
      return this.valueColumns ? this.valueColumns : [];
    }, t.prototype.getPivotColumns = function() {
      return this.pivotColumns ? this.pivotColumns : [];
    }, t.prototype.isPivotActive = function() {
      return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;
    }, t.prototype.getRowGroupColumns = function() {
      return this.rowGroupColumns ? this.rowGroupColumns : [];
    }, t.prototype.getDisplayedCenterColumns = function() {
      return this.displayedColumnsCenter;
    }, t.prototype.getDisplayedLeftColumns = function() {
      return this.displayedColumnsLeft;
    }, t.prototype.getDisplayedRightColumns = function() {
      return this.displayedColumnsRight;
    }, t.prototype.getDisplayedColumns = function(e) {
      switch (e) {
        case w.PINNED_LEFT:
          return this.getDisplayedLeftColumns();
        case w.PINNED_RIGHT:
          return this.getDisplayedRightColumns();
        default:
          return this.getDisplayedCenterColumns();
      }
    }, t.prototype.getAllPrimaryColumns = function() {
      return this.primaryColumns ? this.primaryColumns.slice() : null;
    }, t.prototype.getSecondaryColumns = function() {
      return this.secondaryColumns ? this.secondaryColumns.slice() : null;
    }, t.prototype.getAllColumnsForQuickFilter = function() {
      return this.columnsForQuickFilter;
    }, t.prototype.getAllGridColumns = function() {
      return this.gridColumns;
    }, t.prototype.isEmpty = function() {
      return gt(this.gridColumns);
    }, t.prototype.isRowGroupEmpty = function() {
      return gt(this.rowGroupColumns);
    }, t.prototype.setColumnVisible = function(e, r, o) {
      o === void 0 && (o = "api"), this.setColumnsVisible([e], r, o);
    }, t.prototype.setColumnsVisible = function(e, r, o) {
      var i = this;
      r === void 0 && (r = !1), o === void 0 && (o = "api"), this.columnAnimationService.start(), this.actionOnGridColumns(e, function(s) {
        return s.isVisible() !== r ? (s.setVisible(r, o), !0) : !1;
      }, o, function() {
        var s = {
          type: v.EVENT_COLUMN_VISIBLE,
          visible: r,
          column: null,
          columns: null,
          api: i.gridApi,
          columnApi: i.columnApi,
          source: o
        };
        return s;
      }), this.columnAnimationService.finish();
    }, t.prototype.setColumnPinned = function(e, r, o) {
      o === void 0 && (o = "api"), e && this.setColumnsPinned([e], r, o);
    }, t.prototype.setColumnsPinned = function(e, r, o) {
      var i = this;
      if (o === void 0 && (o = "api"), this.gridOptionsWrapper.getDomLayout() === "print") {
        console.warn("Changing the column pinning status is not allowed with domLayout='print'");
        return;
      }
      this.columnAnimationService.start();
      var s;
      r === !0 || r === w.PINNED_LEFT ? s = w.PINNED_LEFT : r === w.PINNED_RIGHT ? s = w.PINNED_RIGHT : s = null, this.actionOnGridColumns(e, function(a) {
        return a.getPinned() !== s ? (a.setPinned(s), !0) : !1;
      }, o, function() {
        var a = {
          type: v.EVENT_COLUMN_PINNED,
          pinned: s,
          column: null,
          columns: null,
          api: i.gridApi,
          columnApi: i.columnApi,
          source: o
        };
        return a;
      }), this.columnAnimationService.finish();
    }, t.prototype.actionOnGridColumns = function(e, r, o, i) {
      var s = this;
      if (!gt(e)) {
        var a = [];
        if (e.forEach(function(u) {
          var p = s.getGridColumn(u);
          if (p) {
            var c = r(p);
            c !== !1 && a.push(p);
          }
        }), !!a.length && (this.updateDisplayedColumns(o), O(i) && i)) {
          var l = i();
          l.columns = a, l.column = a.length === 1 ? a[0] : null, this.eventService.dispatchEvent(l);
        }
      }
    }, t.prototype.getDisplayedColBefore = function(e) {
      var r = this.getAllDisplayedColumns(), o = r.indexOf(e);
      return o > 0 ? r[o - 1] : null;
    }, t.prototype.getDisplayedColAfter = function(e) {
      var r = this.getAllDisplayedColumns(), o = r.indexOf(e);
      return o < r.length - 1 ? r[o + 1] : null;
    }, t.prototype.getDisplayedGroupAfter = function(e) {
      return this.getDisplayedGroupAtDirection(e, "After");
    }, t.prototype.getDisplayedGroupBefore = function(e) {
      return this.getDisplayedGroupAtDirection(e, "Before");
    }, t.prototype.getDisplayedGroupAtDirection = function(e, r) {
      for (var o = e.getProvidedColumnGroup().getLevel() + e.getPaddingLevel(), i = e.getDisplayedLeafColumns(), s = r === "After" ? _e(i) : i[0], a = "getDisplayedCol" + r; ; ) {
        var l = this[a](s);
        if (!l)
          return null;
        var u = this.getColumnGroupAtLevel(l, o);
        if (u !== e)
          return u;
      }
    }, t.prototype.getColumnGroupAtLevel = function(e, r) {
      for (var o = e.getParent(), i, s; ; ) {
        var a = o.getProvidedColumnGroup();
        if (i = a.getLevel(), s = o.getPaddingLevel(), i + s <= r)
          break;
        o = o.getParent();
      }
      return o;
    }, t.prototype.isPinningLeft = function() {
      return this.displayedColumnsLeft.length > 0;
    }, t.prototype.isPinningRight = function() {
      return this.displayedColumnsRight.length > 0;
    }, t.prototype.getPrimaryAndSecondaryAndAutoColumns = function() {
      var e = this.primaryColumns ? this.primaryColumns.slice(0) : [];
      return this.groupAutoColumns && O(this.groupAutoColumns) && this.groupAutoColumns.forEach(function(r) {
        return e.push(r);
      }), this.secondaryColumnsPresent && this.secondaryColumns && this.secondaryColumns.forEach(function(r) {
        return e.push(r);
      }), e;
    }, t.prototype.createStateItemFromColumn = function(e) {
      var r = e.isRowGroupActive() ? this.rowGroupColumns.indexOf(e) : null, o = e.isPivotActive() ? this.pivotColumns.indexOf(e) : null, i = e.isValueActive() ? e.getAggFunc() : null, s = e.getSort() != null ? e.getSort() : null, a = e.getSortIndex() != null ? e.getSortIndex() : null, l = e.getFlex() != null && e.getFlex() > 0 ? e.getFlex() : null, u = {
        colId: e.getColId(),
        width: e.getActualWidth(),
        hide: !e.isVisible(),
        pinned: e.getPinned(),
        sort: s,
        sortIndex: a,
        aggFunc: i,
        rowGroup: e.isRowGroupActive(),
        rowGroupIndex: r,
        pivot: e.isPivotActive(),
        pivotIndex: o,
        flex: l
      };
      return u;
    }, t.prototype.getColumnState = function() {
      if (K(this.primaryColumns) || !this.isAlive())
        return [];
      var e = this.getPrimaryAndSecondaryAndAutoColumns(), r = e.map(this.createStateItemFromColumn.bind(this));
      return this.pivotMode || this.orderColumnStateList(r), r;
    }, t.prototype.getPrimaryAndAutoGroupCols = function() {
      return this.groupAutoColumns ? Cl(this.primaryColumns || [], this.groupAutoColumns) : this.primaryColumns;
    }, t.prototype.orderColumnStateList = function(e) {
      var r = or(this.gridColumns.map(function(o, i) {
        return [o.getColId(), i];
      }));
      e.sort(function(o, i) {
        var s = r.has(o.colId) ? r.get(o.colId) : -1, a = r.has(i.colId) ? r.get(i.colId) : -1;
        return s - a;
      });
    }, t.prototype.resetColumnState = function(e) {
      e === void 0 && (e = "api");
      var r = this.getColumnsFromTree(this.primaryColumnTree), o = [], i = 1e3, s = 1e3, a = [];
      this.groupAutoColumns && (a = a.concat(this.groupAutoColumns)), r && (a = a.concat(r)), a.forEach(function(l) {
        var u = function(I, A) {
          return I ?? A ?? null;
        }, p = l.getColDef(), c = u(p.sort, p.initialSort), d = u(p.sortIndex, p.initialSortIndex), f = u(p.hide, p.initialHide), g = u(p.pinned, p.initialPinned), y = u(p.width, p.initialWidth), C = u(p.flex, p.initialFlex), m = u(p.rowGroupIndex, p.initialRowGroupIndex), _ = u(p.rowGroup, p.initialRowGroup);
        m == null && (_ == null || _ == !1) && (m = null, _ = null);
        var E = u(p.pivotIndex, p.initialPivotIndex), S = u(p.pivot, p.initialPivot);
        E == null && (S == null || S == !1) && (E = null, S = null);
        var b = u(p.aggFunc, p.initialAggFunc), x = {
          colId: l.getColId(),
          sort: c,
          sortIndex: d,
          hide: f,
          pinned: g,
          width: y,
          flex: C,
          rowGroup: _,
          rowGroupIndex: m,
          pivot: S,
          pivotIndex: E,
          aggFunc: b
        };
        K(m) && _ && (x.rowGroupIndex = i++), K(E) && S && (x.pivotIndex = s++), o.push(x);
      }), this.applyColumnState({ state: o, applyOrder: !0 }, e);
    }, t.prototype.applyColumnState = function(e, r) {
      var o = this;
      if (r === void 0 && (r = "api"), gt(this.primaryColumns))
        return !1;
      if (e && e.state && !e.state.forEach)
        return console.warn("AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state."), !1;
      this.columnAnimationService.start();
      var i = this.compareColumnStatesAndRaiseEvents(r);
      this.autoGroupsNeedBuilding = !0;
      var s = this.primaryColumns.slice(), a = !0, l = {}, u = {}, p = [], c = this.rowGroupColumns.slice(), d = this.pivotColumns.slice();
      e.state && e.state.forEach(function(C) {
        var m = w.GROUP_AUTO_COLUMN_ID, _ = C.colId || "", E = _.startsWith(m);
        if (E) {
          p.push(C);
          return;
        }
        var S = o.getPrimaryColumn(_);
        S ? (o.syncColumnWithStateItem(S, C, e.defaultState, l, u, !1, r), Ye(s, S)) : a = !1;
      });
      var f = function(C) {
        return o.syncColumnWithStateItem(C, null, e.defaultState, l, u, !1, r);
      };
      s.forEach(f);
      var g = function(C, m, _, E) {
        var S = C[_.getId()], b = C[E.getId()], x = S != null, I = b != null;
        if (x && I)
          return S - b;
        if (x)
          return -1;
        if (I)
          return 1;
        var A = m.indexOf(_), M = m.indexOf(E), V = A >= 0, H = M >= 0;
        return V && H ? A - M : V ? -1 : 1;
      };
      this.rowGroupColumns.sort(g.bind(this, l, c)), this.pivotColumns.sort(g.bind(this, u, d)), this.updateGridColumns();
      var y = this.groupAutoColumns ? this.groupAutoColumns.slice() : [];
      return p.forEach(function(C) {
        var m = o.getAutoColumn(C.colId);
        Ye(y, m), o.syncColumnWithStateItem(m, C, e.defaultState, null, null, !0, r);
      }), y.forEach(f), this.applyOrderAfterApplyState(e), this.updateDisplayedColumns(r), this.dispatchEverythingChanged(r), i(), this.columnAnimationService.finish(), a;
    }, t.prototype.applyOrderAfterApplyState = function(e) {
      if (!(!this.gridColsArePrimary || !e.applyOrder || !e.state)) {
        var r = [], o = {}, i = {};
        this.gridColumns.forEach(function(a) {
          return i[a.getId()] = a;
        }), e.state.forEach(function(a) {
          if (!(!a.colId || o[a.colId])) {
            var l = i[a.colId];
            l && (r.push(l), o[a.colId] = !0);
          }
        });
        var s = 0;
        if (this.gridColumns.forEach(function(a) {
          var l = a.getColId(), u = o[l] != null;
          if (!u) {
            var p = l.startsWith(w.GROUP_AUTO_COLUMN_ID);
            p ? xo(r, a, s++) : r.push(a);
          }
        }), r = this.putFixedColumnsFirst(r), !this.doesMovePassMarryChildren(r)) {
          console.warn("AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded.");
          return;
        }
        this.gridColumns = r;
      }
    }, t.prototype.compareColumnStatesAndRaiseEvents = function(e) {
      var r = this, o = {
        rowGroupColumns: this.rowGroupColumns.slice(),
        pivotColumns: this.pivotColumns.slice(),
        valueColumns: this.valueColumns.slice()
      }, i = this.getColumnState(), s = {};
      return i.forEach(function(a) {
        s[a.colId] = a;
      }), function() {
        if (!r.gridOptionsWrapper.isSuppressColumnStateEvents()) {
          var a = r.getPrimaryAndAutoGroupCols(), l = function(m, _, E, S) {
            var b = _.map(S), x = E.map(S), I = _r(b, x);
            if (!I) {
              var A = {
                type: m,
                columns: E,
                column: E.length === 1 ? E[0] : null,
                api: r.gridApi,
                columnApi: r.columnApi,
                source: e
              };
              r.eventService.dispatchEvent(A);
            }
          }, u = function(m) {
            var _ = [];
            return (a || []).forEach(function(E) {
              var S = s[E.getColId()];
              S && m(S, E) && _.push(E);
            }), _;
          }, p = function(m) {
            return m.getColId();
          };
          l(v.EVENT_COLUMN_ROW_GROUP_CHANGED, o.rowGroupColumns, r.rowGroupColumns, p), l(v.EVENT_COLUMN_PIVOT_CHANGED, o.pivotColumns, r.pivotColumns, p);
          var c = function(m, _) {
            var E = m.aggFunc != null, S = E != _.isValueActive(), b = E && m.aggFunc != _.getAggFunc();
            return S || b;
          }, d = u(c);
          d.length > 0 && r.fireColumnEvent(v.EVENT_COLUMN_VALUE_CHANGED, r.valueColumns, e);
          var f = function(m, _) {
            return m.width != _.getActualWidth();
          };
          r.fireColumnResizedEvent(u(f), !0, e);
          var g = function(m, _) {
            return m.pinned != _.getPinned();
          };
          r.raiseColumnPinnedEvent(u(g), e);
          var y = function(m, _) {
            return m.hide == _.isVisible();
          };
          r.raiseColumnVisibleEvent(u(y), e);
          var C = function(m, _) {
            return m.sort != _.getSort() || m.sortIndex != _.getSortIndex();
          };
          u(C).length > 0 && r.sortController.dispatchSortChangedEvents(), r.raiseColumnMovedEvent(i, e);
        }
      };
    }, t.prototype.raiseColumnPinnedEvent = function(e, r) {
      if (e.length) {
        var o = e.length === 1 ? e[0] : null, i = this.getCommonValue(e, function(a) {
          return a.getPinned();
        }), s = {
          type: v.EVENT_COLUMN_PINNED,
          // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'
          pinned: i ?? null,
          columns: e,
          column: o,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: r
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.getCommonValue = function(e, r) {
      if (!(!e || e.length == 0)) {
        for (var o = r(e[0]), i = 1; i < e.length; i++)
          if (o !== r(e[i]))
            return;
        return o;
      }
    }, t.prototype.raiseColumnVisibleEvent = function(e, r) {
      if (e.length) {
        var o = e.length === 1 ? e[0] : null, i = this.getCommonValue(e, function(a) {
          return a.isVisible();
        }), s = {
          type: v.EVENT_COLUMN_VISIBLE,
          visible: i,
          columns: e,
          column: o,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: r
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.raiseColumnMovedEvent = function(e, r) {
      var o = this, i = this.getColumnState(), s = {};
      i.forEach(function(d) {
        return s[d.colId] = d;
      });
      var a = {};
      e.forEach(function(d) {
        s[d.colId] && (a[d.colId] = !0);
      });
      var l = e.filter(function(d) {
        return a[d.colId];
      }), u = i.filter(function(d) {
        return a[d.colId];
      }), p = [];
      if (u.forEach(function(d, f) {
        var g = l && l[f];
        if (g && g.colId !== d.colId) {
          var y = o.getGridColumn(g.colId);
          y && p.push(y);
        }
      }), !!p.length) {
        var c = {
          type: v.EVENT_COLUMN_MOVED,
          columns: p,
          column: null,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: r
        };
        this.eventService.dispatchEvent(c);
      }
    }, t.prototype.syncColumnWithStateItem = function(e, r, o, i, s, a, l) {
      if (e) {
        var u = function(M, V) {
          var H = { value1: void 0, value2: void 0 }, z = !1;
          return r && (r[M] !== void 0 && (H.value1 = r[M], z = !0), O(V) && r[V] !== void 0 && (H.value2 = r[V], z = !0)), !z && o && (o[M] !== void 0 && (H.value1 = o[M]), O(V) && o[V] !== void 0 && (H.value2 = o[V])), H;
        }, p = u("hide").value1;
        p !== void 0 && e.setVisible(!p, l);
        var c = u("pinned").value1;
        c !== void 0 && e.setPinned(c);
        var d = this.columnUtils.calculateColMinWidth(e.getColDef()), f = u("flex").value1;
        f !== void 0 && e.setFlex(f);
        var g = e.getFlex() <= 0;
        if (g) {
          var y = u("width").value1;
          y != null && d != null && y >= d && e.setActualWidth(y, l);
        }
        var C = u("sort").value1;
        C !== void 0 && (C === w.SORT_DESC || C === w.SORT_ASC ? e.setSort(C) : e.setSort(void 0));
        var m = u("sortIndex").value1;
        if (m !== void 0 && e.setSortIndex(m), !a) {
          var _ = u("aggFunc").value1;
          _ !== void 0 && (typeof _ == "string" ? (e.setAggFunc(_), e.isValueActive() || (e.setValueActive(!0, l), this.valueColumns.push(e))) : (O(_) && console.warn("AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON."), e.isValueActive() && (e.setValueActive(!1, l), Ye(this.valueColumns, e))));
          var E = u("rowGroup", "rowGroupIndex"), S = E.value1, b = E.value2;
          (S !== void 0 || b !== void 0) && (typeof b == "number" || S ? (e.isRowGroupActive() || (e.setRowGroupActive(!0, l), this.rowGroupColumns.push(e)), i && typeof b == "number" && (i[e.getId()] = b)) : e.isRowGroupActive() && (e.setRowGroupActive(!1, l), Ye(this.rowGroupColumns, e)));
          var x = u("pivot", "pivotIndex"), I = x.value1, A = x.value2;
          (I !== void 0 || A !== void 0) && (typeof A == "number" || I ? (e.isPivotActive() || (e.setPivotActive(!0, l), this.pivotColumns.push(e)), s && typeof A == "number" && (s[e.getId()] = A)) : e.isPivotActive() && (e.setPivotActive(!1, l), Ye(this.pivotColumns, e)));
        }
      }
    }, t.prototype.getGridColumns = function(e) {
      return this.getColumns(e, this.getGridColumn.bind(this));
    }, t.prototype.getColumns = function(e, r) {
      var o = [];
      return e && e.forEach(function(i) {
        var s = r(i);
        s && o.push(s);
      }), o;
    }, t.prototype.getColumnWithValidation = function(e) {
      if (e == null)
        return null;
      var r = this.getGridColumn(e);
      return r || console.warn("AG Grid: could not find column " + e), r;
    }, t.prototype.getPrimaryColumn = function(e) {
      return this.primaryColumns ? this.getColumn(e, this.primaryColumns, this.primaryColumnsMap) : null;
    }, t.prototype.getGridColumn = function(e) {
      return this.getColumn(e, this.gridColumns, this.gridColumnsMap);
    }, t.prototype.getColumn = function(e, r, o) {
      if (!e)
        return null;
      if (typeof e == "string" && o[e])
        return o[e];
      for (var i = 0; i < r.length; i++)
        if (this.columnsMatch(r[i], e))
          return r[i];
      return this.getAutoColumn(e);
    }, t.prototype.getAutoColumn = function(e) {
      var r = this;
      return !this.groupAutoColumns || !O(this.groupAutoColumns) || K(this.groupAutoColumns) ? null : this.groupAutoColumns.find(function(o) {
        return r.columnsMatch(o, e);
      }) || null;
    }, t.prototype.columnsMatch = function(e, r) {
      var o = e === r, i = e.getColDef() === r, s = e.getColId() == r;
      return o || i || s;
    }, t.prototype.getDisplayNameForColumn = function(e, r, o) {
      if (o === void 0 && (o = !1), !e)
        return null;
      var i = this.getHeaderName(e.getColDef(), e, null, null, r);
      return o ? this.wrapHeaderNameWithAggFunc(e, i) : i;
    }, t.prototype.getDisplayNameForProvidedColumnGroup = function(e, r, o) {
      var i = r ? r.getColGroupDef() : null;
      return i ? this.getHeaderName(i, null, e, r, o) : null;
    }, t.prototype.getDisplayNameForColumnGroup = function(e, r) {
      return this.getDisplayNameForProvidedColumnGroup(e, e.getProvidedColumnGroup(), r);
    }, t.prototype.getHeaderName = function(e, r, o, i, s) {
      var a = e.headerValueGetter;
      if (a) {
        var l = {
          colDef: e,
          column: r,
          columnGroup: o,
          providedColumnGroup: i,
          location: s,
          api: this.gridOptionsWrapper.getApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        return typeof a == "function" ? a(l) : typeof a == "string" ? this.expressionService.evaluate(a, l) : (console.warn("ag-grid: headerValueGetter must be a function or a string"), "");
      } else {
        if (e.headerName != null)
          return e.headerName;
        if (e.field)
          return oa(e.field);
      }
      return "";
    }, t.prototype.wrapHeaderNameWithAggFunc = function(e, r) {
      if (this.gridOptionsWrapper.isSuppressAggFuncInHeader())
        return r;
      var o = e.getColDef().pivotValueColumn, i = O(o), s = null, a;
      if (i)
        s = o ? o.getAggFunc() : null, a = !0;
      else {
        var l = e.isValueActive(), u = this.pivotMode || !this.isRowGroupEmpty();
        l && u ? (s = e.getAggFunc(), a = !0) : a = !1;
      }
      if (a) {
        var p = typeof s == "string" ? s : "func", c = this.gridOptionsWrapper.getLocaleTextFunc(), d = c(p, p);
        return d + "(" + r + ")";
      }
      return r;
    }, t.prototype.getColumnGroup = function(e, r) {
      if (!e)
        return null;
      if (e instanceof qe)
        return e;
      var o = this.getAllDisplayedTrees(), i = typeof r == "number", s = null;
      return this.columnUtils.depthFirstAllColumnTreeSearch(o, function(a) {
        if (a instanceof qe) {
          var l = a, u = void 0;
          i ? u = e === l.getGroupId() && r === l.getInstanceId() : u = e === l.getGroupId(), u && (s = l);
        }
      }), s;
    }, t.prototype.isReady = function() {
      return this.ready;
    }, t.prototype.extractValueColumns = function(e, r) {
      this.valueColumns = this.extractColumns(
        r,
        this.valueColumns,
        function(o, i) {
          return o.setValueActive(i, e);
        },
        // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null
        function() {
        },
        function() {
        },
        // aggFunc is a string, so return it's existence
        function(o) {
          var i = o.aggFunc;
          if (i === null || i === "")
            return null;
          if (i !== void 0)
            return !!i;
        },
        function(o) {
          return o.initialAggFunc != null && o.initialAggFunc != "";
        }
      ), this.valueColumns.forEach(function(o) {
        var i = o.getColDef();
        i.aggFunc != null && i.aggFunc != "" ? o.setAggFunc(i.aggFunc) : o.getAggFunc() || o.setAggFunc(i.initialAggFunc);
      });
    }, t.prototype.extractRowGroupColumns = function(e, r) {
      this.rowGroupColumns = this.extractColumns(r, this.rowGroupColumns, function(o, i) {
        return o.setRowGroupActive(i, e);
      }, function(o) {
        return o.rowGroupIndex;
      }, function(o) {
        return o.initialRowGroupIndex;
      }, function(o) {
        return o.rowGroup;
      }, function(o) {
        return o.initialRowGroup;
      });
    }, t.prototype.extractColumns = function(e, r, o, i, s, a, l) {
      e === void 0 && (e = []), r === void 0 && (r = []);
      var u = [], p = [];
      (this.primaryColumns || []).forEach(function(f) {
        var g = e.indexOf(f) < 0, y = f.getColDef(), C = Kt(a(y)), m = Kt(l(y)), _ = Tt(i(y)), E = Tt(s(y)), S, b = C !== void 0, x = _ !== void 0, I = m !== void 0, A = E !== void 0;
        if (b ? S = C : x ? _ === null ? S = !1 : S = _ >= 0 : g ? I ? S = m : A ? S = E != null && E >= 0 : S = !1 : S = r.indexOf(f) >= 0, S) {
          var M = g ? _ != null || E != null : _ != null;
          M ? u.push(f) : p.push(f);
        }
      });
      var c = function(f) {
        var g = i(f.getColDef()), y = s(f.getColDef());
        return g ?? y;
      };
      u.sort(function(f, g) {
        var y = c(f), C = c(g);
        return y === C ? 0 : y < C ? -1 : 1;
      });
      var d = [].concat(u);
      return r.forEach(function(f) {
        p.indexOf(f) >= 0 && d.push(f);
      }), p.forEach(function(f) {
        d.indexOf(f) < 0 && d.push(f);
      }), r.forEach(function(f) {
        d.indexOf(f) < 0 && o(f, !1);
      }), d.forEach(function(f) {
        r.indexOf(f) < 0 && o(f, !0);
      }), d;
    }, t.prototype.extractPivotColumns = function(e, r) {
      this.pivotColumns = this.extractColumns(r, this.pivotColumns, function(o, i) {
        return o.setPivotActive(i, e);
      }, function(o) {
        return o.pivotIndex;
      }, function(o) {
        return o.initialPivotIndex;
      }, function(o) {
        return o.pivot;
      }, function(o) {
        return o.initialPivot;
      });
    }, t.prototype.resetColumnGroupState = function(e) {
      e === void 0 && (e = "api");
      var r = [];
      this.columnUtils.depthFirstOriginalTreeSearch(null, this.primaryColumnTree, function(o) {
        if (o instanceof Pe) {
          var i = o.getColGroupDef(), s = {
            groupId: o.getGroupId(),
            open: i ? i.openByDefault : void 0
          };
          r.push(s);
        }
      }), this.setColumnGroupState(r, e);
    }, t.prototype.getColumnGroupState = function() {
      var e = [];
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(r) {
        if (r instanceof Pe) {
          var o = r;
          e.push({
            groupId: o.getGroupId(),
            open: o.isExpanded()
          });
        }
      }), e;
    }, t.prototype.setColumnGroupState = function(e, r) {
      var o = this;
      r === void 0 && (r = "api"), this.columnAnimationService.start();
      var i = [];
      e.forEach(function(s) {
        var a = s.groupId, l = s.open, u = o.getProvidedColumnGroup(a);
        u && u.isExpanded() !== l && (o.logger.log("columnGroupOpened(" + u.getGroupId() + "," + l + ")"), u.setExpanded(l), i.push(u));
      }), this.updateGroupsAndDisplayedColumns(r), this.setFirstRightAndLastLeftPinned(r), i.forEach(function(s) {
        var a = {
          type: v.EVENT_COLUMN_GROUP_OPENED,
          columnGroup: s,
          api: o.gridApi,
          columnApi: o.columnApi
        };
        o.eventService.dispatchEvent(a);
      }), this.columnAnimationService.finish();
    }, t.prototype.setColumnGroupOpened = function(e, r, o) {
      o === void 0 && (o = "api");
      var i;
      e instanceof Pe ? i = e.getId() : i = e || "", this.setColumnGroupState([{ groupId: i, open: r }], o);
    }, t.prototype.getProvidedColumnGroup = function(e) {
      typeof e != "string" && console.error("AG Grid: group key must be a string");
      var r = null;
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(o) {
        if (o instanceof Pe) {
          var i = o;
          i.getId() === e && (r = i);
        }
      }), r;
    }, t.prototype.calculateColumnsForDisplay = function() {
      var e = this, r;
      return this.pivotMode && !this.secondaryColumnsPresent ? r = this.gridColumns.filter(function(o) {
        var i = e.groupAutoColumns && yt(e.groupAutoColumns, o), s = e.valueColumns && yt(e.valueColumns, o);
        return i || s;
      }) : r = this.gridColumns.filter(function(o) {
        var i = e.groupAutoColumns && yt(e.groupAutoColumns, o);
        return i || o.isVisible();
      }), r;
    }, t.prototype.checkColSpanActiveInCols = function(e) {
      var r = !1;
      return e.forEach(function(o) {
        O(o.getColDef().colSpan) && (r = !0);
      }), r;
    }, t.prototype.calculateColumnsForGroupDisplay = function() {
      var e = this;
      this.groupDisplayColumns = [];
      var r = function(o) {
        var i = o.getColDef();
        i && O(i.showRowGroup) && e.groupDisplayColumns.push(o);
      };
      this.gridColumns.forEach(r), this.groupAutoColumns && this.groupAutoColumns.forEach(r);
    }, t.prototype.getGroupDisplayColumns = function() {
      return this.groupDisplayColumns;
    }, t.prototype.updateDisplayedColumns = function(e) {
      var r = this.calculateColumnsForDisplay();
      this.buildDisplayedTrees(r), this.calculateColumnsForGroupDisplay(), this.updateGroupsAndDisplayedColumns(e), this.setFirstRightAndLastLeftPinned(e);
    }, t.prototype.isSecondaryColumnsPresent = function() {
      return this.secondaryColumnsPresent;
    }, t.prototype.setSecondaryColumns = function(e, r) {
      r === void 0 && (r = "api");
      var o = e && e.length > 0;
      if (!(!o && !this.secondaryColumnsPresent)) {
        if (o) {
          this.processSecondaryColumnDefinitions(e);
          var i = this.columnFactory.createColumnTree(e, !1);
          this.secondaryBalancedTree = i.columnTree, this.secondaryHeaderRowCount = i.treeDept + 1, this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree), this.secondaryColumnsPresent = !0;
        } else
          this.secondaryBalancedTree = null, this.secondaryHeaderRowCount = -1, this.secondaryColumns = null, this.secondaryColumnsPresent = !1;
        this.updateGridColumns(), this.updateDisplayedColumns(r);
      }
    }, t.prototype.processSecondaryColumnDefinitions = function(e) {
      var r = this.gridOptionsWrapper.getProcessSecondaryColDefFunc(), o = this.gridOptionsWrapper.getProcessSecondaryColGroupDefFunc();
      if (!(!r && !o)) {
        var i = function(s) {
          s.forEach(function(a) {
            var l = O(a.children);
            if (l) {
              var u = a;
              o && o(u), i(u.children);
            } else {
              var p = a;
              r && r(p);
            }
          });
        };
        e && i(e);
      }
    }, t.prototype.updateGridColumns = function() {
      var e = this;
      this.gridColsArePrimary && (this.lastPrimaryOrder = this.gridColumns), this.secondaryColumns && this.secondaryBalancedTree ? (this.gridBalancedTree = this.secondaryBalancedTree.slice(), this.gridHeaderRowCount = this.secondaryHeaderRowCount, this.gridColumns = this.secondaryColumns.slice(), this.gridColsArePrimary = !1) : this.primaryColumns && (this.gridBalancedTree = this.primaryColumnTree.slice(), this.gridHeaderRowCount = this.primaryHeaderRowCount, this.gridColumns = this.primaryColumns.slice(), this.gridColsArePrimary = !0, this.orderGridColsLikeLastPrimary()), this.addAutoGroupToGridColumns(), this.gridColumns = this.putFixedColumnsFirst(this.gridColumns), this.setupQuickFilterColumns(), this.clearDisplayedAndViewportColumns(), this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns), this.gridColumnsMap = {}, this.gridColumns.forEach(function(o) {
        return e.gridColumnsMap[o.getId()] = o;
      }), this.setAutoHeightActive();
      var r = {
        type: v.EVENT_GRID_COLUMNS_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.setAutoHeightActive = function() {
      if (this.autoHeightActive = this.gridColumns.filter(function(i) {
        return i.isAutoHeight();
      }).length > 0, this.autoHeightActive) {
        this.autoHeightActiveAtLeastOnce = !0;
        var e = this.rowModel.getType(), r = e === w.ROW_MODEL_TYPE_CLIENT_SIDE || e === w.ROW_MODEL_TYPE_SERVER_SIDE;
        if (!r) {
          var o = "AG Grid - autoHeight columns only work with Client Side Row Model and Server Side Row Model.";
          ve(function() {
            return console.warn(o);
          }, "autoHeightActive.wrongRowModel");
        }
      }
    }, t.prototype.orderGridColsLikeLastPrimary = function() {
      if (!K(this.lastPrimaryOrder)) {
        var e = or(this.lastPrimaryOrder.map(function(u, p) {
          return [u, p];
        })), r = !0;
        if (this.gridColumns.forEach(function(u) {
          e.has(u) && (r = !1);
        }), !r) {
          var o = or(this.gridColumns.map(function(u) {
            return [u, !0];
          })), i = this.lastPrimaryOrder.filter(function(u) {
            return o.has(u);
          }), s = or(i.map(function(u) {
            return [u, !0];
          })), a = this.gridColumns.filter(function(u) {
            return !s.has(u);
          }), l = i.slice();
          a.forEach(function(u) {
            var p = u.getOriginalParent();
            if (!p) {
              l.push(u);
              return;
            }
            for (var c = []; !c.length && p; ) {
              var d = p.getLeafColumns();
              d.forEach(function(y) {
                var C = l.indexOf(y) >= 0, m = c.indexOf(y) < 0;
                C && m && c.push(y);
              }), p = p.getOriginalParent();
            }
            if (!c.length) {
              l.push(u);
              return;
            }
            var f = c.map(function(y) {
              return l.indexOf(y);
            }), g = Math.max.apply(Math, Cl(f));
            xo(l, u, g + 1);
          }), this.gridColumns = l;
        }
      }
    }, t.prototype.isPrimaryColumnGroupsPresent = function() {
      return this.primaryHeaderRowCount > 1;
    }, t.prototype.setupQuickFilterColumns = function() {
      this.groupAutoColumns ? this.columnsForQuickFilter = (this.primaryColumns || []).concat(this.groupAutoColumns) : this.primaryColumns && (this.columnsForQuickFilter = this.primaryColumns);
    }, t.prototype.putFixedColumnsFirst = function(e) {
      var r = e.filter(function(i) {
        return i.getColDef().lockPosition;
      }), o = e.filter(function(i) {
        return !i.getColDef().lockPosition;
      });
      return r.concat(o);
    }, t.prototype.addAutoGroupToGridColumns = function() {
      if (this.createGroupAutoColumnsIfNeeded(), !K(this.groupAutoColumns)) {
        this.gridColumns = this.groupAutoColumns ? this.groupAutoColumns.concat(this.gridColumns) : this.gridColumns;
        var e = this.columnFactory.createForAutoGroups(this.groupAutoColumns, this.gridBalancedTree);
        this.gridBalancedTree = e.concat(this.gridBalancedTree);
      }
    }, t.prototype.clearDisplayedAndViewportColumns = function() {
      this.displayedTreeLeft = [], this.displayedTreeRight = [], this.displayedTreeCentre = [], this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {}, this.displayedColumnsLeft = [], this.displayedColumnsRight = [], this.displayedColumnsCenter = [], this.displayedColumns = [], this.viewportColumns = [];
    }, t.prototype.updateGroupsAndDisplayedColumns = function(e) {
      this.updateOpenClosedVisibilityInColumnGroups(), this.deriveDisplayedColumns(e), this.refreshFlexedColumns(), this.extractViewport(), this.updateBodyWidths();
      var r = {
        type: v.EVENT_DISPLAYED_COLUMNS_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.deriveDisplayedColumns = function(e) {
      this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeLeft, this.displayedColumnsLeft), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeCentre, this.displayedColumnsCenter), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeRight, this.displayedColumnsRight), this.joinDisplayedColumns(), this.setLeftValues(e), this.displayedAutoHeightCols = this.displayedColumns.filter(function(r) {
        return r.isAutoHeight();
      });
    }, t.prototype.isAutoRowHeightActive = function() {
      return this.autoHeightActive;
    }, t.prototype.wasAutoRowHeightEverActive = function() {
      return this.autoHeightActiveAtLeastOnce;
    }, t.prototype.joinDisplayedColumns = function() {
      this.gridOptionsWrapper.isEnableRtl() ? this.displayedColumns = this.displayedColumnsRight.concat(this.displayedColumnsCenter).concat(this.displayedColumnsLeft) : this.displayedColumns = this.displayedColumnsLeft.concat(this.displayedColumnsCenter).concat(this.displayedColumnsRight);
    }, t.prototype.setLeftValues = function(e) {
      this.setLeftValuesOfColumns(e), this.setLeftValuesOfGroups();
    }, t.prototype.setLeftValuesOfColumns = function(e) {
      var r = this;
      if (this.primaryColumns) {
        var o = this.primaryColumns.slice(0), i = this.gridOptionsWrapper.isEnableRtl();
        [
          this.displayedColumnsLeft,
          this.displayedColumnsRight,
          this.displayedColumnsCenter
        ].forEach(function(s) {
          if (i) {
            var a = r.getWidthOfColsInList(s);
            s.forEach(function(u) {
              a -= u.getActualWidth(), u.setLeft(a, e);
            });
          } else {
            var l = 0;
            s.forEach(function(u) {
              u.setLeft(l, e), l += u.getActualWidth();
            });
          }
          ea(o, s);
        }), o.forEach(function(s) {
          s.setLeft(null, e);
        });
      }
    }, t.prototype.setLeftValuesOfGroups = function() {
      [
        this.displayedTreeLeft,
        this.displayedTreeRight,
        this.displayedTreeCentre
      ].forEach(function(e) {
        e.forEach(function(r) {
          if (r instanceof qe) {
            var o = r;
            o.checkLeft();
          }
        });
      });
    }, t.prototype.derivedDisplayedColumnsFromDisplayedTree = function(e, r) {
      r.length = 0, this.columnUtils.depthFirstDisplayedColumnTreeSearch(e, function(o) {
        o instanceof pe && r.push(o);
      });
    }, t.prototype.extractViewportColumns = function() {
      this.suppressColumnVirtualisation ? this.viewportColumnsCenter = this.displayedColumnsCenter : this.viewportColumnsCenter = this.filterOutColumnsWithinViewport(), this.viewportColumns = this.viewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight);
    }, t.prototype.getVirtualHeaderGroupRow = function(e, r) {
      var o;
      switch (e) {
        case w.PINNED_LEFT:
          o = this.viewportRowLeft[r];
          break;
        case w.PINNED_RIGHT:
          o = this.viewportRowRight[r];
          break;
        default:
          o = this.viewportRowCenter[r];
          break;
      }
      return K(o) && (o = []), o;
    }, t.prototype.extractViewportRows = function() {
      this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {};
      var e = {};
      this.viewportColumns.forEach(function(o) {
        return e[o.getId()] = !0;
      });
      var r = function(o, i, s) {
        for (var a = !1, l = 0; l < o.length; l++) {
          var u = o[l], p = !1;
          if (u instanceof pe)
            p = e[u.getId()] === !0;
          else {
            var c = u, d = c.getDisplayedChildren();
            d && (p = r(d, i, s + 1));
          }
          p && (a = !0, i[s] || (i[s] = []), i[s].push(u));
        }
        return a;
      };
      r(this.displayedTreeLeft, this.viewportRowLeft, 0), r(this.displayedTreeRight, this.viewportRowRight, 0), r(this.displayedTreeCentre, this.viewportRowCenter, 0);
    }, t.prototype.extractViewport = function() {
      this.extractViewportColumns(), this.extractViewportRows();
    }, t.prototype.filterOutColumnsWithinViewport = function() {
      return this.displayedColumnsCenter.filter(this.isColumnInViewport.bind(this));
    }, t.prototype.refreshFlexedColumns = function(e) {
      var r = this;
      e === void 0 && (e = {});
      var o = e.source ? e.source : "flex";
      if (e.viewportWidth != null && (this.flexViewportWidth = e.viewportWidth), !this.flexViewportWidth)
        return [];
      var i = -1;
      e.resizingCols && e.resizingCols.forEach(function(S) {
        var b = r.displayedColumnsCenter.indexOf(S);
        i < b && (i = b);
      });
      var s = function(S) {
        var b = r.displayedColumnsCenter.indexOf(S) > i;
        return S.getFlex() && b;
      }, a = this.displayedColumnsCenter.filter(function(S) {
        return !s(S);
      }), l = this.displayedColumnsCenter.filter(function(S) {
        return s(S);
      }), u = [];
      if (!l.length)
        return [];
      var p = [], c;
      e:
        for (; ; ) {
          var d = l.reduce(function(S, b) {
            return S + b.getFlex();
          }, 0);
          c = this.flexViewportWidth - this.getWidthOfColsInList(a);
          for (var f = 0; f < l.length; f++) {
            var g = l[f], y = c * g.getFlex() / d, C = 0, m = g.getMinWidth(), _ = g.getMaxWidth();
            if (O(m) && y < m ? C = m : O(_) && y > _ && (C = _), C) {
              g.setActualWidth(C, o), Ye(l, g), u.push(g), a.push(g);
              continue e;
            }
            p[f] = Math.round(y);
          }
          break;
        }
      var E = c;
      return l.forEach(function(S, b) {
        S.setActualWidth(Math.min(p[b], E), o), u.push(S), E -= p[b];
      }), e.skipSetLeft || this.setLeftValues(o), e.updateBodyWidths && this.updateBodyWidths(), e.fireResizedEvent && this.fireColumnResizedEvent(u, !0, o, l), this.flexColsCalculatedAtLestOnce || (this.gridOptionsWrapper.isRowModelDefault() && this.rowModel.resetRowHeights(), this.flexColsCalculatedAtLestOnce = !0), l;
    }, t.prototype.sizeColumnsToFit = function(e, r, o) {
      r === void 0 && (r = "sizeColumnsToFit");
      var i = this.getAllDisplayedColumns();
      if (!(e <= 0 || !i.length)) {
        var s = [], a = [];
        i.forEach(function(E) {
          E.getColDef().suppressSizeToFit === !0 ? a.push(E) : s.push(E);
        });
        var l = s.slice(0), u = !1, p = function(E) {
          Ye(s, E), a.push(E);
        };
        for (s.forEach(function(E) {
          return E.resetActualWidth(r);
        }); !u; ) {
          u = !0;
          var c = e - this.getWidthOfColsInList(a);
          if (c <= 0)
            s.forEach(function(E) {
              E.setMinimum(r);
            });
          else
            for (var d = c / this.getWidthOfColsInList(s), f = c, g = s.length - 1; g >= 0; g--) {
              var y = s[g], C = y.getMinWidth(), m = y.getMaxWidth(), _ = Math.round(y.getActualWidth() * d);
              O(C) && _ < C ? (_ = C, p(y), u = !1) : O(m) && y.isGreaterThanMax(_) ? (_ = m, p(y), u = !1) : g === 0 && (_ = f), y.setActualWidth(_, r, !0), f -= _;
            }
        }
        l.forEach(function(E) {
          E.fireColumnWidthChangedEvent(r);
        }), this.setLeftValues(r), this.updateBodyWidths(), !o && this.fireColumnResizedEvent(l, !0, r);
      }
    }, t.prototype.buildDisplayedTrees = function(e) {
      var r = [], o = [], i = [];
      e.forEach(function(a) {
        switch (a.getPinned()) {
          case "left":
            r.push(a);
            break;
          case "right":
            o.push(a);
            break;
          default:
            i.push(a);
            break;
        }
      });
      var s = new ku();
      this.displayedTreeLeft = this.displayedGroupCreator.createDisplayedGroups(r, this.gridBalancedTree, s, w.PINNED_LEFT, this.displayedTreeLeft), this.displayedTreeRight = this.displayedGroupCreator.createDisplayedGroups(o, this.gridBalancedTree, s, w.PINNED_RIGHT, this.displayedTreeRight), this.displayedTreeCentre = this.displayedGroupCreator.createDisplayedGroups(i, this.gridBalancedTree, s, null, this.displayedTreeCentre), this.updateDisplayedMap();
    }, t.prototype.updateDisplayedMap = function() {
      var e = this;
      this.displayedColumnsAndGroupsMap = {};
      var r = function(o) {
        e.displayedColumnsAndGroupsMap[o.getUniqueId()] = o;
      };
      this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeCentre, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeLeft, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeRight, r);
    }, t.prototype.isDisplayed = function(e) {
      var r = this.displayedColumnsAndGroupsMap[e.getUniqueId()];
      return r === e;
    }, t.prototype.updateOpenClosedVisibilityInColumnGroups = function() {
      var e = this.getAllDisplayedTrees();
      this.columnUtils.depthFirstAllColumnTreeSearch(e, function(r) {
        if (r instanceof qe) {
          var o = r;
          o.calculateDisplayedColumns();
        }
      });
    }, t.prototype.getGroupAutoColumns = function() {
      return this.groupAutoColumns;
    }, t.prototype.createGroupAutoColumnsIfNeeded = function() {
      if (this.autoGroupsNeedBuilding) {
        this.autoGroupsNeedBuilding = !1;
        var e = this.gridOptionsWrapper.isGroupUseEntireRow(this.pivotMode), r = this.pivotMode ? this.gridOptionsWrapper.isPivotSuppressAutoColumn() : this.gridOptionsWrapper.isGroupSuppressAutoColumn(), o = this.rowGroupColumns.length > 0 || this.usingTreeData, i = o && !r && !e;
        if (i) {
          var s = this.autoGroupColService.createAutoGroupColumns(this.rowGroupColumns), a = !this.autoColsEqual(s, this.groupAutoColumns);
          (a || this.forceRecreateAutoGroups) && (this.groupAutoColumns = s);
        } else
          this.groupAutoColumns = null;
      }
    }, t.prototype.autoColsEqual = function(e, r) {
      return _r(e, r, function(o, i) {
        return o.getColId() === i.getColId();
      });
    }, t.prototype.getWidthOfColsInList = function(e) {
      return e.reduce(function(r, o) {
        return r + o.getActualWidth();
      }, 0);
    }, t.prototype.getGridBalancedTree = function() {
      return this.gridBalancedTree;
    }, t.prototype.hasFloatingFilters = function() {
      if (!this.gridColumns)
        return !1;
      var e = this.gridColumns.some(function(r) {
        return r.getColDef().floatingFilter;
      });
      return e;
    }, t.prototype.getFirstDisplayedColumn = function() {
      var e = this.gridOptionsWrapper.isEnableRtl(), r = [
        "getDisplayedLeftColumns",
        "getDisplayedCenterColumns",
        "getDisplayedRightColumns"
      ];
      e && r.reverse();
      for (var o = 0; o < r.length; o++) {
        var i = this[r[o]]();
        if (i.length)
          return e ? _e(i) : i[0];
      }
      return null;
    }, He([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), He([
      h("columnFactory")
    ], t.prototype, "columnFactory", void 0), He([
      h("displayedGroupCreator")
    ], t.prototype, "displayedGroupCreator", void 0), He([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), He([
      h("autoWidthCalculator")
    ], t.prototype, "autoWidthCalculator", void 0), He([
      h("columnUtils")
    ], t.prototype, "columnUtils", void 0), He([
      h("columnAnimationService")
    ], t.prototype, "columnAnimationService", void 0), He([
      h("autoGroupColService")
    ], t.prototype, "autoGroupColService", void 0), He([
      de("aggFuncService")
    ], t.prototype, "aggFuncService", void 0), He([
      de("valueCache")
    ], t.prototype, "valueCache", void 0), He([
      de("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), He([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), He([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), He([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), He([
      h("sortController")
    ], t.prototype, "sortController", void 0), He([
      h("columnDefFactory")
    ], t.prototype, "columnDefFactory", void 0), He([
      G
    ], t.prototype, "init", null), He([
      Fh(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), t = He([
      U("columnModel")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Mh = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lh = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Yu = (
  /** @class */
  function(n) {
    Mh(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.calculateColMinWidth = function(e) {
      return e.minWidth != null ? e.minWidth : this.gridOptionsWrapper.getMinColWidth();
    }, t.prototype.calculateColMaxWidth = function(e) {
      return e.maxWidth != null ? e.maxWidth : this.gridOptionsWrapper.getMaxColWidth() || Number.MAX_SAFE_INTEGER;
    }, t.prototype.calculateColInitialWidth = function(e) {
      var r = this.calculateColMinWidth(e), o = this.calculateColMaxWidth(e), i, s = Tt(e.width), a = Tt(e.initialWidth);
      return s != null ? i = s : a != null ? i = a : i = this.gridOptionsWrapper.getColWidth(), Math.max(Math.min(i, o), r);
    }, t.prototype.getOriginalPathForColumn = function(e, r) {
      var o = [], i = !1, s = function(a, l) {
        for (var u = 0; u < a.length; u++) {
          if (i)
            return;
          var p = a[u];
          if (p instanceof Pe) {
            var c = p;
            s(c.getChildren(), l + 1), o[l] = p;
          } else
            p === e && (i = !0);
        }
      };
      return s(r, 0), i ? o : null;
    }, t.prototype.depthFirstOriginalTreeSearch = function(e, r, o) {
      var i = this;
      r && r.forEach(function(s) {
        s instanceof Pe && i.depthFirstOriginalTreeSearch(s, s.getChildren(), o), o(s, e);
      });
    }, t.prototype.depthFirstAllColumnTreeSearch = function(e, r) {
      var o = this;
      e && e.forEach(function(i) {
        i instanceof qe && o.depthFirstAllColumnTreeSearch(i.getChildren(), r), r(i);
      });
    }, t.prototype.depthFirstDisplayedColumnTreeSearch = function(e, r) {
      var o = this;
      e && e.forEach(function(i) {
        i instanceof qe && o.depthFirstDisplayedColumnTreeSearch(i.getDisplayedChildren(), r), r(i);
      });
    }, t = Lh([
      U("columnUtils")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Gh = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nh = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, qu = (
  /** @class */
  function(n) {
    Gh(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.createDisplayedGroups = function(e, r, o, i, s) {
      var a = this, l = [], u, p, c = this.mapOldGroupsById(s);
      return e.forEach(function(d) {
        for (var f = a.getOriginalPathForColumn(r, d), g = [], y = !p, C = 0; C < f.length; C++)
          if (y || f[C] !== p[C]) {
            var m = a.createColumnGroup(f[C], o, c, i);
            g[C] = m, C == 0 ? l.push(m) : g[C - 1].addChild(m);
          } else
            g[C] = u[C];
        var _ = g.length === 0;
        if (_)
          l.push(d);
        else {
          var E = _e(g);
          E.addChild(d);
        }
        u = g, p = f;
      }), this.setupParentsIntoColumns(l, null), l;
    }, t.prototype.createColumnGroup = function(e, r, o, i) {
      var s = e.getGroupId(), a = r.getInstanceIdForKey(s), l = qe.createUniqueId(s, a), u = o[l];
      return u && u.getProvidedColumnGroup() !== e && (u = null), O(u) ? u.reset() : (u = new qe(e, s, a, i), this.context.createBean(u)), u;
    }, t.prototype.mapOldGroupsById = function(e) {
      var r = {}, o = function(i) {
        i.forEach(function(s) {
          if (s instanceof qe) {
            var a = s;
            r[s.getUniqueId()] = a, o(a.getChildren());
          }
        });
      };
      return e && o(e), r;
    }, t.prototype.setupParentsIntoColumns = function(e, r) {
      var o = this;
      e.forEach(function(i) {
        if (i.setParent(r), i instanceof qe) {
          var s = i;
          o.setupParentsIntoColumns(s.getChildren(), s);
        }
      });
    }, t.prototype.getOriginalPathForColumn = function(e, r) {
      var o = [], i = !1, s = function(a, l) {
        for (var u = 0; u < a.length; u++) {
          if (i)
            return;
          var p = a[u];
          if (p instanceof Pe) {
            var c = p;
            s(c.getChildren(), l + 1), o[l] = p;
          } else
            p === r && (i = !0);
        }
      };
      return s(e, 0), i ? o : (console.warn("AG Grid: could not get path"), null);
    }, t = Nh([
      U("displayedGroupCreator")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var xh = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Hh = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(xh(arguments[t]));
  return n;
}, Vt = (
  /** @class */
  function() {
    function n() {
    }
    return n.STRING_PROPERTIES = [
      "sortingOrder",
      "rowClass",
      "rowSelection",
      "overlayLoadingTemplate",
      "overlayNoRowsTemplate",
      "quickFilterText",
      "rowModelType",
      "editType",
      "domLayout",
      "clipboardDelimiter",
      "rowGroupPanelShow",
      "multiSortKey",
      "pivotColumnGroupTotals",
      "pivotRowTotals",
      "pivotPanelShow",
      "fillHandleDirection",
      "serverSideStoreType",
      "groupDisplayType",
      "treeDataDisplayType"
    ], n.OBJECT_PROPERTIES = [
      "components",
      "frameworkComponents",
      "rowStyle",
      "context",
      "autoGroupColumnDef",
      "localeText",
      "icons",
      "datasource",
      "serverSideDatasource",
      "viewportDatasource",
      "groupRowRendererParams",
      "aggFuncs",
      "fullWidthCellRendererParams",
      "defaultColGroupDef",
      "defaultColDef",
      "defaultExportParams",
      "defaultCsvExportParams",
      "defaultExcelExportParams",
      "columnTypes",
      "rowClassRules",
      "detailCellRendererParams",
      "loadingCellRendererParams",
      "loadingOverlayComponentParams",
      "noRowsOverlayComponentParams",
      "popupParent",
      "colResizeDefault",
      "statusBar",
      "sideBar",
      "chartThemeOverrides",
      "customChartThemes"
    ], n.ARRAY_PROPERTIES = [
      "alignedGrids",
      "rowData",
      "columnDefs",
      "excelStyles",
      "pinnedTopRowData",
      "pinnedBottomRowData",
      "chartThemes"
    ], n.NUMBER_PROPERTIES = [
      "rowHeight",
      "detailRowHeight",
      "rowBuffer",
      "colWidth",
      "headerHeight",
      "groupHeaderHeight",
      "floatingFiltersHeight",
      "pivotHeaderHeight",
      "pivotGroupHeaderHeight",
      "groupDefaultExpanded",
      "minColWidth",
      "maxColWidth",
      "viewportRowModelPageSize",
      "viewportRowModelBufferSize",
      "autoSizePadding",
      "maxBlocksInCache",
      "maxConcurrentDatasourceRequests",
      "tooltipShowDelay",
      "tooltipHideDelay",
      "cacheOverflowSize",
      "paginationPageSize",
      "cacheBlockSize",
      "infiniteInitialRowCount",
      "scrollbarWidth",
      "batchUpdateWaitMillis",
      "asyncTransactionWaitMillis",
      "blockLoadDebounceMillis",
      "keepDetailRowsCount",
      "undoRedoCellEditingLimit",
      "cellFlashDelay",
      "cellFadeDelay",
      "tabIndex"
    ], n.BOOLEAN_PROPERTIES = [
      "suppressMakeColumnVisibleAfterUnGroup",
      "suppressRowClickSelection",
      "suppressCellSelection",
      "suppressCellFocus",
      "suppressHorizontalScroll",
      "alwaysShowHorizontalScroll",
      "alwaysShowVerticalScroll",
      "debug",
      "enableBrowserTooltips",
      "enableCellExpressions",
      "angularCompileRows",
      "angularCompileFilters",
      "groupSuppressAutoColumn",
      "groupSelectsChildren",
      "groupIncludeFooter",
      "groupIncludeTotalFooter",
      "groupUseEntireRow",
      "groupSuppressBlankHeader",
      "suppressMenuHide",
      "suppressRowDeselection",
      "unSortIcon",
      "suppressMultiSort",
      "singleClickEdit",
      "suppressLoadingOverlay",
      "suppressNoRowsOverlay",
      "suppressAutoSize",
      "skipHeaderOnAutoSize",
      "suppressParentsInRowNodes",
      "suppressColumnMoveAnimation",
      "suppressMovableColumns",
      "suppressFieldDotNotation",
      "enableRangeSelection",
      "enableRangeHandle",
      "enableFillHandle",
      "suppressClearOnFillReduction",
      "deltaSort",
      "suppressTouch",
      "suppressAsyncEvents",
      "allowContextMenuWithControlKey",
      "suppressContextMenu",
      "rememberGroupStateWhenNewData",
      "enableCellChangeFlash",
      "suppressDragLeaveHidesColumns",
      "suppressMiddleClickScrolls",
      "suppressPreventDefaultOnMouseWheel",
      "suppressCopyRowsToClipboard",
      "copyHeadersToClipboard",
      "copyGroupHeadersToClipboard",
      "pivotMode",
      "suppressAggFuncInHeader",
      "suppressColumnVirtualisation",
      "suppressAggAtRootLevel",
      "suppressFocusAfterRefresh",
      "functionsPassive",
      "functionsReadOnly",
      "animateRows",
      "groupSelectsFiltered",
      "groupRemoveSingleChildren",
      "groupRemoveLowestSingleChildren",
      "enableRtl",
      "suppressClickEdit",
      "rowDragEntireRow",
      "rowDragManaged",
      "suppressRowDrag",
      "suppressMoveWhenRowDragging",
      "rowDragMultiRow",
      "enableGroupEdit",
      "embedFullWidthRows",
      "deprecatedEmbedFullWidthRows",
      "suppressPaginationPanel",
      "groupHideOpenParents",
      "groupMultiAutoColumn",
      "pagination",
      "stopEditingWhenGridLosesFocus",
      "paginationAutoPageSize",
      "suppressScrollOnNewData",
      "suppressScrollWhenPopupsAreOpen",
      "purgeClosedRowNodes",
      "cacheQuickFilter",
      "deltaRowDataMode",
      "ensureDomOrder",
      "accentedSort",
      "suppressChangeDetection",
      "valueCache",
      "valueCacheNeverExpires",
      "aggregateOnlyChangedColumns",
      "suppressAnimationFrame",
      "suppressExcelExport",
      "suppressCsvExport",
      "treeData",
      "masterDetail",
      "suppressMultiRangeSelection",
      "enterMovesDownAfterEdit",
      "enterMovesDown",
      "suppressPropertyNamesCheck",
      "rowMultiSelectWithClick",
      "suppressEnterpriseResetOnNewColumns",
      "suppressRowHoverHighlight",
      "suppressRowTransform",
      "suppressClipboardPaste",
      "suppressLastEmptyLineOnPaste",
      "serverSideSortingAlwaysResets",
      "suppressSetColumnStateEvents",
      "suppressColumnStateEvents",
      "enableCharts",
      "deltaColumnMode",
      "suppressMaintainUnsortedOrder",
      "enableCellTextSelection",
      "suppressBrowserResizeObserver",
      "suppressMaxRenderedRowRestriction",
      "excludeChildrenWhenTreeDataFiltering",
      "tooltipMouseTrack",
      "keepDetailRows",
      "paginateChildRows",
      "preventDefaultOnContextMenu",
      "undoRedoCellEditing",
      "allowDragFromColumnsToolPanel",
      "immutableData",
      "immutableColumns",
      "pivotSuppressAutoColumn",
      "suppressExpandablePivotGroups",
      "applyColumnDefOrder",
      "debounceVerticalScrollbar",
      "detailRowAutoHeight",
      "serverSideFilteringAlwaysResets",
      "suppressAggFilteredOnly",
      "showOpenedGroup",
      "suppressClipboardApi",
      "suppressModelUpdateAfterUpdateTransaction",
      "stopEditingWhenCellsLoseFocus",
      "maintainColumnOrder",
      "groupMaintainOrder",
      "columnHoverHighlight",
      "reactUi",
      "suppressReactUi",
      "readOnlyEdit",
      "suppressRowVirtualisation"
    ], n.FUNCTION_PROPERTIES = [
      "localeTextFunc",
      "groupRowInnerRenderer",
      "groupRowInnerRendererFramework",
      "groupRowRenderer",
      "groupRowRendererFramework",
      "isExternalFilterPresent",
      "getRowHeight",
      "doesExternalFilterPass",
      "getRowClass",
      "getRowStyle",
      "getContextMenuItems",
      "getMainMenuItems",
      "processRowPostCreate",
      "processCellForClipboard",
      "groupRowAggNodes",
      "getRowNodeId",
      "isFullWidthCell",
      "fullWidthCellRenderer",
      "fullWidthCellRendererFramework",
      "processSecondaryColDef",
      "processSecondaryColGroupDef",
      "getBusinessKeyForNode",
      "sendToClipboard",
      "navigateToNextHeader",
      "tabToNextHeader",
      "navigateToNextCell",
      "tabToNextCell",
      "processCellFromClipboard",
      "getDocument",
      "postProcessPopup",
      "getChildCount",
      "getDataPath",
      "loadingCellRenderer",
      "loadingCellRendererFramework",
      "loadingOverlayComponent",
      "loadingOverlayComponentFramework",
      "noRowsOverlayComponent",
      "noRowsOverlayComponentFramework",
      "detailCellRenderer",
      "detailCellRendererFramework",
      "isRowMaster",
      "isRowSelectable",
      "postSort",
      "processHeaderForClipboard",
      "processGroupHeaderForClipboard",
      "paginationNumberFormatter",
      "processDataFromClipboard",
      "getServerSideGroupKey",
      "isServerSideGroup",
      "suppressKeyboardEvent",
      "createChartContainer",
      "getChartToolbarItems",
      "fillOperation",
      "isApplyServerSideTransaction",
      "getServerSideStoreParams",
      "isServerSideGroupOpenByDefault",
      "isGroupOpenByDefault",
      "defaultGroupSortComparator",
      "defaultGroupOrderComparator",
      "loadingCellRendererSelector",
      "getRowId"
    ], n.ALL_PROPERTIES = Hh(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.NUMBER_PROPERTIES, n.FUNCTION_PROPERTIES, n.BOOLEAN_PROPERTIES), n.FRAMEWORK_PROPERTIES = [
      "__ob__",
      "__v_skip",
      "__metadata__",
      "mappedColumnProperties",
      "hasChildColumns",
      "toColDef",
      "createColDefFromGridColumn"
    ], n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ps = globalThis && globalThis.__assign || function() {
  return Ps = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Ps.apply(this, arguments);
}, Wh = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, ml = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Wh(arguments[t]));
  return n;
}, sr = (
  /** @class */
  function() {
    function n() {
    }
    return n.getEventCallbacks = function() {
      return n.EVENT_CALLBACKS || (n.EVENT_CALLBACKS = n.EVENTS.map(function(t) {
        return n.getCallbackForEvent(t);
      })), n.EVENT_CALLBACKS;
    }, n.copyAttributesToGridOptions = function(t, e, r) {
      typeof t != "object" && (t = {});
      var o = t, i = function(s) {
        return typeof e[s] < "u";
      };
      return ml(n.ARRAY_PROPERTIES, n.STRING_PROPERTIES, n.OBJECT_PROPERTIES, n.FUNCTION_PROPERTIES, n.getEventCallbacks()).filter(i).forEach(function(s) {
        return o[s] = e[s];
      }), n.BOOLEAN_PROPERTIES.filter(i).forEach(function(s) {
        return o[s] = n.toBoolean(e[s]);
      }), n.NUMBER_PROPERTIES.filter(i).forEach(function(s) {
        return o[s] = n.toNumber(e[s]);
      }), t;
    }, n.getCallbackForEvent = function(t) {
      return !t || t.length < 2 ? t : "on" + t[0].toUpperCase() + t.substr(1);
    }, n.processOnChange = function(t, e, r, o) {
      if (t) {
        var i = Ps({}, t), s = e, a = function(p) {
          return i[p];
        };
        ml(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.getEventCallbacks()).filter(a).forEach(function(p) {
          return s[p] = i[p].currentValue;
        }), n.BOOLEAN_PROPERTIES.filter(a).forEach(function(p) {
          return s[p] = n.toBoolean(i[p].currentValue);
        }), n.NUMBER_PROPERTIES.filter(a).forEach(function(p) {
          return s[p] = n.toNumber(i[p].currentValue);
        }), i.enableCellTextSelection && (r.setEnableCellTextSelection(n.toBoolean(i.enableCellTextSelection.currentValue)), delete i.enableCellTextSelection), i.quickFilterText && (r.setQuickFilter(i.quickFilterText.currentValue), delete i.quickFilterText), i.autoGroupColumnDef && (r.setAutoGroupColumnDef(i.autoGroupColumnDef.currentValue, "gridOptionsChanged"), delete i.autoGroupColumnDef), i.columnDefs && (r.setColumnDefs(i.columnDefs.currentValue, "gridOptionsChanged"), delete i.columnDefs), i.defaultColDef && (r.setDefaultColDef(i.defaultColDef.currentValue, "gridOptionsChanged"), delete i.defaultColDef), i.paginationPageSize && (r.paginationSetPageSize(n.toNumber(i.paginationPageSize.currentValue)), delete i.paginationPageSize), i.pivotMode && (o.setPivotMode(n.toBoolean(i.pivotMode.currentValue)), delete i.pivotMode), i.groupRemoveSingleChildren && (r.setGroupRemoveSingleChildren(n.toBoolean(i.groupRemoveSingleChildren.currentValue)), delete i.groupRemoveSingleChildren), i.suppressRowDrag && (r.setSuppressRowDrag(n.toBoolean(i.suppressRowDrag.currentValue)), delete i.suppressRowDrag), i.suppressMoveWhenRowDragging && (r.setSuppressMoveWhenRowDragging(n.toBoolean(i.suppressMoveWhenRowDragging.currentValue)), delete i.suppressMoveWhenRowDragging), i.suppressRowClickSelection && (r.setSuppressRowClickSelection(n.toBoolean(i.suppressRowClickSelection.currentValue)), delete i.suppressRowClickSelection), i.suppressClipboardPaste && (r.setSuppressClipboardPaste(n.toBoolean(i.suppressClipboardPaste.currentValue)), delete i.suppressClipboardPaste), i.headerHeight && (r.setHeaderHeight(n.toNumber(i.headerHeight.currentValue)), delete i.headerHeight);
        var l = r;
        Object.keys(i).forEach(function(p) {
          var c = "set" + p.charAt(0).toUpperCase() + p.substring(1);
          l[c] && l[c](t[p].currentValue);
        });
        var u = {
          type: v.EVENT_COMPONENT_STATE_CHANGED,
          api: e.api,
          columnApi: e.columnApi
        };
        ge(t, function(p, c) {
          u[p] = c;
        }), r.dispatchEvent(u);
      }
    }, n.toBoolean = function(t) {
      return typeof t == "boolean" ? t : typeof t == "string" ? t.toUpperCase() === "TRUE" || t == "" : !1;
    }, n.toNumber = function(t) {
      if (typeof t == "number")
        return t;
      if (typeof t == "string")
        return Number(t);
    }, n.EVENTS = [], n.PUBLIC_EVENTS = [], n.EXCLUDED_INTERNAL_EVENTS = [], n.STRING_PROPERTIES = Vt.STRING_PROPERTIES, n.OBJECT_PROPERTIES = Vt.OBJECT_PROPERTIES, n.ARRAY_PROPERTIES = Vt.ARRAY_PROPERTIES, n.NUMBER_PROPERTIES = Vt.NUMBER_PROPERTIES, n.BOOLEAN_PROPERTIES = Vt.BOOLEAN_PROPERTIES, n.FUNCTION_PROPERTIES = Vt.FUNCTION_PROPERTIES, n.ALL_PROPERTIES = Vt.ALL_PROPERTIES, n;
  }()
);
sr.EVENTS = Or(v);
sr.EXCLUDED_INTERNAL_EVENTS = [
  v.EVENT_SCROLLBAR_WIDTH_CHANGED,
  v.EVENT_CHECKBOX_CHANGED,
  v.EVENT_HEIGHT_SCALE_CHANGED,
  v.EVENT_BODY_HEIGHT_CHANGED,
  v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
  v.EVENT_SCROLL_VISIBILITY_CHANGED,
  v.EVENT_COLUMN_HOVER_CHANGED,
  v.EVENT_FLASH_CELLS,
  v.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
  v.EVENT_DISPLAYED_ROWS_CHANGED,
  v.EVENT_LEFT_PINNED_WIDTH_CHANGED,
  v.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
  v.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
  v.EVENT_POPUP_TO_FRONT,
  v.EVENT_KEYBOARD_FOCUS,
  v.EVENT_MOUSE_FOCUS,
  v.EVENT_STORE_UPDATED,
  v.EVENT_COLUMN_PANEL_ITEM_DRAG_START,
  v.EVENT_COLUMN_PANEL_ITEM_DRAG_END,
  v.EVENT_FILL_START,
  v.EVENT_FILL_END
];
sr.PUBLIC_EVENTS = sr.EVENTS.filter(function(n) {
  return !yt(sr.EXCLUDED_INTERNAL_EVENTS, n);
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Vh = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bh = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Xu = (
  /** @class */
  function(n) {
    Vh(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.componentsMappedByName = {}, e;
    }
    return t.prototype.setupComponents = function(e) {
      var r = this;
      e && e.forEach(function(o) {
        return r.addComponent(o);
      });
    }, t.prototype.addComponent = function(e) {
      var r = e.componentName.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), o = r.toUpperCase();
      this.componentsMappedByName[o] = e.componentClass;
    }, t.prototype.getComponentClass = function(e) {
      return this.componentsMappedByName[e];
    }, t = Bh([
      U("agStackComponentsRegistry")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jh = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Uh = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(jh(arguments[t]));
  return n;
}, bs = (
  /** @class */
  function() {
    function n() {
    }
    return n.STRING_PROPERTIES = [
      "headerName",
      "columnGroupShow",
      "headerClass",
      "toolPanelClass",
      "headerValueGetter",
      "pivotKeys",
      "groupId",
      "colId",
      "sort",
      "initialSort",
      "field",
      "type",
      "tooltipComponent",
      "tooltipField",
      "headerTooltip",
      "cellClass",
      "showRowGroup",
      "template",
      "templateUrl",
      "filter",
      "initialAggFunc",
      "aggFunc",
      "pinned",
      "initialPinned",
      "chartDataType",
      "cellEditorPopupPosition"
    ], n.OBJECT_PROPERTIES = [
      "headerGroupComponent",
      "headerGroupComponentFramework",
      "headerGroupComponentParams",
      "cellStyle",
      "cellRenderer",
      "cellRendererParams",
      "cellRendererFramework",
      "cellEditor",
      "cellEditorFramework",
      "cellEditorParams",
      "pinnedRowCellRendererFramework",
      "pinnedRowCellRendererParams",
      "filterFramework",
      "filterParams",
      "pivotValueColumn",
      "headerComponent",
      "headerComponentFramework",
      "headerComponentParams",
      "floatingFilterComponent",
      "floatingFilterComponentParams",
      "floatingFilterComponentFramework",
      "floatingFilterFramework",
      "tooltipComponent",
      "tooltipComponentParams",
      "tooltipComponentFramework",
      "refData",
      "columnsMenuParams"
    ], n.ARRAY_PROPERTIES = [
      "children",
      "sortingOrder",
      "allowedAggFuncs",
      "menuTabs",
      "pivotTotalColumnIds",
      "cellClassRules",
      "icons"
    ], n.NUMBER_PROPERTIES = [
      "sortedAt",
      "sortIndex",
      "initialSortIndex",
      "flex",
      "initialFlex",
      "width",
      "initialWidth",
      "minWidth",
      "maxWidth",
      "rowGroupIndex",
      "initialRowGroupIndex",
      "pivotIndex",
      "initialPivotIndex"
    ], n.BOOLEAN_PROPERTIES = [
      "suppressCellFlash",
      "suppressColumnsToolPanel",
      "suppressFiltersToolPanel",
      "openByDefault",
      "marryChildren",
      "hide",
      "initialHide",
      "rowGroup",
      "initialRowGroup",
      "pivot",
      "initialPivot",
      "checkboxSelection",
      "headerCheckboxSelection",
      "headerCheckboxSelectionFilteredOnly",
      "suppressMenu",
      "suppressMovable",
      "lockPosition",
      "lockVisible",
      "lockPinned",
      "unSortIcon",
      "suppressSizeToFit",
      "suppressAutoSize",
      "enableRowGroup",
      "enablePivot",
      "enableValue",
      "editable",
      "suppressPaste",
      "suppressNavigable",
      "enableCellChangeFlash",
      "rowDrag",
      "dndSource",
      "autoHeight",
      "wrapText",
      "sortable",
      "resizable",
      "singleClickEdit",
      "floatingFilter",
      "cellEditorPopup",
      "suppressFillHandle"
    ], n.FUNCTION_PROPERTIES = [
      "dndSourceOnRowDrag",
      "valueGetter",
      "valueSetter",
      "filterValueGetter",
      "keyCreator",
      "pinnedRowCellRenderer",
      "valueFormatter",
      "pinnedRowValueFormatter",
      "valueParser",
      "comparator",
      "equals",
      "pivotComparator",
      "suppressKeyboardEvent",
      "suppressHeaderKeyboardEvent",
      "colSpan",
      "rowSpan",
      "getQuickFilterText",
      "newValueHandler",
      "onCellValueChanged",
      "onCellClicked",
      "onCellDoubleClicked",
      "onCellContextMenu",
      "rowDragText",
      "tooltipValueGetter",
      "tooltipComponent",
      "tooltipComponentFramework",
      "cellRendererSelector",
      "cellEditorSelector"
    ], n.ALL_PROPERTIES = Uh(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.NUMBER_PROPERTIES, n.FUNCTION_PROPERTIES, n.BOOLEAN_PROPERTIES), n.FRAMEWORK_PROPERTIES = [
      "__ob__",
      "__v_skip",
      "__metadata__",
      "mappedColumnProperties",
      "hasChildColumns",
      "toColDef",
      "createColDefFromGridColumn"
    ], n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var _l = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Br = (
  /** @class */
  function() {
    function n(t, e, r, o) {
      o === void 0 && (o = 1), this.r = Math.min(1, Math.max(0, t || 0)), this.g = Math.min(1, Math.max(0, e || 0)), this.b = Math.min(1, Math.max(0, r || 0)), this.a = Math.min(1, Math.max(0, o || 0));
    }
    return n.fromString = function(t) {
      if (t.indexOf("#") >= 0)
        return n.fromHexString(t);
      var e = n.nameToHex[t];
      if (e)
        return n.fromHexString(e);
      if (t.indexOf("rgb") >= 0)
        return n.fromRgbaString(t);
      throw new Error("Invalid color string: '" + t + "'");
    }, n.parseHex = function(t) {
      t = t.replace(/ /g, "").slice(1);
      var e;
      switch (t.length) {
        case 6:
        case 8:
          e = [];
          for (var r = 0; r < t.length; r += 2)
            e.push(parseInt("" + t[r] + t[r + 1], 16));
          break;
        case 3:
        case 4:
          e = t.split("").map(function(o) {
            return parseInt(o, 16);
          }).map(function(o) {
            return o + o * 16;
          });
          break;
      }
      if (e.length >= 3 && e.every(function(o) {
        return o >= 0;
      }))
        return e.length === 3 && e.push(255), e;
    }, n.fromHexString = function(t) {
      var e = n.parseHex(t);
      if (e) {
        var r = _l(e, 4), o = r[0], i = r[1], s = r[2], a = r[3];
        return new n(o / 255, i / 255, s / 255, a / 255);
      }
      throw new Error("Malformed hexadecimal color string: '" + t + "'");
    }, n.stringToRgba = function(t) {
      for (var e = _l([NaN, NaN], 2), r = e[0], o = e[1], i = 0; i < t.length; i++) {
        var s = t[i];
        if (!r && s === "(")
          r = i;
        else if (s === ")") {
          o = i;
          break;
        }
      }
      var a = r && o && t.substring(r + 1, o);
      if (a) {
        for (var l = a.split(","), u = [], i = 0; i < l.length; i++) {
          var p = l[i], c = parseFloat(p);
          if (isNaN(c))
            return;
          p.indexOf("%") >= 0 ? (c = Math.max(0, Math.min(100, c)), c /= 100) : i === 3 ? c = Math.max(0, Math.min(1, c)) : (c = Math.max(0, Math.min(255, c)), c /= 255), u.push(c);
        }
        return u;
      }
    }, n.fromRgbaString = function(t) {
      var e = n.stringToRgba(t);
      if (e) {
        if (e.length === 3)
          return new n(e[0], e[1], e[2]);
        if (e.length === 4)
          return new n(e[0], e[1], e[2], e[3]);
      }
      throw new Error("Malformed rgb/rgba color string: '" + t + "'");
    }, n.fromArray = function(t) {
      if (t.length === 4)
        return new n(t[0], t[1], t[2], t[3]);
      if (t.length === 3)
        return new n(t[0], t[1], t[2]);
      throw new Error("The given array should contain 3 or 4 color components (numbers).");
    }, n.fromHSB = function(t, e, r, o) {
      o === void 0 && (o = 1);
      var i = n.HSBtoRGB(t, e, r);
      return new n(i[0], i[1], i[2], o);
    }, n.padHex = function(t) {
      return t.length === 1 ? "0" + t : t;
    }, n.prototype.toHexString = function() {
      var t = "#" + n.padHex(Math.round(this.r * 255).toString(16)) + n.padHex(Math.round(this.g * 255).toString(16)) + n.padHex(Math.round(this.b * 255).toString(16));
      return this.a < 1 && (t += n.padHex(Math.round(this.a * 255).toString(16))), t;
    }, n.prototype.toRgbaString = function(t) {
      t === void 0 && (t = 3);
      var e = [
        Math.round(this.r * 255),
        Math.round(this.g * 255),
        Math.round(this.b * 255)
      ], r = Math.pow(10, t);
      return this.a !== 1 ? (e.push(Math.round(this.a * r) / r), "rgba(" + e.join(", ") + ")") : "rgb(" + e.join(", ") + ")";
    }, n.prototype.toString = function() {
      return this.a === 1 ? this.toHexString() : this.toRgbaString();
    }, n.prototype.toHSB = function() {
      return n.RGBtoHSB(this.r, this.g, this.b);
    }, n.RGBtoHSB = function(t, e, r) {
      var o = Math.min(t, e, r), i = Math.max(t, e, r), s = i !== 0 ? (i - o) / i : 0, a = NaN;
      if (o !== i) {
        var l = i - o, u = (i - t) / l, p = (i - e) / l, c = (i - r) / l;
        t === i ? a = c - p : e === i ? a = 2 + u - c : a = 4 + p - u, a /= 6, a < 0 && (a = a + 1);
      }
      return [a * 360, s, i];
    }, n.HSBtoRGB = function(t, e, r) {
      isNaN(t) && (t = 0), t = (t % 360 + 360) % 360 / 360;
      var o = 0, i = 0, s = 0;
      if (e === 0)
        o = i = s = r;
      else {
        var a = (t - Math.floor(t)) * 6, l = a - Math.floor(a), u = r * (1 - e), p = r * (1 - e * l), c = r * (1 - e * (1 - l));
        switch (a >> 0) {
          case 0:
            o = r, i = c, s = u;
            break;
          case 1:
            o = p, i = r, s = u;
            break;
          case 2:
            o = u, i = r, s = c;
            break;
          case 3:
            o = u, i = p, s = r;
            break;
          case 4:
            o = c, i = u, s = r;
            break;
          case 5:
            o = r, i = u, s = p;
            break;
        }
      }
      return [o, i, s];
    }, n.prototype.derive = function(t, e, r, o) {
      var i = n.RGBtoHSB(this.r, this.g, this.b), s = i[2];
      s == 0 && r > 1 && (s = 0.05);
      var a = ((i[0] + t) % 360 + 360) % 360, l = Math.max(Math.min(i[1] * e, 1), 0);
      s = Math.max(Math.min(s * r, 1), 0);
      var u = Math.max(Math.min(this.a * o, 1), 0), p = n.HSBtoRGB(a, l, s);
      return p.push(u), n.fromArray(p);
    }, n.prototype.brighter = function() {
      return this.derive(0, 1, 1 / 0.7, 1);
    }, n.prototype.darker = function() {
      return this.derive(0, 1, 0.7, 1);
    }, n.nameToHex = Object.freeze({
      aliceblue: "#F0F8FF",
      antiquewhite: "#FAEBD7",
      aqua: "#00FFFF",
      aquamarine: "#7FFFD4",
      azure: "#F0FFFF",
      beige: "#F5F5DC",
      bisque: "#FFE4C4",
      black: "#000000",
      blanchedalmond: "#FFEBCD",
      blue: "#0000FF",
      blueviolet: "#8A2BE2",
      brown: "#A52A2A",
      burlywood: "#DEB887",
      cadetblue: "#5F9EA0",
      chartreuse: "#7FFF00",
      chocolate: "#D2691E",
      coral: "#FF7F50",
      cornflowerblue: "#6495ED",
      cornsilk: "#FFF8DC",
      crimson: "#DC143C",
      cyan: "#00FFFF",
      darkblue: "#00008B",
      darkcyan: "#008B8B",
      darkgoldenrod: "#B8860B",
      darkgray: "#A9A9A9",
      darkgreen: "#006400",
      darkgrey: "#A9A9A9",
      darkkhaki: "#BDB76B",
      darkmagenta: "#8B008B",
      darkolivegreen: "#556B2F",
      darkorange: "#FF8C00",
      darkorchid: "#9932CC",
      darkred: "#8B0000",
      darksalmon: "#E9967A",
      darkseagreen: "#8FBC8F",
      darkslateblue: "#483D8B",
      darkslategray: "#2F4F4F",
      darkslategrey: "#2F4F4F",
      darkturquoise: "#00CED1",
      darkviolet: "#9400D3",
      deeppink: "#FF1493",
      deepskyblue: "#00BFFF",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1E90FF",
      firebrick: "#B22222",
      floralwhite: "#FFFAF0",
      forestgreen: "#228B22",
      fuchsia: "#FF00FF",
      gainsboro: "#DCDCDC",
      ghostwhite: "#F8F8FF",
      gold: "#FFD700",
      goldenrod: "#DAA520",
      gray: "#808080",
      green: "#008000",
      greenyellow: "#ADFF2F",
      grey: "#808080",
      honeydew: "#F0FFF0",
      hotpink: "#FF69B4",
      indianred: "#CD5C5C",
      indigo: "#4B0082",
      ivory: "#FFFFF0",
      khaki: "#F0E68C",
      lavender: "#E6E6FA",
      lavenderblush: "#FFF0F5",
      lawngreen: "#7CFC00",
      lemonchiffon: "#FFFACD",
      lightblue: "#ADD8E6",
      lightcoral: "#F08080",
      lightcyan: "#E0FFFF",
      lightgoldenrodyellow: "#FAFAD2",
      lightgray: "#D3D3D3",
      lightgreen: "#90EE90",
      lightgrey: "#D3D3D3",
      lightpink: "#FFB6C1",
      lightsalmon: "#FFA07A",
      lightseagreen: "#20B2AA",
      lightskyblue: "#87CEFA",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#B0C4DE",
      lightyellow: "#FFFFE0",
      lime: "#00FF00",
      limegreen: "#32CD32",
      linen: "#FAF0E6",
      magenta: "#FF00FF",
      maroon: "#800000",
      mediumaquamarine: "#66CDAA",
      mediumblue: "#0000CD",
      mediumorchid: "#BA55D3",
      mediumpurple: "#9370DB",
      mediumseagreen: "#3CB371",
      mediumslateblue: "#7B68EE",
      mediumspringgreen: "#00FA9A",
      mediumturquoise: "#48D1CC",
      mediumvioletred: "#C71585",
      midnightblue: "#191970",
      mintcream: "#F5FFFA",
      mistyrose: "#FFE4E1",
      moccasin: "#FFE4B5",
      navajowhite: "#FFDEAD",
      navy: "#000080",
      oldlace: "#FDF5E6",
      olive: "#808000",
      olivedrab: "#6B8E23",
      orange: "#FFA500",
      orangered: "#FF4500",
      orchid: "#DA70D6",
      palegoldenrod: "#EEE8AA",
      palegreen: "#98FB98",
      paleturquoise: "#AFEEEE",
      palevioletred: "#DB7093",
      papayawhip: "#FFEFD5",
      peachpuff: "#FFDAB9",
      peru: "#CD853F",
      pink: "#FFC0CB",
      plum: "#DDA0DD",
      powderblue: "#B0E0E6",
      purple: "#800080",
      rebeccapurple: "#663399",
      red: "#FF0000",
      rosybrown: "#BC8F8F",
      royalblue: "#4169E1",
      saddlebrown: "#8B4513",
      salmon: "#FA8072",
      sandybrown: "#F4A460",
      seagreen: "#2E8B57",
      seashell: "#FFF5EE",
      sienna: "#A0522D",
      silver: "#C0C0C0",
      skyblue: "#87CEEB",
      slateblue: "#6A5ACD",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#FFFAFA",
      springgreen: "#00FF7F",
      steelblue: "#4682B4",
      tan: "#D2B48C",
      teal: "#008080",
      thistle: "#D8BFD8",
      tomato: "#FF6347",
      turquoise: "#40E0D0",
      violet: "#EE82EE",
      wheat: "#F5DEB3",
      white: "#FFFFFF",
      whitesmoke: "#F5F5F5",
      yellow: "#FFFF00",
      yellowgreen: "#9ACD32"
    }), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Qu(n, t) {
  t === void 0 && (t = ",");
  var e = [], r = function(d) {
    return d === "\r" || d === `
`;
  }, o = !1;
  if (n === "")
    return [[""]];
  for (var i = function(d, f, g) {
    var y = n[g - 1], C = n[g], m = n[g + 1], _ = function() {
      e[d] || (e[d] = []), e[d][f] || (e[d][f] = "");
    };
    if (_(), C === '"') {
      if (o)
        return m === '"' ? (e[d][f] += '"', g++) : o = !1, s = d, a = f, l = g, "continue";
      if (y === void 0 || y === t || r(y))
        return o = !0, s = d, a = f, l = g, "continue";
    }
    if (!o) {
      if (C === t)
        return f++, _(), s = d, a = f, l = g, "continue";
      if (r(C))
        return f = 0, d++, _(), C === "\r" && m === `
` && g++, s = d, a = f, l = g, "continue";
    }
    e[d][f] += C, s = d, a = f, l = g;
  }, s, a, l, u = 0, p = 0, c = 0; c < n.length; c++)
    i(u, p, c), u = s, p = a, c = l;
  return e;
}
const kh = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  stringToArray: Qu
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zh = globalThis && globalThis.__values || function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Di, Ai, Fi, Ii, Mi, Li, Ds, As;
function $h() {
  return Ai === void 0 && (Ai = /*@cc_on!@*/
  !!document.documentMode), Ai;
}
function ei() {
  return Fi === void 0 && (Fi = !$h() && !!window.StyleMedia), Fi;
}
function ti() {
  return Di === void 0 && (Di = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)), Di;
}
function jo() {
  if (Ii === void 0) {
    var n = window;
    Ii = !!n.chrome && (!!n.chrome.webstore || !!n.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
  }
  return Ii;
}
function na() {
  if (Mi === void 0) {
    var n = window;
    Mi = typeof n.InstallTrigger < "u";
  }
  return Mi;
}
function ro() {
  return Li === void 0 && (Li = (/iPad|iPhone|iPod/.test(navigator.platform) || // eslint-disable-next-line
  navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && // @ts-ignore
  !window.MSStream), Li;
}
function Hn(n) {
  if (!n)
    return null;
  var t = n.tabIndex, e = n.getAttribute("tabIndex");
  return t === -1 && (e === null || e === "" && !na()) ? null : t.toString();
}
function Ju() {
  if (!document.body)
    return -1;
  var n = 1e6, t = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9, e = document.createElement("div");
  for (document.body.appendChild(e); ; ) {
    var r = n * 2;
    if (e.style.height = r + "px", r > t || e.clientHeight !== r)
      break;
    n = r;
  }
  return document.body.removeChild(e), n;
}
function Zu() {
  return As == null && ep(), As;
}
function ep() {
  var n = document.body, t = document.createElement("div");
  t.style.width = t.style.height = "100px", t.style.opacity = "0", t.style.overflow = "scroll", t.style.msOverflowStyle = "scrollbar", t.style.position = "absolute", n.appendChild(t);
  var e = t.offsetWidth - t.clientWidth;
  e === 0 && t.clientWidth === 0 && (e = null), t.parentNode && t.parentNode.removeChild(t), e != null && (As = e, Ds = e === 0);
}
function tp() {
  return Ds == null && ep(), Ds;
}
function Kh() {
  var n, t, e = ["webkit", "moz", "o", "ms"], r = document.createElement("div"), o = document.getElementsByTagName("body")[0], i = !1, s;
  o.appendChild(r), r.setAttribute("style", e.map(function(p) {
    return "-" + p + "-overflow-scrolling: touch";
  }).concat("overflow-scrolling: touch").join(";"));
  var a = window.getComputedStyle(r);
  if (a.overflowScrolling === "touch" && (i = !0), !i)
    try {
      for (var l = zh(e), u = l.next(); !u.done; u = l.next())
        if (s = u.value, a[s + "OverflowScrolling"] === "touch") {
          i = !0;
          break;
        }
    } catch (p) {
      n = { error: p };
    } finally {
      try {
        u && !u.done && (t = l.return) && t.call(l);
      } finally {
        if (n)
          throw n.error;
      }
    }
  return r.parentNode && r.parentNode.removeChild(r), i;
}
function rp() {
  return document.body ? document.body.clientWidth : window.innerHeight ? window.innerWidth : document.documentElement && document.documentElement.clientWidth ? document.documentElement.clientWidth : -1;
}
function op() {
  return document.body ? document.body.clientHeight : window.innerHeight ? window.innerHeight : document.documentElement && document.documentElement.clientHeight ? document.documentElement.clientHeight : -1;
}
const Yh = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  getBodyHeight: op,
  getBodyWidth: rp,
  getMaxDivHeight: Ju,
  getScrollbarWidth: Zu,
  getTabIndex: Hn,
  hasOverflowScrolling: Kh,
  isBrowserChrome: jo,
  isBrowserEdge: ei,
  isBrowserFirefox: na,
  isBrowserSafari: ti,
  isIOSUserAgent: ro,
  isInvisibleScrollbar: tp
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Zo;
function qh(n, t, e) {
  for (var r = n.parentElement, o = r && r.firstChild; o; )
    t && o.classList.toggle(t, o === n), e && o.classList.toggle(e, o !== n), o = o.nextSibling;
}
function np(n) {
  var t = Element.prototype.matches || Element.prototype.msMatchesSelector, e = t.call(n, w.INPUT_SELECTOR), r = t.call(n, w.FOCUSABLE_EXCLUDE), o = no(n), i = e && !r && o;
  return i;
}
function Ee(n, t) {
  n.classList.toggle("ag-hidden", !t);
}
function ip(n, t) {
  n.classList.toggle("ag-invisible", !t);
}
function Jr(n, t) {
  var e = "disabled", r = t ? function(o) {
    return o.setAttribute(e, "");
  } : function(o) {
    return o.removeAttribute(e);
  };
  r(n), pa(n.querySelectorAll("input"), function(o) {
    return r(o);
  });
}
function ri(n, t, e) {
  for (var r = 0; n; ) {
    if (n.classList.contains(t))
      return !0;
    if (n = n.parentElement, e && ++r > e)
      break;
  }
  return !1;
}
function oo(n) {
  var t = window.getComputedStyle(n), e = t.height, r = t.width, o = t.paddingTop, i = t.paddingRight, s = t.paddingBottom, a = t.paddingLeft, l = t.marginTop, u = t.marginRight, p = t.marginBottom, c = t.marginLeft, d = t.boxSizing;
  return {
    height: parseFloat(e),
    width: parseFloat(r),
    paddingTop: parseFloat(o),
    paddingRight: parseFloat(i),
    paddingBottom: parseFloat(s),
    paddingLeft: parseFloat(a),
    marginTop: parseFloat(l),
    marginRight: parseFloat(u),
    marginBottom: parseFloat(p),
    marginLeft: parseFloat(c),
    boxSizing: d
  };
}
function Uo(n) {
  var t = oo(n);
  return t.boxSizing === "border-box" ? t.height - t.paddingTop - t.paddingBottom : t.height;
}
function oi(n) {
  var t = oo(n);
  return t.boxSizing === "border-box" ? t.width - t.paddingLeft - t.paddingRight : t.width;
}
function ia(n) {
  var t = oo(n), e = t.marginBottom + t.marginTop;
  return Math.ceil(n.offsetHeight + e);
}
function ni(n) {
  var t = oo(n), e = t.marginLeft + t.marginRight;
  return Math.ceil(n.offsetWidth + e);
}
function Ho() {
  if (typeof Zo == "boolean")
    return Zo;
  var n = document.createElement("div");
  return n.style.direction = "rtl", n.style.width = "1px", n.style.height = "1px", n.style.position = "fixed", n.style.top = "0px", n.style.overflow = "hidden", n.dir = "rtl", n.innerHTML = /* html */
  `<div style="width: 2px">
            <span style="display: inline-block; width: 1px"></span>
            <span style="display: inline-block; width: 1px"></span>
        </div>`, document.body.appendChild(n), n.scrollLeft = 1, Zo = Math.floor(n.scrollLeft) === 0, document.body.removeChild(n), Zo;
}
function Wo(n, t) {
  var e = n.scrollLeft;
  return t && (e = Math.abs(e), jo() && !Ho() && (e = n.scrollWidth - n.clientWidth - e)), e;
}
function Wn(n, t, e) {
  e && (Ho() ? t *= -1 : (ti() || jo()) && (t = n.scrollWidth - n.clientWidth - t)), n.scrollLeft = t;
}
function Ct(n) {
  for (; n && n.firstChild; )
    n.removeChild(n.firstChild);
}
function Xh(n, t) {
  Mt(n.querySelector(t));
}
function Mt(n) {
  n && n.parentNode && n.parentNode.removeChild(n);
}
function no(n) {
  return n.offsetParent !== null;
}
function Ue(n) {
  if (DOMParser !== null) {
    var t = new DOMParser(), e = t.parseFromString(n, "text/html");
    return e.body.firstChild;
  }
  var r = document.createElement("div");
  return r.innerHTML = (n || "").trim(), r.firstChild;
}
function Qh(n, t) {
  n.lastChild ? n.insertAdjacentHTML("afterbegin", t) : n.innerHTML = t;
}
function Jh(n, t) {
  if (n.attributes && n.attributes[t]) {
    var e = n.attributes[t];
    return e.value;
  }
  return null;
}
function Fs(n) {
  return n && n.clientHeight ? n.clientHeight : 0;
}
function Is(n) {
  return n && n.clientWidth ? n.clientWidth : 0;
}
function sa(n, t, e) {
  e && e.nextSibling === t || (e ? e.nextSibling ? n.insertBefore(t, e.nextSibling) : n.appendChild(t) : n.firstChild && n.firstChild !== t && n.insertAdjacentElement("afterbegin", t));
}
function aa(n, t) {
  for (var e = 0; e < t.length; e++) {
    var r = t[e], o = n.children[e];
    o !== r && n.insertBefore(r, o);
  }
}
function sp(n, t, e) {
  e ? e.insertAdjacentElement("afterend", t) : n.firstChild ? n.insertAdjacentElement("afterbegin", t) : n.appendChild(t);
}
function Zh(n, t) {
  O(n.firstChild) ? n.insertBefore(t, n.firstChild) : n.appendChild(t);
}
function la(n, t) {
  t && Object.keys(t).forEach(function(e) {
    var r = $u(e);
    r && (n.style[r] = t[e]);
  });
}
function Ms(n) {
  return n.clientWidth < n.scrollWidth;
}
function ap(n) {
  return n.clientHeight < n.scrollHeight;
}
function ko(n, t) {
  t === "flex" ? (n.style.removeProperty("width"), n.style.removeProperty("minWidth"), n.style.removeProperty("maxWidth"), n.style.flex = "1 1 auto") : zt(n, t);
}
function zt(n, t) {
  t = ua(t), n.style.width = t.toString(), n.style.maxWidth = t.toString(), n.style.minWidth = t.toString();
}
function ef(n, t) {
  t === "flex" ? (n.style.removeProperty("height"), n.style.removeProperty("minHeight"), n.style.removeProperty("maxHeight"), n.style.flex = "1 1 auto") : wr(n, t);
}
function wr(n, t) {
  t = ua(t), n.style.height = t.toString(), n.style.maxHeight = t.toString(), n.style.minHeight = t.toString();
}
function ua(n) {
  return typeof n == "number" ? n + "px" : n;
}
function lp(n) {
  return typeof Node == "function" ? n instanceof Node : n && typeof n == "object" && typeof n.nodeType == "number" && typeof n.nodeName == "string";
}
function up(n) {
  return typeof HTMLElement == "function" ? n instanceof HTMLElement : n && Xr(n) && n.nodeType === 1 && typeof n.nodeName == "string";
}
function zo(n) {
  return lp(n) || up(n);
}
function pp(n) {
  if (n == null)
    return [];
  var t = [];
  return pa(n, function(e) {
    return t.push(e);
  }), t;
}
function cp(n, t) {
  if (n)
    for (var e = 0; e < n.length; e++) {
      var r = n[e];
      t(r.name, r.value);
    }
}
function tf(n, t) {
  typeof t == "boolean" ? (n.checked = t, n.indeterminate = !1) : n.indeterminate = !0;
}
function Go(n, t, e) {
  e == null ? n.removeAttribute(t) : n.setAttribute(t, e.toString());
}
function pa(n, t) {
  if (n != null)
    for (var e = 0; e < n.length; e++)
      t(n[e]);
}
const rf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  addOrRemoveAttribute: Go,
  addStylesToElement: la,
  appendHtml: Qh,
  clearElement: Ct,
  copyNodeList: pp,
  ensureDomOrder: sa,
  formatSize: ua,
  getAbsoluteHeight: ia,
  getAbsoluteWidth: ni,
  getElementAttribute: Jh,
  getElementSize: oo,
  getInnerHeight: Uo,
  getInnerWidth: oi,
  getScrollLeft: Wo,
  insertWithDomOrder: sp,
  isElement: up,
  isElementChildOfClass: ri,
  isFocusableFormField: np,
  isHorizontalScrollShowing: Ms,
  isNode: lp,
  isNodeOrElement: zo,
  isRtlNegativeScroll: Ho,
  isVerticalScrollShowing: ap,
  isVisible: no,
  iterateNamedNodeMap: cp,
  loadTemplate: Ue,
  nodeListForEach: pa,
  offsetHeight: Fs,
  offsetWidth: Is,
  prependDC: Zh,
  radioCssClass: qh,
  removeElement: Xh,
  removeFromParent: Mt,
  setCheckboxState: tf,
  setDisabled: Jr,
  setDisplayed: Ee,
  setDomChildOrder: aa,
  setElementHeight: ef,
  setElementWidth: ko,
  setFixedHeight: wr,
  setFixedWidth: zt,
  setScrollLeft: Wn,
  setVisible: ip
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function of(n) {
  var t = /function (.{1,})\(/, e = n.toString(), r = t.exec(e);
  return r && r.length > 1 ? r[1] : "";
}
function nf(n) {
  var t = n.length, e = 0;
  if (t <= 1)
    return n;
  for (var r = 0; r < n.length; r++) {
    var o = n[r], i = o.toString().split("e-");
    if (i.length > 1) {
      e = Math.max(e, parseInt(i[1], 10));
      continue;
    }
    Math.floor(o) !== o && (e = Math.max(e, o.toString().split(".")[1].length));
  }
  for (var s = 0, a = 0, l = 0, u = 0, p = 0, c = 0; c < t; c++)
    p = n[c], s += c, a += p, u += c * c, l += c * p;
  for (var d = (t * l - s * a) / (t * u - s * s), f = a / t - d * s / t, g = [], c = 0; c <= t; c++)
    g.push(parseFloat((c * d + f).toFixed(e)));
  return g;
}
function sf(n) {
  if (!n)
    return "";
  var t = [];
  return ge(n, function(e, r) {
    var o = zu(e);
    t.push(o + ": " + r + ";");
  }), t.join(" ");
}
function af(n) {
  var t = document.createElement("div"), e = document.querySelector("#__ag__message");
  if (t.innerHTML = n, !e) {
    var r = '<div id="__ag__message" style="display: inline-block; position: absolute; top: 0px; left: 0px; color: white; background-color: black; z-index: 20; padding: 2px; border: 1px solid darkred; height: 200px; overflow-y: auto;"></div>';
    e = Ue(r), document.body && document.body.appendChild(e);
  }
  e.insertBefore(t, e.children[0]);
}
function lf(n, t) {
  n.then(function(e) {
    var r = e.getGui();
    r != null && (typeof r == "object" ? t.appendChild(r) : t.innerHTML = r);
  });
}
const uf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bindCellRendererToHtmlElement: lf,
  cssStyleObjectToMarkup: sf,
  findLineByLeastSquares: nf,
  getNameOfClass: of,
  message: af
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function ze(n, t, e) {
  n.setAttribute(dp(t), e.toString());
}
function io(n, t) {
  n.removeAttribute(dp(t));
}
function dp(n) {
  return "aria-" + n;
}
function rt(n, t) {
  t ? n.setAttribute("role", t) : n.removeAttribute("role");
}
function hp(n) {
  var t;
  return n.isSortAscending() ? t = "ascending" : n.isSortDescending() ? t = "descending" : t = "none", t;
}
function fp(n) {
  return parseInt(n.getAttribute("aria-level"), 10);
}
function gp(n) {
  return parseInt(n.getAttribute("aria-posinset"), 10);
}
function pf(n) {
  return n.getAttribute("aria-describedby") || "";
}
function Tr(n, t) {
  var e = "label";
  t ? ze(n, e, t) : io(n, e);
}
function ca(n, t) {
  var e = "labelledby";
  t ? ze(n, e, t) : io(n, e);
}
function ii(n, t) {
  var e = "describedby";
  t ? ze(n, e, t) : io(n, e);
}
function vp(n, t) {
  ze(n, "level", t);
}
function kr(n, t) {
  ze(n, "disabled", t);
}
function vt(n, t) {
  ze(n, "expanded", t);
}
function cf(n) {
  io(n, "expanded");
}
function da(n, t) {
  ze(n, "setsize", t);
}
function ha(n, t) {
  ze(n, "posinset", t);
}
function yp(n, t) {
  ze(n, "multiselectable", t);
}
function Cp(n, t) {
  ze(n, "rowcount", t);
}
function fa(n, t) {
  ze(n, "rowindex", t);
}
function mp(n, t) {
  ze(n, "colcount", t);
}
function ga(n, t) {
  ze(n, "colindex", t);
}
function _p(n, t) {
  ze(n, "colspan", t);
}
function wp(n, t) {
  ze(n, "sort", t);
}
function Ep(n) {
  io(n, "sort");
}
function Zr(n, t) {
  var e = "selected";
  t ? ze(n, e, t) : io(n, e);
}
function Rp(n, t) {
  ze(n, "checked", t === void 0 ? "mixed" : t);
}
const df = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  getAriaDescribedBy: pf,
  getAriaLevel: fp,
  getAriaPosInSet: gp,
  getAriaSortState: hp,
  removeAriaExpanded: cf,
  removeAriaSort: Ep,
  setAriaChecked: Rp,
  setAriaColCount: mp,
  setAriaColIndex: ga,
  setAriaColSpan: _p,
  setAriaDescribedBy: ii,
  setAriaDisabled: kr,
  setAriaExpanded: vt,
  setAriaLabel: Tr,
  setAriaLabelledBy: ca,
  setAriaLevel: vp,
  setAriaMultiSelectable: yp,
  setAriaPosInSet: ha,
  setAriaRole: rt,
  setAriaRowCount: Cp,
  setAriaRowIndex: fa,
  setAriaSelected: Zr,
  setAriaSetSize: da,
  setAriaSort: wp
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Ls(n, t) {
  return n.toString().padStart(t, "0");
}
function Sp(n, t) {
  for (var e = [], r = n; r <= t; r++)
    e.push(r);
  return e;
}
function Vn(n) {
  return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
}
function hf(n) {
  return typeof n == "string" && (n = parseInt(n, 10)), typeof n == "number" ? Math.floor(n) : null;
}
function ff(n, t) {
  for (var e = "", r = 0; r < t; r++)
    e += String.fromCharCode(n & 255), n >>>= 8;
  return e;
}
function gf(n, t, e) {
  return typeof n != "number" ? "" : va(Math.round(n * 100) / 100, t, e);
}
function va(n, t, e) {
  return typeof n != "number" ? "" : n.toString().replace(".", e).replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + t);
}
function vf(n) {
  return n == null ? null : n.reduce(function(t, e) {
    return t + e;
  }, 0);
}
const yf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  cleanNumber: hf,
  createArrayOfNumbers: Sp,
  decToHex: ff,
  formatNumberCommas: va,
  formatNumberTwoDecimalPlacesAndCommas: gf,
  isNumeric: Vn,
  padStartWidthZeros: Ls,
  sum: vf
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Gi = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
};
function nr(n, t, e) {
  if (t === void 0 && (t = !0), e === void 0 && (e = "-"), !n)
    return null;
  var r = [n.getFullYear(), n.getMonth() + 1, n.getDate()].map(function(o) {
    return Ls(o, 2);
  }).join(e);
  return t && (r += " " + [n.getHours(), n.getMinutes(), n.getSeconds()].map(function(o) {
    return Ls(o, 2);
  }).join(":")), r;
}
function ir(n) {
  if (!n)
    return null;
  var t = Gi(n.split(" "), 2), e = t[0], r = t[1];
  if (!e)
    return null;
  var o = e.split("-").map(function(g) {
    return parseInt(g, 10);
  });
  if (o.filter(function(g) {
    return !isNaN(g);
  }).length !== 3)
    return null;
  var i = Gi(o, 3), s = i[0], a = i[1], l = i[2], u = new Date(s, a - 1, l);
  if (u.getFullYear() !== s || u.getMonth() !== a - 1 || u.getDate() !== l)
    return null;
  if (!r || r === "00:00:00")
    return u;
  var p = Gi(r.split(":").map(function(g) {
    return parseInt(g, 10);
  }), 3), c = p[0], d = p[1], f = p[2];
  return c >= 0 && c < 24 && u.setHours(c), d >= 0 && d < 60 && u.setMinutes(d), f >= 0 && f < 60 && u.setSeconds(f), u;
}
const Cf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  parseDateTimeFromString: ir,
  serialiseDate: nr
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Op(n, t, e) {
  var r = {}, o = n.filter(function(i) {
    return !t.some(function(s) {
      return s === i;
    });
  });
  return o.length > 0 && o.forEach(function(i) {
    return r[i] = Tp(i, e);
  }), r;
}
function Tp(n, t, e, r) {
  var o = r ? bp : Pp, i = t.map(function(s) {
    return {
      value: s,
      relevance: o(n.toLowerCase(), s.toLocaleLowerCase())
    };
  });
  return i.sort(function(s, a) {
    return a.relevance - s.relevance;
  }), e && (i = i.filter(function(s) {
    return s.relevance !== 0;
  })), i.map(function(s) {
    return s.value;
  });
}
function Gs(n) {
  var t = n.toLowerCase(), e = new Array(t.length - 1), r, o, i;
  for (r = o = 0, i = e.length; o <= i; r = o += 1)
    e[r] = t.slice(r, r + 2);
  return e;
}
function Pp(n, t) {
  if (n.length === 0 && t.length === 0)
    return 0;
  var e = Gs(n), r = Gs(t), o = e.length + r.length, i = 0, s, a;
  for (s = 0, a = e.length; s < a; s++) {
    var l = e[s], u = void 0, p = void 0;
    for (u = 0, p = r.length; u < p; u++) {
      var c = r[u];
      l === c && i++;
    }
  }
  return i > 0 ? 2 * i / o : 0;
}
function bp(n, t) {
  for (var e = n.replace(/\s/g, ""), r = t.replace(/\s/g, ""), o = 0, i = 0, s = 0; s < e.length; s++) {
    var a = r.indexOf(e[s], i);
    a !== -1 && (i = a, o += 100 - i * 100 / 1e4 * 100);
  }
  return o;
}
const mf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  fuzzyCheckStrings: Op,
  fuzzySuggestions: Tp,
  get_bigrams: Gs,
  string_distances: Pp,
  string_weighted_distances: bp
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Dp = {
  // header column group shown when expanded (click to contract)
  columnGroupOpened: "expanded",
  // header column group shown when contracted (click to expand)
  columnGroupClosed: "contracted",
  // tool panel column group contracted (click to expand)
  columnSelectClosed: "tree-closed",
  // tool panel column group expanded (click to contract)
  columnSelectOpen: "tree-open",
  // column tool panel header expand/collapse all button, shown when some children are expanded and
  //     others are collapsed
  columnSelectIndeterminate: "tree-indeterminate",
  // shown on ghost icon while dragging column to the side of the grid to pin
  columnMovePin: "pin",
  // shown on ghost icon while dragging over part of the page that is not a drop zone
  columnMoveHide: "eye-slash",
  // shown on ghost icon while dragging columns to reorder
  columnMoveMove: "arrows",
  // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling
  columnMoveLeft: "left",
  // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling
  columnMoveRight: "right",
  // shown on ghost icon while dragging over Row Groups drop zone
  columnMoveGroup: "group",
  // shown on ghost icon while dragging over Values drop zone
  columnMoveValue: "aggregation",
  // shown on ghost icon while dragging over pivot drop zone
  columnMovePivot: "pivot",
  // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.
  //     string column over aggregation drop zone
  dropNotAllowed: "not-allowed",
  // shown on row group when contracted (click to expand)
  groupContracted: "tree-closed",
  // shown on row group when expanded (click to contract)
  groupExpanded: "tree-open",
  // context menu chart item
  chart: "chart",
  // chart window title bar
  close: "cross",
  // X (remove) on column 'pill' after adding it to a drop zone list
  cancel: "cancel",
  // indicates the currently active pin state in the "Pin column" sub-menu of the column menu
  check: "tick",
  // "go to first" button in pagination controls
  first: "first",
  // "go to previous" button in pagination controls
  previous: "previous",
  // "go to next" button in pagination controls
  next: "next",
  // "go to last" button in pagination controls
  last: "last",
  // shown on top right of chart when chart is linked to range data (click to unlink)
  linked: "linked",
  // shown on top right of chart when chart is not linked to range data (click to link)
  unlinked: "unlinked",
  // "Choose colour" button on chart settings tab
  colorPicker: "color-picker",
  // rotating spinner shown by the loading cell renderer
  groupLoading: "loading",
  // button to launch enterprise column menu
  menu: "menu",
  // filter tool panel tab
  filter: "filter",
  // column tool panel tab
  columns: "columns",
  // button in chart regular size window title bar (click to maximise)
  maximize: "maximize",
  // button in chart maximised window title bar (click to make regular size)
  minimize: "minimize",
  // "Pin column" item in column header menu
  menuPin: "pin",
  // "Value aggregation" column menu item (shown on numeric columns when grouping is active)"
  menuValue: "aggregation",
  // "Group by {column-name}" item in column header menu
  menuAddRowGroup: "group",
  // "Un-Group by {column-name}" item in column header menu
  menuRemoveRowGroup: "group",
  // context menu copy item
  clipboardCopy: "copy",
  // context menu paste item
  clipboardPaste: "paste",
  // identifies the pivot drop zone
  pivotPanel: "pivot",
  // "Row groups" drop zone in column tool panel
  rowGroupPanel: "group",
  // columns tool panel Values drop zone
  valuePanel: "aggregation",
  // drag handle used to pick up draggable columns
  columnDrag: "grip",
  // drag handle used to pick up draggable rows
  rowDrag: "grip",
  // context menu export item
  save: "save",
  // csv export
  csvExport: "csv",
  // excel export,
  excelExport: "excel",
  // icon on dropdown editors
  smallDown: "small-down",
  // version of small-right used in RTL mode
  smallLeft: "small-left",
  // separater between column 'pills' when you add multiple columns to the header drop zone
  smallRight: "small-right",
  smallUp: "small-up",
  // show on column header when column is sorted ascending
  sortAscending: "asc",
  // show on column header when column is sorted descending
  sortDescending: "desc",
  // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true
  sortUnSort: "none"
};
function Ot(n, t, e) {
  var r = xe(n, t, e);
  if (r && r.className.indexOf("ag-icon") > -1)
    return r;
  var o = document.createElement("span");
  return o.appendChild(r), o;
}
function xe(n, t, e, r) {
  var o = null, i = e && e.getColDef().icons;
  if (i && (o = i[n]), t && !o) {
    var s = t.getIcons();
    s && (o = s[n]);
  }
  if (o) {
    var a = void 0;
    if (typeof o == "function")
      a = o();
    else if (typeof o == "string")
      a = o;
    else
      throw new Error("icon from grid options needs to be a string or a function");
    if (typeof a == "string")
      return Ue(a);
    if (zo(a))
      return a;
    console.warn("AG Grid: iconRenderer should return back a string or a dom object");
  } else {
    var l = document.createElement("span"), u = Dp[n];
    return u || (r ? u = n : (console.warn("AG Grid: Did not find icon " + n), u = "")), l.setAttribute("class", "ag-icon ag-icon-" + u), l.setAttribute("unselectable", "on"), rt(l, "presentation"), l;
  }
}
const _f = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createIcon: Ot,
  createIconNoSpan: xe,
  iconNameClassMap: Dp
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var wf = "Del", Ef = 46;
function Ap(n) {
  if (n.altKey || n.ctrlKey || n.metaKey)
    return !1;
  var t = n.key.length === 1, e = Rf(n);
  return t || e;
}
function Bn(n, t, e, r, o) {
  var i = n.getSuppressKeyboardEventFunc(), s = r ? r.getColDef().suppressKeyboardEvent : void 0;
  if (!i && !s)
    return !1;
  var a = {
    event: t,
    editing: o,
    column: r,
    api: n.getApi(),
    node: e,
    data: e.data,
    colDef: r.getColDef(),
    context: n.getContext(),
    columnApi: n.getColumnApi()
  };
  if (s) {
    var l = s(a);
    if (l)
      return !0;
  }
  return i ? i(a) : !1;
}
function Fp(n, t, e, r) {
  var o = r.getDefinition(), i = o && o.suppressHeaderKeyboardEvent;
  if (!O(i))
    return !1;
  var s = {
    api: n.getApi(),
    columnApi: n.getColumnApi(),
    context: n.getContext(),
    colDef: o,
    column: r,
    headerRowIndex: e,
    event: t
  };
  return !!i(s);
}
function Rf(n) {
  return ei() && n.key === wf && n.charCode === Ef;
}
const Sf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  isEventFromPrintableCharacter: Ap,
  isUserSuppressingHeaderKeyboardEvent: Fp,
  isUserSuppressingKeyboardEvent: Bn
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function ya(n, t, e) {
  if (e === 0)
    return !1;
  var r = Math.abs(n.clientX - t.clientX), o = Math.abs(n.clientY - t.clientY);
  return Math.max(r, o) <= e;
}
const Of = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  areEventsNear: ya
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Tf(n, t) {
  if (n) {
    for (var e = function(a, l) {
      var u = t[a.id], p = t[l.id], c = u !== void 0, d = p !== void 0, f = c && d, g = !c && !d;
      return f ? u - p : g ? a.__objectId - l.__objectId : c ? 1 : -1;
    }, r, o, i = !1, s = 0; s < n.length - 1; s++)
      if (r = n[s], o = n[s + 1], e(r, o) > 0) {
        i = !0;
        break;
      }
    i && n.sort(e);
  }
}
function Pf(n, t) {
  var e = [];
  r(n);
  function r(o) {
    o && o.forEach(function(i) {
      if (i.group || i.hasChildren()) {
        e.push(i.key);
        var s = e.join("|");
        t(i, s), r(i.childrenAfterGroup), e.pop();
      }
    });
  }
}
const bf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  sortRowNodesByOrder: Tf,
  traverseNodesWithKey: Pf
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Ca(n) {
  var t = /* @__PURE__ */ new Set();
  return n.forEach(function(e) {
    return t.add(e);
  }), t;
}
const Df = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  convertToSet: Ca
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var De = globalThis && globalThis.__assign || function() {
  return De = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, De.apply(this, arguments);
}, Af = De(De(De(De(De(De(De(De(De(De(De(De(De(De(De(De(De(De(De(De({}, uf), df), fh), Yh), kh), Cf), rf), _h), oh), mf), $d), _f), Sf), Dh), Of), yf), Jd), bf), Df), Th), se = Af;
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var si = (
  /** @class */
  function() {
    function n(t, e) {
      t === void 0 && (t = 0), e === void 0 && (e = 1), this.nextValue = t, this.step = e;
    }
    return n.prototype.next = function() {
      var t = this.nextValue;
      return this.nextValue += this.step, t;
    }, n.prototype.peek = function() {
      return this.nextValue;
    }, n.prototype.skip = function(t) {
      this.nextValue += t;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Cr;
(function(n) {
  n[n.IN_PROGRESS = 0] = "IN_PROGRESS", n[n.RESOLVED = 1] = "RESOLVED";
})(Cr || (Cr = {}));
var ut = (
  /** @class */
  function() {
    function n(t) {
      var e = this;
      this.status = Cr.IN_PROGRESS, this.resolution = null, this.waiters = [], t(function(r) {
        return e.onDone(r);
      }, function(r) {
        return e.onReject(r);
      });
    }
    return n.all = function(t) {
      return new n(function(e) {
        var r = t.length, o = new Array(r);
        t.forEach(function(i, s) {
          i.then(function(a) {
            o[s] = a, r--, r === 0 && e(o);
          });
        });
      });
    }, n.resolve = function(t) {
      return t === void 0 && (t = null), new n(function(e) {
        return e(t);
      });
    }, n.prototype.then = function(t) {
      var e = this;
      return new n(function(r) {
        e.status === Cr.RESOLVED ? r(t(e.resolution)) : e.waiters.push(function(o) {
          return r(t(o));
        });
      });
    }, n.prototype.resolveNow = function(t, e) {
      return this.status === Cr.RESOLVED ? e(this.resolution) : t;
    }, n.prototype.onDone = function(t) {
      this.status = Cr.RESOLVED, this.resolution = t, this.waiters.forEach(function(e) {
        return e(t);
      });
    }, n.prototype.onReject = function(t) {
      console.warn("TBI");
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ff = (
  /** @class */
  function() {
    function n() {
      this.timestamp = (/* @__PURE__ */ new Date()).getTime();
    }
    return n.prototype.print = function(t) {
      var e = (/* @__PURE__ */ new Date()).getTime() - this.timestamp;
      console.info(t + " = " + e), this.timestamp = (/* @__PURE__ */ new Date()).getTime();
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var If = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ns = globalThis && globalThis.__assign || function() {
  return Ns = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Ns.apply(this, arguments);
}, ho = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, At;
(function(n) {
  n[n.NOTHING = 0] = "NOTHING", n[n.WAITING_TO_SHOW = 1] = "WAITING_TO_SHOW", n[n.SHOWING = 2] = "SHOWING";
})(At || (At = {}));
var ai = (
  /** @class */
  function(n) {
    If(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.DEFAULT_SHOW_TOOLTIP_DELAY = 2e3, r.DEFAULT_HIDE_TOOLTIP_DELAY = 1e4, r.SHOW_QUICK_TOOLTIP_DIFF = 1e3, r.FADE_OUT_TOOLTIP_TIMEOUT = 1e3, r.state = At.NOTHING, r.tooltipInstanceCount = 0, r.tooltipMouseTrack = !1, r.parentComp = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.tooltipShowDelay = this.gridOptionsWrapper.getTooltipDelay("show") || this.DEFAULT_SHOW_TOOLTIP_DELAY, this.tooltipHideDelay = this.gridOptionsWrapper.getTooltipDelay("hide") || this.DEFAULT_HIDE_TOOLTIP_DELAY, this.tooltipMouseTrack = this.gridOptionsWrapper.isTooltipMouseTrack();
      var e = this.parentComp.getGui();
      this.addManagedListener(e, "mouseenter", this.onMouseEnter.bind(this)), this.addManagedListener(e, "mouseleave", this.onMouseLeave.bind(this)), this.addManagedListener(e, "mousemove", this.onMouseMove.bind(this)), this.addManagedListener(e, "mousedown", this.onMouseDown.bind(this)), this.addManagedListener(e, "keydown", this.onKeyDown.bind(this));
    }, t.prototype.destroy = function() {
      this.setToDoNothing(), n.prototype.destroy.call(this);
    }, t.prototype.onMouseEnter = function(e) {
      if (!ro() && this.state == At.NOTHING) {
        var r = this.isLastTooltipHiddenRecently() ? 200 : this.tooltipShowDelay;
        this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), r), this.lastMouseEvent = e, this.state = At.WAITING_TO_SHOW;
      }
    }, t.prototype.onMouseLeave = function() {
      this.setToDoNothing();
    }, t.prototype.onKeyDown = function() {
      this.setToDoNothing();
    }, t.prototype.setToDoNothing = function() {
      this.state === At.SHOWING && this.hideTooltip(), this.clearTimeouts(), this.state = At.NOTHING;
    }, t.prototype.onMouseMove = function(e) {
      this.lastMouseEvent = e, this.tooltipMouseTrack && this.state === At.SHOWING && this.tooltipComp && this.positionTooltipUnderLastMouseEvent();
    }, t.prototype.onMouseDown = function() {
      this.setToDoNothing();
    }, t.prototype.hideTooltip = function() {
      this.tooltipComp && (this.destroyTooltipComp(), t.lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime()), this.state = At.NOTHING;
    }, t.prototype.destroyTooltipComp = function() {
      var e = this;
      this.tooltipComp.getGui().classList.add("ag-tooltip-hiding");
      var r = this.tooltipPopupDestroyFunc, o = this.tooltipComp;
      window.setTimeout(function() {
        r(), e.getContext().destroyBean(o);
      }, this.FADE_OUT_TOOLTIP_TIMEOUT), this.tooltipPopupDestroyFunc = void 0, this.tooltipComp = void 0;
    }, t.prototype.isLastTooltipHiddenRecently = function() {
      var e = (/* @__PURE__ */ new Date()).getTime(), r = t.lastTooltipHideTime;
      return e - r < this.SHOW_QUICK_TOOLTIP_DIFF;
    }, t.prototype.showTooltip = function() {
      var e = Ns({ api: this.gridApi, columnApi: this.columnApi, context: this.gridOptionsWrapper.getContext() }, this.parentComp.getTooltipParams());
      if (!O(e.value)) {
        this.setToDoNothing();
        return;
      }
      this.state = At.SHOWING, this.tooltipInstanceCount++;
      var r = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount), o = this.userComponentFactory.getTooltipCompDetails(e);
      o.newAgStackInstance().then(r);
    }, t.prototype.newTooltipComponentCallback = function(e, r) {
      var o = this.state !== At.SHOWING || this.tooltipInstanceCount !== e;
      if (o) {
        this.getContext().destroyBean(r);
        return;
      }
      var i = r.getGui();
      this.tooltipComp = r, i.classList.contains("ag-tooltip") || i.classList.add("ag-tooltip-custom");
      var s = this.gridOptionsWrapper.getLocaleTextFunc(), a = this.popupService.addPopup({
        eChild: i,
        ariaLabel: s("ariaLabelTooltip", "Tooltip")
      });
      a && (this.tooltipPopupDestroyFunc = a.hideFunc), this.positionTooltipUnderLastMouseEvent(), this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.tooltipHideDelay);
    }, t.prototype.positionTooltipUnderLastMouseEvent = function() {
      this.popupService.positionPopupUnderMouseEvent({
        type: "tooltip",
        mouseEvent: this.lastMouseEvent,
        ePopup: this.tooltipComp.getGui(),
        nudgeY: 18
      });
    }, t.prototype.clearTimeouts = function() {
      this.showTooltipTimeoutId && (window.clearTimeout(this.showTooltipTimeoutId), this.showTooltipTimeoutId = void 0), this.hideTooltipTimeoutId && (window.clearTimeout(this.hideTooltipTimeoutId), this.hideTooltipTimeoutId = void 0);
    }, ho([
      h("popupService")
    ], t.prototype, "popupService", void 0), ho([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), ho([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), ho([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), ho([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Mf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ni = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Lf = new si(), Ip = (
  /** @class */
  function() {
    function n(t) {
      this.cssClassStates = {}, this.getGui = t;
    }
    return n.prototype.addCssClass = function(t) {
      var e = this.cssClassStates[t] !== !0;
      e && t.length && (this.getGui().classList.add(t), this.cssClassStates[t] = !0);
    }, n.prototype.removeCssClass = function(t) {
      var e = this.cssClassStates[t] !== !1;
      e && t.length && (this.getGui().classList.remove(t), this.cssClassStates[t] = !1);
    }, n.prototype.containsCssClass = function(t) {
      return this.getGui().classList.contains(t);
    }, n.prototype.addOrRemoveCssClass = function(t, e) {
      var r = this.cssClassStates[t] !== e;
      r && t.length && (this.getGui().classList.toggle(t, e), this.cssClassStates[t] = e);
    }, n;
  }()
), ee = (
  /** @class */
  function(n) {
    Mf(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.displayed = !0, r.visible = !0, r.compId = Lf.next(), r.cssClassManager = new Ip(function() {
        return r.eGui;
      }), e && r.setTemplate(e), r;
    }
    return t.prototype.preConstructOnComponent = function() {
      this.usingBrowserTooltips = this.gridOptionsWrapper.isEnableBrowserTooltips();
    }, t.prototype.getCompId = function() {
      return this.compId;
    }, t.prototype.getTooltipParams = function() {
      return {
        value: this.tooltipText,
        location: "UNKNOWN"
      };
    }, t.prototype.setTooltip = function(e) {
      var r = this, o = function() {
        r.usingBrowserTooltips ? r.getGui().removeAttribute("title") : r.tooltipFeature = r.destroyBean(r.tooltipFeature);
      }, i = function() {
        r.usingBrowserTooltips ? r.getGui().setAttribute("title", r.tooltipText) : r.tooltipFeature = r.createBean(new ai(r));
      };
      this.tooltipText != e && (this.tooltipText && o(), e != null && (this.tooltipText = e, this.tooltipText && i()));
    }, t.prototype.createChildComponentsFromTags = function(e, r) {
      var o = this, i = pp(e.childNodes);
      i.forEach(function(s) {
        if (s instanceof HTMLElement) {
          var a = o.createComponentFromElement(s, function(u) {
            var p = u.getGui();
            p && o.copyAttributesFromNode(s, u.getGui());
          }, r);
          if (a) {
            if (a.addItems && s.children.length) {
              o.createChildComponentsFromTags(s, r);
              var l = Array.prototype.slice.call(s.children);
              a.addItems(l);
            }
            o.swapComponentForNode(a, e, s);
          } else
            s.childNodes && o.createChildComponentsFromTags(s, r);
        }
      });
    }, t.prototype.createComponentFromElement = function(e, r, o) {
      var i = e.nodeName, s = o ? o[e.getAttribute("ref")] : void 0, a = this.agStackComponentsRegistry.getComponentClass(i);
      if (a) {
        t.elementGettingCreated = e;
        var l = new a(s);
        return l.setParentComponent(this), this.createBean(l, null, r), l;
      }
      return null;
    }, t.prototype.copyAttributesFromNode = function(e, r) {
      cp(e.attributes, function(o, i) {
        return r.setAttribute(o, i);
      });
    }, t.prototype.swapComponentForNode = function(e, r, o) {
      var i = e.getGui();
      r.replaceChild(i, o), r.insertBefore(document.createComment(o.nodeName), i), this.addDestroyFunc(this.destroyBean.bind(this, e)), this.swapInComponentForQuerySelectors(e, o);
    }, t.prototype.swapInComponentForQuerySelectors = function(e, r) {
      var o = this;
      this.iterateOverQuerySelectors(function(i) {
        o[i.attributeName] === r && (o[i.attributeName] = e);
      });
    }, t.prototype.iterateOverQuerySelectors = function(e) {
      for (var r = Object.getPrototypeOf(this); r != null; ) {
        var o = r.__agComponentMetaData, i = Zn(r.constructor);
        o && o[i] && o[i].querySelectors && o[i].querySelectors.forEach(function(s) {
          return e(s);
        }), r = Object.getPrototypeOf(r);
      }
    }, t.prototype.setTemplate = function(e, r) {
      var o = Ue(e);
      this.setTemplateFromElement(o, r);
    }, t.prototype.setTemplateFromElement = function(e, r) {
      this.eGui = e, this.eGui.__agComponent = this, this.wireQuerySelectors(), this.getContext() && this.createChildComponentsFromTags(this.getGui(), r);
    }, t.prototype.createChildComponentsPreConstruct = function() {
      this.getGui() && this.createChildComponentsFromTags(this.getGui());
    }, t.prototype.wireQuerySelectors = function() {
      var e = this;
      if (this.eGui) {
        var r = this;
        this.iterateOverQuerySelectors(function(o) {
          var i = function(l) {
            return r[o.attributeName] = l;
          }, s = o.refSelector && e.eGui.getAttribute("ref") === o.refSelector;
          if (s)
            i(e.eGui);
          else {
            var a = e.eGui.querySelector(o.querySelector);
            a && i(a.__agComponent || a);
          }
        });
      }
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.getFocusableElement = function() {
      return this.eGui;
    }, t.prototype.setParentComponent = function(e) {
      this.parentComponent = e;
    }, t.prototype.getParentComponent = function() {
      return this.parentComponent;
    }, t.prototype.setGui = function(e) {
      this.eGui = e;
    }, t.prototype.queryForHtmlElement = function(e) {
      return this.eGui.querySelector(e);
    }, t.prototype.queryForHtmlInputElement = function(e) {
      return this.eGui.querySelector(e);
    }, t.prototype.appendChild = function(e, r) {
      if (r || (r = this.eGui), e != null)
        if (zo(e))
          r.appendChild(e);
        else {
          var o = e;
          r.appendChild(o.getGui()), this.addDestroyFunc(this.destroyBean.bind(this, o));
        }
    }, t.prototype.isDisplayed = function() {
      return this.displayed;
    }, t.prototype.setVisible = function(e) {
      e !== this.visible && (this.visible = e, ip(this.eGui, e));
    }, t.prototype.setDisplayed = function(e) {
      if (e !== this.displayed) {
        this.displayed = e, Ee(this.eGui, e);
        var r = {
          type: t.EVENT_DISPLAYED_CHANGED,
          visible: this.displayed
        };
        this.dispatchEvent(r);
      }
    }, t.prototype.destroy = function() {
      this.tooltipFeature && (this.tooltipFeature = this.destroyBean(this.tooltipFeature)), n.prototype.destroy.call(this);
    }, t.prototype.addGuiEventListener = function(e, r) {
      var o = this;
      this.eGui.addEventListener(e, r), this.addDestroyFunc(function() {
        return o.eGui.removeEventListener(e, r);
      });
    }, t.prototype.addCssClass = function(e) {
      this.cssClassManager.addCssClass(e);
    }, t.prototype.removeCssClass = function(e) {
      this.cssClassManager.removeCssClass(e);
    }, t.prototype.containsCssClass = function(e) {
      return this.cssClassManager.containsCssClass(e);
    }, t.prototype.addOrRemoveCssClass = function(e, r) {
      this.cssClassManager.addOrRemoveCssClass(e, r);
    }, t.prototype.getAttribute = function(e) {
      var r = this.eGui;
      return r ? r.getAttribute(e) : null;
    }, t.prototype.getRefElement = function(e) {
      return this.queryForHtmlElement('[ref="' + e + '"]');
    }, t.EVENT_DISPLAYED_CHANGED = "displayedChanged", Ni([
      h("agStackComponentsRegistry")
    ], t.prototype, "agStackComponentsRegistry", void 0), Ni([
      Rs
    ], t.prototype, "preConstructOnComponent", null), Ni([
      Rs
    ], t.prototype, "createChildComponentsPreConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function Gf(n) {
  return Mp.bind(this, n, void 0);
}
function T(n) {
  return Mp.bind(this, "[ref=" + n + "]", n);
}
function Mp(n, t, e, r, o) {
  if (n === null) {
    console.error("AG Grid: QuerySelector selector should not be null");
    return;
  }
  if (typeof o == "number") {
    console.error("AG Grid: QuerySelector should be on an attribute");
    return;
  }
  Nf(e, "querySelectors", {
    attributeName: r,
    querySelector: n,
    refSelector: t
  });
}
function Nf(n, t, e) {
  var r = xf(n, Zn(n.constructor));
  r[t] || (r[t] = []), r[t].push(e);
}
function xf(n, t) {
  return n.__agComponentMetaData || (n.__agComponentMetaData = {}), n.__agComponentMetaData[t] || (n.__agComponentMetaData[t] = {}), n.__agComponentMetaData[t];
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Hf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Wf = (
  /** @class */
  function(n) {
    Hf(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>
            </div>`
      ) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      this.params = e;
      var r = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), o = this.gridOptionsWrapper.getLocaleTextFunc();
      this.eFloatingFilterText.setDisabled(!0).setInputAriaLabel(r + " " + o("ariaFilterInput", "Filter Input"));
    }, t.prototype.onParentModelChanged = function(e) {
      var r = this;
      if (!e) {
        this.eFloatingFilterText.setValue("");
        return;
      }
      this.params.parentFilterInstance(function(o) {
        if (o.getModelAsString) {
          var i = o.getModelAsString(e);
          r.eFloatingFilterText.setValue(i);
        }
      });
    }, wl([
      T("eFloatingFilterText")
    ], t.prototype, "eFloatingFilterText", void 0), wl([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Lp = (
  /** @class */
  function() {
    function n(t, e, r, o) {
      var i = this;
      this.alive = !0, this.context = t, this.eParent = o;
      var s = e.getDateCompDetails(r), a = s.newAgStackInstance();
      a.then(function(l) {
        if (!i.alive) {
          t.destroyBean(l);
          return;
        }
        i.dateComp = l, l && (o.appendChild(l.getGui()), l.afterGuiAttached && l.afterGuiAttached(), i.tempValue && l.setDate(i.tempValue), i.disabled != null && i.setDateCompDisabled(i.disabled));
      });
    }
    return n.prototype.destroy = function() {
      this.alive = !1, this.dateComp = this.context.destroyBean(this.dateComp);
    }, n.prototype.getDate = function() {
      return this.dateComp ? this.dateComp.getDate() : this.tempValue;
    }, n.prototype.setDate = function(t) {
      this.dateComp ? this.dateComp.setDate(t) : this.tempValue = t;
    }, n.prototype.setDisabled = function(t) {
      this.dateComp ? this.setDateCompDisabled(t) : this.disabled = t;
    }, n.prototype.setDisplayed = function(t) {
      Ee(this.eParent, t);
    }, n.prototype.setInputPlaceholder = function(t) {
      this.dateComp && this.dateComp.setInputPlaceholder && this.dateComp.setInputPlaceholder(t);
    }, n.prototype.setInputAriaLabel = function(t) {
      this.dateComp && this.dateComp.setInputAriaLabel && this.dateComp.setInputAriaLabel(t);
    }, n.prototype.afterGuiAttached = function(t) {
      this.dateComp && typeof this.dateComp.afterGuiAttached == "function" && this.dateComp.afterGuiAttached(t);
    }, n.prototype.setDateCompDisabled = function(t) {
      this.dateComp != null && this.dateComp.setDisabled != null && this.dateComp.setDisabled(t);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var xs = globalThis && globalThis.__assign || function() {
  return xs = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, xs.apply(this, arguments);
}, Gp = (
  /** @class */
  function() {
    function n() {
      this.customFilterOptions = {};
    }
    return n.prototype.init = function(t, e) {
      this.filterOptions = t.filterOptions || e, this.mapCustomOptions(), this.selectDefaultItem(t), this.checkForDeprecatedParams();
    }, n.prototype.checkForDeprecatedParams = function() {
      this.filterOptions.some(function(t) {
        return typeof t != "string" && t.test != null;
      }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, test() has been replaced with predicate()."), this.filterOptions.some(function(t) {
        return typeof t != "string" && t.hideFilterInput != null;
      }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, useOfHideFilterInput has been replaced with numberOfInputs.");
    }, n.prototype.getFilterOptions = function() {
      return this.filterOptions;
    }, n.prototype.mapCustomOptions = function() {
      var t = this;
      this.filterOptions && this.filterOptions.forEach(function(e) {
        if (typeof e != "string") {
          var r = [["displayKey"], ["displayName"], ["predicate", "test"]], o = function(a) {
            return a.some(function(l) {
              return e[l] != null;
            }) ? !0 : (console.warn("AG Grid: ignoring FilterOptionDef as it doesn't contain one of '" + a + "'"), !1);
          };
          if (!r.every(o)) {
            t.filterOptions = t.filterOptions.filter(function(a) {
              return a === e;
            }) || [];
            return;
          }
          var i = e.test, s = xs({}, e);
          i != null && e.predicate == null && (s.predicate = function(a, l) {
            return i(a[0], l);
          }, delete s.test), s.hideFilterInput && s.numberOfInputs == null && (s.numberOfInputs = 0, delete s.hideFilterInput), t.customFilterOptions[e.displayKey] = s;
        }
      });
    }, n.prototype.selectDefaultItem = function(t) {
      if (t.defaultOption)
        this.defaultOption = t.defaultOption;
      else if (this.filterOptions.length >= 1) {
        var e = this.filterOptions[0];
        typeof e == "string" ? this.defaultOption = e : e.displayKey ? this.defaultOption = e.displayKey : console.warn("AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'");
      } else
        console.warn("AG Grid: no filter options for filter");
    }, n.prototype.getDefaultOption = function() {
      return this.defaultOption;
    }, n.prototype.getCustomOption = function(t) {
      return this.customFilterOptions[t];
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Vf = {
  applyFilter: "Apply",
  clearFilter: "Clear",
  resetFilter: "Reset",
  cancelFilter: "Cancel",
  textFilter: "Text Filter",
  numberFilter: "Number Filter",
  dateFilter: "Date Filter",
  setFilter: "Set Filter",
  filterOoo: "Filter...",
  empty: "Choose One",
  equals: "Equals",
  notEqual: "Not equal",
  lessThan: "Less than",
  greaterThan: "Greater than",
  inRange: "In range",
  inRangeStart: "From",
  inRangeEnd: "To",
  lessThanOrEqual: "Less than or equals",
  greaterThanOrEqual: "Greater than or equals",
  contains: "Contains",
  notContains: "Not contains",
  startsWith: "Starts with",
  endsWith: "Ends with",
  blank: "Blank",
  notBlank: "Not blank",
  andCondition: "AND",
  orCondition: "OR",
  dateFormatOoo: "yyyy-mm-dd"
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var P = (
  /** @class */
  function() {
    function n() {
    }
    return n.BACKSPACE = "Backspace", n.TAB = "Tab", n.ENTER = "Enter", n.ESCAPE = "Escape", n.SPACE = " ", n.LEFT = "ArrowLeft", n.UP = "ArrowUp", n.RIGHT = "ArrowRight", n.DOWN = "ArrowDown", n.DELETE = "Delete", n.A = "A", n.C = "C", n.V = "V", n.D = "D", n.Z = "Z", n.Y = "Y", n.F2 = "F2", n.PAGE_UP = "PageUp", n.PAGE_DOWN = "PageDown", n.PAGE_HOME = "Home", n.PAGE_END = "End", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Bf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Hs = globalThis && globalThis.__assign || function() {
  return Hs = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Hs.apply(this, arguments);
}, El = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Xt = (
  /** @class */
  function(n) {
    Bf(t, n);
    function t(e, r) {
      r === void 0 && (r = {});
      var o = n.call(this) || this;
      return o.eFocusableElement = e, o.callbacks = r, o.callbacks = Hs({ shouldStopEventPropagation: function() {
        return !1;
      }, onTabKeyDown: function(i) {
        if (!i.defaultPrevented) {
          var s = o.focusService.findNextFocusableElement(o.eFocusableElement, !1, i.shiftKey);
          s && (s.focus(), i.preventDefault());
        }
      } }, r), o;
    }
    return t.prototype.postConstruct = function() {
      this.eFocusableElement.classList.add(t.FOCUS_MANAGED_CLASS), this.addKeyDownListeners(this.eFocusableElement), this.callbacks.onFocusIn && this.addManagedListener(this.eFocusableElement, "focusin", this.callbacks.onFocusIn), this.callbacks.onFocusOut && this.addManagedListener(this.eFocusableElement, "focusout", this.callbacks.onFocusOut);
    }, t.prototype.addKeyDownListeners = function(e) {
      var r = this;
      this.addManagedListener(e, "keydown", function(o) {
        if (!(o.defaultPrevented || Bt(o))) {
          if (r.callbacks.shouldStopEventPropagation(o)) {
            Qr(o);
            return;
          }
          o.key === P.TAB ? r.callbacks.onTabKeyDown(o) : r.callbacks.handleKeyDown && r.callbacks.handleKeyDown(o);
        }
      });
    }, t.FOCUS_MANAGED_CLASS = "ag-focus-managed", El([
      h("focusService")
    ], t.prototype, "focusService", void 0), El([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Vo = (
  /** @class */
  function(n) {
    jf(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.filterNameKey = e, r.applyActive = !1, r.hidePopup = null, r.appliedModel = null, r;
    }
    return t.prototype.postConstruct = function() {
      this.resetTemplate(), this.createManagedBean(new Xt(this.getFocusableElement(), {
        handleKeyDown: this.handleKeyDown.bind(this)
      }));
    }, t.prototype.handleKeyDown = function(e) {
    }, t.prototype.getFilterTitle = function() {
      return this.translate(this.filterNameKey);
    }, t.prototype.isFilterActive = function() {
      return !!this.appliedModel;
    }, t.prototype.resetTemplate = function(e) {
      var r = (
        /* html */
        `
            <div class="ag-filter-wrapper">
                <div class="ag-filter-body-wrapper ag-` + this.getCssIdentifier() + `-body-wrapper">
                    ` + this.createBodyTemplate() + `
                </div>
            </div>`
      );
      this.setTemplate(r, e);
    }, t.prototype.isReadOnly = function() {
      return !!this.providedFilterParams.readOnly;
    }, t.prototype.init = function(e) {
      var r = this;
      this.setParams(e), this.resetUiToDefaults(!0).then(function() {
        r.updateUiVisibility(), r.setupOnBtApplyDebounce();
      });
    }, t.prototype.setParams = function(e) {
      this.providedFilterParams = e, this.applyActive = t.isUseApplyButton(e), this.createButtonPanel();
    }, t.prototype.createButtonPanel = function() {
      var e = this, r = this.providedFilterParams.buttons;
      if (!(!r || r.length < 1 || this.isReadOnly())) {
        var o = document.createElement("div");
        o.classList.add("ag-filter-apply-panel");
        var i = function(s) {
          var a, l;
          switch (s) {
            case "apply":
              a = e.translate("applyFilter"), l = function(p) {
                return e.onBtApply(!1, !1, p);
              };
              break;
            case "clear":
              a = e.translate("clearFilter"), l = function() {
                return e.onBtClear();
              };
              break;
            case "reset":
              a = e.translate("resetFilter"), l = function() {
                return e.onBtReset();
              };
              break;
            case "cancel":
              a = e.translate("cancelFilter"), l = function(p) {
                e.onBtCancel(p);
              };
              break;
            default:
              console.warn("AG Grid: Unknown button type specified");
              return;
          }
          var u = Ue(
            /* html */
            `<button
                    type="button"
                    ref="` + s + `FilterButton"
                    class="ag-standard-button ag-filter-apply-panel-button"
                >` + a + `
                </button>`
          );
          o.appendChild(u), e.addManagedListener(u, "click", l);
        };
        Ca(r).forEach(function(s) {
          return i(s);
        }), this.getGui().appendChild(o);
      }
    }, t.prototype.getDefaultDebounceMs = function() {
      return 0;
    }, t.prototype.setupOnBtApplyDebounce = function() {
      var e = t.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());
      this.onBtApplyDebounce = ur(this.onBtApply.bind(this), e);
    }, t.prototype.getModel = function() {
      return this.appliedModel ? this.appliedModel : null;
    }, t.prototype.setModel = function(e) {
      var r = this, o = e != null ? this.setModelIntoUi(e) : this.resetUiToDefaults();
      return o.then(function() {
        r.updateUiVisibility(), r.applyModel();
      });
    }, t.prototype.onBtCancel = function(e) {
      var r = this, o = this.getModel(), i = function() {
        r.onUiChanged(!1, "prevent"), r.providedFilterParams.closeOnApply && r.close(e);
      };
      o != null ? this.setModelIntoUi(o).then(i) : this.resetUiToDefaults().then(i);
    }, t.prototype.onBtClear = function() {
      var e = this;
      this.resetUiToDefaults().then(function() {
        return e.onUiChanged();
      });
    }, t.prototype.onBtReset = function() {
      this.onBtClear(), this.onBtApply();
    }, t.prototype.applyModel = function() {
      var e = this.getModelFromUi();
      if (!this.isModelValid(e))
        return !1;
      var r = this.appliedModel;
      return this.appliedModel = e, !this.areModelsEqual(r, e);
    }, t.prototype.isModelValid = function(e) {
      return !0;
    }, t.prototype.onBtApply = function(e, r, o) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), this.applyModel() && this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: e, afterDataChange: r });
      var i = this.providedFilterParams.closeOnApply;
      i && this.applyActive && !e && !r && this.close(o);
    }, t.prototype.onNewRowsLoaded = function() {
    }, t.prototype.close = function(e) {
      if (this.hidePopup) {
        var r = e, o = r && r.key, i;
        (o === "Enter" || o === "Space") && (i = { keyboardEvent: r }), this.hidePopup(i), this.hidePopup = null;
      }
    }, t.prototype.onUiChanged = function(e, r) {
      if (e === void 0 && (e = !1), this.updateUiVisibility(), this.providedFilterParams.filterModifiedCallback(), this.applyActive && !this.isReadOnly) {
        var o = this.isModelValid(this.getModelFromUi());
        Jr(this.getRefElement("applyFilterButton"), !o);
      }
      e && !r || r === "immediately" ? this.onBtApply(e) : (!this.applyActive && !r || r === "debounce") && this.onBtApplyDebounce();
    }, t.prototype.afterGuiAttached = function(e) {
      e != null && (this.hidePopup = e.hidePopup);
    }, t.getDebounceMs = function(e, r) {
      return t.isUseApplyButton(e) ? (e.debounceMs != null && console.warn("AG Grid: debounceMs is ignored when apply button is present"), 0) : e.debounceMs != null ? e.debounceMs : r;
    }, t.isUseApplyButton = function(e) {
      return !!e.buttons && e.buttons.indexOf("apply") >= 0;
    }, t.prototype.destroy = function() {
      this.hidePopup = null, n.prototype.destroy.call(this);
    }, t.prototype.translate = function(e) {
      var r = this.gridOptionsWrapper.getLocaleTextFunc();
      return r(e, Vf[e]);
    }, t.prototype.getCellValue = function(e) {
      var r = this.providedFilterParams, o = r.api, i = r.colDef, s = r.column, a = r.columnApi, l = r.context;
      return this.providedFilterParams.valueGetter({
        api: o,
        colDef: i,
        column: s,
        columnApi: a,
        context: l,
        data: e.data,
        getValue: function(u) {
          return e.data[u];
        },
        node: e
      });
    }, xi([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), xi([
      h("valueService")
    ], t.prototype, "valueService", void 0), xi([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Uf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), kf = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ma = (
  /** @class */
  function(n) {
    Uf(t, n);
    function t(e, r) {
      var o = n.call(this, r) || this;
      return o.labelSeparator = "", o.labelAlignment = "left", o.label = "", o.config = e || {}, o;
    }
    return t.prototype.postConstruct = function() {
      this.addCssClass("ag-labeled"), this.eLabel.classList.add("ag-label");
      var e = this.config, r = e.labelSeparator, o = e.label, i = e.labelWidth, s = e.labelAlignment;
      r != null && this.setLabelSeparator(r), o != null && this.setLabel(o), i != null && this.setLabelWidth(i), this.setLabelAlignment(s || this.labelAlignment), this.refreshLabel();
    }, t.prototype.refreshLabel = function() {
      Ct(this.eLabel), typeof this.label == "string" ? this.eLabel.innerText = this.label + this.labelSeparator : this.label && this.eLabel.appendChild(this.label), this.label === "" ? (this.eLabel.classList.add("ag-hidden"), rt(this.eLabel, "presentation")) : (this.eLabel.classList.remove("ag-hidden"), rt(this.eLabel, null));
    }, t.prototype.setLabelSeparator = function(e) {
      return this.labelSeparator === e ? this : (this.labelSeparator = e, this.label != null && this.refreshLabel(), this);
    }, t.prototype.getLabelId = function() {
      return this.eLabel.id = this.eLabel.id || "ag-" + this.getCompId() + "-label", this.eLabel.id;
    }, t.prototype.getLabel = function() {
      return this.label;
    }, t.prototype.setLabel = function(e) {
      return this.label === e ? this : (this.label = e, this.refreshLabel(), this);
    }, t.prototype.setLabelAlignment = function(e) {
      var r = this.getGui(), o = r.classList;
      return o.toggle("ag-label-align-left", e === "left"), o.toggle("ag-label-align-right", e === "right"), o.toggle("ag-label-align-top", e === "top"), this;
    }, t.prototype.setLabelWidth = function(e) {
      return this.label == null ? this : (ko(this.eLabel, e), this);
    }, kf([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), jt = (
  /** @class */
  function(n) {
    zf(t, n);
    function t(e, r, o) {
      var i = n.call(this, e, r) || this;
      return i.className = o, i.disabled = !1, i;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.className && this.addCssClass(this.className);
    }, t.prototype.onValueChange = function(e) {
      var r = this;
      return this.addManagedListener(this, t.EVENT_CHANGED, function() {
        return e(r.getValue());
      }), this;
    }, t.prototype.getWidth = function() {
      return this.getGui().clientWidth;
    }, t.prototype.setWidth = function(e) {
      return zt(this.getGui(), e), this;
    }, t.prototype.getPreviousValue = function() {
      return this.previousValue;
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.setValue = function(e, r) {
      return this.value === e ? this : (this.previousValue = this.value, this.value = e, r || this.dispatchEvent({ type: t.EVENT_CHANGED }), this);
    }, t.prototype.setDisabled = function(e) {
      e = !!e;
      var r = this.getGui();
      return Jr(r, e), r.classList.toggle("ag-disabled", e), this.disabled = e, this;
    }, t.prototype.isDisabled = function() {
      return !!this.disabled;
    }, t.EVENT_CHANGED = "valueChange", t;
  }(ma)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var $f = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), en = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Np = (
  /** @class */
  function(n) {
    $f(t, n);
    function t(e, r, o, i) {
      var s = n.call(
        this,
        e,
        /* html */
        `<div class="ag-picker-field" role="presentation">
                <div ref="eLabel"></div>
                <div ref="eWrapper"
                    class="ag-wrapper ag-picker-field-wrapper"
                    tabIndex="-1"
                    aria-expanded="false"
                    ` + (i ? 'role="' + i + '"' : "") + `
                >
                    <div ref="eDisplayField" class="ag-picker-field-display"></div>
                    <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>
                </div>
            </div>`,
        r
      ) || this;
      return s.pickerIcon = o, s.isPickerDisplayed = !1, s.isDestroyingPicker = !1, s.skipClick = !1, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this);
      var r = this.getCompId() + "-display";
      this.eDisplayField.setAttribute("id", r), ii(this.eWrapper, r);
      var o = function() {
        if (e.skipClick) {
          e.skipClick = !1;
          return;
        }
        e.isDisabled() || (e.pickerComponent = e.showPicker());
      }, i = this.getGui();
      if (this.addManagedListener(i, "mousedown", function(a) {
        !e.skipClick && e.pickerComponent && e.pickerComponent.isAlive() && no(e.pickerComponent.getGui()) && i.contains(a.target) && (e.skipClick = !0);
      }), this.addManagedListener(i, "keydown", function(a) {
        switch (a.key) {
          case P.UP:
          case P.DOWN:
          case P.ENTER:
          case P.SPACE:
            o();
          case P.ESCAPE:
            e.isPickerDisplayed && a.preventDefault();
            break;
        }
      }), this.addManagedListener(this.eWrapper, "click", o), this.addManagedListener(this.eLabel, "click", o), this.pickerIcon) {
        var s = xe(this.pickerIcon, this.gridOptionsWrapper);
        s && this.eIcon.appendChild(s);
      }
    }, t.prototype.refreshLabel = function() {
      O(this.getLabel()) ? ca(this.eWrapper, this.getLabelId()) : this.eWrapper.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
    }, t.prototype.setAriaLabel = function(e) {
      return Tr(this.eWrapper, e), this;
    }, t.prototype.setInputWidth = function(e) {
      return ko(this.eWrapper, e), this;
    }, t.prototype.getFocusableElement = function() {
      return this.eWrapper;
    }, en([
      T("eLabel")
    ], t.prototype, "eLabel", void 0), en([
      T("eWrapper")
    ], t.prototype, "eWrapper", void 0), en([
      T("eDisplayField")
    ], t.prototype, "eDisplayField", void 0), en([
      T("eIcon")
    ], t.prototype, "eIcon", void 0), t;
  }(jt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Kf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yf = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Rl = (
  /** @class */
  function(n) {
    Kf(t, n);
    function t(e) {
      e === void 0 && (e = "default");
      var r = n.call(
        this,
        /* html */
        '<div class="ag-list ag-' + e + '-list" role="listbox"></div>'
      ) || this;
      return r.cssIdentifier = e, r.options = [], r.itemEls = [], r;
    }
    return t.prototype.init = function() {
      this.addManagedListener(this.getGui(), "keydown", this.handleKeyDown.bind(this));
    }, t.prototype.handleKeyDown = function(e) {
      var r = e.key;
      switch (r) {
        case P.ENTER:
          if (!this.highlightedEl)
            this.setValue(this.getValue());
          else {
            var o = this.itemEls.indexOf(this.highlightedEl);
            this.setValueByIndex(o);
          }
          break;
        case P.DOWN:
        case P.UP:
          var i = r === P.DOWN, s = void 0;
          if (e.preventDefault(), !this.highlightedEl)
            s = this.itemEls[i ? 0 : this.itemEls.length - 1];
          else {
            var a = this.itemEls.indexOf(this.highlightedEl), l = a + (i ? 1 : -1);
            l = Math.min(Math.max(l, 0), this.itemEls.length - 1), s = this.itemEls[l];
          }
          this.highlightItem(s);
          break;
      }
    }, t.prototype.addOptions = function(e) {
      var r = this;
      return e.forEach(function(o) {
        return r.addOption(o);
      }), this;
    }, t.prototype.addOption = function(e) {
      var r = e.value, o = e.text, i = kt(o || r);
      return this.options.push({ value: r, text: i }), this.renderOption(r, i), this.updateIndices(), this;
    }, t.prototype.updateIndices = function() {
      var e = this.getGui().querySelectorAll(".ag-list-item");
      e.forEach(function(r, o) {
        ha(r, o + 1), da(r, e.length);
      });
    }, t.prototype.renderOption = function(e, r) {
      var o = this, i = document.createElement("div");
      rt(i, "option"), i.classList.add("ag-list-item", "ag-" + this.cssIdentifier + "-list-item"), i.innerHTML = "<span>" + r + "</span>", i.tabIndex = -1, this.itemEls.push(i), this.addManagedListener(i, "mouseover", function() {
        return o.highlightItem(i);
      }), this.addManagedListener(i, "mouseleave", function() {
        return o.clearHighlighted();
      }), this.addManagedListener(i, "click", function() {
        return o.setValue(e);
      }), this.getGui().appendChild(i);
    }, t.prototype.setValue = function(e, r) {
      if (this.value === e)
        return this.fireItemSelected(), this;
      if (e == null)
        return this.reset(), this;
      var o = this.options.findIndex(function(s) {
        return s.value === e;
      });
      if (o !== -1) {
        var i = this.options[o];
        this.value = i.value, this.displayValue = i.text != null ? i.text : i.value, this.highlightItem(this.itemEls[o]), r || this.fireChangeEvent();
      }
      return this;
    }, t.prototype.setValueByIndex = function(e) {
      return this.setValue(this.options[e].value);
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.getDisplayValue = function() {
      return this.displayValue;
    }, t.prototype.refreshHighlighted = function() {
      var e = this;
      this.clearHighlighted();
      var r = this.options.findIndex(function(o) {
        return o.value === e.value;
      });
      r !== -1 && this.highlightItem(this.itemEls[r]);
    }, t.prototype.reset = function() {
      this.value = null, this.displayValue = null, this.clearHighlighted(), this.fireChangeEvent();
    }, t.prototype.highlightItem = function(e) {
      e.offsetParent && (this.clearHighlighted(), this.highlightedEl = e, this.highlightedEl.classList.add(t.ACTIVE_CLASS), Zr(this.highlightedEl, !0), this.highlightedEl.focus());
    }, t.prototype.clearHighlighted = function() {
      !this.highlightedEl || !this.highlightedEl.offsetParent || (this.highlightedEl.classList.remove(t.ACTIVE_CLASS), Zr(this.highlightedEl, !1), this.highlightedEl = null);
    }, t.prototype.fireChangeEvent = function() {
      this.dispatchEvent({ type: jt.EVENT_CHANGED }), this.fireItemSelected();
    }, t.prototype.fireItemSelected = function() {
      this.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
    }, t.EVENT_ITEM_SELECTED = "selectedItem", t.ACTIVE_CLASS = "ag-active-item", Yf([
      G
    ], t.prototype, "init", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var qf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Sl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, _a = (
  /** @class */
  function(n) {
    qf(t, n);
    function t(e) {
      return n.call(this, e, "ag-select", "smallDown", "listbox") || this;
    }
    return t.prototype.init = function() {
      var e = this;
      this.listComponent = this.createBean(new Rl("select")), this.listComponent.setParentComponent(this), this.eWrapper.tabIndex = 0, this.listComponent.addManagedListener(this.listComponent, Rl.EVENT_ITEM_SELECTED, function() {
        e.hideList && e.hideList();
      }), this.listComponent.addManagedListener(this.listComponent, jt.EVENT_CHANGED, function() {
        e.setValue(e.listComponent.getValue(), !1, !0), e.hideList && e.hideList();
      });
    }, t.prototype.showPicker = function() {
      var e = this, r = this.listComponent.getGui(), o = this.gridOptionsWrapper.getDocument(), i = this.addManagedListener(o.body, "wheel", function(u) {
        !r.contains(u.target) && e.hideList && e.hideList();
      }), s = this.addManagedListener(r, "focusout", function(u) {
        !r.contains(u.relatedTarget) && e.hideList && e.hideList();
      }), a = this.gridOptionsWrapper.getLocaleTextFunc(), l = this.popupService.addPopup({
        modal: !0,
        eChild: r,
        closeOnEsc: !0,
        closedCallback: function() {
          e.hideList = null, e.isPickerDisplayed = !1, s(), i(), e.isAlive() && (vt(e.eWrapper, !1), e.getFocusableElement().focus());
        },
        ariaLabel: a("ariaLabelSelectField", "Select Field")
      });
      return l && (this.hideList = l.hideFunc), this.isPickerDisplayed = !0, ko(r, ni(this.eWrapper)), vt(this.eWrapper, !0), r.style.maxHeight = Uo(this.popupService.getPopupParent()) + "px", r.style.position = "absolute", this.popupService.positionPopupUnderComponent({
        type: "ag-list",
        eventSource: this.eWrapper,
        ePopup: r,
        keepWithinBounds: !0
      }), this.listComponent.refreshHighlighted(), this.listComponent;
    }, t.prototype.addOptions = function(e) {
      var r = this;
      return e.forEach(function(o) {
        return r.addOption(o);
      }), this;
    }, t.prototype.addOption = function(e) {
      return this.listComponent.addOption(e), this;
    }, t.prototype.setValue = function(e, r, o) {
      if (this.value === e)
        return this;
      o || this.listComponent.setValue(e, !0);
      var i = this.listComponent.getValue();
      return i === this.getValue() ? this : (this.eDisplayField.innerHTML = this.listComponent.getDisplayValue(), n.prototype.setValue.call(this, e, r));
    }, t.prototype.destroy = function() {
      this.hideList && this.hideList(), this.destroyBean(this.listComponent), n.prototype.destroy.call(this);
    }, Sl([
      h("popupService")
    ], t.prototype, "popupService", void 0), Sl([
      G
    ], t.prototype, "init", null), t;
  }(Np)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Xf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Hi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Yt = (
  /** @class */
  function(n) {
    Xf(t, n);
    function t(e, r, o, i) {
      o === void 0 && (o = "text"), i === void 0 && (i = "input");
      var s = n.call(
        this,
        e,
        /* html */
        `
            <div role="presentation">
                <div ref="eLabel" class="ag-input-field-label"></div>
                <div ref="eWrapper" class="ag-wrapper ag-input-wrapper" role="presentation">
                    <` + i + ' ref="eInput" class="ag-input-field-input"></' + i + `>
                </div>
            </div>`,
        r
      ) || this;
      return s.inputType = o, s.displayFieldTag = i, s;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.setInputType(), this.eLabel.classList.add(this.className + "-label"), this.eWrapper.classList.add(this.className + "-input-wrapper"), this.eInput.classList.add(this.className + "-input"), this.addCssClass("ag-input-field"), this.eInput.id = this.eInput.id || "ag-" + this.getCompId() + "-input";
      var e = this.config, r = e.width, o = e.value;
      r != null && this.setWidth(r), o != null && this.setValue(o), this.addInputListeners();
    }, t.prototype.refreshLabel = function() {
      O(this.getLabel()) ? ca(this.eInput, this.getLabelId()) : this.eInput.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
    }, t.prototype.addInputListeners = function() {
      var e = this;
      this.addManagedListener(this.eInput, "input", function(r) {
        return e.setValue(r.target.value);
      });
    }, t.prototype.setInputType = function() {
      this.displayFieldTag === "input" && this.eInput.setAttribute("type", this.inputType);
    }, t.prototype.getInputElement = function() {
      return this.eInput;
    }, t.prototype.setInputWidth = function(e) {
      return ko(this.eWrapper, e), this;
    }, t.prototype.setInputName = function(e) {
      return this.getInputElement().setAttribute("name", e), this;
    }, t.prototype.getFocusableElement = function() {
      return this.eInput;
    }, t.prototype.setMaxLength = function(e) {
      var r = this.eInput;
      return r.maxLength = e, this;
    }, t.prototype.setInputPlaceholder = function(e) {
      return Go(this.eInput, "placeholder", e), this;
    }, t.prototype.setInputAriaLabel = function(e) {
      return Tr(this.eInput, e), this;
    }, t.prototype.setDisabled = function(e) {
      return Jr(this.eInput, e), n.prototype.setDisabled.call(this, e);
    }, Hi([
      T("eLabel")
    ], t.prototype, "eLabel", void 0), Hi([
      T("eWrapper")
    ], t.prototype, "eWrapper", void 0), Hi([
      T("eInput")
    ], t.prototype, "eInput", void 0), t;
  }(jt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Qf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), dr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ke;
(function(n) {
  n[n.One = 0] = "One", n[n.Two = 1] = "Two";
})(Ke || (Ke = {}));
var Ae = (
  /** @class */
  function(n) {
    Qf(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getNumberOfInputs = function(e) {
      var r = this.optionsFactory.getCustomOption(e);
      if (r) {
        var o = r.numberOfInputs;
        return o ?? 1;
      }
      var i = [
        t.EMPTY,
        t.NOT_BLANK,
        t.BLANK
      ];
      return e && i.indexOf(e) >= 0 ? 0 : e === t.IN_RANGE ? 2 : 1;
    }, t.prototype.onFloatingFilterChanged = function(e, r) {
      this.setTypeFromFloatingFilter(e), this.setValueFromFloatingFilter(r), this.onUiChanged(!0);
    }, t.prototype.setTypeFromFloatingFilter = function(e) {
      this.eType1.setValue(e), this.eType2.setValue(this.optionsFactory.getDefaultOption()), (this.isDefaultOperator("AND") ? this.eJoinOperatorAnd : this.eJoinOperatorOr).setValue(!0);
    }, t.prototype.getModelFromUi = function() {
      return this.isConditionUiComplete(Ke.One) ? this.isAllowTwoConditions() && this.isConditionUiComplete(Ke.Two) ? {
        filterType: this.getFilterType(),
        operator: this.getJoinOperator(),
        condition1: this.createCondition(Ke.One),
        condition2: this.createCondition(Ke.Two)
      } : this.createCondition(Ke.One) : null;
    }, t.prototype.getConditionTypes = function() {
      return [
        this.eType1.getValue(),
        this.eType2.getValue()
      ];
    }, t.prototype.getJoinOperator = function() {
      return this.eJoinOperatorOr.getValue() === !0 ? "OR" : "AND";
    }, t.prototype.areModelsEqual = function(e, r) {
      if (!e && !r)
        return !0;
      if (!e && r || e && !r)
        return !1;
      var o = !e.operator, i = !r.operator, s = !o && i || o && !i;
      if (s)
        return !1;
      var a;
      if (o) {
        var l = e, u = r;
        a = this.areSimpleModelsEqual(l, u);
      } else {
        var p = e, c = r;
        a = p.operator === c.operator && this.areSimpleModelsEqual(p.condition1, c.condition1) && this.areSimpleModelsEqual(p.condition2, c.condition2);
      }
      return a;
    }, t.prototype.setModelIntoUi = function(e) {
      var r = e.operator;
      if (r) {
        var o = e, i = o.operator === "OR";
        this.eJoinOperatorAnd.setValue(!i), this.eJoinOperatorOr.setValue(i), this.eType1.setValue(o.condition1.type), this.eType2.setValue(o.condition2.type), this.setConditionIntoUi(o.condition1, Ke.One), this.setConditionIntoUi(o.condition2, Ke.Two);
      } else {
        var s = e;
        this.eJoinOperatorAnd.setValue(this.isDefaultOperator("AND")), this.eJoinOperatorOr.setValue(this.isDefaultOperator("OR")), this.eType1.setValue(s.type), this.eType2.setValue(this.optionsFactory.getDefaultOption()), this.setConditionIntoUi(s, Ke.One), this.setConditionIntoUi(null, Ke.Two);
      }
      return ut.resolve();
    }, t.prototype.doesFilterPass = function(e) {
      var r = this, o = this.getModel();
      if (o == null)
        return !0;
      var i = o.operator, s = [];
      if (i) {
        var a = o;
        s.push(a.condition1, a.condition2);
      } else
        s.push(o);
      var l = i && i === "OR" ? "some" : "every";
      return s[l](function(u) {
        return r.individualConditionPasses(e, u);
      });
    }, t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.optionsFactory = new Gp(), this.optionsFactory.init(e, this.getDefaultFilterOptions()), this.allowTwoConditions = !e.suppressAndOrCondition, this.alwaysShowBothConditions = !!e.alwaysShowBothConditions, this.defaultJoinOperator = this.getDefaultJoinOperator(e.defaultJoinOperator), this.putOptionsIntoDropdown(), this.addChangedListeners();
    }, t.prototype.getDefaultJoinOperator = function(e) {
      return yt(["AND", "OR"], e) ? e : "AND";
    }, t.prototype.putOptionsIntoDropdown = function() {
      var e = this, r = this.optionsFactory.getFilterOptions(), o = [this.eType1, this.eType2];
      r.forEach(function(i) {
        var s = typeof i == "string" ? e.createBoilerplateListOption(i) : e.createCustomListOption(i);
        o.forEach(function(a) {
          return a.addOption(s);
        });
      }), o.forEach(function(i) {
        return i.setDisabled(r.length <= 1);
      });
    }, t.prototype.createBoilerplateListOption = function(e) {
      return { value: e, text: this.translate(e) };
    }, t.prototype.createCustomListOption = function(e) {
      var r = e.displayKey, o = this.optionsFactory.getCustomOption(e.displayKey);
      return {
        value: r,
        text: o ? this.gridOptionsWrapper.getLocaleTextFunc()(o.displayKey, o.displayName) : this.translate(r)
      };
    }, t.prototype.isAllowTwoConditions = function() {
      return this.allowTwoConditions;
    }, t.prototype.createBodyTemplate = function() {
      return (
        /* html */
        `
            <ag-select class="ag-filter-select" ref="eOptions1"></ag-select>
            ` + this.createValueTemplate(Ke.One) + `
            <div class="ag-filter-condition" ref="eJoinOperatorPanel">
               <ag-radio-button ref="eJoinOperatorAnd" class="ag-filter-condition-operator ag-filter-condition-operator-and"></ag-radio-button>
               <ag-radio-button ref="eJoinOperatorOr" class="ag-filter-condition-operator ag-filter-condition-operator-or"></ag-radio-button>
            </div>
            <ag-select class="ag-filter-select" ref="eOptions2"></ag-select>
            ` + this.createValueTemplate(Ke.Two)
      );
    }, t.prototype.getCssIdentifier = function() {
      return "simple-filter";
    }, t.prototype.updateUiVisibility = function() {
      var e = this, r = [
        [this.eType1],
        [this.eType2, this.eJoinOperatorPanel, this.eJoinOperatorAnd, this.eJoinOperatorOr]
      ], o = [this.eCondition1Body, this.eCondition2Body];
      r.forEach(function(i, s) {
        var a = e.isConditionVisible(s), l = e.isConditionDisabled(s);
        i.forEach(function(u) {
          u instanceof Yt || u instanceof _a ? (u.setDisabled(l), u.setDisplayed(a)) : (Jr(u, l), Ee(u, a));
        });
      }), o.forEach(function(i, s) {
        Ee(i, e.isConditionBodyVisible(s));
      }), this.forEachInput(function(i, s, a, l) {
        e.setElementDisplayed(i, s < l), e.setElementDisabled(i, e.isConditionDisabled(a));
      }), this.resetPlaceholder();
    }, t.prototype.afterGuiAttached = function(e) {
      if (n.prototype.afterGuiAttached.call(this, e), this.resetPlaceholder(), !e || !e.suppressFocus && !this.isReadOnly()) {
        var r = this.getInputs()[0][0];
        if (!r)
          return;
        r instanceof Yt && r.getInputElement().focus();
      }
    }, t.prototype.resetPlaceholder = function() {
      var e = this, r = this.gridOptionsWrapper.getLocaleTextFunc();
      this.forEachInput(function(o, i, s, a) {
        if (o instanceof Yt) {
          var l = i === 0 && a > 1 ? "inRangeStart" : i === 0 ? "filterOoo" : "inRangeEnd", u = i === 0 && a > 1 ? r("ariaFilterFromValue", "Filter from value") : i === 0 ? r("ariaFilterValue", "Filter Value") : r("ariaFilterToValue", "Filter to Value");
          o.setInputPlaceholder(e.translate(l)), o.setInputAriaLabel(u);
        }
      });
    }, t.prototype.setElementValue = function(e, r, o) {
      e instanceof Yt && e.setValue(r != null ? String(r) : null, o);
    }, t.prototype.setElementDisplayed = function(e, r) {
      e instanceof ee && Ee(e.getGui(), r);
    }, t.prototype.setElementDisabled = function(e, r) {
      e instanceof ee && Jr(e.getGui(), r);
    }, t.prototype.attachElementOnChange = function(e, r) {
      e instanceof Yt && e.onValueChange(r);
    }, t.prototype.forEachInput = function(e) {
      var r = this, o = this.getInputs();
      this.getConditionTypes().forEach(function(i, s) {
        for (var a = r.getNumberOfInputs(i), l = 0; l < o[s].length; l++) {
          var u = o[s][l];
          u != null && e(u, l, s, a);
        }
      });
    }, t.prototype.isConditionVisible = function(e) {
      return e === 0 ? !0 : this.allowTwoConditions ? this.isReadOnly() ? this.isConditionUiComplete(e) : this.alwaysShowBothConditions ? !0 : this.isConditionUiComplete(e - 1) : !1;
    }, t.prototype.isConditionDisabled = function(e) {
      return this.isReadOnly() || !this.isConditionVisible(e) ? !0 : e === 0 ? !1 : !this.isConditionUiComplete(e - 1);
    }, t.prototype.isConditionBodyVisible = function(e) {
      if (!this.isConditionVisible(e))
        return !1;
      var r = this.getConditionTypes()[e], o = this.getNumberOfInputs(r);
      return o > 0;
    }, t.prototype.isConditionUiComplete = function(e) {
      var r = this.getConditionTypes()[e];
      return !(r === t.EMPTY || this.getValues(e).some(function(o) {
        return o == null;
      }));
    }, t.prototype.resetUiToDefaults = function(e) {
      var r = this, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = o("ariaFilteringOperator", "Filtering operator"), s = "ag-simple-filter-and-or-" + this.getCompId(), a = this.optionsFactory.getDefaultOption();
      return this.eType1.setValue(a, e).setAriaLabel(i).setDisabled(this.isReadOnly()), this.eType2.setValue(this.optionsFactory.getDefaultOption(), e).setAriaLabel(i).setDisabled(this.isReadOnly()), this.eJoinOperatorAnd.setValue(this.isDefaultOperator("AND"), e).setName(s).setLabel(this.translate("andCondition")).setDisabled(this.isReadOnly()), this.eJoinOperatorOr.setValue(this.isDefaultOperator("OR"), e).setName(s).setLabel(this.translate("orCondition")).setDisabled(this.isReadOnly()), this.forEachInput(function(l) {
        r.setElementValue(l, null, e), r.setElementDisabled(l, r.isReadOnly());
      }), this.resetPlaceholder(), ut.resolve();
    }, t.prototype.setConditionIntoUi = function(e, r) {
      var o = this, i = this.mapValuesFromModel(e);
      this.forEachInput(function(s, a, l, u) {
        l === r && o.setElementValue(s, i[a] != null ? i[a] : null);
      });
    }, t.prototype.setValueFromFloatingFilter = function(e) {
      var r = this;
      this.forEachInput(function(o, i, s, a) {
        r.setElementValue(o, i === 0 && s === 0 ? e : null);
      });
    }, t.prototype.isDefaultOperator = function(e) {
      return e === this.defaultJoinOperator;
    }, t.prototype.addChangedListeners = function() {
      var e = this;
      if (!this.isReadOnly()) {
        var r = function() {
          return e.onUiChanged();
        };
        this.eType1.onValueChange(r), this.eType2.onValueChange(r), this.eJoinOperatorOr.onValueChange(r), this.eJoinOperatorAnd.onValueChange(r), this.forEachInput(function(o) {
          e.attachElementOnChange(o, r);
        });
      }
    }, t.prototype.individualConditionPasses = function(e, r) {
      var o = this.getCellValue(e.node), i = this.mapValuesFromModel(r), s = this.optionsFactory.getCustomOption(r.type), a = this.evaluateCustomFilter(s, i, o);
      return a ?? (o == null ? this.evaluateNullValue(r.type) : this.evaluateNonNullValue(i, o, r, e));
    }, t.prototype.evaluateCustomFilter = function(e, r, o) {
      if (e != null) {
        var i = e.predicate;
        if (i != null && !r.some(function(s) {
          return s == null;
        }))
          return i(r, o);
      }
    }, t.prototype.isBlank = function(e) {
      return e == null || typeof e == "string" && e.trim().length === 0;
    }, t.EMPTY = "empty", t.BLANK = "blank", t.NOT_BLANK = "notBlank", t.EQUALS = "equals", t.NOT_EQUAL = "notEqual", t.LESS_THAN = "lessThan", t.LESS_THAN_OR_EQUAL = "lessThanOrEqual", t.GREATER_THAN = "greaterThan", t.GREATER_THAN_OR_EQUAL = "greaterThanOrEqual", t.IN_RANGE = "inRange", t.CONTAINS = "contains", t.NOT_CONTAINS = "notContains", t.STARTS_WITH = "startsWith", t.ENDS_WITH = "endsWith", dr([
      T("eOptions1")
    ], t.prototype, "eType1", void 0), dr([
      T("eOptions2")
    ], t.prototype, "eType2", void 0), dr([
      T("eJoinOperatorPanel")
    ], t.prototype, "eJoinOperatorPanel", void 0), dr([
      T("eJoinOperatorAnd")
    ], t.prototype, "eJoinOperatorAnd", void 0), dr([
      T("eJoinOperatorOr")
    ], t.prototype, "eJoinOperatorOr", void 0), dr([
      T("eCondition1Body")
    ], t.prototype, "eCondition1Body", void 0), dr([
      T("eCondition2Body")
    ], t.prototype, "eCondition2Body", void 0), t;
  }(Vo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Jf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ve = (
  /** @class */
  function(n) {
    Jf(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.scalarFilterParams = e;
    }, t.prototype.evaluateNullValue = function(e) {
      switch (e) {
        case t.EQUALS:
        case t.NOT_EQUAL:
          if (this.scalarFilterParams.includeBlanksInEquals)
            return !0;
          break;
        case t.GREATER_THAN:
        case t.GREATER_THAN_OR_EQUAL:
          if (this.scalarFilterParams.includeBlanksInGreaterThan)
            return !0;
          break;
        case t.LESS_THAN:
        case t.LESS_THAN_OR_EQUAL:
          if (this.scalarFilterParams.includeBlanksInLessThan)
            return !0;
          break;
        case t.IN_RANGE:
          if (this.scalarFilterParams.includeBlanksInRange)
            return !0;
          break;
        case t.BLANK:
          return !0;
        case t.NOT_BLANK:
          return !1;
      }
      return !1;
    }, t.prototype.evaluateNonNullValue = function(e, r, o) {
      var i = this.comparator(), s = e[0] != null ? i(e[0], r) : 0;
      switch (o.type) {
        case t.EQUALS:
          return s === 0;
        case t.NOT_EQUAL:
          return s !== 0;
        case t.GREATER_THAN:
          return s > 0;
        case t.GREATER_THAN_OR_EQUAL:
          return s >= 0;
        case t.LESS_THAN:
          return s < 0;
        case t.LESS_THAN_OR_EQUAL:
          return s <= 0;
        case t.IN_RANGE: {
          var a = i(e[1], r);
          return this.scalarFilterParams.inRangeInclusive ? s >= 0 && a <= 0 : s > 0 && a < 0;
        }
        case t.BLANK:
          return this.isBlank(r);
        case t.NOT_BLANK:
          return !this.isBlank(r);
        default:
          return console.warn('AG Grid: Unexpected type of filter "' + o.type + '", it looks like the filter was configured with incorrect Filter Options'), !0;
      }
    }, t;
  }(Ae)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Zf = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ws = globalThis && globalThis.__assign || function() {
  return Ws = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Ws.apply(this, arguments);
}, fo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ol = 1e3, Tl = 1 / 0, wa = (
  /** @class */
  function(n) {
    Zf(t, n);
    function t() {
      var e = n.call(this, "dateFilter") || this;
      return e.minValidYear = Ol, e.maxValidYear = Tl, e;
    }
    return t.prototype.afterGuiAttached = function(e) {
      n.prototype.afterGuiAttached.call(this, e), this.dateCondition1FromComp.afterGuiAttached(e);
    }, t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, o = r.dateFrom, i = r.dateTo, s = r.type;
      return [
        o && ir(o) || null,
        i && ir(i) || null
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.comparator = function() {
      return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);
    }, t.prototype.defaultComparator = function(e, r) {
      var o = r;
      return r == null || o < e ? -1 : o > e ? 1 : 0;
    }, t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.dateFilterParams = e;
      var r = function(o, i) {
        if (e[o] != null)
          if (isNaN(e[o]))
            console.warn("AG Grid: DateFilter " + o + " is not a number");
          else
            return e[o] == null ? i : Number(e[o]);
        return i;
      };
      this.minValidYear = r("minValidYear", Ol), this.maxValidYear = r("maxValidYear", Tl), this.minValidYear > this.maxValidYear && console.warn("AG Grid: DateFilter minValidYear should be <= maxValidYear"), this.createDateComponents();
    }, t.prototype.createDateComponents = function() {
      var e = this, r = function(o) {
        return new Lp(e.getContext(), e.userComponentFactory, {
          onDateChanged: function() {
            return e.onUiChanged();
          },
          filterParams: e.dateFilterParams
        }, o);
      };
      this.dateCondition1FromComp = r(this.eCondition1PanelFrom), this.dateCondition1ToComp = r(this.eCondition1PanelTo), this.dateCondition2FromComp = r(this.eCondition2PanelFrom), this.dateCondition2ToComp = r(this.eCondition2PanelTo), this.addDestroyFunc(function() {
        e.forEachInput(function(o) {
          return o.destroy();
        });
      });
    }, t.prototype.setElementValue = function(e, r, o) {
      e.setDate(r);
    }, t.prototype.setElementDisplayed = function(e, r) {
      e.setDisplayed(r);
    }, t.prototype.setElementDisabled = function(e, r) {
      e.setDisabled(r);
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueTemplate = function(e) {
      var r = e === Ke.One ? "1" : "2";
      return (
        /* html */
        `
            <div class="ag-filter-body" ref="eCondition` + r + `Body">
                <div class="ag-filter-from ag-filter-date-from" ref="eCondition` + r + `PanelFrom"></div>
                <div class="ag-filter-to ag-filter-date-to" ref="eCondition` + r + `PanelTo"></div>
            </div>`
      );
    }, t.prototype.isConditionUiComplete = function(e) {
      var r = this;
      if (!n.prototype.isConditionUiComplete.call(this, e))
        return !1;
      var o = function(s) {
        return s != null && s.getUTCFullYear() >= r.minValidYear && s.getUTCFullYear() <= r.maxValidYear;
      }, i = !0;
      return this.forEachInput(function(s, a, l, u) {
        l !== e || !i || a >= u || (i = i && o(s.getDate()));
      }), i;
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.dateFrom === r.dateFrom && e.dateTo === r.dateTo && e.type === r.type;
    }, t.prototype.getFilterType = function() {
      return "date";
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionTypes()[e], o = {}, i = this.getValues(e);
      return i.length > 0 && (o.dateFrom = nr(i[0])), i.length > 1 && (o.dateTo = nr(i[1])), Ws({ dateFrom: null, dateTo: null, filterType: this.getFilterType(), type: r }, o);
    }, t.prototype.resetPlaceholder = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.translate("dateFormatOoo"), o = e("ariaFilterValue", "Filter Value");
      this.forEachInput(function(i) {
        i.setInputPlaceholder(r), i.setInputAriaLabel(o);
      });
    }, t.prototype.getInputs = function() {
      return [
        [this.dateCondition1FromComp, this.dateCondition1ToComp],
        [this.dateCondition2FromComp, this.dateCondition2ToComp]
      ];
    }, t.prototype.getValues = function(e) {
      var r = [];
      return this.forEachInput(function(o, i, s, a) {
        e === s && i < a && r.push(o.getDate());
      }), r;
    }, t.DEFAULT_FILTER_OPTIONS = [
      Ve.EQUALS,
      Ve.GREATER_THAN,
      Ve.LESS_THAN,
      Ve.NOT_EQUAL,
      Ve.IN_RANGE,
      Ve.BLANK,
      Ve.NOT_BLANK
    ], fo([
      T("eCondition1PanelFrom")
    ], t.prototype, "eCondition1PanelFrom", void 0), fo([
      T("eCondition1PanelTo")
    ], t.prototype, "eCondition1PanelTo", void 0), fo([
      T("eCondition2PanelFrom")
    ], t.prototype, "eCondition2PanelFrom", void 0), fo([
      T("eCondition2PanelTo")
    ], t.prototype, "eCondition2PanelTo", void 0), fo([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), t;
  }(Ve)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var eg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xp = (
  /** @class */
  function(n) {
    eg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getDefaultDebounceMs = function() {
      return 0;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.getTextFromModel = function(e) {
      if (!e)
        return null;
      var r = e.operator != null;
      if (r) {
        var o = e, i = o || {}, s = i.condition1, a = i.condition2, l = this.optionsFactory.getCustomOption(s.type), u = this.optionsFactory.getCustomOption(a.type);
        return [
          this.conditionToString(s, l),
          o.operator,
          this.conditionToString(a, u)
        ].join(" ");
      } else {
        var p = e, c = this.optionsFactory.getCustomOption(p.type), d = c || {}, f = d.displayKey, g = d.displayName, y = d.numberOfInputs;
        return f && g && y === 0 ? (this.gridOptionsWrapper.getLocaleTextFunc()(f, g), g) : this.conditionToString(p, c);
      }
    }, t.prototype.isEventFromFloatingFilter = function(e) {
      return e && e.afterFloatingFilter;
    }, t.prototype.getLastType = function() {
      return this.lastType;
    }, t.prototype.isReadOnly = function() {
      return this.readOnly;
    }, t.prototype.setLastTypeFromModel = function(e) {
      if (!e) {
        this.lastType = this.optionsFactory.getDefaultOption();
        return;
      }
      var r = e.operator, o;
      if (r) {
        var i = e;
        o = i.condition1;
      } else
        o = e;
      this.lastType = o.type;
    }, t.prototype.canWeEditAfterModelFromParentFilter = function(e) {
      if (!e)
        return this.isTypeEditable(this.lastType);
      var r = e.operator;
      if (r)
        return !1;
      var o = e;
      return this.isTypeEditable(o.type);
    }, t.prototype.init = function(e) {
      this.optionsFactory = new Gp(), this.optionsFactory.init(e.filterParams, this.getDefaultFilterOptions()), this.lastType = this.optionsFactory.getDefaultOption(), this.readOnly = !!e.filterParams.readOnly;
      var r = this.isTypeEditable(this.lastType);
      this.setEditable(r);
    }, t.prototype.doesFilterHaveSingleInput = function(e) {
      var r = this.optionsFactory.getCustomOption(e), o = (r || {}).numberOfInputs;
      return o == null || o == 1;
    }, t.prototype.isTypeEditable = function(e) {
      var r = [
        Ae.IN_RANGE,
        Ae.EMPTY,
        Ae.BLANK,
        Ae.NOT_BLANK
      ];
      return !!e && !this.isReadOnly() && this.doesFilterHaveSingleInput(e) && r.indexOf(e) < 0;
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var tg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, rg = (
  /** @class */
  function(n) {
    tg(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eReadOnlyText"></ag-input-text-field>
                <div ref="eDateWrapper" style="display: flex;"></div>
            </div>`
      ) || this;
    }
    return t.prototype.getDefaultFilterOptions = function() {
      return wa.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.conditionToString = function(e, r) {
      var o = e.type, i = (r || {}).numberOfInputs, s = o == Ae.IN_RANGE || i === 2, a = ir(e.dateFrom), l = ir(e.dateTo);
      return s ? nr(a, !1) + "-" + nr(l, !1) : a != null ? "" + nr(a, !1) : "" + o;
    }, t.prototype.init = function(e) {
      n.prototype.init.call(this, e), this.params = e, this.createDateComponent();
      var r = this.gridOptionsWrapper.getLocaleTextFunc();
      this.eReadOnlyText.setDisabled(!0).setInputAriaLabel(r("ariaDateFilterInput", "Date Filter Input"));
    }, t.prototype.setEditable = function(e) {
      Ee(this.eDateWrapper, e), Ee(this.eReadOnlyText.getGui(), !e);
    }, t.prototype.onParentModelChanged = function(e, r) {
      if (!this.isEventFromFloatingFilter(r)) {
        n.prototype.setLastTypeFromModel.call(this, e);
        var o = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(e);
        if (this.setEditable(o), o) {
          if (e) {
            var i = e;
            this.dateComp.setDate(ir(i.dateFrom));
          } else
            this.dateComp.setDate(null);
          this.eReadOnlyText.setValue("");
        } else
          this.eReadOnlyText.setValue(this.getTextFromModel(e)), this.dateComp.setDate(null);
      }
    }, t.prototype.onDateChanged = function() {
      var e = this, r = this.dateComp.getDate(), o = nr(r);
      this.params.parentFilterInstance(function(i) {
        if (i) {
          var s = ir(o);
          i.onFloatingFilterChanged(e.getLastType() || null, s);
        }
      });
    }, t.prototype.createDateComponent = function() {
      var e = this, r = Vo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), o = {
        onDateChanged: ur(this.onDateChanged.bind(this), r),
        filterParams: this.params.column.getColDef().filterParams
      };
      this.dateComp = new Lp(this.getContext(), this.userComponentFactory, o, this.eDateWrapper), this.addDestroyFunc(function() {
        return e.dateComp.destroy();
      });
    }, Wi([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Wi([
      T("eReadOnlyText")
    ], t.prototype, "eReadOnlyText", void 0), Wi([
      T("eDateWrapper")
    ], t.prototype, "eDateWrapper", void 0), t;
  }(xp)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var og = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ng = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ig = (
  /** @class */
  function(n) {
    og(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-filter-filter">
                <ag-input-text-field class="ag-date-filter" ref="eDateInput"></ag-input-text-field>
            </div>`
      ) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r = this, o = this.gridOptionsWrapper.getDocument(), i = this.eDateInput.getInputElement();
      this.shouldUseBrowserDatePicker(e) && (i.type = "date"), this.addManagedListener(i, "mousedown", function() {
        r.eDateInput.isDisabled() || i.focus();
      }), this.addManagedListener(i, "input", function(u) {
        u.target === o.activeElement && (r.eDateInput.isDisabled() || e.onDateChanged());
      });
      var s = e.filterParams || {}, a = s.minValidYear, l = s.maxValidYear;
      a && (i.min = a + "-01-01"), l && (i.max = l + "-12-31");
    }, t.prototype.getDate = function() {
      return ir(this.eDateInput.getValue());
    }, t.prototype.setDate = function(e) {
      this.eDateInput.setValue(nr(e, !1));
    }, t.prototype.setInputPlaceholder = function(e) {
      this.eDateInput.setInputPlaceholder(e);
    }, t.prototype.setDisabled = function(e) {
      this.eDateInput.setDisabled(e);
    }, t.prototype.afterGuiAttached = function(e) {
      (!e || !e.suppressFocus) && this.eDateInput.getInputElement().focus();
    }, t.prototype.shouldUseBrowserDatePicker = function(e) {
      return e.filterParams && e.filterParams.browserDatePicker != null ? e.filterParams.browserDatePicker : jo() || na();
    }, ng([
      T("eDateInput")
    ], t.prototype, "eDateInput", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var sg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), tn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ea = (
  /** @class */
  function(n) {
    sg(t, n);
    function t() {
      return n.call(this, "numberFilter") || this;
    }
    return t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, o = r.filter, i = r.filterTo, s = r.type;
      return [
        o ?? null,
        i ?? null
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.comparator = function() {
      return function(e, r) {
        return e === r ? 0 : e < r ? 1 : -1;
      };
    }, t.prototype.setParams = function(e) {
      this.numberFilterParams = e;
      var r = this.getAllowedCharPattern();
      if (r) {
        var o = { allowedCharPattern: r };
        this.resetTemplate({
          "eValue-index0-1": o,
          "eValue-index1-1": o,
          "eValue-index0-2": o,
          "eValue-index1-2": o
        });
      }
      n.prototype.setParams.call(this, e);
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueTemplate = function(e) {
      var r = e === Ke.One ? "1" : "2", o = this.getAllowedCharPattern(), i = o ? "ag-input-text-field" : "ag-input-number-field";
      return (
        /* html */
        `
            <div class="ag-filter-body" ref="eCondition` + r + `Body" role="presentation">
                <` + i + ' class="ag-filter-from ag-filter-filter" ref="eValue-index0-' + r + '"></' + i + `>
                <` + i + ' class="ag-filter-to ag-filter-filter" ref="eValue-index1-' + r + '"></' + i + `>
            </div>`
      );
    }, t.prototype.getValues = function(e) {
      var r = this, o = [];
      return this.forEachInput(function(i, s, a, l) {
        e === a && s < l && o.push(r.stringToFloat(i.getValue()));
      }), o;
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
    }, t.prototype.getFilterType = function() {
      return "number";
    }, t.prototype.stringToFloat = function(e) {
      if (typeof e == "number")
        return e;
      var r = $r(e);
      return r != null && r.trim() === "" && (r = null), this.numberFilterParams.numberParser ? this.numberFilterParams.numberParser(r) : r == null || r.trim() === "-" ? null : parseFloat(r);
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionTypes()[e], o = {
        filterType: this.getFilterType(),
        type: r
      }, i = this.getValues(e);
      return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
    }, t.prototype.getInputs = function() {
      return [
        [this.eValueFrom1, this.eValueTo1],
        [this.eValueFrom2, this.eValueTo2]
      ];
    }, t.prototype.getAllowedCharPattern = function() {
      var e = (this.numberFilterParams || {}).allowedCharPattern;
      return e || (!jo() && !ei() ? "\\d\\-\\." : null);
    }, t.DEFAULT_FILTER_OPTIONS = [
      Ve.EQUALS,
      Ve.NOT_EQUAL,
      Ve.LESS_THAN,
      Ve.LESS_THAN_OR_EQUAL,
      Ve.GREATER_THAN,
      Ve.GREATER_THAN_OR_EQUAL,
      Ve.IN_RANGE,
      Ve.BLANK,
      Ve.NOT_BLANK
    ], tn([
      T("eValue-index0-1")
    ], t.prototype, "eValueFrom1", void 0), tn([
      T("eValue-index1-1")
    ], t.prototype, "eValueTo1", void 0), tn([
      T("eValue-index0-2")
    ], t.prototype, "eValueFrom2", void 0), tn([
      T("eValue-index1-2")
    ], t.prototype, "eValueTo2", void 0), t;
  }(Ve)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ag = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), jn = globalThis && globalThis.__assign || function() {
  return jn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, jn.apply(this, arguments);
}, rn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, li = (
  /** @class */
  function(n) {
    ag(t, n);
    function t() {
      return n.call(this, "textFilter") || this;
    }
    return t.trimInput = function(e) {
      var r = e && e.trim();
      return r === "" ? e : r;
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.textFilterParams = e, this.matcher = this.getTextMatcher(), this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? t.DEFAULT_FORMATTER : t.DEFAULT_LOWERCASE_FORMATTER);
    }, t.prototype.getTextMatcher = function() {
      var e = this.textFilterParams.textCustomComparator;
      return e ? (se.doOnce(function() {
        return console.warn("AG Grid - textCustomComparator is deprecated, use textMatcher instead.");
      }, "textCustomComparator.deprecated"), function(r) {
        var o = r.filterOption, i = r.value, s = r.filterText;
        return e(o, i, s);
      }) : this.textFilterParams.textMatcher || t.DEFAULT_MATCHER;
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionTypes()[e], o = {
        filterType: this.getFilterType(),
        type: r
      }, i = this.getValues(e);
      return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
    }, t.prototype.getFilterType = function() {
      return "text";
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
    }, t.prototype.getInputs = function() {
      return [
        [this.eValueFrom1, this.eValueTo1],
        [this.eValueFrom2, this.eValueTo2]
      ];
    }, t.prototype.getValues = function(e) {
      var r = this, o = [];
      return this.forEachInput(function(i, s, a, l) {
        if (e === a && s < l) {
          var u = $r(i.getValue()), p = (r.textFilterParams.trimInput ? t.trimInput(u) : u) || null;
          o.push(p), i.setValue(p, !0);
        }
      }), o;
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueTemplate = function(e) {
      var r = e === Ke.One ? "1" : "2";
      return (
        /* html */
        `
            <div class="ag-filter-body" ref="eCondition` + r + `Body" role="presentation">
                <ag-input-text-field class=".ag-filter-from ag-filter-filter" ref="eValue-index0-` + r + `"></ag-input-text-field>
                <ag-input-text-field class="ag-filter-to ag-filter-filter" ref="eValue-index1-` + r + `"></ag-input-text-field>
            </div>`
      );
    }, t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, o = r.filter, i = r.filterTo, s = r.type;
      return [
        o || null,
        i || null
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.evaluateNullValue = function(e) {
      var r = [
        Ae.NOT_EQUAL,
        Ae.NOT_CONTAINS,
        Ae.BLANK
      ];
      return e ? r.indexOf(e) >= 0 : !1;
    }, t.prototype.evaluateNonNullValue = function(e, r, o, i) {
      var s = this, a = e.map(function(m) {
        return s.formatter(m);
      }) || [], l = this.formatter(r), u = this.textFilterParams, p = u.api, c = u.colDef, d = u.column, f = u.columnApi, g = u.context, y = u.textFormatter;
      if (o.type === Ae.BLANK)
        return this.isBlank(r);
      if (o.type === Ae.NOT_BLANK)
        return !this.isBlank(r);
      var C = {
        api: p,
        colDef: c,
        column: d,
        columnApi: f,
        context: g,
        node: i.node,
        data: i.data,
        filterOption: o.type,
        value: l,
        textFormatter: y
      };
      return a.some(function(m) {
        return s.matcher(jn(jn({}, C), { filterText: m }));
      });
    }, t.DEFAULT_FILTER_OPTIONS = [
      Ae.CONTAINS,
      Ae.NOT_CONTAINS,
      Ae.EQUALS,
      Ae.NOT_EQUAL,
      Ae.STARTS_WITH,
      Ae.ENDS_WITH,
      Ae.BLANK,
      Ae.NOT_BLANK
    ], t.DEFAULT_FORMATTER = function(e) {
      return e;
    }, t.DEFAULT_LOWERCASE_FORMATTER = function(e) {
      return e == null ? null : e.toString().toLowerCase();
    }, t.DEFAULT_MATCHER = function(e) {
      var r = e.filterOption, o = e.value, i = e.filterText;
      if (i == null)
        return !1;
      switch (r) {
        case t.CONTAINS:
          return o.indexOf(i) >= 0;
        case t.NOT_CONTAINS:
          return o.indexOf(i) < 0;
        case t.EQUALS:
          return o === i;
        case t.NOT_EQUAL:
          return o != i;
        case t.STARTS_WITH:
          return o.indexOf(i) === 0;
        case t.ENDS_WITH:
          var s = o.lastIndexOf(i);
          return s >= 0 && s === o.length - i.length;
        default:
          return !1;
      }
    }, rn([
      T("eValue-index0-1")
    ], t.prototype, "eValueFrom1", void 0), rn([
      T("eValue-index1-1")
    ], t.prototype, "eValueTo1", void 0), rn([
      T("eValue-index0-2")
    ], t.prototype, "eValueFrom2", void 0), rn([
      T("eValue-index1-2")
    ], t.prototype, "eValueTo2", void 0), t;
  }(Ae)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var lg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Vi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Hp = (
  /** @class */
  function(n) {
    lg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.resetTemplate();
    }, t.prototype.resetTemplate = function(e) {
      this.setTemplate(
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterInput"></ag-input-text-field>
            </div>
        `,
        e
      );
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.onParentModelChanged = function(e, r) {
      this.isEventFromFloatingFilter(r) || (this.setLastTypeFromModel(e), this.eFloatingFilterInput.setValue(this.getTextFromModel(e)), this.setEditable(this.canWeEditAfterModelFromParentFilter(e)));
    }, t.prototype.init = function(e) {
      n.prototype.init.call(this, e), this.params = e, this.applyActive = Vo.isUseApplyButton(this.params.filterParams);
      var r = this.params.filterParams.allowedCharPattern;
      if (r != null && this.resetTemplate({ eFloatingFilterInput: { allowedCharPattern: r } }), !this.isReadOnly()) {
        var o = Vo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), i = ur(this.syncUpWithParentFilter.bind(this), o), s = this.eFloatingFilterInput.getGui();
        this.addManagedListener(s, "input", i), this.addManagedListener(s, "keypress", i), this.addManagedListener(s, "keydown", i);
      }
      var a = e.column.getDefinition();
      (this.isReadOnly() || a.filterParams && a.filterParams.filterOptions && a.filterParams.filterOptions.length === 1 && a.filterParams.filterOptions[0] === "inRange") && this.eFloatingFilterInput.setDisabled(!0);
      var l = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), u = this.gridOptionsWrapper.getLocaleTextFunc();
      this.eFloatingFilterInput.setInputAriaLabel(l + " " + u("ariaFilterInput", "Filter Input"));
    }, t.prototype.syncUpWithParentFilter = function(e) {
      var r = this, o = e.key === P.ENTER;
      if (!(this.applyActive && !o)) {
        var i = this.eFloatingFilterInput.getValue();
        this.params.filterParams.trimInput && (i = li.trimInput(i), this.eFloatingFilterInput.setValue(i, !0)), this.params.parentFilterInstance(function(s) {
          s && s.onFloatingFilterChanged(r.getLastType() || null, i || null);
        });
      }
    }, t.prototype.conditionToString = function(e, r) {
      var o = (r || {}).numberOfInputs, i = e.type == Ae.IN_RANGE || o === 2;
      return i ? e.filter + "-" + e.filterTo : e.filter != null ? "" + e.filter : "" + e.type;
    }, t.prototype.setEditable = function(e) {
      this.eFloatingFilterInput.setDisabled(!e);
    }, Vi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Vi([
      T("eFloatingFilterInput")
    ], t.prototype, "eFloatingFilterInput", void 0), Vi([
      G
    ], t.prototype, "postConstruct", null), t;
  }(xp)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ug = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), pg = (
  /** @class */
  function(n) {
    ug(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getDefaultFilterOptions = function() {
      return Ea.DEFAULT_FILTER_OPTIONS;
    }, t;
  }(Hp)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var cg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wp = (
  /** @class */
  function(n) {
    cg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getDefaultFilterOptions = function() {
      return li.DEFAULT_FILTER_OPTIONS;
    }, t;
  }(Hp)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var bt = (
  /** @class */
  function() {
    function n(t, e) {
      var r = this;
      e === void 0 && (e = !1), this.destroyFuncs = [], this.touching = !1, this.eventService = new qt(), this.eElement = t, this.preventMouseClick = e;
      var o = this.onTouchStart.bind(this), i = this.onTouchMove.bind(this), s = this.onTouchEnd.bind(this);
      this.eElement.addEventListener("touchstart", o, { passive: !0 }), this.eElement.addEventListener("touchmove", i, { passive: !0 }), this.eElement.addEventListener("touchend", s, { passive: !1 }), this.destroyFuncs.push(function() {
        r.eElement.removeEventListener("touchstart", o, { passive: !0 }), r.eElement.removeEventListener("touchmove", i, { passive: !0 }), r.eElement.removeEventListener("touchend", s, { passive: !1 });
      });
    }
    return n.prototype.getActiveTouch = function(t) {
      for (var e = 0; e < t.length; e++) {
        var r = t[e].identifier === this.touchStart.identifier;
        if (r)
          return t[e];
      }
      return null;
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService.removeEventListener(t, e);
    }, n.prototype.onTouchStart = function(t) {
      var e = this;
      if (!this.touching) {
        this.touchStart = t.touches[0], this.touching = !0, this.moved = !1;
        var r = this.touchStart;
        window.setTimeout(function() {
          var o = e.touchStart === r;
          if (e.touching && o && !e.moved) {
            e.moved = !0;
            var i = {
              type: n.EVENT_LONG_TAP,
              touchStart: e.touchStart,
              touchEvent: t
            };
            e.eventService.dispatchEvent(i);
          }
        }, 500);
      }
    }, n.prototype.onTouchMove = function(t) {
      if (this.touching) {
        var e = this.getActiveTouch(t.touches);
        if (e) {
          var r = !ya(e, this.touchStart, 4);
          r && (this.moved = !0);
        }
      }
    }, n.prototype.onTouchEnd = function(t) {
      if (this.touching) {
        if (!this.moved) {
          var e = {
            type: n.EVENT_TAP,
            touchStart: this.touchStart
          };
          this.eventService.dispatchEvent(e), this.checkForDoubleTap();
        }
        this.preventMouseClick && t.preventDefault(), this.touching = !1;
      }
    }, n.prototype.checkForDoubleTap = function() {
      var t = (/* @__PURE__ */ new Date()).getTime();
      if (this.lastTapTime && this.lastTapTime > 0) {
        var e = t - this.lastTapTime;
        if (e > n.DOUBLE_TAP_MILLIS) {
          var r = {
            type: n.EVENT_DOUBLE_TAP,
            touchStart: this.touchStart
          };
          this.eventService.dispatchEvent(r), this.lastTapTime = null;
        } else
          this.lastTapTime = t;
      } else
        this.lastTapTime = t;
    }, n.prototype.destroy = function() {
      this.destroyFuncs.forEach(function(t) {
        return t();
      });
    }, n.EVENT_TAP = "tap", n.EVENT_DOUBLE_TAP = "doubleTap", n.EVENT_LONG_TAP = "longTap", n.DOUBLE_TAP_MILLIS = 500, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var dg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, hg = (
  /** @class */
  function(n) {
    dg(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.lastMovingChanged = 0, e;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.refresh = function(e) {
      return this.params = e, this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort ? !1 : (this.setDisplayName(e), !0);
    }, t.prototype.workOutTemplate = function() {
      var e = Hu(this.params.template, t.TEMPLATE);
      return e = e && e.trim ? e.trim() : e, e;
    }, t.prototype.init = function(e) {
      this.params = e, this.currentTemplate = this.workOutTemplate(), this.setTemplate(this.currentTemplate), this.setupTap(), this.setupIcons(e.column), this.setMenu(), this.setupSort(), this.setupFilterIcon(), this.setDisplayName(e);
    }, t.prototype.setDisplayName = function(e) {
      if (this.currentDisplayName != e.displayName) {
        this.currentDisplayName = e.displayName;
        var r = kt(this.currentDisplayName);
        this.eText && (this.eText.innerHTML = r);
      }
    }, t.prototype.setupIcons = function(e) {
      this.addInIcon("sortAscending", this.eSortAsc, e), this.addInIcon("sortDescending", this.eSortDesc, e), this.addInIcon("sortUnSort", this.eSortNone, e), this.addInIcon("menu", this.eMenu, e), this.addInIcon("filter", this.eFilter, e);
    }, t.prototype.addInIcon = function(e, r, o) {
      if (r != null) {
        var i = xe(e, this.gridOptionsWrapper, o);
        i && r.appendChild(i);
      }
    }, t.prototype.setupTap = function() {
      var e = this, r = this.gridOptionsWrapper;
      if (!r.isSuppressTouch()) {
        var o = new bt(this.getGui(), !0), i = r.isSuppressMenuHide(), s = i && O(this.eMenu), a = s ? new bt(this.eMenu, !0) : o;
        if (this.params.enableMenu) {
          var l = s ? "EVENT_TAP" : "EVENT_LONG_TAP", u = function(c) {
            r.getApi().showColumnMenuAfterMouseClick(e.params.column, c.touchStart);
          };
          this.addManagedListener(a, bt[l], u);
        }
        if (this.params.enableSorting) {
          var p = function(c) {
            var d = c.touchStart.target;
            i && e.eMenu.contains(d) || e.sortController.progressSort(e.params.column, !1, "uiColumnSorted");
          };
          this.addManagedListener(o, bt.EVENT_TAP, p);
        }
        this.addDestroyFunc(function() {
          return o.destroy();
        }), s && this.addDestroyFunc(function() {
          return a.destroy();
        });
      }
    }, t.prototype.workOutShowMenu = function() {
      var e = !this.gridOptionsWrapper.isSuppressMenuHide(), r = ro() && e, o = this.params.enableMenu && !r;
      return o;
    }, t.prototype.setMenu = function() {
      var e = this;
      if (this.eMenu) {
        if (this.currentShowMenu = this.workOutShowMenu(), !this.currentShowMenu) {
          Mt(this.eMenu);
          return;
        }
        var r = this.gridOptionsWrapper.isSuppressMenuHide();
        this.addManagedListener(this.eMenu, "click", function() {
          return e.showMenu(e.eMenu);
        }), this.eMenu.classList.toggle("ag-header-menu-always-show", r);
      }
    }, t.prototype.showMenu = function(e) {
      e || (e = this.eMenu), this.menuFactory.showMenuAfterButtonClick(this.params.column, e, "columnMenu");
    }, t.prototype.removeSortIcons = function() {
      Mt(this.eSortAsc), Mt(this.eSortDesc), Mt(this.eSortNone), Mt(this.eSortOrder);
    }, t.prototype.workOutSort = function() {
      return this.params.enableSorting;
    }, t.prototype.setupSort = function() {
      var e = this;
      if (this.currentSort = this.params.enableSorting, !this.currentSort) {
        this.removeSortIcons();
        return;
      }
      var r = this.gridOptionsWrapper.isMultiSortKeyCtrl();
      this.addManagedListener(this.params.column, pe.EVENT_MOVING_CHANGED, function() {
        e.lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();
      }), this.eLabel && this.addManagedListener(this.eLabel, "click", function(o) {
        var i = e.params.column.isMoving(), s = (/* @__PURE__ */ new Date()).getTime(), a = s - e.lastMovingChanged < 50, l = i || a;
        if (!l) {
          var u = r ? o.ctrlKey || o.metaKey : o.shiftKey;
          e.params.progressSort(u);
        }
      }), this.addManagedListener(this.params.column, pe.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.onSortChanged(), this.addManagedListener(this.eventService, v.EVENT_SORT_CHANGED, this.setMultiSortOrder.bind(this)), this.setMultiSortOrder();
    }, t.prototype.onSortChanged = function() {
      if (this.addOrRemoveCssClass("ag-header-cell-sorted-asc", this.params.column.isSortAscending()), this.addOrRemoveCssClass("ag-header-cell-sorted-desc", this.params.column.isSortDescending()), this.addOrRemoveCssClass("ag-header-cell-sorted-none", this.params.column.isSortNone()), this.eSortAsc && this.eSortAsc.classList.toggle("ag-hidden", !this.params.column.isSortAscending()), this.eSortDesc && this.eSortDesc.classList.toggle("ag-hidden", !this.params.column.isSortDescending()), this.eSortNone) {
        var e = !this.params.column.getColDef().unSortIcon && !this.gridOptionsWrapper.isUnSortIcon();
        this.eSortNone.classList.toggle("ag-hidden", e || !this.params.column.isSortNone());
      }
    }, t.prototype.setMultiSortOrder = function() {
      if (this.eSortOrder) {
        var e = this.params.column, r = this.sortController.getColumnsWithSortingOrdered(), o = r.indexOf(e), i = r.length > 1, s = e.isSorting() && i;
        Ee(this.eSortOrder, s), o >= 0 ? this.eSortOrder.innerHTML = (o + 1).toString() : Ct(this.eSortOrder);
      }
    }, t.prototype.setupFilterIcon = function() {
      this.eFilter && (this.addManagedListener(this.params.column, pe.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.onFilterChanged());
    }, t.prototype.onFilterChanged = function() {
      var e = this.params.column.isFilterActive();
      this.eFilter.classList.toggle("ag-hidden", !e);
    }, t.TEMPLATE = `<div class="ag-cell-label-container" role="presentation">
            <span ref="eMenu" class="ag-header-icon ag-header-cell-menu-button" aria-hidden="true"></span>
            <div ref="eLabel" class="ag-header-cell-label" role="presentation">
                <span ref="eText" class="ag-header-cell-text"></span>
                <span ref="eFilter" class="ag-header-icon ag-header-label-icon ag-filter-icon" aria-hidden="true"></span>
                <span ref="eSortOrder" class="ag-header-icon ag-header-label-icon ag-sort-order" aria-hidden="true"></span>
                <span ref="eSortAsc" class="ag-header-icon ag-header-label-icon ag-sort-ascending-icon" aria-hidden="true"></span>
                <span ref="eSortDesc" class="ag-header-icon ag-header-label-icon ag-sort-descending-icon" aria-hidden="true"></span>
                <span ref="eSortNone" class="ag-header-icon ag-header-label-icon ag-sort-none-icon" aria-hidden="true"></span>
            </div>
        </div>`, Nt([
      h("sortController")
    ], t.prototype, "sortController", void 0), Nt([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), Nt([
      T("eFilter")
    ], t.prototype, "eFilter", void 0), Nt([
      T("eSortAsc")
    ], t.prototype, "eSortAsc", void 0), Nt([
      T("eSortDesc")
    ], t.prototype, "eSortDesc", void 0), Nt([
      T("eSortNone")
    ], t.prototype, "eSortNone", void 0), Nt([
      T("eSortOrder")
    ], t.prototype, "eSortOrder", void 0), Nt([
      T("eMenu")
    ], t.prototype, "eMenu", void 0), Nt([
      T("eLabel")
    ], t.prototype, "eLabel", void 0), Nt([
      T("eText")
    ], t.prototype, "eText", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var fg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, gg = (
  /** @class */
  function(n) {
    fg(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      this.params = e, this.checkWarnings(), this.setupLabel(), this.addGroupExpandIcon(), this.setupExpandIcons();
    }, t.prototype.checkWarnings = function() {
      var e = this.params;
      if (e.template) {
        var r = "AG Grid: A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)";
        ve(function() {
          return console.warn(r);
        }, "HeaderGroupComp.templateNotSupported");
      }
    }, t.prototype.setupExpandIcons = function() {
      var e = this;
      this.addInIcon("columnGroupOpened", "agOpened"), this.addInIcon("columnGroupClosed", "agClosed");
      var r = function(s) {
        if (!Bt(s)) {
          var a = !e.params.columnGroup.isExpanded();
          e.columnModel.setColumnGroupOpened(e.params.columnGroup.getProvidedColumnGroup(), a, "uiColumnExpanded");
        }
      };
      this.addTouchAndClickListeners(this.eCloseIcon, r), this.addTouchAndClickListeners(this.eOpenIcon, r);
      var o = function(s) {
        Qr(s);
      };
      this.addManagedListener(this.eCloseIcon, "dblclick", o), this.addManagedListener(this.eOpenIcon, "dblclick", o), this.addManagedListener(this.getGui(), "dblclick", r), this.updateIconVisibility();
      var i = this.params.columnGroup.getProvidedColumnGroup();
      this.addManagedListener(i, Pe.EVENT_EXPANDED_CHANGED, this.updateIconVisibility.bind(this)), this.addManagedListener(i, Pe.EVENT_EXPANDABLE_CHANGED, this.updateIconVisibility.bind(this));
    }, t.prototype.addTouchAndClickListeners = function(e, r) {
      var o = new bt(e, !0);
      this.addManagedListener(o, bt.EVENT_TAP, r), this.addDestroyFunc(function() {
        return o.destroy();
      }), this.addManagedListener(e, "click", r);
    }, t.prototype.updateIconVisibility = function() {
      var e = this.params.columnGroup;
      if (e.isExpandable()) {
        var r = this.params.columnGroup.isExpanded();
        Ee(this.eOpenIcon, r), Ee(this.eCloseIcon, !r);
      } else
        Ee(this.eOpenIcon, !1), Ee(this.eCloseIcon, !1);
    }, t.prototype.addInIcon = function(e, r) {
      var o = xe(e, this.gridOptionsWrapper, null);
      o && this.getRefElement(r).appendChild(o);
    }, t.prototype.addGroupExpandIcon = function() {
      if (!this.params.columnGroup.isExpandable()) {
        Ee(this.eOpenIcon, !1), Ee(this.eCloseIcon, !1);
        return;
      }
    }, t.prototype.setupLabel = function() {
      var e = this.params.displayName;
      if (O(e)) {
        var r = kt(e);
        this.getRefElement("agLabel").innerHTML = r;
      }
    }, t.TEMPLATE = `<div class="ag-header-group-cell-label" ref="agContainer" role="presentation">
            <span ref="agLabel" class="ag-header-group-text" role="presentation"></span>
            <span ref="agOpened" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded"></span>
            <span ref="agClosed" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed"></span>
        </div>`, Bi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Bi([
      T("agOpened")
    ], t.prototype, "eOpenIcon", void 0), Bi([
      T("agClosed")
    ], t.prototype, "eCloseIcon", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var vg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), so = (
  /** @class */
  function(n) {
    vg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.isPopup = function() {
      return !0;
    }, t.prototype.setParentComponent = function(e) {
      e.addCssClass("ag-has-popup"), n.prototype.setParentComponent.call(this, e);
    }, t.prototype.destroy = function() {
      var e = this.parentComponent, r = e && e.isAlive();
      r && e.getGui().classList.remove("ag-has-popup"), n.prototype.destroy.call(this);
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var yg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Cg = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Vp = (
  /** @class */
  function(n) {
    yg(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      this.params = e, this.focusAfterAttached = e.cellStartedEdit, this.eTextArea.setMaxLength(e.maxLength || 200).setCols(e.cols || 60).setRows(e.rows || 10), O(e.value) && this.eTextArea.setValue(e.value.toString(), !0), this.addGuiEventListener("keydown", this.onKeyDown.bind(this));
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key;
      (r === P.LEFT || r === P.UP || r === P.RIGHT || r === P.DOWN || e.shiftKey && r === P.ENTER) && e.stopPropagation();
    }, t.prototype.afterGuiAttached = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc();
      this.eTextArea.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), this.focusAfterAttached && this.eTextArea.getFocusableElement().focus();
    }, t.prototype.getValue = function() {
      return this.params.parseValue(this.eTextArea.getValue());
    }, t.TEMPLATE = `<div class="ag-large-text" tabindex="0">
            <ag-input-text-area ref="eTextArea" class="ag-large-text-input"></ag-input-text-area>
        </div>`, Cg([
      T("eTextArea")
    ], t.prototype, "eTextArea", void 0), t;
  }(so)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var mg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ra = (
  /** @class */
  function(n) {
    mg(t, n);
    function t() {
      var e = n.call(this, '<div class="ag-cell-edit-wrapper"><ag-select class="ag-cell-editor" ref="eSelect"></ag-select></div>') || this;
      return e.startedByEnter = !1, e;
    }
    return t.prototype.init = function(e) {
      var r = this;
      if (this.focusAfterAttached = e.cellStartedEdit, K(e.values)) {
        console.warn("AG Grid: no values found for select cellEditor");
        return;
      }
      this.startedByEnter = e.eventKey != null ? e.eventKey === P.ENTER : !1;
      var o = !1;
      e.values.forEach(function(i) {
        var s = { value: i }, a = r.valueFormatterService.formatValue(e.column, null, null, i), l = a != null;
        s.text = l ? a : i, r.eSelect.addOption(s), o = o || e.value === i;
      }), o ? this.eSelect.setValue(e.value, !0) : e.values.length && this.eSelect.setValue(e.values[0], !0), this.gridOptionsWrapper.isFullRowEdit() || this.eSelect.onValueChange(function() {
        return e.stopEditing();
      });
    }, t.prototype.afterGuiAttached = function() {
      this.focusAfterAttached && this.eSelect.getFocusableElement().focus(), this.startedByEnter && this.eSelect.showPicker();
    }, t.prototype.focusIn = function() {
      this.eSelect.getFocusableElement().focus();
    }, t.prototype.getValue = function() {
      return this.eSelect.getValue();
    }, t.prototype.isPopup = function() {
      return !1;
    }, Pl([
      h("valueFormatterService")
    ], t.prototype, "valueFormatterService", void 0), Pl([
      T("eSelect")
    ], t.prototype, "eSelect", void 0), t;
  }(so)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var _g = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bp = (
  /** @class */
  function(n) {
    _g(t, n);
    function t() {
      var e = n.call(this) || this;
      return ve(function() {
        return console.warn('AG Grid: The PopupSelectCellEditor (agPopupSelectCellEditor) is deprecated. Instead use {cellEditor: "agSelectCellEditor", cellEditorPopup: true} ');
      }, "PopupSelectCellEditor.deprecated"), e;
    }
    return t.prototype.isPopup = function() {
      return !0;
    }, t;
  }(Ra)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var wg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Eg = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Un = (
  /** @class */
  function(n) {
    wg(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      this.params = e;
      var r = this.eInput, o;
      e.cellStartedEdit ? (this.focusAfterAttached = !0, e.eventKey === P.BACKSPACE || e.eventKey === P.DELETE ? o = "" : e.charPress ? o = e.charPress : (o = this.getStartValue(e), e.eventKey !== P.F2 && (this.highlightAllOnFocus = !0))) : (this.focusAfterAttached = !1, o = this.getStartValue(e)), o != null && r.setValue(o, !0), this.addManagedListener(r.getGui(), "keydown", function(i) {
        var s = i.key;
        (s === P.PAGE_UP || s === P.PAGE_DOWN) && i.preventDefault();
      });
    }, t.prototype.afterGuiAttached = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.eInput;
      if (r.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), !!this.focusAfterAttached) {
        ti() || r.getFocusableElement().focus();
        var o = r.getInputElement();
        if (this.highlightAllOnFocus)
          o.select();
        else {
          var i = r.getValue(), s = O(i) && i.length || 0;
          s && o.setSelectionRange(s, s);
        }
      }
    }, t.prototype.focusIn = function() {
      var e = this.eInput, r = e.getFocusableElement(), o = e.getInputElement();
      r.focus(), o.select();
    }, t.prototype.getValue = function() {
      var e = this.eInput;
      return this.params.parseValue(e.getValue());
    }, t.prototype.getStartValue = function(e) {
      var r = e.useFormatter || e.column.getColDef().refData;
      return r ? e.formatValue(e.value) : e.value;
    }, t.prototype.isPopup = function() {
      return !1;
    }, t.TEMPLATE = '<div class="ag-cell-edit-wrapper"><ag-input-text-field class="ag-cell-editor" ref="eInput"></ag-input-text-field></div>', Eg([
      T("eInput")
    ], t.prototype, "eInput", void 0), t;
  }(so)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Rg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), jp = (
  /** @class */
  function(n) {
    Rg(t, n);
    function t() {
      var e = n.call(this) || this;
      return ve(function() {
        return console.warn('AG Grid: The PopupTextCellEditor (agPopupTextCellEditor) is deprecated. Instead use {cellEditor: "agTextCellEditor", cellEditorPopup: true} ');
      }, "PopupTextCellEditor.deprecated"), e;
    }
    return t.prototype.isPopup = function() {
      return !0;
    }, t;
  }(Un)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Sg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Og = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Tg = "↑", Pg = "↓", Up = (
  /** @class */
  function(n) {
    Sg(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.refreshCount = 0, e;
    }
    return t.prototype.init = function(e) {
      this.eValue = this.queryForHtmlElement(".ag-value-change-value"), this.eDelta = this.queryForHtmlElement(".ag-value-change-delta"), this.refresh(e);
    }, t.prototype.showDelta = function(e, r) {
      var o = Math.abs(r), i = e.formatValue(o), s = O(i) ? i : o, a = r >= 0;
      a ? this.eDelta.innerHTML = Tg + s : this.eDelta.innerHTML = Pg + s, this.eDelta.classList.toggle("ag-value-change-delta-up", a), this.eDelta.classList.toggle("ag-value-change-delta-down", !a);
    }, t.prototype.setTimerToRemoveDelta = function() {
      var e = this;
      this.refreshCount++;
      var r = this.refreshCount;
      window.setTimeout(function() {
        r === e.refreshCount && e.hideDeltaValue();
      }, 2e3);
    }, t.prototype.hideDeltaValue = function() {
      this.eValue.classList.remove("ag-value-change-value-highlight"), Ct(this.eDelta);
    }, t.prototype.refresh = function(e) {
      var r = e.value;
      if (r === this.lastValue || (O(e.valueFormatted) ? this.eValue.innerHTML = e.valueFormatted : O(e.value) ? this.eValue.innerHTML = r : Ct(this.eValue), this.filterManager.isSuppressFlashingCellsBecauseFiltering()))
        return !1;
      if (typeof r == "number" && typeof this.lastValue == "number") {
        var o = r - this.lastValue;
        this.showDelta(e, o);
      }
      return this.lastValue && this.eValue.classList.add("ag-value-change-value-highlight"), this.setTimerToRemoveDelta(), this.lastValue = r, !0;
    }, t.TEMPLATE = '<span><span class="ag-value-change-delta"></span><span class="ag-value-change-value"></span></span>', Og([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var bg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Dg = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, kp = (
  /** @class */
  function(n) {
    bg(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.refreshCount = 0, e.eCurrent = e.queryForHtmlElement(".ag-value-slide-current"), e;
    }
    return t.prototype.init = function(e) {
      this.refresh(e);
    }, t.prototype.addSlideAnimation = function() {
      var e = this;
      this.refreshCount++;
      var r = this.refreshCount;
      this.ePrevious && this.getGui().removeChild(this.ePrevious), this.ePrevious = Ue('<span class="ag-value-slide-previous ag-value-slide-out"></span>'), this.ePrevious.innerHTML = this.eCurrent.innerHTML, this.getGui().insertBefore(this.ePrevious, this.eCurrent), window.setTimeout(function() {
        r === e.refreshCount && e.ePrevious.classList.add("ag-value-slide-out-end");
      }, 50), window.setTimeout(function() {
        r === e.refreshCount && (e.getGui().removeChild(e.ePrevious), e.ePrevious = null);
      }, 3e3);
    }, t.prototype.refresh = function(e) {
      var r = e.value;
      return K(r) && (r = ""), r === this.lastValue || this.filterManager.isSuppressFlashingCellsBecauseFiltering() ? !1 : (this.addSlideAnimation(), this.lastValue = r, O(e.valueFormatted) ? this.eCurrent.innerHTML = e.valueFormatted : O(e.value) ? this.eCurrent.innerHTML = r : Ct(this.eCurrent), !0);
    }, t.TEMPLATE = `<span>
            <span class="ag-value-slide-current"></span>
        </span>`, Dg([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ut;
(function(n) {
  n[n.Above = 0] = "Above", n[n.Below = 1] = "Below";
})(Ut || (Ut = {}));
var te = (
  /** @class */
  function() {
    function n(t) {
      this.rowIndex = null, this.key = null, this.childrenMapped = {}, this.displayed = !1, this.rowTop = null, this.oldRowTop = null, this.selectable = !0, this.__objectId = n.OBJECT_ID_SEQUENCE++, this.__autoHeights = {}, this.alreadyRendered = !1, this.highlighted = null, this.selected = !1, this.beans = t;
    }
    return n.prototype.setData = function(t) {
      this.setDataCommon(t, !1);
    }, n.prototype.updateData = function(t) {
      this.setDataCommon(t, !0);
    }, n.prototype.setDataCommon = function(t, e) {
      var r = this.data;
      this.data = t, this.beans.valueCache.onDataChanged(), this.updateDataOnDetailNode(), this.checkRowSelectable();
      var o = this.createDataChangedEvent(t, r, e);
      this.dispatchLocalEvent(o);
    }, n.prototype.updateDataOnDetailNode = function() {
      this.detailNode && (this.detailNode.data = this.data);
    }, n.prototype.createDataChangedEvent = function(t, e, r) {
      return {
        type: n.EVENT_DATA_CHANGED,
        node: this,
        oldData: e,
        newData: t,
        update: r
      };
    }, n.prototype.createLocalRowEvent = function(t) {
      return {
        type: t,
        node: this
      };
    }, n.prototype.getRowIndexString = function() {
      return this.rowPinned === w.PINNED_TOP ? "t-" + this.rowIndex : this.rowPinned === w.PINNED_BOTTOM ? "b-" + this.rowIndex : this.rowIndex.toString();
    }, n.prototype.createDaemonNode = function() {
      var t = new n(this.beans);
      return t.id = this.id, t.data = this.data, t.daemon = !0, t.selected = this.selected, t.level = this.level, t;
    }, n.prototype.setDataAndId = function(t, e) {
      var r = O(this.id) ? this.createDaemonNode() : null, o = this.data;
      this.data = t, this.updateDataOnDetailNode(), this.setId(e), this.beans.selectionService.syncInRowNode(this, r), this.checkRowSelectable();
      var i = this.createDataChangedEvent(t, o, !1);
      this.dispatchLocalEvent(i);
    }, n.prototype.checkRowSelectable = function() {
      var t = this.beans.gridOptionsWrapper.getIsRowSelectableFunc();
      this.setRowSelectable(t ? t(this) : !0);
    }, n.prototype.setRowSelectable = function(t) {
      this.selectable !== t && (this.selectable = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_SELECTABLE_CHANGED)));
    }, n.prototype.setId = function(t) {
      var e = this.beans.gridOptionsWrapper.getRowIdFunc();
      if (e)
        if (this.data) {
          var r = this.getGroupKeys(!0);
          this.id = e({
            api: this.beans.gridApi,
            columnApi: this.beans.columnApi,
            data: this.data,
            parentKeys: r.length > 0 ? r : void 0,
            level: this.level
          }), this.id !== null && typeof this.id == "string" && this.id.startsWith(n.ID_PREFIX_ROW_GROUP) && console.error("AG Grid: Row IDs cannot start with " + n.ID_PREFIX_ROW_GROUP + ", this is a reserved prefix for AG Grid's row grouping feature."), this.id !== null && typeof this.id != "string" && (this.id = "" + this.id);
        } else
          this.id = void 0;
      else
        this.id = t;
    }, n.prototype.getGroupKeys = function(t) {
      t === void 0 && (t = !1);
      var e = [], r = this;
      for (t && (r = r.parent); r && r.level >= 0; )
        e.push(r.key), r = r.parent;
      return e.reverse(), e;
    }, n.prototype.isPixelInRange = function(t) {
      return !O(this.rowTop) || !O(this.rowHeight) ? !1 : t >= this.rowTop && t < this.rowTop + this.rowHeight;
    }, n.prototype.setFirstChild = function(t) {
      this.firstChild !== t && (this.firstChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_FIRST_CHILD_CHANGED)));
    }, n.prototype.setLastChild = function(t) {
      this.lastChild !== t && (this.lastChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_LAST_CHILD_CHANGED)));
    }, n.prototype.setChildIndex = function(t) {
      this.childIndex !== t && (this.childIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_CHILD_INDEX_CHANGED)));
    }, n.prototype.setRowTop = function(t) {
      this.oldRowTop = this.rowTop, this.rowTop !== t && (this.rowTop = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_TOP_CHANGED)), this.setDisplayed(t !== null));
    }, n.prototype.clearRowTopAndRowIndex = function() {
      this.oldRowTop = null, this.setRowTop(null), this.setRowIndex(null);
    }, n.prototype.setDisplayed = function(t) {
      this.displayed !== t && (this.displayed = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DISPLAYED_CHANGED)));
    }, n.prototype.setDragging = function(t) {
      this.dragging !== t && (this.dragging = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DRAGGING_CHANGED)));
    }, n.prototype.setHighlighted = function(t) {
      t !== this.highlighted && (this.highlighted = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HIGHLIGHT_CHANGED)));
    }, n.prototype.setAllChildrenCount = function(t) {
      this.allChildrenCount !== t && (this.allChildrenCount = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ALL_CHILDREN_COUNT_CHANGED)));
    }, n.prototype.setMaster = function(t) {
      this.master !== t && (this.master && !t && (this.expanded = !1), this.master = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_MASTER_CHANGED)));
    }, n.prototype.setGroup = function(t) {
      this.group !== t && (this.group && !t && (this.expanded = !1), this.group = t, this.updateHasChildren(), this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_GROUP_CHANGED)));
    }, n.prototype.setRowHeight = function(t, e) {
      e === void 0 && (e = !1), this.rowHeight = t, this.rowHeightEstimated = e, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HEIGHT_CHANGED));
    }, n.prototype.setRowAutoHeight = function(t, e) {
      this.__autoHeights || (this.__autoHeights = {});
      var r = this.__autoHeights;
      r[e.getId()] = t, t != null && (this.checkAutoHeightsDebounced == null && (this.checkAutoHeightsDebounced = ur(this.checkAutoHeights.bind(this), 1)), this.checkAutoHeightsDebounced());
    }, n.prototype.checkAutoHeights = function() {
      var t = !1, e = !0, r = 0, o = this.__autoHeights;
      if (o != null) {
        var i = this.beans.columnModel.getAllDisplayedAutoHeightCols();
        if (i.forEach(function(a) {
          var l = o[a.getId()];
          if (l == null) {
            t = !0;
            return;
          }
          e = !1, l > r && (r = l);
        }), !t && ((e || r < 10) && (r = this.beans.gridOptionsWrapper.getRowHeightForNode(this).height), r != this.rowHeight)) {
          this.setRowHeight(r);
          var s = this.beans.rowModel;
          s.onRowHeightChanged && s.onRowHeightChanged();
        }
      }
    }, n.prototype.setRowIndex = function(t) {
      this.rowIndex !== t && (this.rowIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ROW_INDEX_CHANGED)));
    }, n.prototype.setUiLevel = function(t) {
      this.uiLevel !== t && (this.uiLevel = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_UI_LEVEL_CHANGED)));
    }, n.prototype.setExpanded = function(t) {
      if (this.expanded !== t) {
        this.expanded = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_EXPANDED_CHANGED));
        var e = Object.assign({}, this.createGlobalRowEvent(v.EVENT_ROW_GROUP_OPENED), {
          expanded: t
        });
        this.beans.rowNodeEventThrottle.dispatchExpanded(e), this.beans.gridOptionsWrapper.isGroupIncludeFooter() && this.beans.rowRenderer.refreshCells({ rowNodes: [this] });
      }
    }, n.prototype.createGlobalRowEvent = function(t) {
      return {
        type: t,
        node: this,
        data: this.data,
        rowIndex: this.rowIndex,
        rowPinned: this.rowPinned,
        context: this.beans.gridOptionsWrapper.getContext(),
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi()
      };
    }, n.prototype.dispatchLocalEvent = function(t) {
      this.eventService && this.eventService.dispatchEvent(t);
    }, n.prototype.setDataValue = function(t, e, r) {
      var o = this.beans.columnModel.getPrimaryColumn(t), i = this.beans.valueService.getValue(o, this);
      this.beans.valueService.setValue(this, o, e, r), this.dispatchCellChangedEvent(o, e, i);
    }, n.prototype.setGroupValue = function(t, e) {
      var r = this.beans.columnModel.getGridColumn(t);
      K(this.groupData) && (this.groupData = {});
      var o = r.getColId(), i = this.groupData[o];
      i !== e && (this.groupData[o] = e, this.dispatchCellChangedEvent(r, e, i));
    }, n.prototype.setAggData = function(t) {
      var e = this, r = Du([this.aggData, t]), o = this.aggData;
      this.aggData = t, this.eventService && r.forEach(function(i) {
        var s = e.beans.columnModel.getGridColumn(i), a = e.aggData ? e.aggData[i] : void 0, l = o ? o[i] : void 0;
        e.dispatchCellChangedEvent(s, a, l);
      });
    }, n.prototype.updateHasChildren = function() {
      var t = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;
      t !== this.__hasChildren && (this.__hasChildren = !!t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HAS_CHILDREN_CHANGED)));
    }, n.prototype.hasChildren = function() {
      return this.__hasChildren == null && this.updateHasChildren(), this.__hasChildren;
    }, n.prototype.isEmptyRowGroupNode = function() {
      return this.group && gt(this.childrenAfterGroup);
    }, n.prototype.dispatchCellChangedEvent = function(t, e, r) {
      var o = {
        type: n.EVENT_CELL_CHANGED,
        node: this,
        column: t,
        newValue: e,
        oldValue: r
      };
      this.dispatchLocalEvent(o);
    }, n.prototype.resetQuickFilterAggregateText = function() {
      this.quickFilterAggregateText = null;
    }, n.prototype.isExpandable = function() {
      return !!(this.hasChildren() && !this.footer || this.master);
    }, n.prototype.isSelected = function() {
      return this.footer ? this.sibling.isSelected() : this.selected;
    }, n.prototype.depthFirstSearch = function(t) {
      this.childrenAfterGroup && this.childrenAfterGroup.forEach(function(e) {
        return e.depthFirstSearch(t);
      }), t(this);
    }, n.prototype.calculateSelectedFromChildren = function() {
      var t = !1, e = !1, r = !1, o;
      if (this.childrenAfterGroup)
        for (var i = 0; i < this.childrenAfterGroup.length; i++) {
          var s = this.childrenAfterGroup[i];
          if (s.selectable) {
            var a = s.isSelected();
            switch (a) {
              case !0:
                t = !0;
                break;
              case !1:
                e = !0;
                break;
              default:
                r = !0;
                break;
            }
          }
        }
      r ? o = void 0 : t && !e ? o = !0 : !t && e ? o = !1 : o = void 0, this.selectThisNode(o);
    }, n.prototype.setSelectedInitialValue = function(t) {
      this.selected = t;
    }, n.prototype.setSelected = function(t, e, r) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), this.setSelectedParams({
        newValue: t,
        clearSelection: e,
        suppressFinishActions: r,
        rangeSelect: !1
      });
    }, n.prototype.isRowPinned = function() {
      return this.rowPinned === w.PINNED_TOP || this.rowPinned === w.PINNED_BOTTOM;
    }, n.prototype.setSelectedParams = function(t) {
      var e = this.beans.gridOptionsWrapper.isGroupSelectsChildren(), r = t.newValue === !0, o = t.clearSelection === !0, i = t.suppressFinishActions === !0, s = t.rangeSelect === !0, a = e && t.groupSelectsFiltered === !0;
      if (this.id === void 0)
        return console.warn("AG Grid: cannot select node until id for node is known"), 0;
      if (this.rowPinned)
        return console.warn("AG Grid: cannot select pinned rows"), 0;
      if (this.footer)
        return this.sibling.setSelectedParams(t);
      if (s && this.beans.selectionService.getLastSelectedNode()) {
        var l = this.beans.selectionService.getLastSelectedNode() !== this, u = this.beans.gridOptionsWrapper.isRowSelectionMulti();
        if (l && u) {
          var p = this.doRowRangeSelection(t.newValue);
          return this.beans.selectionService.setLastSelectedNode(this), p;
        }
      }
      var c = 0, d = a && this.group;
      if (!d) {
        var f = this.selectThisNode(r);
        f && c++;
      }
      if (e && this.group && (c += this.selectChildNodes(r, a)), !i) {
        var g = r && (o || !this.beans.gridOptionsWrapper.isRowSelectionMulti());
        if (g && (c += this.beans.selectionService.clearOtherNodes(this)), c > 0) {
          this.beans.selectionService.updateGroupsFromChildrenSelections();
          var y = {
            type: v.EVENT_SELECTION_CHANGED,
            api: this.beans.gridApi,
            columnApi: this.beans.columnApi
          };
          this.beans.eventService.dispatchEvent(y);
        }
        r && this.beans.selectionService.setLastSelectedNode(this);
      }
      return c;
    }, n.prototype.doRowRangeSelection = function(t) {
      var e = this;
      t === void 0 && (t = !0);
      var r = this.beans.gridOptionsWrapper.isGroupSelectsChildren(), o = this.beans.selectionService.getLastSelectedNode(), i = this.beans.rowModel.getNodesInRangeForSelection(this, o), s = 0;
      i.forEach(function(l) {
        if (!(l.group && r || t === !1 && e === l)) {
          var u = l.selectThisNode(t);
          u && s++;
        }
      }), this.beans.selectionService.updateGroupsFromChildrenSelections();
      var a = {
        type: v.EVENT_SELECTION_CHANGED,
        api: this.beans.gridApi,
        columnApi: this.beans.columnApi
      };
      return this.beans.eventService.dispatchEvent(a), s;
    }, n.prototype.isParentOfNode = function(t) {
      for (var e = this.parent; e; ) {
        if (e === t)
          return !0;
        e = e.parent;
      }
      return !1;
    }, n.prototype.selectThisNode = function(t) {
      var e = !this.selectable && t, r = this.selected === t;
      if (e || r)
        return !1;
      this.selected = t, this.eventService && this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_ROW_SELECTED));
      var o = this.createGlobalRowEvent(v.EVENT_ROW_SELECTED);
      return this.beans.eventService.dispatchEvent(o), !0;
    }, n.prototype.selectChildNodes = function(t, e) {
      var r = e ? this.childrenAfterFilter : this.childrenAfterGroup;
      if (K(r))
        return 0;
      for (var o = 0, i = 0; i < r.length; i++)
        o += r[i].setSelectedParams({
          newValue: t,
          clearSelection: !1,
          suppressFinishActions: !0,
          groupSelectsFiltered: e
        });
      return o;
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService || (this.eventService = new qt()), this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService && (this.eventService.removeEventListener(t, e), this.eventService.noRegisteredListenersExist() && (this.eventService = null));
    }, n.prototype.onMouseEnter = function() {
      this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_ENTER));
    }, n.prototype.onMouseLeave = function() {
      this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_LEAVE));
    }, n.prototype.getFirstChildOfFirstChild = function(t) {
      for (var e = this, r = !0, o = !1, i = null; r && !o; ) {
        var s = e.parent, a = O(s) && e.firstChild;
        a ? s.rowGroupColumn === t && (o = !0, i = s) : r = !1, e = s;
      }
      return o ? i : null;
    }, n.prototype.isFullWidthCell = function() {
      var t = this.beans.gridOptionsWrapper.getIsFullWidthCellFunc();
      return t ? t(this) : !1;
    }, n.prototype.getRoute = function() {
      if (this.key != null) {
        for (var t = [], e = this; e.key != null; )
          t.push(e.key), e = e.parent;
        return t.reverse();
      }
    }, n.ID_PREFIX_ROW_GROUP = "row-group-", n.ID_PREFIX_TOP_PINNED = "t-", n.ID_PREFIX_BOTTOM_PINNED = "b-", n.OBJECT_ID_SEQUENCE = 0, n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_DATA_CHANGED = "dataChanged", n.EVENT_CELL_CHANGED = "cellChanged", n.EVENT_ALL_CHILDREN_COUNT_CHANGED = "allChildrenCountChanged", n.EVENT_MASTER_CHANGED = "masterChanged", n.EVENT_GROUP_CHANGED = "groupChanged", n.EVENT_MOUSE_ENTER = "mouseEnter", n.EVENT_MOUSE_LEAVE = "mouseLeave", n.EVENT_HEIGHT_CHANGED = "heightChanged", n.EVENT_TOP_CHANGED = "topChanged", n.EVENT_DISPLAYED_CHANGED = "displayedChanged", n.EVENT_FIRST_CHILD_CHANGED = "firstChildChanged", n.EVENT_LAST_CHILD_CHANGED = "lastChildChanged", n.EVENT_CHILD_INDEX_CHANGED = "childIndexChanged", n.EVENT_ROW_INDEX_CHANGED = "rowIndexChanged", n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_HAS_CHILDREN_CHANGED = "hasChildrenChanged", n.EVENT_SELECTABLE_CHANGED = "selectableChanged", n.EVENT_UI_LEVEL_CHANGED = "uiLevelChanged", n.EVENT_HIGHLIGHT_CHANGED = "rowHighlightChanged", n.EVENT_DRAGGING_CHANGED = "draggingChanged", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ag = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), bl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Sa = (
  /** @class */
  function(n) {
    Ag(t, n);
    function t() {
      return n.call(
        this,
        /* html*/
        `
            <div class="ag-selection-checkbox" role="presentation">
                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
            </div>`
      ) || this;
    }
    return t.prototype.postConstruct = function() {
      this.eCheckbox.setPassive(!0);
    }, t.prototype.getCheckboxId = function() {
      return this.eCheckbox.getInputElement().id;
    }, t.prototype.onDataChanged = function() {
      this.onSelectionChanged();
    }, t.prototype.onSelectableChanged = function() {
      this.showOrHideSelect();
    }, t.prototype.onSelectionChanged = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.rowNode.isSelected(), o = r === void 0 ? e("ariaIndeterminate", "indeterminate") : r === !0 ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), i = e("ariaRowToggleSelection", "Press Space to toggle row selection");
      this.eCheckbox.setValue(r, !0), this.eCheckbox.setInputAriaLabel(i + " (" + o + ")");
    }, t.prototype.onCheckedClicked = function(e) {
      var r = this.gridOptionsWrapper.isGroupSelectsFiltered(), o = this.rowNode.setSelectedParams({ newValue: !1, rangeSelect: e.shiftKey, groupSelectsFiltered: r });
      return o;
    }, t.prototype.onUncheckedClicked = function(e) {
      var r = this.gridOptionsWrapper.isGroupSelectsFiltered(), o = this.rowNode.setSelectedParams({ newValue: !0, rangeSelect: e.shiftKey, groupSelectsFiltered: r });
      return o;
    }, t.prototype.init = function(e) {
      var r = this;
      this.rowNode = e.rowNode, this.column = e.column, this.onSelectionChanged(), this.addGuiEventListener("click", function(a) {
        return Qr(a);
      }), this.addGuiEventListener("dblclick", function(a) {
        return Qr(a);
      }), this.addManagedListener(this.eCheckbox.getInputElement(), "click", function(a) {
        var l = r.eCheckbox.getValue(), u = r.eCheckbox.getPreviousValue();
        if (u === void 0 || l === void 0) {
          var p = r.onUncheckedClicked(a || {});
          p === 0 && r.onCheckedClicked(a);
        } else
          l ? r.onCheckedClicked(a) : r.onUncheckedClicked(a || {});
      }), this.addManagedListener(this.rowNode, te.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_DATA_CHANGED, this.onDataChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));
      var o = this.gridOptionsWrapper.getIsRowSelectableFunc(), i = o || this.checkboxCallbackExists();
      if (i) {
        var s = this.showOrHideSelect.bind(this);
        this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, s), this.addManagedListener(this.rowNode, te.EVENT_DATA_CHANGED, s), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, s), this.showOrHideSelect();
      }
      this.eCheckbox.getInputElement().setAttribute("tabindex", "-1");
    }, t.prototype.showOrHideSelect = function() {
      var e = this.rowNode.selectable;
      e && this.checkboxCallbackExists() && (e = this.column.isCellCheckboxSelection(this.rowNode)), this.setVisible(e);
    }, t.prototype.checkboxCallbackExists = function() {
      var e = this.column ? this.column.getColDef() : null;
      return !!e && typeof e.checkboxSelection == "function";
    }, bl([
      T("eCheckbox")
    ], t.prototype, "eCheckbox", void 0), bl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Fg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), hr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Dl = globalThis && globalThis.__values || function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, mt;
(function(n) {
  n[n.ToolPanel = 0] = "ToolPanel", n[n.HeaderCell = 1] = "HeaderCell", n[n.RowDrag = 2] = "RowDrag", n[n.ChartPanel = 3] = "ChartPanel";
})(mt || (mt = {}));
var Rr;
(function(n) {
  n[n.Up = 0] = "Up", n[n.Down = 1] = "Down";
})(Rr || (Rr = {}));
var Ft;
(function(n) {
  n[n.Left = 0] = "Left", n[n.Right = 1] = "Right";
})(Ft || (Ft = {}));
var et = (
  /** @class */
  function(n) {
    Fg(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.dragSourceAndParamsList = [], r.dropTargets = [], r;
    }
    e = t, t.prototype.init = function() {
      this.ePinnedIcon = Ot("columnMovePin", this.gridOptionsWrapper, null), this.eHideIcon = Ot("columnMoveHide", this.gridOptionsWrapper, null), this.eMoveIcon = Ot("columnMoveMove", this.gridOptionsWrapper, null), this.eLeftIcon = Ot("columnMoveLeft", this.gridOptionsWrapper, null), this.eRightIcon = Ot("columnMoveRight", this.gridOptionsWrapper, null), this.eGroupIcon = Ot("columnMoveGroup", this.gridOptionsWrapper, null), this.eAggregateIcon = Ot("columnMoveValue", this.gridOptionsWrapper, null), this.ePivotIcon = Ot("columnMovePivot", this.gridOptionsWrapper, null), this.eDropNotAllowedIcon = Ot("dropNotAllowed", this.gridOptionsWrapper, null);
    }, t.prototype.addDragSource = function(r, o) {
      o === void 0 && (o = !1);
      var i = {
        eElement: r.eElement,
        dragStartPixels: r.dragStartPixels,
        onDragStart: this.onDragStart.bind(this, r),
        onDragStop: this.onDragStop.bind(this),
        onDragging: this.onDragging.bind(this)
      };
      this.dragSourceAndParamsList.push({ params: i, dragSource: r }), this.dragService.addDragSource(i, o);
    }, t.prototype.removeDragSource = function(r) {
      var o = this.dragSourceAndParamsList.find(function(i) {
        return i.dragSource === r;
      });
      o && (this.dragService.removeDragSource(o.params), Ye(this.dragSourceAndParamsList, o));
    }, t.prototype.clearDragSourceParamsList = function() {
      var r = this;
      this.dragSourceAndParamsList.forEach(function(o) {
        return r.dragService.removeDragSource(o.params);
      }), this.dragSourceAndParamsList.length = 0;
    }, t.prototype.nudge = function() {
      this.dragging && this.onDragging(this.eventLastTime, !0);
    }, t.prototype.onDragStart = function(r, o) {
      this.dragging = !0, this.dragSource = r, this.eventLastTime = o, this.dragItem = this.dragSource.getDragItem(), this.lastDropTarget = this.dragSource.dragSourceDropTarget, this.dragSource.onDragStarted && this.dragSource.onDragStarted(), this.createGhost();
    }, t.prototype.onDragStop = function(r) {
      if (this.eventLastTime = null, this.dragging = !1, this.dragSource.onDragStopped && this.dragSource.onDragStopped(), this.lastDropTarget && this.lastDropTarget.onDragStop) {
        var o = this.createDropTargetEvent(this.lastDropTarget, r, null, null, !1);
        this.lastDropTarget.onDragStop(o);
      }
      this.lastDropTarget = null, this.dragItem = null, this.removeGhost();
    }, t.prototype.onDragging = function(r, o) {
      var i = this, s = this.getHorizontalDirection(r), a = this.getVerticalDirection(r);
      this.eventLastTime = r, this.positionGhost(r);
      var l = this.dropTargets.filter(function(d) {
        return i.isMouseOnDropTarget(r, d);
      }), u = l.length, p = null;
      if (u > 0 && (p = u === 1 ? l[0] : l.reduce(function(d, f) {
        if (!d)
          return f;
        var g = d.getContainer(), y = f.getContainer();
        return g.contains(y) ? f : d;
      })), p !== this.lastDropTarget)
        this.leaveLastTargetIfExists(r, s, a, o), this.enterDragTargetIfExists(p, r, s, a, o), this.lastDropTarget = p;
      else if (p && p.onDragging) {
        var c = this.createDropTargetEvent(p, r, s, a, o);
        p.onDragging(c);
      }
    }, t.prototype.enterDragTargetIfExists = function(r, o, i, s, a) {
      if (r) {
        if (r.onDragEnter) {
          var l = this.createDropTargetEvent(r, o, i, s, a);
          r.onDragEnter(l);
        }
        this.setGhostIcon(r.getIconName ? r.getIconName() : null);
      }
    }, t.prototype.leaveLastTargetIfExists = function(r, o, i, s) {
      if (this.lastDropTarget) {
        if (this.lastDropTarget.onDragLeave) {
          var a = this.createDropTargetEvent(this.lastDropTarget, r, o, i, s);
          this.lastDropTarget.onDragLeave(a);
        }
        this.setGhostIcon(null);
      }
    }, t.prototype.getAllContainersFromDropTarget = function(r) {
      var o = r.getSecondaryContainers ? r.getSecondaryContainers() : null, i = [[r.getContainer()]];
      return o ? i.concat(o) : i;
    }, t.prototype.allContainersIntersect = function(r, o) {
      var i, s;
      try {
        for (var a = Dl(o), l = a.next(); !l.done; l = a.next()) {
          var u = l.value, p = u.getBoundingClientRect();
          if (p.width === 0 || p.height === 0)
            return !1;
          var c = r.clientX >= p.left && r.clientX < p.right, d = r.clientY >= p.top && r.clientY < p.bottom;
          if (!c || !d)
            return !1;
        }
      } catch (f) {
        i = { error: f };
      } finally {
        try {
          l && !l.done && (s = a.return) && s.call(a);
        } finally {
          if (i)
            throw i.error;
        }
      }
      return !0;
    }, t.prototype.isMouseOnDropTarget = function(r, o) {
      var i, s, a = this.getAllContainersFromDropTarget(o), l = !1;
      try {
        for (var u = Dl(a), p = u.next(); !p.done; p = u.next()) {
          var c = p.value;
          if (this.allContainersIntersect(r, c)) {
            l = !0;
            break;
          }
        }
      } catch (d) {
        i = { error: d };
      } finally {
        try {
          p && !p.done && (s = u.return) && s.call(u);
        } finally {
          if (i)
            throw i.error;
        }
      }
      return l && o.isInterestedIn(this.dragSource.type);
    }, t.prototype.addDropTarget = function(r) {
      this.dropTargets.push(r);
    }, t.prototype.removeDropTarget = function(r) {
      this.dropTargets = this.dropTargets.filter(function(o) {
        return o.getContainer() !== r.getContainer();
      });
    }, t.prototype.hasExternalDropZones = function() {
      return this.dropTargets.some(function(r) {
        return r.external;
      });
    }, t.prototype.findExternalZone = function(r) {
      var o = this.dropTargets.filter(function(i) {
        return i.external;
      });
      return o.find(function(i) {
        return i.getContainer() === r.getContainer();
      }) || null;
    }, t.prototype.getHorizontalDirection = function(r) {
      var o = this.eventLastTime && this.eventLastTime.clientX, i = r.clientX;
      return o === i ? null : o > i ? Ft.Left : Ft.Right;
    }, t.prototype.getVerticalDirection = function(r) {
      var o = this.eventLastTime && this.eventLastTime.clientY, i = r.clientY;
      return o === i ? null : o > i ? Rr.Up : Rr.Down;
    }, t.prototype.createDropTargetEvent = function(r, o, i, s, a) {
      var l = r.getContainer(), u = l.getBoundingClientRect(), p = this, c = p.gridApi, d = p.columnApi, f = p.dragItem, g = p.dragSource, y = o.clientX - u.left, C = o.clientY - u.top;
      return { event: o, x: y, y: C, vDirection: s, hDirection: i, dragSource: g, fromNudge: a, dragItem: f, api: c, columnApi: d, dropZoneTarget: l };
    }, t.prototype.positionGhost = function(r) {
      var o = this.eGhost;
      if (o) {
        var i = o.getBoundingClientRect(), s = i.height, a = rp() - 2, l = op() - 2, u = r.pageY - s / 2, p = r.pageX - 10, c = this.gridOptionsWrapper.getDocument(), d = c.defaultView || window, f = d.pageYOffset || c.documentElement.scrollTop, g = d.pageXOffset || c.documentElement.scrollLeft;
        a > 0 && p + o.clientWidth > a + g && (p = a + g - o.clientWidth), p < 0 && (p = 0), l > 0 && u + o.clientHeight > l + f && (u = l + f - o.clientHeight), u < 0 && (u = 0), o.style.left = p + "px", o.style.top = u + "px";
      }
    }, t.prototype.removeGhost = function() {
      this.eGhost && this.eGhostParent && this.eGhostParent.removeChild(this.eGhost), this.eGhost = null;
    }, t.prototype.createGhost = function() {
      this.eGhost = Ue(e.GHOST_TEMPLATE);
      var r = this.environment.getTheme().theme;
      r && this.eGhost.classList.add(r), this.eGhostIcon = this.eGhost.querySelector(".ag-dnd-ghost-icon"), this.setGhostIcon(null);
      var o = this.eGhost.querySelector(".ag-dnd-ghost-label"), i = this.dragSource.dragItemName;
      Zs(i) && (i = i()), o.innerHTML = kt(i) || "", this.eGhost.style.height = "25px", this.eGhost.style.top = "20px", this.eGhost.style.left = "20px";
      var s = this.gridOptionsWrapper.getDocument(), a = null;
      try {
        a = s.fullscreenElement;
      } catch {
      } finally {
        a || (a = s.querySelector("body"));
      }
      this.eGhostParent = a, this.eGhostParent ? this.eGhostParent.appendChild(this.eGhost) : console.warn("AG Grid: could not find document body, it is needed for dragging columns");
    }, t.prototype.setGhostIcon = function(r, o) {
      o === void 0 && (o = !1), Ct(this.eGhostIcon);
      var i = null;
      switch (r || (r = this.dragSource.defaultIconName || e.ICON_NOT_ALLOWED), r) {
        case e.ICON_PINNED:
          i = this.ePinnedIcon;
          break;
        case e.ICON_MOVE:
          i = this.eMoveIcon;
          break;
        case e.ICON_LEFT:
          i = this.eLeftIcon;
          break;
        case e.ICON_RIGHT:
          i = this.eRightIcon;
          break;
        case e.ICON_GROUP:
          i = this.eGroupIcon;
          break;
        case e.ICON_AGGREGATE:
          i = this.eAggregateIcon;
          break;
        case e.ICON_PIVOT:
          i = this.ePivotIcon;
          break;
        case e.ICON_NOT_ALLOWED:
          i = this.eDropNotAllowedIcon;
          break;
        case e.ICON_HIDE:
          i = this.eHideIcon;
          break;
      }
      this.eGhostIcon.classList.toggle("ag-shake-left-to-right", o), !(i === this.eHideIcon && this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns()) && i && this.eGhostIcon.appendChild(i);
    };
    var e;
    return t.ICON_PINNED = "pinned", t.ICON_MOVE = "move", t.ICON_LEFT = "left", t.ICON_RIGHT = "right", t.ICON_GROUP = "group", t.ICON_AGGREGATE = "aggregate", t.ICON_PIVOT = "pivot", t.ICON_NOT_ALLOWED = "notAllowed", t.ICON_HIDE = "hide", t.GHOST_TEMPLATE = `<div class="ag-dnd-ghost ag-unselectable">
            <span class="ag-dnd-ghost-icon ag-shake-left-to-right"></span>
            <div class="ag-dnd-ghost-label"></div>
        </div>`, hr([
      h("dragService")
    ], t.prototype, "dragService", void 0), hr([
      h("environment")
    ], t.prototype, "environment", void 0), hr([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), hr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), hr([
      G
    ], t.prototype, "init", null), hr([
      ot
    ], t.prototype, "clearDragSourceParamsList", null), t = e = hr([
      U("dragAndDropService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ui = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), No = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, kn = (
  /** @class */
  function(n) {
    ui(t, n);
    function t(e, r, o, i, s, a) {
      var l = n.call(this) || this;
      return l.cellValueFn = e, l.rowNode = r, l.column = o, l.customGui = i, l.dragStartPixels = s, l.suppressVisibilityChange = a, l.dragSource = null, l;
    }
    return t.prototype.isCustomGui = function() {
      return this.customGui != null;
    }, t.prototype.postConstruct = function() {
      if (this.customGui ? this.setDragElement(this.customGui, this.dragStartPixels) : (this.setTemplate(
        /* html */
        '<div class="ag-drag-handle ag-row-drag" aria-hidden="true"></div>'
      ), this.getGui().appendChild(xe("rowDrag", this.beans.gridOptionsWrapper, null)), this.addDragSource()), this.checkCompatibility(), !this.suppressVisibilityChange) {
        var e = this.beans.gridOptionsWrapper.isRowDragManaged() ? new Mg(this, this.beans, this.rowNode, this.column) : new Ig(this, this.beans, this.rowNode, this.column);
        this.createManagedBean(e, this.beans.context);
      }
    }, t.prototype.setDragElement = function(e, r) {
      this.setTemplateFromElement(e), this.addDragSource(r);
    }, t.prototype.getSelectedCount = function() {
      var e = this.beans.gridOptionsWrapper.isRowDragMultiRow();
      if (!e)
        return 1;
      var r = this.beans.selectionService.getSelectedNodes();
      return r.indexOf(this.rowNode) !== -1 ? r.length : 1;
    }, t.prototype.checkCompatibility = function() {
      var e = this.beans.gridOptionsWrapper.isRowDragManaged(), r = this.beans.gridOptionsWrapper.isTreeData();
      r && e && ve(function() {
        return console.warn("AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true");
      }, "RowDragComp.managedAndTreeData");
    }, t.prototype.addDragSource = function(e) {
      var r = this;
      e === void 0 && (e = 4), this.dragSource && this.removeDragSource();
      var o = {
        rowNode: this.rowNode,
        columns: this.column ? [this.column] : void 0,
        defaultTextValue: this.cellValueFn()
      }, i = this.column && this.column.getColDef().rowDragText, s = this.gridOptionsWrapper.getLocaleTextFunc();
      this.dragSource = {
        type: mt.RowDrag,
        eElement: this.getGui(),
        dragItemName: function() {
          var a = r.getSelectedCount();
          return i ? i(o, a) : a === 1 ? r.cellValueFn() : a + " " + s("rowDragRows", "rows");
        },
        getDragItem: function() {
          return o;
        },
        dragStartPixels: e,
        dragSourceDomDataKey: this.beans.gridOptionsWrapper.getDomDataKey()
      }, this.beans.dragAndDropService.addDragSource(this.dragSource, !0);
    }, t.prototype.removeDragSource = function() {
      this.dragSource && this.beans.dragAndDropService.removeDragSource(this.dragSource), this.dragSource = null;
    }, No([
      h("beans")
    ], t.prototype, "beans", void 0), No([
      G
    ], t.prototype, "postConstruct", null), No([
      ot
    ], t.prototype, "removeDragSource", null), t;
  }(ee)
), zp = (
  /** @class */
  function(n) {
    ui(t, n);
    function t(e, r, o) {
      var i = n.call(this) || this;
      return i.parent = e, i.rowNode = r, i.column = o, i;
    }
    return t.prototype.setDisplayedOrVisible = function(e) {
      if (e)
        this.parent.setDisplayed(!1);
      else {
        var r = !0, o = !1;
        this.column && (r = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui(), o = Zs(this.column.getColDef().rowDrag)), o ? (this.parent.setDisplayed(!0), this.parent.setVisible(r)) : (this.parent.setDisplayed(r), this.parent.setVisible(!0));
      }
    }, t;
  }(D)
), Ig = (
  /** @class */
  function(n) {
    ui(t, n);
    function t(e, r, o, i) {
      var s = n.call(this, e, o, i) || this;
      return s.beans = r, s;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.beans.gridOptionsWrapper, "suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.workOutVisibility();
    }, t.prototype.onSuppressRowDrag = function() {
      this.workOutVisibility();
    }, t.prototype.workOutVisibility = function() {
      var e = this.beans.gridOptionsWrapper.isSuppressRowDrag();
      this.setDisplayedOrVisible(e);
    }, No([
      G
    ], t.prototype, "postConstruct", null), t;
  }(zp)
), Mg = (
  /** @class */
  function(n) {
    ui(t, n);
    function t(e, r, o, i) {
      var s = n.call(this, e, o, i) || this;
      return s.beans = r, s;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.beans.eventService, v.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, v.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.gridOptionsWrapper, "suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.workOutVisibility();
    }, t.prototype.onSuppressRowDrag = function() {
      this.workOutVisibility();
    }, t.prototype.workOutVisibility = function() {
      var e = this.beans.ctrlsService.getGridBodyCtrl(), r = e.getRowDragFeature(), o = r && r.shouldPreventRowMove(), i = this.beans.gridOptionsWrapper.isSuppressRowDrag(), s = this.beans.dragAndDropService.hasExternalDropZones(), a = o && !s || i;
      this.setDisplayedOrVisible(a);
    }, No([
      G
    ], t.prototype, "postConstruct", null), t;
  }(zp)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Lg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zn = globalThis && globalThis.__assign || function() {
  return zn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, zn.apply(this, arguments);
}, go = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, $p = (
  /** @class */
  function(n) {
    Lg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e, r, o, i, s, a, l) {
      this.params = l, this.eGui = r, this.eCheckbox = o, this.eExpanded = i, this.eContracted = s, this.comp = e, this.compClass = a;
      var u = this.isTopLevelFooter(), p = this.isEmbeddedRowMismatch(), c = l.value == null, d = !1;
      if (this.gridOptionsWrapper.isGroupIncludeFooter() && this.gridOptionsWrapper.isGroupHideOpenParents()) {
        var f = l.node;
        if (f.footer) {
          var g = l.colDef && l.colDef.showRowGroup, y = f.rowGroupColumn && f.rowGroupColumn.getColId();
          d = g !== y;
        }
      }
      this.cellIsBlank = u ? !1 : p || c || d, !this.cellIsBlank && (this.setupShowingValueForOpenedParent(), this.findDisplayedGroupNode(), this.addFullWidthRowDraggerIfNeeded(), this.addExpandAndContract(), this.addCheckboxIfNeeded(), this.addValueElement(), this.setupIndent());
    }, t.prototype.isTopLevelFooter = function() {
      if (!this.gridOptionsWrapper.isGroupIncludeTotalFooter() || this.params.value != null || this.params.node.level != -1)
        return !1;
      var e = this.params.colDef, r = e == null;
      if (r || e.showRowGroup === !0)
        return !0;
      var o = this.columnModel.getRowGroupColumns();
      if (!o || o.length === 0)
        return !0;
      var i = o[0];
      return i.getId() === e.showRowGroup;
    }, t.prototype.isEmbeddedRowMismatch = function() {
      if (!this.params.fullWidth || !this.gridOptionsWrapper.isEmbedFullWidthRows())
        return !1;
      var e = this.params.pinned === w.PINNED_LEFT, r = this.params.pinned === w.PINNED_RIGHT, o = !e && !r;
      return this.gridOptionsWrapper.isEnableRtl() ? this.columnModel.isPinningLeft() ? !r : !o : this.columnModel.isPinningLeft() ? !e : !o;
    }, t.prototype.findDisplayedGroupNode = function() {
      var e = this.params.column, r = this.params.node;
      if (this.showingValueForOpenedParent)
        for (var o = r.parent; o != null; ) {
          if (o.rowGroupColumn && e.isRowGroupDisplayed(o.rowGroupColumn.getId())) {
            this.displayedGroupNode = o;
            break;
          }
          o = o.parent;
        }
      K(this.displayedGroupNode) && (this.displayedGroupNode = r);
    }, t.prototype.setupShowingValueForOpenedParent = function() {
      var e = this.params.node, r = this.params.column;
      if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {
        this.showingValueForOpenedParent = !1;
        return;
      }
      if (!e.groupData) {
        this.showingValueForOpenedParent = !1;
        return;
      }
      var o = e.rowGroupColumn != null;
      if (o) {
        var i = e.rowGroupColumn.getId(), s = r.isRowGroupDisplayed(i);
        if (s) {
          this.showingValueForOpenedParent = !1;
          return;
        }
      }
      var a = e.groupData[r.getId()] != null;
      this.showingValueForOpenedParent = a;
    }, t.prototype.addValueElement = function() {
      this.displayedGroupNode.footer ? this.addFooterValue() : (this.addGroupValue(), this.addChildCount());
    }, t.prototype.addGroupValue = function() {
      var e = this.adjustParamsWithDetailsFromRelatedColumn(), r = this.getInnerCompDetails(e), o = e.valueFormatted, i = e.value, s = o ?? i;
      this.comp.setInnerRenderer(r, s);
    }, t.prototype.adjustParamsWithDetailsFromRelatedColumn = function() {
      var e = this.displayedGroupNode.rowGroupColumn, r = this.params.column;
      if (!e)
        return this.params;
      var o = r != null;
      if (o) {
        var i = r.isRowGroupDisplayed(e.getId());
        if (!i)
          return this.params;
      }
      var s = this.params, a = this.params, l = a.value, u = a.scope, p = a.node, c = this.valueFormatterService.formatValue(e, p, u, l), d = zn(zn({}, s), { valueFormatted: c });
      return d;
    }, t.prototype.addFooterValue = function() {
      var e = this.params.footerValueGetter, r = "";
      if (e) {
        var o = Js(this.params);
        o.value = this.params.value, typeof e == "function" ? r = e(o) : typeof e == "string" ? r = this.expressionService.evaluate(e, o) : console.warn("AG Grid: footerValueGetter should be either a function or a string (expression)");
      } else
        r = "Total " + (this.params.value != null ? this.params.value : "");
      var i = this.getInnerCompDetails(this.params);
      this.comp.setInnerRenderer(i, r);
    }, t.prototype.getInnerCompDetails = function(e) {
      var r = this;
      if (e.fullWidth)
        return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(this.gridOptions.groupRowRendererParams, e);
      var o = this.userComponentFactory.getInnerRendererDetails(e, e), i = function(p) {
        return p && p.componentClass == r.compClass;
      };
      if (o && !i(o))
        return o;
      var s = this.displayedGroupNode.rowGroupColumn, a = s ? s.getColDef() : void 0;
      if (a) {
        var l = this.userComponentFactory.getCellRendererDetails(a, e);
        if (l && !i(l))
          return l;
        if (i(l) && a.cellRendererParams && a.cellRendererParams.innerRenderer) {
          var u = this.userComponentFactory.getInnerRendererDetails(a.cellRendererParams, e);
          return u;
        }
      }
    }, t.prototype.addChildCount = function() {
      this.params.suppressCount || (this.addManagedListener(this.displayedGroupNode, te.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this)), this.updateChildCount());
    }, t.prototype.updateChildCount = function() {
      var e = this.displayedGroupNode.allChildrenCount, r = this.isShowRowGroupForThisRow(), o = r && e != null && e >= 0, i = o ? "(" + e + ")" : "";
      this.comp.setChildCount(i);
    }, t.prototype.isShowRowGroupForThisRow = function() {
      if (this.gridOptionsWrapper.isTreeData())
        return !0;
      var e = this.displayedGroupNode.rowGroupColumn;
      if (!e)
        return !1;
      var r = this.params.column, o = r == null || r.isRowGroupDisplayed(e.getId());
      return o;
    }, t.prototype.addExpandAndContract = function() {
      var e = this.params, r = xe("groupExpanded", this.gridOptionsWrapper, null), o = xe("groupContracted", this.gridOptionsWrapper, null);
      r && this.eExpanded.appendChild(r), o && this.eContracted.appendChild(o);
      var i = e.eGridCell;
      !this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !e.suppressDoubleClickExpand && this.addManagedListener(i, "dblclick", this.onCellDblClicked.bind(this)), this.addManagedListener(this.eExpanded, "click", this.onExpandClicked.bind(this)), this.addManagedListener(this.eContracted, "click", this.onExpandClicked.bind(this)), this.addManagedListener(i, "keydown", this.onKeyDown.bind(this)), this.addManagedListener(e.node, te.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this)), this.showExpandAndContractIcons();
      var s = this.onRowNodeIsExpandableChanged.bind(this);
      this.addManagedListener(this.displayedGroupNode, te.EVENT_ALL_CHILDREN_COUNT_CHANGED, s), this.addManagedListener(this.displayedGroupNode, te.EVENT_MASTER_CHANGED, s), this.addManagedListener(this.displayedGroupNode, te.EVENT_GROUP_CHANGED, s), this.addManagedListener(this.displayedGroupNode, te.EVENT_HAS_CHILDREN_CHANGED, s);
    }, t.prototype.onExpandClicked = function(e) {
      Bt(e) || (Qr(e), this.onExpandOrContract());
    }, t.prototype.onExpandOrContract = function() {
      var e = this.displayedGroupNode, r = !e.expanded;
      e.setExpanded(r);
    }, t.prototype.isExpandable = function() {
      if (this.showingValueForOpenedParent)
        return !0;
      var e = this.displayedGroupNode, r = this.columnModel.isPivotMode() && e.leafGroup, o = e.isExpandable() && !e.footer && !r;
      if (!o)
        return !1;
      var i = this.params.column, s = i != null && typeof i.getColDef().showRowGroup == "string";
      if (s) {
        var a = this.isShowRowGroupForThisRow();
        return a;
      }
      return !0;
    }, t.prototype.showExpandAndContractIcons = function() {
      var e = this, r = e.params, o = e.displayedGroupNode, i = e.columnModel, s = r.node, a = this.isExpandable();
      if (a) {
        var l = this.showingValueForOpenedParent ? !0 : s.expanded;
        this.comp.setExpandedDisplayed(l), this.comp.setContractedDisplayed(!l);
      } else
        this.comp.setExpandedDisplayed(!1), this.comp.setContractedDisplayed(!1);
      var u = i.isPivotMode(), p = u && o.leafGroup, c = a && !p, d = s.footer && s.level === -1;
      this.comp.addOrRemoveCssClass("ag-cell-expandable", c), this.comp.addOrRemoveCssClass("ag-row-group", c), u ? this.comp.addOrRemoveCssClass("ag-pivot-leaf-group", p) : d || this.comp.addOrRemoveCssClass("ag-row-group-leaf-indent", !c);
    }, t.prototype.onRowNodeIsExpandableChanged = function() {
      this.showExpandAndContractIcons(), this.setIndent();
    }, t.prototype.setupIndent = function() {
      var e = this.params.node, r = this.params.suppressPadding;
      r || (this.addManagedListener(e, te.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this)), this.setIndent());
    }, t.prototype.setIndent = function() {
      if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {
        var e = this.params, r = e.node, o = !!e.colDef, i = this.gridOptionsWrapper.isTreeData(), s = !o || i || e.colDef.showRowGroup === !0, a = s ? r.uiLevel : 0, l = e.padding >= 0;
        l && ve(function() {
          return console.warn("AG Grid: cellRendererParams.padding no longer works, it was deprecated in since v14.2 and removed in v26, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the AG Grid documentation page for Themes, in particular the property $row-group-indent-size.");
        }, "groupCellRenderer->doDeprecatedWay"), this.indentClass && this.comp.addOrRemoveCssClass(this.indentClass, !1), this.indentClass = "ag-row-group-indent-" + a, this.comp.addOrRemoveCssClass(this.indentClass, !0);
      }
    }, t.prototype.addFullWidthRowDraggerIfNeeded = function() {
      var e = this;
      if (!(!this.params.fullWidth || !this.params.rowDrag)) {
        var r = new kn(function() {
          return e.params.value;
        }, this.params.node);
        this.createManagedBean(r, this.context), this.eGui.insertAdjacentElement("afterbegin", r.getGui());
      }
    }, t.prototype.isUserWantsSelected = function() {
      var e = this.params.checkbox;
      return typeof e == "function" ? e(this.params) : e === !0;
    }, t.prototype.addCheckboxIfNeeded = function() {
      var e = this, r = this.displayedGroupNode, o = this.isUserWantsSelected() && // footers cannot be selected
      !r.footer && // pinned rows cannot be selected
      !r.rowPinned && // details cannot be selected
      !r.detail;
      if (o) {
        var i = new Sa();
        this.getContext().createBean(i), i.init({ rowNode: r, column: this.params.column }), this.eCheckbox.appendChild(i.getGui()), this.addDestroyFunc(function() {
          return e.getContext().destroyBean(i);
        });
      }
      this.comp.setCheckboxVisible(o);
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key === P.ENTER;
      if (!(!r || this.params.suppressEnterExpand)) {
        var o = this.params.column && this.params.column.isCellEditable(this.params.node);
        o || this.onExpandOrContract();
      }
    }, t.prototype.onCellDblClicked = function(e) {
      if (!Bt(e)) {
        var r = xn(this.eExpanded, e) || xn(this.eContracted, e);
        r || this.onExpandOrContract();
      }
    }, go([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), go([
      h("valueFormatterService")
    ], t.prototype, "valueFormatterService", void 0), go([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), go([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), go([
      h("gridOptions")
    ], t.prototype, "gridOptions", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Gg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Vs = (
  /** @class */
  function(n) {
    Gg(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      var r = this, o = {
        setInnerRenderer: function(l, u) {
          return r.setRenderDetails(l, u);
        },
        setChildCount: function(l) {
          return r.eChildCount.innerHTML = l;
        },
        addOrRemoveCssClass: function(l, u) {
          return r.addOrRemoveCssClass(l, u);
        },
        setContractedDisplayed: function(l) {
          return Ee(r.eContracted, l);
        },
        setExpandedDisplayed: function(l) {
          return Ee(r.eExpanded, l);
        },
        setCheckboxVisible: function(l) {
          return r.eCheckbox.classList.toggle("ag-invisible", !l);
        }
      }, i = this.createManagedBean(new $p()), s = !e.colDef, a = this.getGui();
      i.init(o, a, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, e), s && rt(a, "gridcell");
    }, t.prototype.setRenderDetails = function(e, r) {
      var o = this;
      if (e) {
        var i = e.newAgStackInstance();
        if (!i)
          return;
        i.then(function(s) {
          if (s) {
            var a = function() {
              return o.context.destroyBean(s);
            };
            o.isAlive() ? (o.eValue.appendChild(s.getGui()), o.addDestroyFunc(a)) : a();
          }
        });
      } else
        this.eValue.innerText = r;
    }, t.prototype.destroy = function() {
      this.getContext().destroyBean(this.innerCellRenderer), n.prototype.destroy.call(this);
    }, t.prototype.refresh = function() {
      return !1;
    }, t.TEMPLATE = `<span class="ag-cell-wrapper">
            <span class="ag-group-expanded" ref="eExpanded"></span>
            <span class="ag-group-contracted" ref="eContracted"></span>
            <span class="ag-group-checkbox ag-invisible" ref="eCheckbox"></span>
            <span class="ag-group-value" ref="eValue"></span>
            <span class="ag-group-child-count" ref="eChildCount"></span>
        </span>`, vo([
      T("eExpanded")
    ], t.prototype, "eExpanded", void 0), vo([
      T("eContracted")
    ], t.prototype, "eContracted", void 0), vo([
      T("eCheckbox")
    ], t.prototype, "eCheckbox", void 0), vo([
      T("eValue")
    ], t.prototype, "eValue", void 0), vo([
      T("eChildCount")
    ], t.prototype, "eChildCount", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ng = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Al = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, xg = (
  /** @class */
  function(n) {
    Ng(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      e.node.failedLoad ? this.setupFailed() : this.setupLoading();
    }, t.prototype.setupFailed = function() {
      this.eLoadingText.innerText = "ERR";
    }, t.prototype.setupLoading = function() {
      var e = xe("groupLoading", this.gridOptionsWrapper, null);
      e && this.eLoadingIcon.appendChild(e);
      var r = this.gridOptionsWrapper.getLocaleTextFunc();
      this.eLoadingText.innerText = r("loadingOoo", "Loading");
    }, t.prototype.refresh = function(e) {
      return !1;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.TEMPLATE = `<div class="ag-loading">
            <span class="ag-loading-icon" ref="eLoadingIcon"></span>
            <span class="ag-loading-text" ref="eLoadingText"></span>
        </div>`, Al([
      T("eLoadingIcon")
    ], t.prototype, "eLoadingIcon", void 0), Al([
      T("eLoadingText")
    ], t.prototype, "eLoadingText", void 0), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Hg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wg = (
  /** @class */
  function(n) {
    Hg(t, n);
    function t() {
      return n.call(this) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r = this.gridOptionsWrapper.getOverlayLoadingTemplate() ? this.gridOptionsWrapper.getOverlayLoadingTemplate() : t.DEFAULT_LOADING_OVERLAY_TEMPLATE, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = r.replace("[LOADING...]", o("loadingOoo", "Loading..."));
      this.setTemplate(i);
    }, t.DEFAULT_LOADING_OVERLAY_TEMPLATE = '<span class="ag-overlay-loading-center">[LOADING...]</span>', t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Vg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bg = (
  /** @class */
  function(n) {
    Vg(t, n);
    function t() {
      return n.call(this) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r = this.gridOptionsWrapper.getOverlayNoRowsTemplate() ? this.gridOptionsWrapper.getOverlayNoRowsTemplate() : t.DEFAULT_NO_ROWS_TEMPLATE, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = r.replace("[NO_ROWS_TO_SHOW]", o("noRowsToShow", "No Rows To Show"));
      this.setTemplate(i);
    }, t.DEFAULT_NO_ROWS_TEMPLATE = '<span class="ag-overlay-no-rows-center">[NO_ROWS_TO_SHOW]</span>', t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ug = (
  /** @class */
  function(n) {
    jg(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        '<div class="ag-tooltip"></div>'
      ) || this;
    }
    return t.prototype.init = function(e) {
      var r = e.value;
      this.getGui().innerHTML = kt(r);
    }, t;
  }(so)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var kg = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), on = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Kp = (
  /** @class */
  function(n) {
    kg(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.agGridDefaults = {
        //date
        agDateInput: ig,
        //header
        agColumnHeader: hg,
        agColumnGroupHeader: gg,
        //floating filters
        agTextColumnFloatingFilter: Wp,
        agNumberColumnFloatingFilter: pg,
        agDateColumnFloatingFilter: rg,
        agReadOnlyFloatingFilter: Wf,
        // renderers
        agAnimateShowChangeCellRenderer: Up,
        agAnimateSlideCellRenderer: kp,
        agGroupCellRenderer: Vs,
        agGroupRowRenderer: Vs,
        agLoadingCellRenderer: xg,
        //editors
        agCellEditor: Un,
        agTextCellEditor: Un,
        agSelectCellEditor: Ra,
        agPopupTextCellEditor: jp,
        agPopupSelectCellEditor: Bp,
        agLargeTextCellEditor: Vp,
        //filter
        agTextColumnFilter: li,
        agNumberColumnFilter: Ea,
        agDateColumnFilter: wa,
        //overlays
        agLoadingOverlay: Wg,
        agNoRowsOverlay: Bg,
        // tooltips
        agTooltipComponent: Ug
      }, e.agDeprecatedNames = {
        set: {
          newComponentName: "agSetColumnFilter",
          propertyHolder: "filter"
        },
        text: {
          newComponentName: "agTextColumnFilter",
          propertyHolder: "filter"
        },
        number: {
          newComponentName: "agNumberColumnFilter",
          propertyHolder: "filter"
        },
        date: {
          newComponentName: "agDateColumnFilter",
          propertyHolder: "filter"
        },
        group: {
          newComponentName: "agGroupCellRenderer",
          propertyHolder: "cellRenderer"
        },
        animateShowChange: {
          newComponentName: "agAnimateShowChangeCellRenderer",
          propertyHolder: "cellRenderer"
        },
        animateSlide: {
          newComponentName: "agAnimateSlideCellRenderer",
          propertyHolder: "cellRenderer"
        },
        select: {
          newComponentName: "agSelectCellEditor",
          propertyHolder: "cellEditor"
        },
        largeText: {
          newComponentName: "agLargeTextCellEditor",
          propertyHolder: "cellEditor"
        },
        popupSelect: {
          newComponentName: "agPopupSelectCellEditor",
          propertyHolder: "cellEditor"
        },
        popupText: {
          newComponentName: "agPopupTextCellEditor",
          propertyHolder: "cellEditor"
        },
        richSelect: {
          newComponentName: "agRichSelectCellEditor",
          propertyHolder: "cellEditor"
        },
        headerComponent: {
          newComponentName: "agColumnHeader",
          propertyHolder: "headerComponent"
        }
      }, e.jsComps = {}, e.fwComps = {}, e;
    }
    return t.prototype.init = function() {
      var e = this;
      this.gridOptions.components != null && ge(this.gridOptions.components, function(r, o) {
        return e.registerJsComponent(r, o);
      }), this.gridOptions.frameworkComponents != null && ge(this.gridOptions.frameworkComponents, function(r, o) {
        return e.registerFwComponent(r, o);
      });
    }, t.prototype.registerDefaultComponent = function(e, r) {
      var o = this.translateIfDeprecated(e);
      if (this.agGridDefaults[o]) {
        console.error("Trying to overwrite a default component. You should call registerComponent");
        return;
      }
      this.agGridDefaults[o] = r;
    }, t.prototype.registerJsComponent = function(e, r) {
      var o = this.translateIfDeprecated(e);
      if (this.fwComps[o]) {
        console.error("Trying to register a component that you have already registered for frameworks: " + o);
        return;
      }
      this.jsComps[o] = r;
    }, t.prototype.registerFwComponent = function(e, r) {
      var o = "AG Grid: As of v27, registering components via grid property frameworkComponents is deprecated. Instead register both JavaScript AND Framework Components via the components property.";
      ve(function() {
        return console.warn(o);
      }, "UserComponentRegistry.frameworkComponentsDeprecated");
      var i = this.translateIfDeprecated(e);
      this.fwComps[i] = r;
    }, t.prototype.retrieve = function(e) {
      var r = this.translateIfDeprecated(e), o = function(p, c) {
        return { componentFromFramework: c, component: p };
      }, i = this.getFrameworkOverrides().frameworkComponent(r);
      if (i != null)
        return o(i, !0);
      var s = this.fwComps[r];
      if (s)
        return o(s, !0);
      var a = this.jsComps[r];
      if (a) {
        var l = this.getFrameworkOverrides().isFrameworkComponent(a);
        return o(a, l);
      }
      var u = this.agGridDefaults[r];
      return u ? o(u, !1) : (Object.keys(this.agGridDefaults).indexOf(r) < 0 && console.warn("AG Grid: Looking for component [" + r + "] but it wasn't found."), null);
    }, t.prototype.translateIfDeprecated = function(e) {
      var r = this.agDeprecatedNames[e];
      return r != null ? (ve(function() {
        console.warn("ag-grid. Since v15.0 component names have been renamed to be namespaced. You should rename " + r.propertyHolder + ":" + e + " to " + r.propertyHolder + ":" + r.newComponentName);
      }, "DEPRECATE_COMPONENT_" + e), r.newComponentName) : e;
    }, on([
      h("gridOptions")
    ], t.prototype, "gridOptions", void 0), on([
      h("agComponentUtils")
    ], t.prototype, "agComponentUtils", void 0), on([
      G
    ], t.prototype, "init", null), t = on([
      U("userComponentRegistry")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zg = {
  propertyName: "dateComponent",
  cellRenderer: !1
}, $g = {
  propertyName: "headerComponent",
  cellRenderer: !1
}, Kg = {
  propertyName: "headerGroupComponent",
  cellRenderer: !1
}, Fl = {
  propertyName: "cellRenderer",
  cellRenderer: !0
}, Yg = {
  propertyName: "cellEditor",
  cellRenderer: !1
}, Il = {
  propertyName: "innerRenderer",
  cellRenderer: !0
}, qg = {
  propertyName: "loadingOverlayComponent",
  cellRenderer: !1
}, Xg = {
  propertyName: "noRowsOverlayComponent",
  cellRenderer: !1
}, Qg = {
  propertyName: "tooltipComponent",
  cellRenderer: !1
}, Bs = {
  propertyName: "filter",
  cellRenderer: !1
}, Jg = {
  propertyName: "floatingFilterComponent",
  cellRenderer: !1
}, Zg = {
  propertyName: "toolPanel",
  cellRenderer: !1
}, ev = {
  propertyName: "statusPanel",
  cellRenderer: !1
}, tv = {
  propertyName: "fullWidthCellRenderer",
  cellRenderer: !0
}, rv = {
  propertyName: "loadingCellRenderer",
  cellRenderer: !0
}, ov = {
  propertyName: "groupRowRenderer",
  cellRenderer: !0
}, nv = {
  propertyName: "detailCellRenderer",
  cellRenderer: !0
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Yp = (
  /** @class */
  function() {
    function n() {
    }
    return n.getFloatingFilterType = function(t) {
      return this.filterToFloatingFilterMapping[t];
    }, n.filterToFloatingFilterMapping = {
      set: "agSetColumnFloatingFilter",
      agSetColumnFilter: "agSetColumnFloatingFilter",
      multi: "agMultiColumnFloatingFilter",
      agMultiColumnFilter: "agMultiColumnFloatingFilter",
      number: "agNumberColumnFloatingFilter",
      agNumberColumnFilter: "agNumberColumnFloatingFilter",
      date: "agDateColumnFloatingFilter",
      agDateColumnFilter: "agDateColumnFloatingFilter",
      text: "agTextColumnFloatingFilter",
      agTextColumnFilter: "agTextColumnFloatingFilter"
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var iv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ar = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, qp = (
  /** @class */
  function(n) {
    iv(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getHeaderCompDetails = function(e, r) {
      return this.getCompDetails(e, $g, "agColumnHeader", r);
    }, t.prototype.getHeaderGroupCompDetails = function(e) {
      var r = e.columnGroup.getColGroupDef();
      return this.getCompDetails(r, Kg, "agColumnGroupHeader", e);
    }, t.prototype.getFullWidthCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, tv, null, e, !0);
    }, t.prototype.getFullWidthLoadingCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, rv, "agLoadingCellRenderer", e, !0);
    }, t.prototype.getFullWidthGroupCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, ov, "agGroupRowRenderer", e, !0);
    }, t.prototype.getFullWidthDetailCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, nv, "agDetailCellRenderer", e, !0);
    }, t.prototype.getInnerRendererDetails = function(e, r) {
      return this.getCompDetails(e, Il, null, r);
    }, t.prototype.getFullWidthGroupRowInnerCellRenderer = function(e, r) {
      return this.getCompDetails(e, Il, null, r);
    }, t.prototype.getCellRendererDetails = function(e, r) {
      return this.getCompDetails(e, Fl, null, r);
    }, t.prototype.getCellEditorDetails = function(e, r) {
      return this.getCompDetails(e, Yg, "agCellEditor", r, !0);
    }, t.prototype.getFilterDetails = function(e, r, o) {
      return this.getCompDetails(e, Bs, o, r, !0);
    }, t.prototype.getDateCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, zg, "agDateInput", e, !0);
    }, t.prototype.getLoadingOverlayCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, qg, "agLoadingOverlay", e, !0);
    }, t.prototype.getNoRowsOverlayCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, Xg, "agNoRowsOverlay", e, !0);
    }, t.prototype.getTooltipCompDetails = function(e) {
      return this.getCompDetails(e.colDef, Qg, "agTooltipComponent", e, !0);
    }, t.prototype.getSetFilterCellRendererDetails = function(e, r) {
      return this.getCompDetails(e, Fl, null, r);
    }, t.prototype.getFloatingFilterCompDetails = function(e, r, o) {
      return this.getCompDetails(e, Jg, o, r);
    }, t.prototype.getToolPanelCompDetails = function(e, r) {
      return this.getCompDetails(e, Zg, null, r, !0);
    }, t.prototype.getStatusPanelCompDetails = function(e, r) {
      return this.getCompDetails(e, ev, null, r, !0);
    }, t.prototype.getCompDetails = function(e, r, o, i, s) {
      var a = this;
      s === void 0 && (s = !1);
      var l = r.propertyName, u = r.cellRenderer, p = this.getCompKeys(e, r, i), c = p.compName, d = p.jsComp, f = p.fwComp, g = p.paramsFromSelector, y = p.popupFromSelector, C = p.popupPositionFromSelector, m = function(b) {
        var x = a.userComponentRegistry.retrieve(b);
        x && (d = x.componentFromFramework ? void 0 : x.component, f = x.componentFromFramework ? x.component : void 0);
      };
      if (c != null && m(c), d == null && f == null && o != null && m(o), d && u && !this.agComponentUtils.doesImplementIComponent(d) && (d = this.agComponentUtils.adaptFunction(l, d)), !d && !f) {
        s && console.error("Could not find component " + c + ", did you forget to configure this component?");
        return;
      }
      var _ = this.mergeParamsWithApplicationProvidedParams(e, r, i, g), E = d == null, S = d || f;
      return {
        componentFromFramework: E,
        componentClass: S,
        params: _,
        type: r,
        popupFromSelector: y,
        popupPositionFromSelector: C,
        newAgStackInstance: function() {
          return a.newAgStackInstance(S, E, _, r);
        }
      };
    }, t.prototype.getCompKeys = function(e, r, o) {
      var i = this, s = r.propertyName, a, l, u, p, c, d;
      if (e) {
        var f = e, g = f[s + "Selector"], y = g ? g(o) : null, C = function(_, E) {
          var S = function() {
            var x = "AG Grid: As of v27, the property " + s + "Framework is deprecated. The property " + s + " can now be used for JavaScript AND Framework Components.";
            ve(function() {
              return console.warn(x);
            }, "UserComponentFactory." + s + "FrameworkDeprecated");
          };
          if (typeof _ == "string")
            a = _;
          else if (typeof E == "string")
            S(), a = E;
          else if (_ != null && _ !== !0) {
            var b = i.getFrameworkOverrides().isFrameworkComponent(_);
            b ? u = _ : l = _;
          } else
            E != null && (S(), u = E);
        };
        if (y) {
          if (y.frameworkComponent != null) {
            var m = "AG Grid: As of v27, the return for " + s + "Selector has attributes [component, params] only. The attribute frameworkComponent is deprecated. You should now return back Framework Components using the 'component' attribute and the grid works out if it's a framework component or not.";
            ve(function() {
              return console.warn(m);
            }, "UserComponentFactory." + s + "FrameworkSelectorDeprecated"), C(y.frameworkComponent, void 0);
          } else
            C(y.component, void 0);
          p = y.params, c = y.popup, d = y.popupPosition;
        } else
          C(f[s], f[s + "Framework"]);
      }
      return { compName: a, jsComp: l, fwComp: u, paramsFromSelector: p, popupFromSelector: c, popupPositionFromSelector: d };
    }, t.prototype.newAgStackInstance = function(e, r, o, i) {
      var s = i.propertyName, a = !r, l;
      if (a)
        l = new e();
      else {
        var u = this.componentMetadataProvider.retrieve(s);
        l = this.frameworkComponentWrapper.wrap(e, u.mandatoryMethodList, u.optionalMethodList, i);
      }
      var p = this.initComponent(l, o);
      return p == null ? ut.resolve(l) : p.then(function() {
        return l;
      });
    }, t.prototype.mergeParamsWithApplicationProvidedParams = function(e, r, o, i) {
      i === void 0 && (i = null);
      var s = {};
      Pt(s, o);
      var a = e, l = a && a[r.propertyName + "Params"];
      if (typeof l == "function") {
        var u = l(o);
        Pt(s, u);
      } else
        typeof l == "object" && Pt(s, l);
      return Pt(s, i), s;
    }, t.prototype.initComponent = function(e, r) {
      if (this.context.createBean(e), e.init != null)
        return e.init(r);
    }, t.prototype.getDefaultFloatingFilterType = function(e) {
      if (e == null)
        return null;
      var r = null, o = this.getCompKeys(e, Bs), i = o.compName, s = o.jsComp, a = o.fwComp;
      if (i)
        r = Yp.getFloatingFilterType(i);
      else {
        var l = s == null && a == null && e.filter === !0;
        if (l) {
          var u = Q.isRegistered(q.SetFilterModule);
          r = u ? "agSetColumnFloatingFilter" : "agTextColumnFloatingFilter";
        }
      }
      return r;
    }, Ar([
      h("gridOptions")
    ], t.prototype, "gridOptions", void 0), Ar([
      h("agComponentUtils")
    ], t.prototype, "agComponentUtils", void 0), Ar([
      h("componentMetadataProvider")
    ], t.prototype, "componentMetadataProvider", void 0), Ar([
      h("userComponentRegistry")
    ], t.prototype, "userComponentRegistry", void 0), Ar([
      de("frameworkComponentWrapper")
    ], t.prototype, "frameworkComponentWrapper", void 0), t = Ar([
      U("userComponentFactory")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Xp = (
  /** @class */
  function() {
    function n() {
    }
    return n.parse = function(t) {
      if (!t)
        return null;
      if (t === !0)
        return {
          toolPanels: [
            n.DEFAULT_COLUMN_COMP,
            n.DEFAULT_FILTER_COMP
          ],
          defaultToolPanel: "columns"
        };
      if (typeof t == "string")
        return n.parse([t]);
      if (Array.isArray(t)) {
        var e = [];
        return t.forEach(function(o) {
          var i = n.DEFAULT_BY_KEY[o];
          if (!i) {
            console.warn("AG Grid: the key " + o + " is not a valid key for specifying a tool panel, valid keys are: " + Object.keys(n.DEFAULT_BY_KEY).join(","));
            return;
          }
          e.push(i);
        }), e.length === 0 ? null : {
          toolPanels: e,
          defaultToolPanel: e[0].id
        };
      }
      var r = {
        toolPanels: n.parseComponents(t.toolPanels),
        defaultToolPanel: t.defaultToolPanel,
        hiddenByDefault: t.hiddenByDefault,
        position: t.position
      };
      return r;
    }, n.parseComponents = function(t) {
      var e = [];
      return t && t.forEach(function(r) {
        var o = null;
        if (typeof r == "string") {
          var i = n.DEFAULT_BY_KEY[r];
          if (!i) {
            console.warn("AG Grid: the key " + r + " is not a valid key for specifying a tool panel, valid keys are: " + Object.keys(n.DEFAULT_BY_KEY).join(","));
            return;
          }
          o = i;
        } else
          o = r;
        e.push(o);
      }), e;
    }, n.DEFAULT_COLUMN_COMP = {
      id: "columns",
      labelDefault: "Columns",
      labelKey: "columns",
      iconKey: "columns",
      toolPanel: "agColumnsToolPanel"
    }, n.DEFAULT_FILTER_COMP = {
      id: "filters",
      labelDefault: "Filters",
      labelKey: "filters",
      iconKey: "filter",
      toolPanel: "agFiltersToolPanel"
    }, n.DEFAULT_BY_KEY = {
      columns: n.DEFAULT_COLUMN_COMP,
      filters: n.DEFAULT_FILTER_COMP
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Jt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ml = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, sv = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, ji = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(sv(arguments[t]));
  return n;
}, av = 25, lv = 300, uv = 5, pv = 5, cv = 10;
function R(n) {
  return n === !0 || n === "true";
}
function Ui(n) {
  if (typeof n == "number")
    return n;
  if (typeof n == "string")
    return parseInt(n, 10);
}
function dv(n, t) {
  return n >= 0 ? n : t;
}
function Ll(n, t) {
  var e = parseInt(n, 10);
  return Vn(e) && e > 0 ? e : t;
}
var B = (
  /** @class */
  function() {
    function n() {
      this.propertyEventService = new qt(), this.domDataKey = "__AG_" + Math.random().toString(), this.destroyed = !1;
    }
    t = n, n.prototype.agWire = function(e, r) {
      this.gridOptions.api = e, this.gridOptions.columnApi = r, this.checkForDeprecated(), this.checkForViolations();
    }, n.prototype.destroy = function() {
      this.gridOptions.api = null, this.gridOptions.columnApi = null, this.destroyed = !0;
    }, n.prototype.init = function() {
      var e = this;
      this.gridOptions.suppressPropertyNamesCheck !== !0 && (this.checkGridOptionsProperties(), this.checkColumnDefProperties()), this.gridOptions.sideBar != null && (this.gridOptions.sideBar = Xp.parse(this.gridOptions.sideBar));
      var r = this.useAsyncEvents();
      if (this.eventService.addGlobalListener(this.globalEventHandler.bind(this), r), this.isGroupSelectsChildren() && this.isSuppressParentsInRowNodes() && console.warn("AG Grid: 'groupSelectsChildren' does not work with 'suppressParentsInRowNodes', this selection method needs the part in rowNode to work"), this.isGroupSelectsChildren() && (this.isRowSelectionMulti() || console.warn("AG Grid: rowSelection must be 'multiple' for groupSelectsChildren to make sense"), this.isRowModelServerSide() && console.warn("AG Grid: group selects children is NOT support for Server Side Row Model. This is because the rows are lazy loaded, so selecting a group is not possible asthe grid has no way of knowing what the children are.")), this.isGroupRemoveSingleChildren() && this.isGroupHideOpenParents() && console.warn("AG Grid: groupRemoveSingleChildren and groupHideOpenParents do not work with each other, you need to pick one. And don't ask us how to us these together on our support forum either you will get the same answer!"), this.isRowModelServerSide()) {
        var o = function(s) {
          return "AG Grid: '" + s + "' is not supported on the Server-Side Row Model";
        };
        O(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupDefaultExpanded")), O(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupIncludeFooter")), O(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupIncludeTotalFooter"));
      }
      this.isEnableRangeSelection() && Q.assertRegistered(q.RangeSelectionModule, "enableRangeSelection"), !this.isEnableRangeSelection() && (this.isEnableRangeHandle() || this.isEnableFillHandle()) && console.warn("AG Grid: 'enableRangeHandle' and 'enableFillHandle' will not work unless 'enableRangeSelection' is set to true");
      var i = function(s) {
        e.gridOptions.icons && e.gridOptions.icons[s] && console.warn("gridOptions.icons." + s + " is no longer supported. For information on how to style checkboxes and radio buttons, see https://www.ag-grid.com/javascript-grid-icons/");
      };
      i("radioButtonOff"), i("radioButtonOn"), i("checkboxChecked"), i("checkboxUnchecked"), i("checkboxIndeterminate"), this.getScrollbarWidth();
    }, n.prototype.checkColumnDefProperties = function() {
      var e = this;
      this.gridOptions.columnDefs != null && this.gridOptions.columnDefs.forEach(function(r) {
        var o = Object.getOwnPropertyNames(r), i = ji(bs.ALL_PROPERTIES, bs.FRAMEWORK_PROPERTIES);
        e.checkProperties(o, i, i, "colDef", "https://www.ag-grid.com/javascript-grid-column-properties/");
      });
    }, n.prototype.checkGridOptionsProperties = function() {
      var e = Object.getOwnPropertyNames(this.gridOptions), r = ji(Vt.ALL_PROPERTIES, Vt.FRAMEWORK_PROPERTIES, Or(v).map(function(i) {
        return sr.getCallbackForEvent(i);
      })), o = ji(r, ["api", "columnApi"]);
      this.checkProperties(e, o, r, "gridOptions", "https://www.ag-grid.com/javascript-grid-properties/");
    }, n.prototype.checkProperties = function(e, r, o, i, s) {
      var a = Op(e, r, o);
      ge(a, function(l, u) {
        console.warn("ag-grid: invalid " + i + " property '" + l + "' did you mean any of these: " + u.slice(0, 8).join(", "));
      }), Object.keys(a).length > 0 && console.warn("ag-grid: to see all the valid " + i + " properties please check: " + s);
    }, n.prototype.getDomDataKey = function() {
      return this.domDataKey;
    }, n.prototype.getDomData = function(e, r) {
      var o = e[this.getDomDataKey()];
      return o ? o[r] : void 0;
    }, n.prototype.setDomData = function(e, r, o) {
      var i = this.getDomDataKey(), s = e[i];
      K(s) && (s = {}, e[i] = s), s[r] = o;
    }, n.prototype.isRowSelection = function() {
      return this.gridOptions.rowSelection === "single" || this.gridOptions.rowSelection === "multiple";
    }, n.prototype.isSuppressRowDeselection = function() {
      return R(this.gridOptions.suppressRowDeselection);
    }, n.prototype.isRowSelectionMulti = function() {
      return this.gridOptions.rowSelection === "multiple";
    }, n.prototype.isRowMultiSelectWithClick = function() {
      return R(this.gridOptions.rowMultiSelectWithClick);
    }, n.prototype.getContext = function() {
      return this.gridOptions.context;
    }, n.prototype.isPivotMode = function() {
      return R(this.gridOptions.pivotMode);
    }, n.prototype.isSuppressExpandablePivotGroups = function() {
      return R(this.gridOptions.suppressExpandablePivotGroups);
    }, n.prototype.getPivotColumnGroupTotals = function() {
      return this.gridOptions.pivotColumnGroupTotals;
    }, n.prototype.getPivotRowTotals = function() {
      return this.gridOptions.pivotRowTotals;
    }, n.prototype.isRowModelInfinite = function() {
      return this.gridOptions.rowModelType === w.ROW_MODEL_TYPE_INFINITE;
    }, n.prototype.isRowModelViewport = function() {
      return this.gridOptions.rowModelType === w.ROW_MODEL_TYPE_VIEWPORT;
    }, n.prototype.isRowModelServerSide = function() {
      return this.gridOptions.rowModelType === w.ROW_MODEL_TYPE_SERVER_SIDE;
    }, n.prototype.isRowModelDefault = function() {
      return K(this.gridOptions.rowModelType) || this.gridOptions.rowModelType === w.ROW_MODEL_TYPE_CLIENT_SIDE;
    }, n.prototype.isFullRowEdit = function() {
      return this.gridOptions.editType === "fullRow";
    }, n.prototype.isSuppressFocusAfterRefresh = function() {
      return R(this.gridOptions.suppressFocusAfterRefresh);
    }, n.prototype.isSuppressBrowserResizeObserver = function() {
      return R(this.gridOptions.suppressBrowserResizeObserver);
    }, n.prototype.isSuppressMaintainUnsortedOrder = function() {
      return R(this.gridOptions.suppressMaintainUnsortedOrder);
    }, n.prototype.isSuppressClearOnFillReduction = function() {
      return R(this.gridOptions.suppressClearOnFillReduction);
    }, n.prototype.isShowToolPanel = function() {
      return R(this.gridOptions.sideBar && Array.isArray(this.getSideBar().toolPanels));
    }, n.prototype.getSideBar = function() {
      return this.gridOptions.sideBar;
    }, n.prototype.isSuppressTouch = function() {
      return R(this.gridOptions.suppressTouch);
    }, n.prototype.isMaintainColumnOrder = function() {
      return R(this.gridOptions.maintainColumnOrder);
    }, n.prototype.isSuppressRowTransform = function() {
      return R(this.gridOptions.suppressRowTransform);
    }, n.prototype.isSuppressColumnStateEvents = function() {
      return R(this.gridOptions.suppressColumnStateEvents);
    }, n.prototype.isAllowDragFromColumnsToolPanel = function() {
      return R(this.gridOptions.allowDragFromColumnsToolPanel);
    }, n.prototype.useAsyncEvents = function() {
      return !R(this.gridOptions.suppressAsyncEvents);
    }, n.prototype.isEnableCellChangeFlash = function() {
      return R(this.gridOptions.enableCellChangeFlash);
    }, n.prototype.getCellFlashDelay = function() {
      return this.gridOptions.cellFlashDelay || 500;
    }, n.prototype.getCellFadeDelay = function() {
      return this.gridOptions.cellFadeDelay || 1e3;
    }, n.prototype.isGroupSelectsChildren = function() {
      var e = R(this.gridOptions.groupSelectsChildren);
      return e && this.isTreeData() ? (console.warn("AG Grid: groupSelectsChildren does not work with tree data"), !1) : e;
    }, n.prototype.isSuppressRowHoverHighlight = function() {
      return R(this.gridOptions.suppressRowHoverHighlight);
    }, n.prototype.isColumnHoverHighlight = function() {
      return R(this.gridOptions.columnHoverHighlight);
    }, n.prototype.isGroupSelectsFiltered = function() {
      return R(this.gridOptions.groupSelectsFiltered);
    }, n.prototype.isGroupHideOpenParents = function() {
      return R(this.gridOptions.groupHideOpenParents);
    }, n.prototype.isGroupMaintainOrder = function() {
      return R(this.gridOptions.groupMaintainOrder);
    }, n.prototype.getAutoGroupColumnDef = function() {
      return this.gridOptions.autoGroupColumnDef;
    }, n.prototype.isGroupMultiAutoColumn = function() {
      return this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("multipleColumns", this.gridOptions.groupDisplayType) : R(this.gridOptions.groupHideOpenParents);
    }, n.prototype.isGroupUseEntireRow = function(e) {
      return e ? !1 : this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("groupRows", this.gridOptions.groupDisplayType) : !1;
    }, n.prototype.isGroupSuppressAutoColumn = function() {
      var e = this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("custom", this.gridOptions.groupDisplayType) : !1;
      return e ? !0 : this.gridOptions.treeDataDisplayType ? this.matchesTreeDataDisplayType("custom", this.gridOptions.treeDataDisplayType) : !1;
    }, n.prototype.isGroupRemoveSingleChildren = function() {
      return R(this.gridOptions.groupRemoveSingleChildren);
    }, n.prototype.isGroupRemoveLowestSingleChildren = function() {
      return R(this.gridOptions.groupRemoveLowestSingleChildren);
    }, n.prototype.isGroupIncludeFooter = function() {
      return R(this.gridOptions.groupIncludeFooter);
    }, n.prototype.isGroupIncludeTotalFooter = function() {
      return R(this.gridOptions.groupIncludeTotalFooter);
    }, n.prototype.isGroupSuppressBlankHeader = function() {
      return R(this.gridOptions.groupSuppressBlankHeader);
    }, n.prototype.isSuppressRowClickSelection = function() {
      return R(this.gridOptions.suppressRowClickSelection);
    }, n.prototype.isSuppressCellFocus = function() {
      return R(this.gridOptions.suppressCellFocus);
    }, n.prototype.isSuppressMultiSort = function() {
      return R(this.gridOptions.suppressMultiSort);
    }, n.prototype.isMultiSortKeyCtrl = function() {
      return this.gridOptions.multiSortKey === "ctrl";
    }, n.prototype.isPivotSuppressAutoColumn = function() {
      return R(this.gridOptions.pivotSuppressAutoColumn);
    }, n.prototype.isSuppressDragLeaveHidesColumns = function() {
      return R(this.gridOptions.suppressDragLeaveHidesColumns);
    }, n.prototype.isSuppressScrollOnNewData = function() {
      return R(this.gridOptions.suppressScrollOnNewData);
    }, n.prototype.isSuppressScrollWhenPopupsAreOpen = function() {
      return R(this.gridOptions.suppressScrollWhenPopupsAreOpen);
    }, n.prototype.isRowDragEntireRow = function() {
      return R(this.gridOptions.rowDragEntireRow);
    }, n.prototype.isSuppressRowDrag = function() {
      return R(this.gridOptions.suppressRowDrag);
    }, n.prototype.isRowDragManaged = function() {
      return R(this.gridOptions.rowDragManaged);
    }, n.prototype.isSuppressMoveWhenRowDragging = function() {
      return R(this.gridOptions.suppressMoveWhenRowDragging);
    }, n.prototype.isRowDragMultiRow = function() {
      return R(this.gridOptions.rowDragMultiRow);
    }, n.prototype.getDomLayout = function() {
      var e = this.gridOptions.domLayout || w.DOM_LAYOUT_NORMAL, r = [
        w.DOM_LAYOUT_PRINT,
        w.DOM_LAYOUT_AUTO_HEIGHT,
        w.DOM_LAYOUT_NORMAL
      ];
      return r.indexOf(e) === -1 ? (ve(function() {
        return console.warn("AG Grid: " + e + " is not valid for DOM Layout, valid values are " + w.DOM_LAYOUT_NORMAL + ", " + w.DOM_LAYOUT_AUTO_HEIGHT + " and " + w.DOM_LAYOUT_PRINT);
      }, "warn about dom layout values"), w.DOM_LAYOUT_NORMAL) : e;
    }, n.prototype.isSuppressHorizontalScroll = function() {
      return R(this.gridOptions.suppressHorizontalScroll);
    }, n.prototype.isSuppressMaxRenderedRowRestriction = function() {
      return R(this.gridOptions.suppressMaxRenderedRowRestriction);
    }, n.prototype.isExcludeChildrenWhenTreeDataFiltering = function() {
      return R(this.gridOptions.excludeChildrenWhenTreeDataFiltering);
    }, n.prototype.isAlwaysShowHorizontalScroll = function() {
      return R(this.gridOptions.alwaysShowHorizontalScroll);
    }, n.prototype.isAlwaysShowVerticalScroll = function() {
      return R(this.gridOptions.alwaysShowVerticalScroll);
    }, n.prototype.isDebounceVerticalScrollbar = function() {
      return R(this.gridOptions.debounceVerticalScrollbar);
    }, n.prototype.isSuppressLoadingOverlay = function() {
      return R(this.gridOptions.suppressLoadingOverlay);
    }, n.prototype.isSuppressNoRowsOverlay = function() {
      return R(this.gridOptions.suppressNoRowsOverlay);
    }, n.prototype.isSuppressFieldDotNotation = function() {
      return R(this.gridOptions.suppressFieldDotNotation);
    }, n.prototype.getPinnedTopRowData = function() {
      return this.gridOptions.pinnedTopRowData;
    }, n.prototype.getPinnedBottomRowData = function() {
      return this.gridOptions.pinnedBottomRowData;
    }, n.prototype.isFunctionsPassive = function() {
      return R(this.gridOptions.functionsPassive);
    }, n.prototype.isSuppressChangeDetection = function() {
      return R(this.gridOptions.suppressChangeDetection);
    }, n.prototype.isSuppressAnimationFrame = function() {
      return R(this.gridOptions.suppressAnimationFrame);
    }, n.prototype.getQuickFilterText = function() {
      return this.gridOptions.quickFilterText;
    }, n.prototype.isCacheQuickFilter = function() {
      return R(this.gridOptions.cacheQuickFilter);
    }, n.prototype.isUnSortIcon = function() {
      return R(this.gridOptions.unSortIcon);
    }, n.prototype.isSuppressMenuHide = function() {
      return R(this.gridOptions.suppressMenuHide);
    }, n.prototype.isEnterMovesDownAfterEdit = function() {
      return R(this.gridOptions.enterMovesDownAfterEdit);
    }, n.prototype.isEnterMovesDown = function() {
      return R(this.gridOptions.enterMovesDown);
    }, n.prototype.isUndoRedoCellEditing = function() {
      return R(this.gridOptions.undoRedoCellEditing);
    }, n.prototype.getUndoRedoCellEditingLimit = function() {
      return Ui(this.gridOptions.undoRedoCellEditingLimit);
    }, n.prototype.getRowStyle = function() {
      return this.gridOptions.rowStyle;
    }, n.prototype.getRowClass = function() {
      return this.gridOptions.rowClass;
    }, n.prototype.getRowStyleFunc = function() {
      return this.gridOptions.getRowStyle;
    }, n.prototype.getRowClassFunc = function() {
      return this.gridOptions.getRowClass;
    }, n.prototype.rowClassRules = function() {
      return this.gridOptions.rowClassRules;
    }, n.prototype.getServerSideStoreType = function() {
      return this.gridOptions.serverSideStoreType;
    }, n.prototype.getServerSideStoreParamsFunc = function() {
      return this.gridOptions.getServerSideStoreParams;
    }, n.prototype.getCreateChartContainerFunc = function() {
      return this.gridOptions.createChartContainer;
    }, n.prototype.getPopupParent = function() {
      return this.gridOptions.popupParent;
    }, n.prototype.getBlockLoadDebounceMillis = function() {
      return this.gridOptions.blockLoadDebounceMillis;
    }, n.prototype.getPostProcessPopupFunc = function() {
      return this.gridOptions.postProcessPopup;
    }, n.prototype.getPaginationNumberFormatterFunc = function() {
      return this.gridOptions.paginationNumberFormatter;
    }, n.prototype.getChildCountFunc = function() {
      return this.gridOptions.getChildCount;
    }, n.prototype.getIsApplyServerSideTransactionFunc = function() {
      return this.gridOptions.isApplyServerSideTransaction;
    }, n.prototype.getDefaultGroupOrderComparator = function() {
      return this.gridOptions.defaultGroupOrderComparator;
    }, n.prototype.getIsFullWidthCellFunc = function() {
      return this.gridOptions.isFullWidthCell;
    }, n.prototype.getFullWidthCellRendererParams = function() {
      return this.gridOptions.fullWidthCellRendererParams;
    }, n.prototype.isEmbedFullWidthRows = function() {
      return R(this.gridOptions.embedFullWidthRows) || R(this.gridOptions.deprecatedEmbedFullWidthRows);
    }, n.prototype.isDetailRowAutoHeight = function() {
      return R(this.gridOptions.detailRowAutoHeight);
    }, n.prototype.getSuppressKeyboardEventFunc = function() {
      return this.gridOptions.suppressKeyboardEvent;
    }, n.prototype.getBusinessKeyForNodeFunc = function() {
      return this.gridOptions.getBusinessKeyForNode;
    }, n.prototype.getApi = function() {
      return this.gridOptions.api;
    }, n.prototype.getColumnApi = function() {
      return this.gridOptions.columnApi;
    }, n.prototype.isReadOnlyEdit = function() {
      return R(this.gridOptions.readOnlyEdit);
    }, n.prototype.isImmutableData = function() {
      return this.gridOptions.getRowId != null || R(this.gridOptions.immutableData);
    }, n.prototype.isEnsureDomOrder = function() {
      return R(this.gridOptions.ensureDomOrder);
    }, n.prototype.isEnableCharts = function() {
      return R(this.gridOptions.enableCharts) ? Q.assertRegistered(q.GridChartsModule, "enableCharts") : !1;
    }, n.prototype.getColResizeDefault = function() {
      return this.gridOptions.colResizeDefault;
    }, n.prototype.isSingleClickEdit = function() {
      return R(this.gridOptions.singleClickEdit);
    }, n.prototype.isSuppressClickEdit = function() {
      return R(this.gridOptions.suppressClickEdit);
    }, n.prototype.isStopEditingWhenCellsLoseFocus = function() {
      return R(this.gridOptions.stopEditingWhenCellsLoseFocus);
    }, n.prototype.getGroupDefaultExpanded = function() {
      return this.gridOptions.groupDefaultExpanded;
    }, n.prototype.getMaxConcurrentDatasourceRequests = function() {
      var e = Ui(this.gridOptions.maxConcurrentDatasourceRequests);
      if (e == null)
        return 2;
      if (!(e <= 0))
        return e;
    }, n.prototype.getMaxBlocksInCache = function() {
      return this.gridOptions.maxBlocksInCache;
    }, n.prototype.getCacheOverflowSize = function() {
      return this.gridOptions.cacheOverflowSize;
    }, n.prototype.getPaginationPageSize = function() {
      return Ui(this.gridOptions.paginationPageSize);
    }, n.prototype.isPaginateChildRows = function() {
      var e = this.isGroupRemoveSingleChildren() || this.isGroupRemoveLowestSingleChildren();
      return e ? !0 : R(this.gridOptions.paginateChildRows);
    }, n.prototype.getCacheBlockSize = function() {
      return Ll(this.gridOptions.cacheBlockSize);
    }, n.prototype.getInfiniteInitialRowCount = function() {
      return this.gridOptions.infiniteInitialRowCount;
    }, n.prototype.isPurgeClosedRowNodes = function() {
      return R(this.gridOptions.purgeClosedRowNodes);
    }, n.prototype.isSuppressPaginationPanel = function() {
      return R(this.gridOptions.suppressPaginationPanel);
    }, n.prototype.getRowData = function() {
      return this.gridOptions.rowData;
    }, n.prototype.isEnableRtl = function() {
      return R(this.gridOptions.enableRtl);
    }, n.prototype.getRowGroupPanelShow = function() {
      return this.gridOptions.rowGroupPanelShow;
    }, n.prototype.getPivotPanelShow = function() {
      return this.gridOptions.pivotPanelShow;
    }, n.prototype.isAngularCompileRows = function() {
      return R(this.gridOptions.angularCompileRows);
    }, n.prototype.isAngularCompileFilters = function() {
      return R(this.gridOptions.angularCompileFilters);
    }, n.prototype.isDebug = function() {
      return R(this.gridOptions.debug);
    }, n.prototype.getColumnDefs = function() {
      return this.gridOptions.columnDefs;
    }, n.prototype.getColumnTypes = function() {
      return this.gridOptions.columnTypes;
    }, n.prototype.getDatasource = function() {
      return this.gridOptions.datasource;
    }, n.prototype.getViewportDatasource = function() {
      return this.gridOptions.viewportDatasource;
    }, n.prototype.getServerSideDatasource = function() {
      return this.gridOptions.serverSideDatasource;
    }, n.prototype.isAccentedSort = function() {
      return R(this.gridOptions.accentedSort);
    }, n.prototype.isEnableBrowserTooltips = function() {
      return R(this.gridOptions.enableBrowserTooltips);
    }, n.prototype.isEnableCellExpressions = function() {
      return R(this.gridOptions.enableCellExpressions);
    }, n.prototype.isEnableGroupEdit = function() {
      return R(this.gridOptions.enableGroupEdit);
    }, n.prototype.isSuppressMiddleClickScrolls = function() {
      return R(this.gridOptions.suppressMiddleClickScrolls);
    }, n.prototype.isPreventDefaultOnContextMenu = function() {
      return R(this.gridOptions.preventDefaultOnContextMenu);
    }, n.prototype.isSuppressPreventDefaultOnMouseWheel = function() {
      return R(this.gridOptions.suppressPreventDefaultOnMouseWheel);
    }, n.prototype.isSuppressColumnVirtualisation = function() {
      return R(this.gridOptions.suppressColumnVirtualisation);
    }, n.prototype.isSuppressRowVirtualisation = function() {
      return R(this.gridOptions.suppressRowVirtualisation);
    }, n.prototype.isSuppressContextMenu = function() {
      return R(this.gridOptions.suppressContextMenu);
    }, n.prototype.isAllowContextMenuWithControlKey = function() {
      return R(this.gridOptions.allowContextMenuWithControlKey);
    }, n.prototype.isSuppressCopyRowsToClipboard = function() {
      return R(this.gridOptions.suppressCopyRowsToClipboard);
    }, n.prototype.isCopyHeadersToClipboard = function() {
      return R(this.gridOptions.copyHeadersToClipboard);
    }, n.prototype.isCopyGroupHeadersToClipboard = function() {
      return R(this.gridOptions.copyGroupHeadersToClipboard);
    }, n.prototype.isSuppressClipboardPaste = function() {
      return R(this.gridOptions.suppressClipboardPaste);
    }, n.prototype.isSuppressLastEmptyLineOnPaste = function() {
      return R(this.gridOptions.suppressLastEmptyLineOnPaste);
    }, n.prototype.isPagination = function() {
      return R(this.gridOptions.pagination);
    }, n.prototype.isSuppressEnterpriseResetOnNewColumns = function() {
      return R(this.gridOptions.suppressEnterpriseResetOnNewColumns);
    }, n.prototype.getProcessDataFromClipboardFunc = function() {
      return this.gridOptions.processDataFromClipboard;
    }, n.prototype.getAsyncTransactionWaitMillis = function() {
      return O(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : w.BATCH_WAIT_MILLIS;
    }, n.prototype.isSuppressMovableColumns = function() {
      return R(this.gridOptions.suppressMovableColumns);
    }, n.prototype.isAnimateRows = function() {
      return this.isEnsureDomOrder() ? !1 : R(this.gridOptions.animateRows);
    }, n.prototype.isSuppressColumnMoveAnimation = function() {
      return R(this.gridOptions.suppressColumnMoveAnimation);
    }, n.prototype.isSuppressAggFuncInHeader = function() {
      return R(this.gridOptions.suppressAggFuncInHeader);
    }, n.prototype.isSuppressAggAtRootLevel = function() {
      return R(this.gridOptions.suppressAggAtRootLevel);
    }, n.prototype.isSuppressAggFilteredOnly = function() {
      return R(this.gridOptions.suppressAggFilteredOnly);
    }, n.prototype.isShowOpenedGroup = function() {
      return R(this.gridOptions.showOpenedGroup);
    }, n.prototype.isReactUi = function() {
      return R(this.gridOptions.reactUi);
    }, n.prototype.isSuppressReactUi = function() {
      return R(this.gridOptions.suppressReactUi);
    }, n.prototype.isEnableRangeSelection = function() {
      return Q.isRegistered(q.RangeSelectionModule) && R(this.gridOptions.enableRangeSelection);
    }, n.prototype.isEnableRangeHandle = function() {
      return R(this.gridOptions.enableRangeHandle);
    }, n.prototype.isEnableFillHandle = function() {
      return R(this.gridOptions.enableFillHandle);
    }, n.prototype.getFillHandleDirection = function() {
      var e = this.gridOptions.fillHandleDirection;
      return e ? e !== "x" && e !== "y" && e !== "xy" ? (ve(function() {
        return console.warn("AG Grid: valid values for fillHandleDirection are 'x', 'y' and 'xy'. Default to 'xy'.");
      }, "warn invalid fill direction"), "xy") : e : "xy";
    }, n.prototype.getFillOperation = function() {
      return this.gridOptions.fillOperation;
    }, n.prototype.isSuppressMultiRangeSelection = function() {
      return R(this.gridOptions.suppressMultiRangeSelection);
    }, n.prototype.isPaginationAutoPageSize = function() {
      return R(this.gridOptions.paginationAutoPageSize);
    }, n.prototype.isRememberGroupStateWhenNewData = function() {
      return R(this.gridOptions.rememberGroupStateWhenNewData);
    }, n.prototype.getIcons = function() {
      return this.gridOptions.icons;
    }, n.prototype.getAggFuncs = function() {
      return this.gridOptions.aggFuncs;
    }, n.prototype.getSortingOrder = function() {
      return this.gridOptions.sortingOrder;
    }, n.prototype.getAlignedGrids = function() {
      return this.gridOptions.alignedGrids;
    }, n.prototype.isMasterDetail = function() {
      var e = R(this.gridOptions.masterDetail);
      return e ? Q.assertRegistered(q.MasterDetailModule, "masterDetail") : !1;
    }, n.prototype.isKeepDetailRows = function() {
      return R(this.gridOptions.keepDetailRows);
    }, n.prototype.getKeepDetailRowsCount = function() {
      var e = this.gridOptions.keepDetailRowsCount;
      return O(e) && e > 0 ? this.gridOptions.keepDetailRowsCount : cv;
    }, n.prototype.getIsRowMasterFunc = function() {
      return this.gridOptions.isRowMaster;
    }, n.prototype.getIsRowSelectableFunc = function() {
      return this.gridOptions.isRowSelectable;
    }, n.prototype.getGroupRowRendererParams = function() {
      return this.gridOptions.groupRowRendererParams;
    }, n.prototype.getOverlayLoadingTemplate = function() {
      return this.gridOptions.overlayLoadingTemplate;
    }, n.prototype.getOverlayNoRowsTemplate = function() {
      return this.gridOptions.overlayNoRowsTemplate;
    }, n.prototype.isSuppressAutoSize = function() {
      return R(this.gridOptions.suppressAutoSize);
    }, n.prototype.isEnableCellTextSelection = function() {
      return R(this.gridOptions.enableCellTextSelection);
    }, n.prototype.isSuppressParentsInRowNodes = function() {
      return R(this.gridOptions.suppressParentsInRowNodes);
    }, n.prototype.isSuppressClipboardApi = function() {
      return R(this.gridOptions.suppressClipboardApi);
    }, n.prototype.isFunctionsReadOnly = function() {
      return R(this.gridOptions.functionsReadOnly);
    }, n.prototype.isEnableCellTextSelect = function() {
      return R(this.gridOptions.enableCellTextSelection);
    }, n.prototype.getDefaultColDef = function() {
      return this.gridOptions.defaultColDef;
    }, n.prototype.getDefaultColGroupDef = function() {
      return this.gridOptions.defaultColGroupDef;
    }, n.prototype.getDefaultExportParams = function(e) {
      if (this.gridOptions.defaultExportParams)
        return console.warn("AG Grid: Since v25.2 `defaultExportParams`  has been replaced by `default" + Ts(e) + "ExportParams`'"), e === "csv" ? this.gridOptions.defaultExportParams : this.gridOptions.defaultExportParams;
      if (e === "csv" && this.gridOptions.defaultCsvExportParams)
        return this.gridOptions.defaultCsvExportParams;
      if (e === "excel" && this.gridOptions.defaultExcelExportParams)
        return this.gridOptions.defaultExcelExportParams;
    }, n.prototype.isSuppressCsvExport = function() {
      return R(this.gridOptions.suppressCsvExport);
    }, n.prototype.isAllowShowChangeAfterFilter = function() {
      return R(this.gridOptions.allowShowChangeAfterFilter);
    }, n.prototype.isSuppressExcelExport = function() {
      return R(this.gridOptions.suppressExcelExport);
    }, n.prototype.isSuppressMakeColumnVisibleAfterUnGroup = function() {
      return R(this.gridOptions.suppressMakeColumnVisibleAfterUnGroup);
    }, n.prototype.getDataPathFunc = function() {
      return this.gridOptions.getDataPath;
    }, n.prototype.getIsServerSideGroupFunc = function() {
      return this.gridOptions.isServerSideGroup;
    }, n.prototype.getIsServerSideGroupOpenByDefaultFunc = function() {
      return this.gridOptions.isServerSideGroupOpenByDefault;
    }, n.prototype.getIsGroupOpenByDefaultFunc = function() {
      return this.gridOptions.isGroupOpenByDefault;
    }, n.prototype.getServerSideGroupKeyFunc = function() {
      return this.gridOptions.getServerSideGroupKey;
    }, n.prototype.getGroupRowAggNodesFunc = function() {
      return this.gridOptions.groupRowAggNodes;
    }, n.prototype.getContextMenuItemsFunc = function() {
      return this.gridOptions.getContextMenuItems;
    }, n.prototype.getMainMenuItemsFunc = function() {
      return this.gridOptions.getMainMenuItems;
    }, n.prototype.getRowIdFunc = function() {
      var e = this.gridOptions, r = e.getRowId, o = e.getRowNodeId;
      if (r)
        return r;
      if (o)
        return function(i) {
          return o(i.data);
        };
    }, n.prototype.getNavigateToNextHeaderFunc = function() {
      return this.gridOptions.navigateToNextHeader;
    }, n.prototype.getTabToNextHeaderFunc = function() {
      return this.gridOptions.tabToNextHeader;
    }, n.prototype.getNavigateToNextCellFunc = function() {
      return this.gridOptions.navigateToNextCell;
    }, n.prototype.getTabToNextCellFunc = function() {
      return this.gridOptions.tabToNextCell;
    }, n.prototype.getGridTabIndex = function() {
      return (this.gridOptions.tabIndex || 0).toString();
    }, n.prototype.isTreeData = function() {
      var e = R(this.gridOptions.treeData);
      return e ? Q.assertRegistered(q.RowGroupingModule, "Tree Data") : !1;
    }, n.prototype.isValueCache = function() {
      return R(this.gridOptions.valueCache);
    }, n.prototype.isValueCacheNeverExpires = function() {
      return R(this.gridOptions.valueCacheNeverExpires);
    }, n.prototype.isDeltaSort = function() {
      return R(this.gridOptions.deltaSort);
    }, n.prototype.isAggregateOnlyChangedColumns = function() {
      return R(this.gridOptions.aggregateOnlyChangedColumns);
    }, n.prototype.getProcessSecondaryColDefFunc = function() {
      return this.gridOptions.processSecondaryColDef;
    }, n.prototype.getProcessSecondaryColGroupDefFunc = function() {
      return this.gridOptions.processSecondaryColGroupDef;
    }, n.prototype.getSendToClipboardFunc = function() {
      return this.gridOptions.sendToClipboard;
    }, n.prototype.getProcessRowPostCreateFunc = function() {
      return this.gridOptions.processRowPostCreate;
    }, n.prototype.getProcessCellForClipboardFunc = function() {
      return this.gridOptions.processCellForClipboard;
    }, n.prototype.getProcessHeaderForClipboardFunc = function() {
      return this.gridOptions.processHeaderForClipboard;
    }, n.prototype.getProcessGroupHeaderForClipboardFunc = function() {
      return this.gridOptions.processGroupHeaderForClipboard;
    }, n.prototype.getProcessCellFromClipboardFunc = function() {
      return this.gridOptions.processCellFromClipboard;
    }, n.prototype.getViewportRowModelPageSize = function() {
      return Ll(this.gridOptions.viewportRowModelPageSize, uv);
    }, n.prototype.getViewportRowModelBufferSize = function() {
      return dv(this.gridOptions.viewportRowModelBufferSize, pv);
    }, n.prototype.isServerSideSortingAlwaysResets = function() {
      return R(this.gridOptions.serverSideSortingAlwaysResets);
    }, n.prototype.isServerSideFilteringAlwaysResets = function() {
      return R(this.gridOptions.serverSideFilteringAlwaysResets);
    }, n.prototype.getPostSortFunc = function() {
      return this.gridOptions.postSort;
    }, n.prototype.getChartToolbarItemsFunc = function() {
      return this.gridOptions.getChartToolbarItems;
    }, n.prototype.getChartThemeOverrides = function() {
      return this.gridOptions.chartThemeOverrides;
    }, n.prototype.getCustomChartThemes = function() {
      return this.gridOptions.customChartThemes;
    }, n.prototype.getChartThemes = function() {
      return this.gridOptions.chartThemes || ["ag-default", "ag-material", "ag-pastel", "ag-vivid", "ag-solar"];
    }, n.prototype.getClipboardDelimiter = function() {
      return O(this.gridOptions.clipboardDelimiter) ? this.gridOptions.clipboardDelimiter : "	";
    }, n.prototype.setProperty = function(e, r, o) {
      o === void 0 && (o = !1);
      var i = this.gridOptions, s = i[e];
      if (o || s !== r) {
        i[e] = r;
        var a = {
          type: e,
          currentValue: r,
          previousValue: s
        };
        this.propertyEventService.dispatchEvent(a);
      }
    }, n.prototype.addEventListener = function(e, r) {
      this.propertyEventService.addEventListener(e, r);
    }, n.prototype.removeEventListener = function(e, r) {
      this.propertyEventService.removeEventListener(e, r);
    }, n.prototype.isSkipHeaderOnAutoSize = function() {
      return !!this.gridOptions.skipHeaderOnAutoSize;
    }, n.prototype.getAutoSizePadding = function() {
      var e = this.gridOptions.autoSizePadding;
      return e != null && e >= 0 ? e : 20;
    }, n.prototype.getHeaderHeight = function() {
      return typeof this.gridOptions.headerHeight == "number" ? this.gridOptions.headerHeight : this.getFromTheme(25, "headerHeight");
    }, n.prototype.getFloatingFiltersHeight = function() {
      return typeof this.gridOptions.floatingFiltersHeight == "number" ? this.gridOptions.floatingFiltersHeight : this.getFromTheme(25, "headerHeight");
    }, n.prototype.getGroupHeaderHeight = function() {
      return typeof this.gridOptions.groupHeaderHeight == "number" ? this.gridOptions.groupHeaderHeight : this.getHeaderHeight();
    }, n.prototype.getPivotHeaderHeight = function() {
      return typeof this.gridOptions.pivotHeaderHeight == "number" ? this.gridOptions.pivotHeaderHeight : this.getHeaderHeight();
    }, n.prototype.getPivotGroupHeaderHeight = function() {
      return typeof this.gridOptions.pivotGroupHeaderHeight == "number" ? this.gridOptions.pivotGroupHeaderHeight : this.getGroupHeaderHeight();
    }, n.prototype.isExternalFilterPresent = function() {
      return typeof this.gridOptions.isExternalFilterPresent == "function" ? this.gridOptions.isExternalFilterPresent() : !1;
    }, n.prototype.doesExternalFilterPass = function(e) {
      return typeof this.gridOptions.doesExternalFilterPass == "function" ? this.gridOptions.doesExternalFilterPass(e) : !1;
    }, n.prototype.getTooltipDelay = function(e) {
      var r = this.gridOptions, o = r.tooltipShowDelay, i = r.tooltipHideDelay, s = e === "show" ? o : i, a = Ts(e);
      return O(s) ? (s < 0 && ve(function() {
        return console.warn("ag-grid: tooltip" + a + "Delay should not be lower than 0");
      }, "tooltip" + a + "DelayWarn"), Math.max(200, s)) : null;
    }, n.prototype.isTooltipMouseTrack = function() {
      return R(this.gridOptions.tooltipMouseTrack);
    }, n.prototype.isSuppressModelUpdateAfterUpdateTransaction = function() {
      return R(this.gridOptions.suppressModelUpdateAfterUpdateTransaction);
    }, n.prototype.getDocument = function() {
      var e = null;
      return this.gridOptions.getDocument && O(this.gridOptions.getDocument) ? e = this.gridOptions.getDocument() : this.eGridDiv && (e = this.eGridDiv.ownerDocument), e && O(e) ? e : document;
    }, n.prototype.getMinColWidth = function() {
      var e = this.gridOptions.minColWidth;
      if (O(e) && e > t.MIN_COL_WIDTH)
        return this.gridOptions.minColWidth;
      var r = this.getFromTheme(null, "headerCellMinWidth");
      return O(r) ? Math.max(r, t.MIN_COL_WIDTH) : t.MIN_COL_WIDTH;
    }, n.prototype.getMaxColWidth = function() {
      return this.gridOptions.maxColWidth && this.gridOptions.maxColWidth > t.MIN_COL_WIDTH ? this.gridOptions.maxColWidth : null;
    }, n.prototype.getColWidth = function() {
      return typeof this.gridOptions.colWidth != "number" || this.gridOptions.colWidth < t.MIN_COL_WIDTH ? 200 : this.gridOptions.colWidth;
    }, n.prototype.getRowBuffer = function() {
      var e = this.gridOptions.rowBuffer;
      return typeof e == "number" ? e < 0 && (ve(function() {
        return console.warn("AG Grid: rowBuffer should not be negative");
      }, "warn rowBuffer negative"), this.gridOptions.rowBuffer = e = 0) : e = w.ROW_BUFFER_SIZE, e;
    }, n.prototype.getRowBufferInPixels = function() {
      var e = this.getRowBuffer(), r = this.getRowHeightAsNumber();
      return e * r;
    }, n.prototype.getScrollbarWidth = function() {
      if (this.scrollbarWidth == null) {
        var e = typeof this.gridOptions.scrollbarWidth == "number" && this.gridOptions.scrollbarWidth >= 0, r = e ? this.gridOptions.scrollbarWidth : Zu();
        r != null && (this.scrollbarWidth = r, this.eventService.dispatchEvent({
          type: v.EVENT_SCROLLBAR_WIDTH_CHANGED
        }));
      }
      return this.scrollbarWidth;
    }, n.prototype.checkForDeprecated = function() {
      var e = this.gridOptions;
      e.deprecatedEmbedFullWidthRows && console.warn("AG Grid: since v21.2, deprecatedEmbedFullWidthRows has been replaced with embedFullWidthRows."), e.rowDeselection && console.warn("AG Grid: since v24.x, rowDeselection is deprecated and the behaviour is true by default. Please use `suppressRowDeselection` to prevent rows from being deselected."), e.enableMultiRowDragging && (e.rowDragMultiRow = !0, delete e.enableMultiRowDragging, console.warn("AG Grid: since v26.1, `enableMultiRowDragging` is deprecated. Please use `rowDragMultiRow`."));
      var r = function(s, a, l) {
        e[s] != null && (console.warn("ag-grid: since version " + l + ", '" + s + "' is deprecated / renamed, please use the new property name '" + a + "' instead."), e[a] == null && (e[a] = e[s]));
      };
      if (r("batchUpdateWaitMillis", "asyncTransactionWaitMillis", "23.1.x"), r("deltaRowDataMode", "immutableData", "23.1.x"), (e.immutableColumns || e.deltaColumnMode) && console.warn("AG Grid: since v24.0, immutableColumns and deltaColumnMode properties are gone. The grid now works like this as default. To keep column order maintained, set grid property applyColumnDefOrder=true"), r("suppressSetColumnStateEvents", "suppressColumnStateEvents", "24.0.x"), e.groupRowInnerRenderer || e.groupRowInnerRendererParams || e.groupRowInnerRendererFramework) {
        console.warn("AG Grid: since v24.0, grid properties groupRowInnerRenderer, groupRowInnerRendererFramework and groupRowInnerRendererParams are no longer used."), console.warn("  Instead use the grid properties groupRowRendererParams.innerRenderer, groupRowRendererParams.innerRendererFramework and groupRowRendererParams.innerRendererParams."), console.warn("  For example instead of this:"), console.warn('    groupRowInnerRenderer: "myRenderer"'), console.warn("    groupRowInnerRendererParams: {x: a}"), console.warn("  Replace with this:"), console.warn("    groupRowRendererParams: {"), console.warn('      innerRenderer: "myRenderer",'), console.warn("      innerRendererParams: {x: a}"), console.warn("    }"), console.warn("  We have copied the properties over for you. However to stop this error message, please change your application code."), e.groupRowRendererParams || (e.groupRowRendererParams = {});
        var o = e.groupRowRendererParams;
        e.groupRowInnerRenderer && (o.innerRenderer = e.groupRowInnerRenderer), e.groupRowInnerRendererParams && (o.innerRendererParams = e.groupRowInnerRendererParams), e.groupRowInnerRendererFramework && (o.innerRendererFramework = e.groupRowInnerRendererFramework);
      }
      if (e.rememberGroupStateWhenNewData && console.warn("AG Grid: since v24.0, grid property rememberGroupStateWhenNewData is deprecated. This feature was provided before Transaction Updates worked (which keep group state). Now that transaction updates are possible and they keep group state, this feature is no longer needed."), e.detailCellRendererParams && e.detailCellRendererParams.autoHeight && (console.warn("AG Grid: since v24.1, grid property detailCellRendererParams.autoHeight is replaced with grid property detailRowAutoHeight. This allows this feature to work when you provide a custom DetailCellRenderer"), e.detailRowAutoHeight = !0), e.suppressKeyboardEvent && console.warn(`AG Grid: since v24.1 suppressKeyboardEvent in the gridOptions has been deprecated and will be removed in
                 future versions of AG Grid. If you need this to be set for every column use the defaultColDef property.`), e.suppressEnterpriseResetOnNewColumns && console.warn("AG Grid: since v25, grid property suppressEnterpriseResetOnNewColumns is deprecated. This was a temporary property to allow changing columns in Server Side Row Model without triggering a reload. Now that it is possible to dynamically change columns in the grid, this is no longer needed."), e.suppressColumnStateEvents && console.warn('AG Grid: since v25, grid property suppressColumnStateEvents no longer works due to a refactor that we did. It should be possible to achieve similar using event.source, which would be "api" if the event was due to setting column state via the API'), e.defaultExportParams && console.warn("AG Grid: since v25.2, the grid property `defaultExportParams` has been replaced by `defaultCsvExportParams` and `defaultExcelExportParams`."), e.stopEditingWhenGridLosesFocus && (console.warn("AG Grid: since v25.2.2, the grid property `stopEditingWhenGridLosesFocus` has been replaced by `stopEditingWhenCellsLoseFocus`."), e.stopEditingWhenCellsLoseFocus = !0), e.applyColumnDefOrder && console.warn("AG Grid: since v26.0, the grid property `applyColumnDefOrder` is no longer needed, as this is the default behaviour. To turn this behaviour off, set maintainColumnOrder=true"), e.groupMultiAutoColumn && (console.warn("AG Grid: since v26.0, the grid property `groupMultiAutoColumn` has been replaced by `groupDisplayType = 'multipleColumns'`"), e.groupDisplayType = "multipleColumns"), e.groupUseEntireRow && (console.warn("AG Grid: since v26.0, the grid property `groupUseEntireRow` has been replaced by `groupDisplayType = 'groupRows'`"), e.groupDisplayType = "groupRows"), e.groupSuppressAutoColumn) {
        var i = e.treeData ? "treeDataDisplayType" : "groupDisplayType";
        console.warn("AG Grid: since v26.0, the grid property `groupSuppressAutoColumn` has been replaced by `" + i + " = 'custom'`"), e.groupDisplayType = "custom";
      }
      e.defaultGroupSortComparator && (console.warn("AG Grid: since v26.0, the grid property `defaultGroupSortComparator` has been replaced by `defaultGroupOrderComparator`"), e.defaultGroupOrderComparator = e.defaultGroupSortComparator), e.colWidth && console.warn("AG Grid: since v26.1, the grid property `colWidth` is deprecated and should be set via `defaultColDef.width`."), e.minColWidth && console.warn("AG Grid: since v26.1, the grid property `minColWidth` is deprecated and should be set via `defaultColDef.minWidth`."), e.maxColWidth && console.warn("AG Grid: since v26.1, the grid property `maxColWidth` is deprecated and should be set via `defaultColDef.maxWidth`."), e.reactUi && console.warn("AG Grid: since v27.0, React UI is on by default, so no need for reactUi=true. To turn it off, set suppressReactUi=true."), e.suppressReactUi && console.warn("AG Grid: The legacy React rendering engine is deprecated and will be removed in the next major version of the grid."), e.suppressCellSelection && (console.warn("AG Grid: since v27.0, `suppressCellSelection` has been replaced by `suppressCellFocus`."), e.suppressCellFocus = e.suppressCellSelection), e.getRowNodeId && console.warn("AG Grid: since v27.1, `getRowNodeId` is deprecate and has been replaced by `getRowId`. The difference is if getRowId() is implemented, immutable data is on by default."), e.immutableData && console.warn("AG Grid: since v27.1, `immutableData` is deprecated. To turn on, implement `getRowId` has been replaced by `getRowId`. The difference is if getRowId() is implemented, immutable data is on by default."), e.clipboardDeliminator && (console.warn("AG Grid: since v27.1, `clipboardDeliminator` has been replaced by `clipboardDelimiter`."), e.clipboardDelimiter = e.clipboardDeliminator);
    }, n.prototype.checkForViolations = function() {
      this.isTreeData() && this.treeDataViolations();
    }, n.prototype.treeDataViolations = function() {
      this.isRowModelDefault() && K(this.getDataPathFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=clientSide, but you did not provide getDataPath function, please provide getDataPath function if using tree data."), this.isRowModelServerSide() && (K(this.getIsServerSideGroupFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide isServerSideGroup function, please provide isServerSideGroup function if using tree data."), K(this.getServerSideGroupKeyFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide getServerSideGroupKey function, please provide getServerSideGroupKey function if using tree data."));
    }, n.prototype.getLocaleTextFunc = function() {
      if (this.gridOptions.localeTextFunc)
        return this.gridOptions.localeTextFunc;
      var e = this.gridOptions.localeText;
      return function(r, o) {
        var i = e && e[r];
        return i ?? o;
      };
    }, n.prototype.globalEventHandler = function(e, r) {
      if (!this.destroyed) {
        var o = sr.getCallbackForEvent(e);
        typeof this.gridOptions[o] == "function" && this.gridOptions[o](r);
      }
    }, n.prototype.setRowHeightVariable = function(e) {
      var r = this.eGridDiv.style.getPropertyValue("--ag-row-height").trim(), o = e + "px";
      r != o && this.eGridDiv.style.setProperty("--ag-row-height", o);
    }, n.prototype.getRowHeightAsNumber = function() {
      if (!this.gridOptions.rowHeight || K(this.gridOptions.rowHeight))
        return this.getDefaultRowHeight();
      var e = this.gridOptions.rowHeight;
      return e && this.isNumeric(e) ? (this.setRowHeightVariable(e), e) : (console.warn("AG Grid row height must be a number if not using standard row model"), this.getDefaultRowHeight());
    }, n.prototype.isGetRowHeightFunction = function() {
      return typeof this.gridOptions.getRowHeight == "function";
    }, n.prototype.getRowHeightForNode = function(e, r, o) {
      if (r === void 0 && (r = !1), o == null && (o = this.getDefaultRowHeight()), this.isGetRowHeightFunction()) {
        if (r)
          return { height: o, estimated: !0 };
        var i = {
          node: e,
          data: e.data,
          api: this.gridOptions.api,
          context: this.gridOptions.context
        }, s = this.gridOptions.getRowHeight(i);
        if (this.isNumeric(s))
          return s === 0 && ve(function() {
            return console.warn("AG Grid: The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.");
          }, "invalidRowHeight"), { height: Math.max(1, s), estimated: !1 };
      }
      if (e.detail && this.isMasterDetail())
        return this.isDetailRowAutoHeight() ? { height: 1, estimated: !1 } : this.isNumeric(this.gridOptions.detailRowHeight) ? { height: this.gridOptions.detailRowHeight, estimated: !1 } : { height: lv, estimated: !1 };
      var a = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : o;
      return { height: a, estimated: !1 };
    }, n.prototype.isDynamicRowHeight = function() {
      return typeof this.gridOptions.getRowHeight == "function";
    }, n.prototype.getListItemHeight = function() {
      return this.getFromTheme(20, "listItemHeight");
    }, n.prototype.chartMenuPanelWidth = function() {
      return this.environment.chartMenuPanelWidth();
    }, n.prototype.isNumeric = function(e) {
      return !isNaN(e) && typeof e == "number" && isFinite(e);
    }, n.prototype.getFromTheme = function(e, r) {
      var o = this.environment.getTheme().theme;
      return o && o.indexOf("ag-theme") === 0 ? this.environment.getSassVariable(o, r) : e;
    }, n.prototype.getDefaultRowHeight = function() {
      return this.getFromTheme(av, "rowHeight");
    }, n.prototype.matchesGroupDisplayType = function(e, r) {
      var o = ["groupRows", "multipleColumns", "custom", "singleColumn"];
      return o.indexOf(r) < 0 ? (console.warn("AG Grid: '" + r + "' is not a valid groupDisplayType value - possible values are: '" + o.join("', '") + "'"), !1) : r === e;
    }, n.prototype.matchesTreeDataDisplayType = function(e, r) {
      var o = ["auto", "custom"];
      return o.indexOf(r) < 0 ? (console.warn("AG Grid: '" + r + "' is not a valid treeDataDisplayType value - possible values are: '" + o.join("', '") + "'"), !1) : r === e;
    };
    var t;
    return n.MIN_COL_WIDTH = 10, n.PROP_HEADER_HEIGHT = "headerHeight", n.PROP_GROUP_REMOVE_SINGLE_CHILDREN = "groupRemoveSingleChildren", n.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN = "groupRemoveLowestSingleChildren", n.PROP_PIVOT_HEADER_HEIGHT = "pivotHeaderHeight", n.PROP_SUPPRESS_CLIPBOARD_PASTE = "suppressClipboardPaste", n.PROP_GROUP_HEADER_HEIGHT = "groupHeaderHeight", n.PROP_PIVOT_GROUP_HEADER_HEIGHT = "pivotGroupHeaderHeight", n.PROP_NAVIGATE_TO_NEXT_CELL = "navigateToNextCell", n.PROP_TAB_TO_NEXT_CELL = "tabToNextCell", n.PROP_NAVIGATE_TO_NEXT_HEADER = "navigateToNextHeader", n.PROP_TAB_TO_NEXT_HEADER = "tabToNextHeader", n.PROP_IS_EXTERNAL_FILTER_PRESENT = "isExternalFilterPresent", n.PROP_DOES_EXTERNAL_FILTER_PASS = "doesExternalFilterPass", n.PROP_FLOATING_FILTERS_HEIGHT = "floatingFiltersHeight", n.PROP_SUPPRESS_ROW_CLICK_SELECTION = "suppressRowClickSelection", n.PROP_SUPPRESS_ROW_DRAG = "suppressRowDrag", n.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG = "suppressMoveWhenRowDragging", n.PROP_GET_ROW_CLASS = "getRowClass", n.PROP_GET_ROW_STYLE = "getRowStyle", n.PROP_GET_ROW_HEIGHT = "getRowHeight", n.PROP_POPUP_PARENT = "popupParent", n.PROP_DOM_LAYOUT = "domLayout", n.PROP_FILL_HANDLE_DIRECTION = "fillHandleDirection", n.PROP_GROUP_ROW_AGG_NODES = "groupRowAggNodes", n.PROP_GET_BUSINESS_KEY_FOR_NODE = "getBusinessKeyForNode", n.PROP_GET_CHILD_COUNT = "getChildCount", n.PROP_PROCESS_ROW_POST_CREATE = "processRowPostCreate", n.PROP_GET_ROW_NODE_ID = "getRowNodeId", n.PROP_IS_FULL_WIDTH_CELL = "isFullWidthCell", n.PROP_IS_ROW_SELECTABLE = "isRowSelectable", n.PROP_IS_ROW_MASTER = "isRowMaster", n.PROP_POST_SORT = "postSort", n.PROP_GET_DOCUMENT = "getDocument", n.PROP_POST_PROCESS_POPUP = "postProcessPopup", n.PROP_DEFAULT_GROUP_ORDER_COMPARATOR = "defaultGroupOrderComparator", n.PROP_PAGINATION_NUMBER_FORMATTER = "paginationNumberFormatter", n.PROP_GET_CONTEXT_MENU_ITEMS = "getContextMenuItems", n.PROP_GET_MAIN_MENU_ITEMS = "getMainMenuItems", n.PROP_PROCESS_CELL_FOR_CLIPBOARD = "processCellForClipboard", n.PROP_PROCESS_CELL_FROM_CLIPBOARD = "processCellFromClipboard", n.PROP_SEND_TO_CLIPBOARD = "sendToClipboard", n.PROP_PROCESS_TO_SECONDARY_COLDEF = "processSecondaryColDef", n.PROP_PROCESS_SECONDARY_COL_GROUP_DEF = "processSecondaryColGroupDef", n.PROP_GET_CHART_TOOLBAR_ITEMS = "getChartToolbarItems", n.PROP_GET_SERVER_SIDE_STORE_PARAMS = "getServerSideStoreParams", n.PROP_IS_SERVER_SIDE_GROUPS_OPEN_BY_DEFAULT = "isServerSideGroupOpenByDefault", n.PROP_IS_APPLY_SERVER_SIDE_TRANSACTION = "isApplyServerSideTransaction", n.PROP_IS_SERVER_SIDE_GROUP = "isServerSideGroup", n.PROP_GET_SERVER_SIDE_GROUP_KEY = "getServerSideGroupKey", Jt([
      h("gridOptions")
    ], n.prototype, "gridOptions", void 0), Jt([
      h("eventService")
    ], n.prototype, "eventService", void 0), Jt([
      h("environment")
    ], n.prototype, "environment", void 0), Jt([
      h("eGridDiv")
    ], n.prototype, "eGridDiv", void 0), Jt([
      Ml(0, tt("gridApi")),
      Ml(1, tt("columnApi"))
    ], n.prototype, "agWire", null), Jt([
      ot
    ], n.prototype, "destroy", null), Jt([
      G
    ], n.prototype, "init", null), n = t = Jt([
      U("gridOptionsWrapper")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var pi = (
  /** @class */
  function() {
    function n(t, e) {
      this.active = !0, this.nodeIdsToColumns = {}, this.mapToItems = {}, this.keepingColumns = t, this.pathRoot = {
        rowNode: e,
        children: null
      }, this.mapToItems[e.id] = this.pathRoot;
    }
    return n.prototype.setInactive = function() {
      this.active = !1;
    }, n.prototype.isActive = function() {
      return this.active;
    }, n.prototype.depthFirstSearchChangedPath = function(t, e) {
      if (t.children)
        for (var r = 0; r < t.children.length; r++)
          this.depthFirstSearchChangedPath(t.children[r], e);
      e(t.rowNode);
    }, n.prototype.depthFirstSearchEverything = function(t, e, r) {
      if (t.childrenAfterGroup)
        for (var o = 0; o < t.childrenAfterGroup.length; o++) {
          var i = t.childrenAfterGroup[o];
          i.childrenAfterGroup ? this.depthFirstSearchEverything(t.childrenAfterGroup[o], e, r) : r && e(i);
        }
      e(t);
    }, n.prototype.forEachChangedNodeDepthFirst = function(t, e) {
      e === void 0 && (e = !1), this.active ? this.depthFirstSearchChangedPath(this.pathRoot, t) : this.depthFirstSearchEverything(this.pathRoot.rowNode, t, e);
    }, n.prototype.executeFromRootNode = function(t) {
      t(this.pathRoot.rowNode);
    }, n.prototype.createPathItems = function(t) {
      for (var e = t, r = 0; !this.mapToItems[e.id]; ) {
        var o = {
          rowNode: e,
          children: null
        };
        this.mapToItems[e.id] = o, r++, e = e.parent;
      }
      return r;
    }, n.prototype.populateColumnsMap = function(t, e) {
      var r = this;
      if (!(!this.keepingColumns || !e))
        for (var o = t; o; )
          this.nodeIdsToColumns[o.id] || (this.nodeIdsToColumns[o.id] = {}), e.forEach(function(i) {
            return r.nodeIdsToColumns[o.id][i.getId()] = !0;
          }), o = o.parent;
    }, n.prototype.linkPathItems = function(t, e) {
      for (var r = t, o = 0; o < e; o++) {
        var i = this.mapToItems[r.id], s = this.mapToItems[r.parent.id];
        s.children || (s.children = []), s.children.push(i), r = r.parent;
      }
    }, n.prototype.addParentNode = function(t, e) {
      if (!(!t || t.isRowPinned())) {
        var r = this.createPathItems(t);
        this.linkPathItems(t, r), this.populateColumnsMap(t, e);
      }
    }, n.prototype.canSkip = function(t) {
      return this.active && !this.mapToItems[t.id];
    }, n.prototype.getValueColumnsForNode = function(t, e) {
      if (!this.keepingColumns)
        return e;
      var r = this.nodeIdsToColumns[t.id], o = e.filter(function(i) {
        return r[i.getId()];
      });
      return o;
    }, n.prototype.getNotValueColumnsForNode = function(t, e) {
      if (!this.keepingColumns)
        return null;
      var r = this.nodeIdsToColumns[t.id], o = e.filter(function(i) {
        return !r[i.getId()];
      });
      return o;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var hv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Fr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, fv = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Qp = (
  /** @class */
  function(n) {
    hv(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("selectionService"), this.reset(), this.gridOptionsWrapper.isRowModelDefault() && this.addManagedListener(this.eventService, v.EVENT_ROW_DATA_CHANGED, this.reset.bind(this));
    }, t.prototype.init = function() {
      this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren(), this.addManagedListener(this.eventService, v.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));
    }, t.prototype.setLastSelectedNode = function(e) {
      this.lastSelectedNode = e;
    }, t.prototype.getLastSelectedNode = function() {
      return this.lastSelectedNode;
    }, t.prototype.getSelectedNodes = function() {
      var e = [];
      return ge(this.selectedNodes, function(r, o) {
        o && e.push(o);
      }), e;
    }, t.prototype.getSelectedRows = function() {
      var e = [];
      return ge(this.selectedNodes, function(r, o) {
        o && o.data && e.push(o.data);
      }), e;
    }, t.prototype.removeGroupsFromSelection = function() {
      var e = this;
      ge(this.selectedNodes, function(r, o) {
        o && o.group && (e.selectedNodes[o.id] = void 0);
      });
    }, t.prototype.updateGroupsFromChildrenSelections = function(e) {
      if (this.gridOptionsWrapper.isGroupSelectsChildren() && this.rowModel.getType() === w.ROW_MODEL_TYPE_CLIENT_SIDE) {
        var r = this.rowModel, o = r.getRootNode();
        e || (e = new pi(!0, o), e.setInactive()), e.forEachChangedNodeDepthFirst(function(i) {
          i !== o && i.calculateSelectedFromChildren();
        });
      }
    }, t.prototype.getNodeForIdIfSelected = function(e) {
      return this.selectedNodes[e];
    }, t.prototype.clearOtherNodes = function(e) {
      var r = this, o = {}, i = 0;
      return ge(this.selectedNodes, function(s, a) {
        if (a && a.id !== e.id) {
          var l = r.selectedNodes[a.id];
          i += l.setSelectedParams({
            newValue: !1,
            clearSelection: !1,
            suppressFinishActions: !0
          }), r.groupSelectsChildren && a.parent && (o[a.parent.id] = a.parent);
        }
      }), ge(o, function(s, a) {
        a.calculateSelectedFromChildren();
      }), i;
    }, t.prototype.onRowSelected = function(e) {
      var r = e.node;
      this.groupSelectsChildren && r.group || (r.isSelected() ? this.selectedNodes[r.id] = r : this.selectedNodes[r.id] = void 0);
    }, t.prototype.syncInRowNode = function(e, r) {
      this.syncInOldRowNode(e, r), this.syncInNewRowNode(e);
    }, t.prototype.syncInOldRowNode = function(e, r) {
      var o = O(r) && e.id !== r.id;
      if (o && r) {
        var i = r.id, s = this.selectedNodes[i] == e;
        s && (this.selectedNodes[r.id] = r);
      }
    }, t.prototype.syncInNewRowNode = function(e) {
      O(this.selectedNodes[e.id]) ? (e.setSelectedInitialValue(!0), this.selectedNodes[e.id] = e) : e.setSelectedInitialValue(!1);
    }, t.prototype.reset = function() {
      this.logger.log("reset"), this.selectedNodes = {}, this.lastSelectedNode = null;
    }, t.prototype.getBestCostNodeSelection = function() {
      if (this.rowModel.getType() !== w.ROW_MODEL_TYPE_CLIENT_SIDE) {
        console.warn("AG Grid: `getBestCostNodeSelection` is only available when using normal row model");
        return;
      }
      var e = this.rowModel, r = e.getTopLevelNodes();
      if (r === null) {
        console.warn("AG Grid: `selectAll` not available doing `rowModel=virtual`");
        return;
      }
      var o = [];
      function i(s) {
        for (var a = 0, l = s.length; a < l; a++) {
          var u = s[a];
          if (u.isSelected())
            o.push(u);
          else {
            var p = u;
            p.group && p.children && i(p.children);
          }
        }
      }
      return i(r), o;
    }, t.prototype.setRowModel = function(e) {
      this.rowModel = e;
    }, t.prototype.isEmpty = function() {
      var e = 0;
      return ge(this.selectedNodes, function(r, o) {
        o && e++;
      }), e === 0;
    }, t.prototype.deselectAllRowNodes = function(e) {
      e === void 0 && (e = !1);
      var r = function(a) {
        return a.selectThisNode(!1);
      }, o = this.rowModel.getType() === w.ROW_MODEL_TYPE_CLIENT_SIDE;
      if (e) {
        if (!o) {
          console.error("AG Grid: selecting just filtered only works with In Memory Row Model");
          return;
        }
        var i = this.rowModel;
        i.forEachNodeAfterFilter(r);
      } else
        ge(this.selectedNodes, function(a, l) {
          l && r(l);
        }), this.reset();
      o && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections();
      var s = {
        type: v.EVENT_SELECTION_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.selectAllRowNodes = function(e) {
      if (e === void 0 && (e = !1), this.rowModel.getType() !== w.ROW_MODEL_TYPE_CLIENT_SIDE)
        throw new Error("selectAll only available with normal row model, ie not " + this.rowModel.getType());
      var r = this.rowModel, o = function(s) {
        return s.selectThisNode(!0);
      };
      e ? r.forEachNodeAfterFilter(o) : r.forEachNode(o), this.rowModel.getType() === w.ROW_MODEL_TYPE_CLIENT_SIDE && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections();
      var i = {
        type: v.EVENT_SELECTION_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(i);
    }, t.prototype.selectNode = function(e, r) {
      e && e.setSelectedParams({ newValue: !0, clearSelection: !r });
    }, t.prototype.deselectIndex = function(e) {
      var r = this.rowModel.getRow(e);
      this.deselectNode(r);
    }, t.prototype.deselectNode = function(e) {
      e && e.setSelectedParams({ newValue: !1, clearSelection: !1 });
    }, t.prototype.selectIndex = function(e, r) {
      var o = this.rowModel.getRow(e);
      this.selectNode(o, r);
    }, Fr([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Fr([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Fr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Fr([
      fv(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), Fr([
      G
    ], t.prototype, "init", null), t = Fr([
      U("selectionService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ki = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Jp = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.sizeColumnsToFit = function(t) {
      typeof t > "u" && console.error("AG Grid: missing parameter to columnApi.sizeColumnsToFit(gridWidth)"), this.columnModel.sizeColumnsToFit(t, "api");
    }, n.prototype.setColumnGroupOpened = function(t, e) {
      this.columnModel.setColumnGroupOpened(t, e, "api");
    }, n.prototype.getColumnGroup = function(t, e) {
      return this.columnModel.getColumnGroup(t, e);
    }, n.prototype.getProvidedColumnGroup = function(t) {
      return this.columnModel.getProvidedColumnGroup(t);
    }, n.prototype.getDisplayNameForColumn = function(t, e) {
      return this.columnModel.getDisplayNameForColumn(t, e) || "";
    }, n.prototype.getDisplayNameForColumnGroup = function(t, e) {
      return this.columnModel.getDisplayNameForColumnGroup(t, e) || "";
    }, n.prototype.getColumn = function(t) {
      return this.columnModel.getPrimaryColumn(t);
    }, n.prototype.applyColumnState = function(t) {
      return this.columnModel.applyColumnState(t, "api");
    }, n.prototype.getColumnState = function() {
      return this.columnModel.getColumnState();
    }, n.prototype.resetColumnState = function() {
      this.columnModel.resetColumnState("api");
    }, n.prototype.getColumnGroupState = function() {
      return this.columnModel.getColumnGroupState();
    }, n.prototype.setColumnGroupState = function(t) {
      this.columnModel.setColumnGroupState(t, "api");
    }, n.prototype.resetColumnGroupState = function() {
      this.columnModel.resetColumnGroupState("api");
    }, n.prototype.isPinning = function() {
      return this.columnModel.isPinningLeft() || this.columnModel.isPinningRight();
    }, n.prototype.isPinningLeft = function() {
      return this.columnModel.isPinningLeft();
    }, n.prototype.isPinningRight = function() {
      return this.columnModel.isPinningRight();
    }, n.prototype.getDisplayedColAfter = function(t) {
      return this.columnModel.getDisplayedColAfter(t);
    }, n.prototype.getDisplayedColBefore = function(t) {
      return this.columnModel.getDisplayedColBefore(t);
    }, n.prototype.setColumnVisible = function(t, e) {
      this.columnModel.setColumnVisible(t, e, "api");
    }, n.prototype.setColumnsVisible = function(t, e) {
      this.columnModel.setColumnsVisible(t, e, "api");
    }, n.prototype.setColumnPinned = function(t, e) {
      this.columnModel.setColumnPinned(t, e, "api");
    }, n.prototype.setColumnsPinned = function(t, e) {
      this.columnModel.setColumnsPinned(t, e, "api");
    }, n.prototype.getAllColumns = function() {
      return this.columnModel.getAllPrimaryColumns();
    }, n.prototype.getAllGridColumns = function() {
      return this.columnModel.getAllGridColumns();
    }, n.prototype.getDisplayedLeftColumns = function() {
      return this.columnModel.getDisplayedLeftColumns();
    }, n.prototype.getDisplayedCenterColumns = function() {
      return this.columnModel.getDisplayedCenterColumns();
    }, n.prototype.getDisplayedRightColumns = function() {
      return this.columnModel.getDisplayedRightColumns();
    }, n.prototype.getAllDisplayedColumns = function() {
      return this.columnModel.getAllDisplayedColumns();
    }, n.prototype.getAllDisplayedVirtualColumns = function() {
      return this.columnModel.getViewportColumns();
    }, n.prototype.moveColumn = function(t, e) {
      typeof t == "number" ? (console.warn("AG Grid: you are using moveColumn(fromIndex, toIndex) - moveColumn takes a column key and a destination index, not two indexes, to move with indexes use moveColumnByIndex(from,to) instead"), this.columnModel.moveColumnByIndex(t, e, "api")) : this.columnModel.moveColumn(t, e, "api");
    }, n.prototype.moveColumnByIndex = function(t, e) {
      this.columnModel.moveColumnByIndex(t, e, "api");
    }, n.prototype.moveColumns = function(t, e) {
      this.columnModel.moveColumns(t, e, "api");
    }, n.prototype.moveRowGroupColumn = function(t, e) {
      this.columnModel.moveRowGroupColumn(t, e);
    }, n.prototype.setColumnAggFunc = function(t, e) {
      this.columnModel.setColumnAggFunc(t, e);
    }, n.prototype.setColumnWidth = function(t, e, r, o) {
      r === void 0 && (r = !0), this.columnModel.setColumnWidths([{ key: t, newWidth: e }], !1, r, o);
    }, n.prototype.setColumnWidths = function(t, e, r) {
      e === void 0 && (e = !0), this.columnModel.setColumnWidths(t, !1, e, r);
    }, n.prototype.setPivotMode = function(t) {
      this.columnModel.setPivotMode(t);
    }, n.prototype.isPivotMode = function() {
      return this.columnModel.isPivotMode();
    }, n.prototype.getSecondaryPivotColumn = function(t, e) {
      return this.columnModel.getSecondaryPivotColumn(t, e);
    }, n.prototype.setValueColumns = function(t) {
      this.columnModel.setValueColumns(t, "api");
    }, n.prototype.getValueColumns = function() {
      return this.columnModel.getValueColumns();
    }, n.prototype.removeValueColumn = function(t) {
      this.columnModel.removeValueColumn(t, "api");
    }, n.prototype.removeValueColumns = function(t) {
      this.columnModel.removeValueColumns(t, "api");
    }, n.prototype.addValueColumn = function(t) {
      this.columnModel.addValueColumn(t, "api");
    }, n.prototype.addValueColumns = function(t) {
      this.columnModel.addValueColumns(t, "api");
    }, n.prototype.setRowGroupColumns = function(t) {
      this.columnModel.setRowGroupColumns(t, "api");
    }, n.prototype.removeRowGroupColumn = function(t) {
      this.columnModel.removeRowGroupColumn(t, "api");
    }, n.prototype.removeRowGroupColumns = function(t) {
      this.columnModel.removeRowGroupColumns(t, "api");
    }, n.prototype.addRowGroupColumn = function(t) {
      this.columnModel.addRowGroupColumn(t, "api");
    }, n.prototype.addRowGroupColumns = function(t) {
      this.columnModel.addRowGroupColumns(t, "api");
    }, n.prototype.getRowGroupColumns = function() {
      return this.columnModel.getRowGroupColumns();
    }, n.prototype.setPivotColumns = function(t) {
      this.columnModel.setPivotColumns(t, "api");
    }, n.prototype.removePivotColumn = function(t) {
      this.columnModel.removePivotColumn(t, "api");
    }, n.prototype.removePivotColumns = function(t) {
      this.columnModel.removePivotColumns(t, "api");
    }, n.prototype.addPivotColumn = function(t) {
      this.columnModel.addPivotColumn(t, "api");
    }, n.prototype.addPivotColumns = function(t) {
      this.columnModel.addPivotColumns(t, "api");
    }, n.prototype.getPivotColumns = function() {
      return this.columnModel.getPivotColumns();
    }, n.prototype.getLeftDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeLeft();
    }, n.prototype.getCenterDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeCentre();
    }, n.prototype.getRightDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeRight();
    }, n.prototype.getAllDisplayedColumnGroups = function() {
      return this.columnModel.getAllDisplayedTrees();
    }, n.prototype.autoSizeColumn = function(t, e) {
      return this.columnModel.autoSizeColumn(t, e, "api");
    }, n.prototype.autoSizeColumns = function(t, e) {
      this.columnModel.autoSizeColumns({ columns: t, skipHeader: e });
    }, n.prototype.autoSizeAllColumns = function(t) {
      this.columnModel.autoSizeAllColumns(t, "api");
    }, n.prototype.setSecondaryColumns = function(t) {
      this.columnModel.setSecondaryColumns(t, "api");
    }, n.prototype.getSecondaryColumns = function() {
      return this.columnModel.getSecondaryColumns();
    }, n.prototype.getPrimaryColumns = function() {
      return this.columnModel.getAllPrimaryColumns();
    }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
      setTimeout(se.removeAllReferences.bind(window, this, "Column API"), 100);
    }, n.prototype.columnGroupOpened = function(t, e) {
      console.error("AG Grid: columnGroupOpened no longer exists, use setColumnGroupOpened"), this.setColumnGroupOpened(t, e);
    }, n.prototype.hideColumns = function(t, e) {
      console.error("AG Grid: hideColumns is deprecated, use setColumnsVisible"), this.columnModel.setColumnsVisible(t, !e, "api");
    }, n.prototype.hideColumn = function(t, e) {
      console.error("AG Grid: hideColumn is deprecated, use setColumnVisible"), this.columnModel.setColumnVisible(t, !e, "api");
    }, n.prototype.setState = function(t) {
      return console.error("AG Grid: setState is deprecated, use setColumnState"), this.setColumnState(t);
    }, n.prototype.getState = function() {
      return console.error("AG Grid: getState is deprecated, use getColumnState"), this.getColumnState();
    }, n.prototype.resetState = function() {
      console.error("AG Grid: resetState is deprecated, use resetColumnState"), this.resetColumnState();
    }, n.prototype.getAggregationColumns = function() {
      return console.error("AG Grid: getAggregationColumns is deprecated, use getValueColumns"), this.columnModel.getValueColumns();
    }, n.prototype.removeAggregationColumn = function(t) {
      console.error("AG Grid: removeAggregationColumn is deprecated, use removeValueColumn"), this.columnModel.removeValueColumn(t, "api");
    }, n.prototype.removeAggregationColumns = function(t) {
      console.error("AG Grid: removeAggregationColumns is deprecated, use removeValueColumns"), this.columnModel.removeValueColumns(t, "api");
    }, n.prototype.addAggregationColumn = function(t) {
      console.error("AG Grid: addAggregationColumn is deprecated, use addValueColumn"), this.columnModel.addValueColumn(t, "api");
    }, n.prototype.addAggregationColumns = function(t) {
      console.error("AG Grid: addAggregationColumns is deprecated, use addValueColumns"), this.columnModel.addValueColumns(t, "api");
    }, n.prototype.setColumnAggFunction = function(t, e) {
      console.error("AG Grid: setColumnAggFunction is deprecated, use setColumnAggFunc"), this.columnModel.setColumnAggFunc(t, e, "api");
    }, n.prototype.getDisplayNameForCol = function(t) {
      return console.error("AG Grid: getDisplayNameForCol is deprecated, use getDisplayNameForColumn"), this.getDisplayNameForColumn(t, null);
    }, n.prototype.setColumnState = function(t) {
      return console.error("AG Grid: setColumnState is deprecated, use applyColumnState"), this.columnModel.applyColumnState({ state: t, applyOrder: !0 }, "api");
    }, n.prototype.getOriginalColumnGroup = function(t) {
      return console.error("AG Grid: getOriginalColumnGroup is deprecated, use getProvidedColumnGroup"), this.columnModel.getProvidedColumnGroup(t);
    }, ki([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), ki([
      ot
    ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = ki([
      U("columnApi")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Bo;
(function(n) {
  n[n.FILL = 0] = "FILL", n[n.RANGE = 1] = "RANGE";
})(Bo || (Bo = {}));
var mr;
(function(n) {
  n[n.VALUE = 0] = "VALUE", n[n.DIMENSION = 1] = "DIMENSION";
})(mr || (mr = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var yo = "ag-cell-range-selected", gv = "ag-cell-range-chart", vv = "ag-cell-range-single-cell", yv = "ag-cell-range-chart-category", Cv = "ag-cell-range-handle", mv = "ag-cell-range-top", _v = "ag-cell-range-right", wv = "ag-cell-range-bottom", Ev = "ag-cell-range-left", Rv = (
  /** @class */
  function() {
    function n(t, e) {
      this.beans = t, this.cellCtrl = e;
    }
    return n.prototype.setComp = function(t, e) {
      this.cellComp = t, this.eGui = e, this.onRangeSelectionChanged();
    }, n.prototype.onRangeSelectionChanged = function() {
      this.cellComp && (this.rangeCount = this.beans.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()), this.hasChartRange = this.getHasChartRange(), this.cellComp.addOrRemoveCssClass(yo, this.rangeCount !== 0), this.cellComp.addOrRemoveCssClass(yo + "-1", this.rangeCount === 1), this.cellComp.addOrRemoveCssClass(yo + "-2", this.rangeCount === 2), this.cellComp.addOrRemoveCssClass(yo + "-3", this.rangeCount === 3), this.cellComp.addOrRemoveCssClass(yo + "-4", this.rangeCount >= 4), this.cellComp.addOrRemoveCssClass(gv, this.hasChartRange), Zr(this.eGui, this.rangeCount > 0 ? !0 : void 0), this.cellComp.addOrRemoveCssClass(vv, this.isSingleCell()), this.updateRangeBorders(), this.refreshHandle());
    }, n.prototype.updateRangeBorders = function() {
      var t = this.getRangeBorders(), e = this.isSingleCell(), r = !e && t.top, o = !e && t.right, i = !e && t.bottom, s = !e && t.left;
      this.cellComp.addOrRemoveCssClass(mv, r), this.cellComp.addOrRemoveCssClass(_v, o), this.cellComp.addOrRemoveCssClass(wv, i), this.cellComp.addOrRemoveCssClass(Ev, s);
    }, n.prototype.isSingleCell = function() {
      var t = this.beans.rangeService;
      return this.rangeCount === 1 && t && !t.isMoreThanOneCell();
    }, n.prototype.getHasChartRange = function() {
      var t = this.beans.rangeService;
      if (!this.rangeCount || !t)
        return !1;
      var e = t.getCellRanges();
      return e.length > 0 && e.every(function(r) {
        return yt([mr.DIMENSION, mr.VALUE], r.type);
      });
    }, n.prototype.updateRangeBordersIfRangeCount = function() {
      this.rangeCount > 0 && (this.updateRangeBorders(), this.refreshHandle());
    }, n.prototype.getRangeBorders = function() {
      var t = this, e = this.beans.gridOptionsWrapper.isEnableRtl(), r = !1, o = !1, i = !1, s = !1, a = this.cellCtrl.getCellPosition().column, l = this.beans, u = l.rangeService, p = l.columnModel, c, d;
      e ? (c = p.getDisplayedColAfter(a), d = p.getDisplayedColBefore(a)) : (c = p.getDisplayedColBefore(a), d = p.getDisplayedColAfter(a));
      var f = u.getCellRanges().filter(function(_) {
        return u.isCellInSpecificRange(t.cellCtrl.getCellPosition(), _);
      });
      c || (s = !0), d || (o = !0);
      for (var g = 0; g < f.length && !(r && o && i && s); g++) {
        var y = f[g], C = u.getRangeStartRow(y), m = u.getRangeEndRow(y);
        !r && this.beans.rowPositionUtils.sameRow(C, this.cellCtrl.getCellPosition()) && (r = !0), !i && this.beans.rowPositionUtils.sameRow(m, this.cellCtrl.getCellPosition()) && (i = !0), !s && c && y.columns.indexOf(c) < 0 && (s = !0), !o && d && y.columns.indexOf(d) < 0 && (o = !0);
      }
      return { top: r, right: o, bottom: i, left: s };
    }, n.prototype.refreshHandle = function() {
      if (this.beans.rangeService) {
        var t = this.shouldHaveSelectionHandle();
        this.selectionHandle && !t && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), t && this.addSelectionHandle(), this.cellComp.addOrRemoveCssClass(Cv, !!this.selectionHandle);
      }
    }, n.prototype.shouldHaveSelectionHandle = function() {
      var t = this.beans, e = t.gridOptionsWrapper, r = t.rangeService, o = r.getCellRanges(), i = o.length;
      if (this.rangeCount < 1 || i < 1)
        return !1;
      var s = _e(o), a = this.cellCtrl.getCellPosition(), l = e.isEnableFillHandle() && !this.cellCtrl.isSuppressFillHandle(), u = e.isEnableRangeHandle(), p = i === 1 && !this.cellCtrl.isEditing() && (l || u);
      if (this.hasChartRange) {
        var c = o[0].type === mr.DIMENSION, d = c && r.isCellInSpecificRange(a, o[0]);
        this.cellComp.addOrRemoveCssClass(yv, d), p = s.type === mr.VALUE;
      }
      return p && s.endRow != null && r.isContiguousRange(s) && r.isBottomRightCell(s, a);
    }, n.prototype.addSelectionHandle = function() {
      var t = this.beans, e = t.gridOptionsWrapper, r = t.rangeService, o = _e(r.getCellRanges()).type, i = e.isEnableFillHandle() && K(o), s = i ? Bo.FILL : Bo.RANGE;
      this.selectionHandle && this.selectionHandle.getType() !== s && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), this.selectionHandle || (this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(s)), this.selectionHandle.refresh(this.cellCtrl);
    }, n.prototype.destroy = function() {
      this.beans.context.destroyBean(this.selectionHandle);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Sv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ov = (
  /** @class */
  function(n) {
    Sv(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.cellCtrl = e, o.beans = r, o.column = e.getColumn(), o.rowNode = e.getRowNode(), o.setupColSpan(), o.setupRowSpan(), o;
    }
    return t.prototype.setupRowSpan = function() {
      this.rowSpan = this.column.getRowSpan(this.rowNode);
    }, t.prototype.setComp = function(e) {
      this.eGui = e, this.onLeftChanged(), this.onWidthChanged(), this.applyRowSpan();
    }, t.prototype.onDisplayColumnsChanged = function() {
      var e = this.getColSpanningList();
      _r(this.colsSpanning, e) || (this.colsSpanning = e, this.onWidthChanged(), this.onLeftChanged());
    }, t.prototype.setupColSpan = function() {
      this.column.getColDef().colSpan != null && (this.colsSpanning = this.getColSpanningList(), this.addManagedListener(this.beans.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this)), this.addManagedListener(this.beans.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this)));
    }, t.prototype.onWidthChanged = function() {
      if (this.eGui) {
        var e = this.getCellWidth();
        this.eGui.style.width = e + "px";
      }
    }, t.prototype.getCellWidth = function() {
      return this.colsSpanning ? this.colsSpanning.reduce(function(e, r) {
        return e + r.getActualWidth();
      }, 0) : this.column.getActualWidth();
    }, t.prototype.getColSpanningList = function() {
      var e = this.column.getColSpan(this.rowNode), r = [];
      if (e === 1)
        r.push(this.column);
      else
        for (var o = this.column, i = this.column.getPinned(), s = 0; o && s < e && (r.push(o), o = this.beans.columnModel.getDisplayedColAfter(o), !(!o || K(o) || i !== o.getPinned())); s++)
          ;
      return r;
    }, t.prototype.onLeftChanged = function() {
      if (this.eGui) {
        var e = this.modifyLeftForPrintLayout(this.getCellLeft());
        this.eGui.style.left = e + "px";
      }
    }, t.prototype.getCellLeft = function() {
      var e;
      return this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning ? e = _e(this.colsSpanning) : e = this.column, e.getLeft();
    }, t.prototype.modifyLeftForPrintLayout = function(e) {
      if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === w.PINNED_LEFT)
        return e;
      var r = this.beans.columnModel.getDisplayedColumnsLeftWidth();
      if (this.column.getPinned() === w.PINNED_RIGHT) {
        var o = this.beans.columnModel.getBodyContainerWidth();
        return r + o + (e || 0);
      }
      return r + (e || 0);
    }, t.prototype.applyRowSpan = function() {
      if (this.rowSpan !== 1) {
        var e = this.beans.gridOptionsWrapper.getRowHeightAsNumber(), r = e * this.rowSpan;
        this.eGui.style.height = r + "px", this.eGui.style.zIndex = "1";
      }
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Tv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pv = (
  /** @class */
  function(n) {
    Tv(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.staticClasses = [], o.cellCtrl = e, o.beans = r, o.column = e.getColumn(), o.rowNode = e.getRowNode(), o;
    }
    return t.prototype.setComp = function(e, r) {
      this.cellComp = e, this.scope = r, this.applyUserStyles(), this.applyCellClassRules(), this.applyClassesFromColDef();
    }, t.prototype.applyCellClassRules = function() {
      var e = this, r = this.column.getColDef(), o = {
        value: this.cellCtrl.getValue(),
        data: this.rowNode.data,
        node: this.rowNode,
        colDef: r,
        rowIndex: this.rowNode.rowIndex,
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        $scope: this.scope,
        context: this.beans.gridOptionsWrapper.getContext()
      };
      this.beans.stylingService.processClassRules(r.cellClassRules, o, function(i) {
        return e.cellComp.addOrRemoveCssClass(i, !0);
      }, function(i) {
        return e.cellComp.addOrRemoveCssClass(i, !1);
      });
    }, t.prototype.applyUserStyles = function() {
      var e = this.column.getColDef();
      if (e.cellStyle) {
        var r;
        if (typeof e.cellStyle == "function") {
          var o = {
            column: this.column,
            value: this.cellCtrl.getValue(),
            colDef: e,
            data: this.rowNode.data,
            node: this.rowNode,
            rowIndex: this.rowNode.rowIndex,
            $scope: this.scope,
            api: this.beans.gridOptionsWrapper.getApi(),
            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
            context: this.beans.gridOptionsWrapper.getContext()
          }, i = e.cellStyle;
          r = i(o);
        } else
          r = e.cellStyle;
        this.cellComp.setUserStyles(r);
      }
    }, t.prototype.applyClassesFromColDef = function() {
      var e = this, r = this.column.getColDef(), o = {
        value: this.cellCtrl.getValue(),
        data: this.rowNode.data,
        node: this.rowNode,
        colDef: r,
        rowIndex: this.rowNode.rowIndex,
        $scope: this.scope,
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        context: this.beans.gridOptionsWrapper.getContext()
      };
      this.staticClasses.length && this.staticClasses.forEach(function(i) {
        return e.cellComp.addOrRemoveCssClass(i, !1);
      }), this.staticClasses = this.beans.stylingService.getStaticCellClasses(r, o), this.staticClasses.length && this.staticClasses.forEach(function(i) {
        return e.cellComp.addOrRemoveCssClass(i, !0);
      });
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var bv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Oa = (
  /** @class */
  function(n) {
    bv(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.ctrl = e, o.beans = r, o;
    }
    return t.prototype.setComp = function(e) {
      this.comp = e, this.setupTooltip();
    }, t.prototype.setupTooltip = function() {
      this.browserTooltips = this.beans.gridOptionsWrapper.isEnableBrowserTooltips(), this.updateTooltipText(), this.browserTooltips ? this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0) : this.createTooltipFeatureIfNeeded();
    }, t.prototype.updateTooltipText = function() {
      this.tooltip = this.ctrl.getTooltipValue();
    }, t.prototype.createTooltipFeatureIfNeeded = function() {
      var e = this;
      if (this.genericTooltipFeature == null) {
        var r = {
          getTooltipParams: function() {
            return e.getTooltipParams();
          },
          getGui: function() {
            return e.ctrl.getGui();
          }
        };
        this.genericTooltipFeature = this.createManagedBean(new ai(r), this.beans.context);
      }
    }, t.prototype.refreshToolTip = function() {
      this.updateTooltipText(), this.browserTooltips && this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0);
    }, t.prototype.getTooltipParams = function() {
      var e = this.ctrl, r = e.getColumn ? e.getColumn() : void 0, o = e.getColDef ? e.getColDef() : void 0, i = e.getRowNode ? e.getRowNode() : void 0;
      return {
        location: e.getLocation(),
        colDef: o,
        column: r,
        rowIndex: e.getRowIndex ? e.getRowIndex() : void 0,
        node: i,
        data: i ? i.data : void 0,
        value: this.getTooltipText(),
        valueFormatted: e.getValueFormatted ? e.getValueFormatted() : void 0
      };
    }, t.prototype.getTooltipText = function() {
      return this.tooltip;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var J = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ta = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.postConstruct = function() {
      this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail(), this.gridOptionsWrapper.isRowModelDefault() && (this.clientSideRowModel = this.rowModel), this.gridOptionsWrapper.isRowModelServerSide() && (this.serverSideRowModel = this.rowModel);
    }, J([
      h("resizeObserverService")
    ], n.prototype, "resizeObserverService", void 0), J([
      h("paginationProxy")
    ], n.prototype, "paginationProxy", void 0), J([
      h("context")
    ], n.prototype, "context", void 0), J([
      h("columnApi")
    ], n.prototype, "columnApi", void 0), J([
      h("gridApi")
    ], n.prototype, "gridApi", void 0), J([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), J([
      h("expressionService")
    ], n.prototype, "expressionService", void 0), J([
      h("rowRenderer")
    ], n.prototype, "rowRenderer", void 0), J([
      h("$compile")
    ], n.prototype, "$compile", void 0), J([
      h("templateService")
    ], n.prototype, "templateService", void 0), J([
      h("valueService")
    ], n.prototype, "valueService", void 0), J([
      h("eventService")
    ], n.prototype, "eventService", void 0), J([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), J([
      h("headerNavigationService")
    ], n.prototype, "headerNavigationService", void 0), J([
      h("navigationService")
    ], n.prototype, "navigationService", void 0), J([
      h("columnAnimationService")
    ], n.prototype, "columnAnimationService", void 0), J([
      de("rangeService")
    ], n.prototype, "rangeService", void 0), J([
      h("focusService")
    ], n.prototype, "focusService", void 0), J([
      de("contextMenuFactory")
    ], n.prototype, "contextMenuFactory", void 0), J([
      h("popupService")
    ], n.prototype, "popupService", void 0), J([
      h("valueFormatterService")
    ], n.prototype, "valueFormatterService", void 0), J([
      h("stylingService")
    ], n.prototype, "stylingService", void 0), J([
      h("columnHoverService")
    ], n.prototype, "columnHoverService", void 0), J([
      h("userComponentFactory")
    ], n.prototype, "userComponentFactory", void 0), J([
      h("userComponentRegistry")
    ], n.prototype, "userComponentRegistry", void 0), J([
      h("animationFrameService")
    ], n.prototype, "animationFrameService", void 0), J([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), J([
      h("sortController")
    ], n.prototype, "sortController", void 0), J([
      h("filterManager")
    ], n.prototype, "filterManager", void 0), J([
      h("rowContainerHeightService")
    ], n.prototype, "rowContainerHeightService", void 0), J([
      h("frameworkOverrides")
    ], n.prototype, "frameworkOverrides", void 0), J([
      h("cellPositionUtils")
    ], n.prototype, "cellPositionUtils", void 0), J([
      h("rowPositionUtils")
    ], n.prototype, "rowPositionUtils", void 0), J([
      h("selectionService")
    ], n.prototype, "selectionService", void 0), J([
      de("selectionHandleFactory")
    ], n.prototype, "selectionHandleFactory", void 0), J([
      h("rowCssClassCalculator")
    ], n.prototype, "rowCssClassCalculator", void 0), J([
      h("rowModel")
    ], n.prototype, "rowModel", void 0), J([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), J([
      h("ctrlsFactory")
    ], n.prototype, "ctrlsFactory", void 0), J([
      h("agStackComponentsRegistry")
    ], n.prototype, "agStackComponentsRegistry", void 0), J([
      h("valueCache")
    ], n.prototype, "valueCache", void 0), J([
      h("rowNodeEventThrottle")
    ], n.prototype, "rowNodeEventThrottle", void 0), J([
      G
    ], n.prototype, "postConstruct", null), n = J([
      U("beans")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Dv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Av = (
  /** @class */
  function(n) {
    Dv(t, n);
    function t(e, r, o) {
      var i = n.call(this) || this;
      return i.cellCtrl = e, i.beans = r, i.column = o, i;
    }
    return t.prototype.onMouseEvent = function(e, r) {
      if (!Bt(r))
        switch (e) {
          case "click":
            this.onCellClicked(r);
            break;
          case "mousedown":
          case "touchstart":
            this.onMouseDown(r);
            break;
          case "dblclick":
            this.onCellDoubleClicked(r);
            break;
          case "mouseout":
            this.onMouseOut(r);
            break;
          case "mouseover":
            this.onMouseOver(r);
            break;
        }
    }, t.prototype.onCellClicked = function(e) {
      if (this.isDoubleClickOnIPad()) {
        this.onCellDoubleClicked(e), e.preventDefault();
        return;
      }
      var r = this.beans, o = r.eventService, i = r.gridOptionsWrapper, s = this.cellCtrl.createEvent(e, v.EVENT_CELL_CLICKED);
      o.dispatchEvent(s);
      var a = this.column.getColDef();
      a.onCellClicked && window.setTimeout(function() {
        return a.onCellClicked(s);
      }, 0);
      var l = (i.isSingleClickEdit() || a.singleClickEdit) && !i.isSuppressClickEdit();
      l && this.cellCtrl.startRowOrCellEdit();
    }, t.prototype.isDoubleClickOnIPad = function() {
      if (!ro() || ta("dblclick"))
        return !1;
      var e = (/* @__PURE__ */ new Date()).getTime(), r = e - this.lastIPadMouseClickEvent < 200;
      return this.lastIPadMouseClickEvent = e, r;
    }, t.prototype.onCellDoubleClicked = function(e) {
      var r = this.column.getColDef(), o = this.cellCtrl.createEvent(e, v.EVENT_CELL_DOUBLE_CLICKED);
      this.beans.eventService.dispatchEvent(o), typeof r.onCellDoubleClicked == "function" && window.setTimeout(function() {
        return r.onCellDoubleClicked(o);
      }, 0);
      var i = !this.beans.gridOptionsWrapper.isSingleClickEdit() && !this.beans.gridOptionsWrapper.isSuppressClickEdit();
      i && this.cellCtrl.startRowOrCellEdit(null, null, e);
    }, t.prototype.onMouseDown = function(e) {
      var r = e.ctrlKey, o = e.metaKey, i = e.shiftKey, s = e.target, a = this.beans, l = a.eventService, u = a.rangeService;
      if (!this.isRightClickInExistingRange(e)) {
        var p = u && u.getCellRanges().length != 0;
        if (!i || !p) {
          var c = ei() && !this.cellCtrl.isEditing() && !np(s);
          this.cellCtrl.focusCell(c);
        }
        if (i && p && e.preventDefault(), !this.containsWidget(s)) {
          if (u) {
            var d = this.cellCtrl.getCellPosition();
            if (i)
              u.extendLatestRangeToCell(d);
            else {
              var f = r || o;
              u.setRangeToCell(d, f);
            }
          }
          l.dispatchEvent(this.cellCtrl.createEvent(e, v.EVENT_CELL_MOUSE_DOWN));
        }
      }
    }, t.prototype.isRightClickInExistingRange = function(e) {
      var r = this.beans.rangeService;
      if (r) {
        var o = r.isCellInAnyRange(this.cellCtrl.getCellPosition());
        if (o && e.button === 2)
          return !0;
      }
      return !1;
    }, t.prototype.containsWidget = function(e) {
      return ri(e, "ag-selection-checkbox", 3);
    }, t.prototype.onMouseOut = function(e) {
      if (!this.mouseStayingInsideCell(e)) {
        var r = this.cellCtrl.createEvent(e, v.EVENT_CELL_MOUSE_OUT);
        this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.clearMouseOver();
      }
    }, t.prototype.onMouseOver = function(e) {
      if (!this.mouseStayingInsideCell(e)) {
        var r = this.cellCtrl.createEvent(e, v.EVENT_CELL_MOUSE_OVER);
        this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.setMouseOver([this.column]);
      }
    }, t.prototype.mouseStayingInsideCell = function(e) {
      if (!e.target || !e.relatedTarget)
        return !1;
      var r = this.cellCtrl.getGui(), o = r.contains(e.target), i = r.contains(e.relatedTarget);
      return o && i;
    }, t.prototype.destroy = function() {
    }, t;
  }(Ta)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Fv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Iv = (
  /** @class */
  function(n) {
    Fv(t, n);
    function t(e, r, o, i, s, a) {
      var l = n.call(this) || this;
      return l.cellCtrl = e, l.beans = r, l.rowNode = i, l.rowCtrl = a, l;
    }
    return t.prototype.setComp = function(e) {
      this.eGui = e;
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key;
      switch (r) {
        case P.ENTER:
          this.onEnterKeyDown(e);
          break;
        case P.F2:
          this.onF2KeyDown(e);
          break;
        case P.ESCAPE:
          this.onEscapeKeyDown(e);
          break;
        case P.TAB:
          this.onTabKeyDown(e);
          break;
        case P.BACKSPACE:
        case P.DELETE:
          this.onBackspaceOrDeleteKeyPressed(r, e);
          break;
        case P.DOWN:
        case P.UP:
        case P.RIGHT:
        case P.LEFT:
          this.onNavigationKeyPressed(e, r);
          break;
      }
    }, t.prototype.onNavigationKeyPressed = function(e, r) {
      this.cellCtrl.isEditing() || (e.shiftKey && this.cellCtrl.isRangeSelectionEnabled() ? this.onShiftRangeSelect(r) : this.beans.navigationService.navigateToNextCell(e, r, this.cellCtrl.getCellPosition(), !0), e.preventDefault());
    }, t.prototype.onShiftRangeSelect = function(e) {
      if (this.beans.rangeService) {
        var r = this.beans.rangeService.extendLatestRangeInDirection(e);
        r && this.beans.navigationService.ensureCellVisible(r);
      }
    }, t.prototype.onTabKeyDown = function(e) {
      this.beans.navigationService.onTabKeyDown(this.cellCtrl, e);
    }, t.prototype.onBackspaceOrDeleteKeyPressed = function(e, r) {
      this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(e, void 0, r);
    }, t.prototype.onEnterKeyDown = function(e) {
      this.cellCtrl.isEditing() || this.rowCtrl.isEditing() ? this.cellCtrl.stopEditingAndFocus() : this.beans.gridOptionsWrapper.isEnterMovesDown() ? this.beans.navigationService.navigateToNextCell(null, P.DOWN, this.cellCtrl.getCellPosition(), !1) : (this.cellCtrl.startRowOrCellEdit(P.ENTER, void 0, e), this.cellCtrl.isEditing() && e.preventDefault());
    }, t.prototype.onF2KeyDown = function(e) {
      this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(P.F2, void 0, e);
    }, t.prototype.onEscapeKeyDown = function(e) {
      this.cellCtrl.isEditing() && (this.cellCtrl.stopRowOrCellEdit(!0), this.cellCtrl.focusCell(!0));
    }, t.prototype.onKeyPress = function(e) {
      var r = e.target, o = r !== this.eGui;
      if (!(o || this.cellCtrl.isEditing())) {
        var i = String.fromCharCode(e.charCode);
        i === " " ? this.onSpaceKeyPressed(e) : Ap(e) && (this.cellCtrl.startRowOrCellEdit(null, i, e), e.preventDefault());
      }
    }, t.prototype.onSpaceKeyPressed = function(e) {
      var r = this.beans.gridOptionsWrapper;
      if (!this.cellCtrl.isEditing() && r.isRowSelection()) {
        var o = this.rowNode.isSelected(), i = !o;
        if (i || !r.isSuppressRowDeselection()) {
          var s = this.beans.gridOptionsWrapper.isGroupSelectsFiltered(), a = this.rowNode.setSelectedParams({
            newValue: i,
            rangeSelect: e.shiftKey,
            groupSelectsFiltered: s
          });
          o === void 0 && a === 0 && this.rowNode.setSelectedParams({
            newValue: !1,
            rangeSelect: e.shiftKey,
            groupSelectsFiltered: s
          });
        }
      }
      e.preventDefault();
    }, t.prototype.destroy = function() {
    }, t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Mv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lv = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Gv = (
  /** @class */
  function(n) {
    Mv(t, n);
    function t(e, r, o, i) {
      var s = n.call(this, '<div class="ag-drag-handle ag-row-drag" draggable="true"></div>') || this;
      return s.rowNode = e, s.column = r, s.beans = o, s.eCell = i, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this.getGui();
      e.appendChild(xe("rowDrag", this.beans.gridOptionsWrapper, null)), this.addGuiEventListener("mousedown", function(r) {
        r.stopPropagation();
      }), this.addDragSource(), this.checkVisibility();
    }, t.prototype.addDragSource = function() {
      this.addGuiEventListener("dragstart", this.onDragStart.bind(this));
    }, t.prototype.onDragStart = function(e) {
      var r = this, o = this.column.getColDef().dndSourceOnRowDrag;
      e.dataTransfer.setDragImage(this.eCell, 0, 0);
      var i = function() {
        try {
          var s = JSON.stringify(r.rowNode.data);
          e.dataTransfer.setData("application/json", s), e.dataTransfer.setData("text/plain", s);
        } catch {
        }
      };
      o ? o({ rowNode: this.rowNode, dragEvent: e }) : i();
    }, t.prototype.checkVisibility = function() {
      var e = this.column.isDndSource(this.rowNode);
      this.setDisplayed(e);
    }, Lv([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Nv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $n = globalThis && globalThis.__assign || function() {
  return $n = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, $n.apply(this, arguments);
}, xv = "ag-cell", Hv = "ag-cell-auto-height", Wv = "ag-cell-normal-height", Vv = "ag-cell-focus", Bv = "ag-cell-first-right-pinned", jv = "ag-cell-last-left-pinned", Gl = "ag-cell-not-inline-editing", Uv = "ag-cell-inline-editing", kv = "ag-cell-popup-editing", zv = "ag-column-hover", $v = "ag-cell-wrap-text", Kv = 0, ar = (
  /** @class */
  function(n) {
    Nv(t, n);
    function t(e, r, o, i) {
      var s = n.call(this) || this;
      return s.suppressRefreshCell = !1, s.column = e, s.rowNode = r, s.beans = o, s.rowCtrl = i, s.instanceId = e.getId() + "-" + Kv++, s.createCellPosition(), s.addFeatures(), s;
    }
    return t.prototype.addFeatures = function() {
      var e = this;
      this.cellPositionFeature = new Ov(this, this.beans), this.addDestroyFunc(function() {
        return e.cellPositionFeature.destroy();
      }), this.cellCustomStyleFeature = new Pv(this, this.beans), this.addDestroyFunc(function() {
        return e.cellCustomStyleFeature.destroy();
      }), this.cellMouseListenerFeature = new Av(this, this.beans, this.column), this.addDestroyFunc(function() {
        return e.cellMouseListenerFeature.destroy();
      }), this.cellKeyboardListenerFeature = new Iv(this, this.beans, this.column, this.rowNode, this.scope, this.rowCtrl), this.addDestroyFunc(function() {
        return e.cellKeyboardListenerFeature.destroy();
      });
      var r = this.beans.rangeService && this.beans.gridOptionsWrapper.isEnableRangeSelection();
      r && (this.cellRangeFeature = new Rv(this.beans, this), this.addDestroyFunc(function() {
        return e.cellRangeFeature.destroy();
      })), this.addTooltipFeature();
    }, t.prototype.addTooltipFeature = function() {
      var e = this, r = function() {
        var i = e.column.getColDef(), s = e.rowNode.data;
        if (i.tooltipField && O(s))
          return Gn(s, i.tooltipField, e.column.isTooltipFieldContainsDots());
        var a = i.tooltipValueGetter;
        return a ? a({
          location: "cell",
          api: e.beans.gridOptionsWrapper.getApi(),
          columnApi: e.beans.gridOptionsWrapper.getColumnApi(),
          context: e.beans.gridOptionsWrapper.getContext(),
          colDef: e.column.getColDef(),
          column: e.column,
          rowIndex: e.cellPosition.rowIndex,
          node: e.rowNode,
          data: e.rowNode.data,
          value: e.value,
          valueFormatted: e.valueFormatted
        }) : null;
      }, o = {
        getColumn: function() {
          return e.column;
        },
        getColDef: function() {
          return e.column.getColDef();
        },
        getRowIndex: function() {
          return e.cellPosition.rowIndex;
        },
        getRowNode: function() {
          return e.rowNode;
        },
        getGui: function() {
          return e.getGui();
        },
        getLocation: function() {
          return "cell";
        },
        getTooltipValue: r,
        // this makes no sense, why is the cell formatted value passed to the tooltip???
        getValueFormatted: function() {
          return e.valueFormatted;
        }
      };
      this.tooltipFeature = new Oa(o, this.beans), this.addDestroyFunc(function() {
        return e.tooltipFeature.destroy();
      });
    }, t.prototype.setComp = function(e, r, o, i, s, a) {
      this.cellComp = e, this.gow = this.beans.gridOptionsWrapper, this.scope = r, this.eGui = o, this.eCellWrapper = i, this.printLayout = s, this.updateAndFormatValue(!0), this.addDomData(), this.onCellFocused(), this.applyStaticCssClasses(), this.setWrapText(), this.onFirstRightPinnedChanged(), this.onLastLeftPinnedChanged(), this.onColumnHover(), this.setupControlComps(), this.setupAriaExpanded(), this.setupAutoHeight(), this.setAriaColIndex(), this.gow.isSuppressCellFocus() || this.cellComp.setTabIndex(-1);
      var l = kt(this.column.getId());
      this.cellComp.setColId(l), this.cellComp.setRole("gridcell"), this.cellPositionFeature.setComp(o), this.cellCustomStyleFeature.setComp(e, r), this.tooltipFeature.setComp(e), this.cellKeyboardListenerFeature.setComp(this.eGui), this.cellRangeFeature && this.cellRangeFeature.setComp(e, o), a && this.isCellEditable() ? this.startEditing() : this.showValue();
    }, t.prototype.setupAutoHeight = function() {
      var e = this;
      if (this.column.isAutoHeight()) {
        var r = this.eCellWrapper, o = r.parentElement, i = this.beans.gridOptionsWrapper.getRowHeightAsNumber(), s = function(u) {
          if (!e.editing) {
            var p = e.beans.gridOptionsWrapper.getDocument();
            if ((!p || !p.contains(r)) && u < 5) {
              e.beans.frameworkOverrides.setTimeout(function() {
                return s(u + 1);
              }, 0);
              return;
            }
            var c = oo(o), d = c.paddingTop, f = c.paddingBottom, g = r.offsetHeight, y = g + d + f, C = Math.max(y, i);
            e.rowNode.setRowAutoHeight(C, e.column);
          }
        }, a = function() {
          return s(0);
        };
        a();
        var l = this.beans.resizeObserverService.observeResize(r, a);
        this.addDestroyFunc(function() {
          l(), e.rowNode.setRowAutoHeight(void 0, e.column);
        });
      }
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.showValue = function(e) {
      e === void 0 && (e = !1);
      var r = this.valueFormatted != null ? this.valueFormatted : this.value, o = this.createCellRendererParams(), i = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), o);
      this.cellComp.setRenderDetails(i, r, e), this.refreshHandle();
    }, t.prototype.setupControlComps = function() {
      var e = this.column.getColDef();
      this.includeSelection = this.isIncludeControl(e.checkboxSelection), this.includeRowDrag = this.isIncludeControl(e.rowDrag), this.includeDndSource = this.isIncludeControl(e.dndSource), this.cellComp.setIncludeSelection(this.includeSelection), this.cellComp.setIncludeDndSource(this.includeDndSource), this.cellComp.setIncludeRowDrag(this.includeRowDrag);
    }, t.prototype.isForceWrapper = function() {
      var e = this.beans.gridOptionsWrapper.isEnableCellTextSelection() || this.column.isAutoHeight();
      return e;
    }, t.prototype.isIncludeControl = function(e) {
      var r = this.rowNode.rowPinned != null, o = typeof e == "function", i = r ? !1 : o || e === !0;
      return i;
    }, t.prototype.setupAriaExpanded = function() {
      var e = this, r = this.column.getColDef();
      if (this.rowNode.isExpandable()) {
        var o = r.showRowGroup, i = this.rowNode.rowGroupColumn, s = o === !0, a = i && i.getColId() === o, l = s || a;
        if (l) {
          var u = function() {
            vt(e.eGui, !!e.rowNode.expanded);
          };
          this.addManagedListener(this.rowNode, te.EVENT_EXPANDED_CHANGED, u), u();
        }
      }
    }, t.prototype.refreshShouldDestroy = function() {
      var e = this.column.getColDef(), r = this.includeSelection != this.isIncludeControl(e.checkboxSelection), o = this.includeRowDrag != this.isIncludeControl(e.rowDrag), i = this.includeDndSource != this.isIncludeControl(e.dndSource);
      return r || o || i;
    }, t.prototype.startEditing = function(e, r, o, i) {
      e === void 0 && (e = null), r === void 0 && (r = null), o === void 0 && (o = !1), i === void 0 && (i = null);
      var s, a;
      if (!(!this.isCellEditable() || this.editing)) {
        var l = this.createCellEditorParams(e, r, o), u = this.column.getColDef(), p = this.beans.userComponentFactory.getCellEditorDetails(u, l), c = ((s = p) === null || s === void 0 ? void 0 : s.popupFromSelector) != null ? p.popupFromSelector : !!u.cellEditorPopup, d = ((a = p) === null || a === void 0 ? void 0 : a.popupPositionFromSelector) != null ? p.popupPositionFromSelector : u.cellEditorPopupPosition;
        this.setEditing(!0, c), this.cellComp.setEditDetails(p, c, d);
        var f = this.createEvent(i, v.EVENT_CELL_EDITING_STARTED);
        this.beans.eventService.dispatchEvent(f);
      }
    }, t.prototype.setEditing = function(e, r) {
      r === void 0 && (r = !1), this.editing !== e && (this.editing = e, this.editingInPopup = r, this.setInlineEditingClass());
    }, t.prototype.stopRowOrCellEdit = function(e) {
      e === void 0 && (e = !1), this.beans.gridOptionsWrapper.isFullRowEdit() ? this.rowCtrl.stopRowEditing(e) : this.stopEditing(e);
    }, t.prototype.onPopupEditorClosed = function() {
      this.isEditing() && this.stopEditingAndFocus();
    }, t.prototype.takeValueFromCellEditor = function(e) {
      var r = { newValueExists: !1 };
      if (e)
        return r;
      var o = this.cellComp.getCellEditor();
      if (!o)
        return r;
      var i = o.isCancelAfterEnd && o.isCancelAfterEnd();
      if (i)
        return r;
      var s = o.getValue();
      return {
        newValue: s,
        newValueExists: !0
      };
    }, t.prototype.saveNewValue = function(e, r) {
      if (r !== e) {
        if (this.beans.gridOptionsWrapper.isReadOnlyEdit()) {
          this.dispatchEventForSaveValueReadOnly(e, r);
          return;
        }
        this.suppressRefreshCell = !0, this.rowNode.setDataValue(this.column, r), this.suppressRefreshCell = !1;
      }
    }, t.prototype.dispatchEventForSaveValueReadOnly = function(e, r) {
      var o = this.rowNode, i = {
        type: v.EVENT_CELL_EDIT_REQUEST,
        event: null,
        rowIndex: o.rowIndex,
        rowPinned: o.rowPinned,
        column: this.column,
        api: this.beans.gridApi,
        columnApi: this.beans.columnApi,
        colDef: this.column.getColDef(),
        context: this.beans.gridOptionsWrapper.getContext(),
        data: o.data,
        node: o,
        oldValue: e,
        newValue: r,
        value: r,
        source: void 0
      };
      this.beans.eventService.dispatchEvent(i);
    }, t.prototype.stopEditing = function(e) {
      if (e === void 0 && (e = !1), !!this.editing) {
        var r = this.takeValueFromCellEditor(e), o = r.newValue, i = r.newValueExists, s = this.getValueFromValueService();
        i && this.saveNewValue(s, o), this.setEditing(!1), this.cellComp.setEditDetails(), this.updateAndFormatValue(), this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }), this.dispatchEditingStoppedEvent(s, o);
      }
    }, t.prototype.dispatchEditingStoppedEvent = function(e, r) {
      var o = $n($n({}, this.createEvent(null, v.EVENT_CELL_EDITING_STOPPED)), {
        oldValue: e,
        newValue: r
      });
      this.beans.eventService.dispatchEvent(o);
    }, t.prototype.setInlineEditingClass = function() {
      if (this.isAlive()) {
        var e = this.editing && !this.editingInPopup, r = this.editing && this.editingInPopup;
        this.cellComp.addOrRemoveCssClass(Uv, e), this.cellComp.addOrRemoveCssClass(Gl, !e), this.cellComp.addOrRemoveCssClass(kv, r), this.rowCtrl.setInlineEditingCss(this.editing);
      }
    }, t.prototype.hackSayEditingInPopup = function() {
      this.editingInPopup || (this.editingInPopup = !0, this.setInlineEditingClass());
    }, t.prototype.createCellEditorParams = function(e, r, o) {
      var i = {
        value: this.getValueFromValueService(),
        key: e,
        eventKey: e,
        charPress: r,
        column: this.column,
        colDef: this.column.getColDef(),
        rowIndex: this.getCellPosition().rowIndex,
        node: this.rowNode,
        data: this.rowNode.data,
        api: this.beans.gridOptionsWrapper.getApi(),
        cellStartedEdit: o,
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        context: this.beans.gridOptionsWrapper.getContext(),
        onKeyDown: this.onKeyDown.bind(this),
        stopEditing: this.stopEditingAndFocus.bind(this),
        eGridCell: this.getGui(),
        parseValue: this.parseValue.bind(this),
        formatValue: this.formatValue.bind(this)
      };
      return this.scope && (i.$scope = this.scope), i;
    }, t.prototype.createCellRendererParams = function() {
      var e = this, r = function(i, s) {
        console.warn("AG Grid: since AG Grid v26, params.addRowCompListener() is deprecated. If you need this functionality, please contact AG Grid support and advise why so that we can revert with an appropriate workaround, as we dont have any valid use cases for it. This method was originally provided as a work around to know when cells were destroyed in AG Grid before custom Cell Renderers could be provided."), e.rowCtrl.addEventListener(i, s);
      }, o = {
        value: this.value,
        valueFormatted: this.valueFormatted,
        getValue: this.getValueFromValueService.bind(this),
        setValue: function(i) {
          return e.beans.valueService.setValue(e.rowNode, e.column, i);
        },
        formatValue: this.formatValue.bind(this),
        data: this.rowNode.data,
        node: this.rowNode,
        colDef: this.column.getColDef(),
        column: this.column,
        rowIndex: this.getCellPosition().rowIndex,
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        context: this.beans.gridOptionsWrapper.getContext(),
        refreshCell: this.refreshCell.bind(this),
        eGridCell: this.getGui(),
        eParentOfValue: this.cellComp.getParentOfValue(),
        registerRowDragger: function(i, s, a, l) {
          return e.registerRowDragger(i, s, l);
        },
        // this function is not documented anywhere, so we could drop it
        // it was in the olden days to allow user to register for when rendered
        // row was removed (the row comp was removed), however now that the user
        // can provide components for cells, the destroy method gets call when this
        // happens so no longer need to fire event.
        addRowCompListener: r
      };
      return this.scope && (o.$scope = this.scope), o;
    }, t.prototype.parseValue = function(e) {
      var r = this.column.getColDef(), o = {
        node: this.rowNode,
        data: this.rowNode.data,
        oldValue: this.getValue(),
        newValue: e,
        colDef: r,
        column: this.column,
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        context: this.beans.gridOptionsWrapper.getContext()
      }, i = r.valueParser;
      return O(i) ? this.beans.expressionService.evaluate(i, o) : e;
    }, t.prototype.setFocusOutOnEditor = function() {
      if (this.editing) {
        var e = this.cellComp.getCellEditor();
        e && e.focusOut && e.focusOut();
      }
    }, t.prototype.setFocusInOnEditor = function() {
      if (this.editing) {
        var e = this.cellComp.getCellEditor();
        e && e.focusIn ? e.focusIn() : this.focusCell(!0);
      }
    }, t.prototype.onCellChanged = function(e) {
      if (this.cellComp) {
        var r = e.column === this.column;
        r && this.refreshCell({});
      }
    }, t.prototype.refreshCell = function(e) {
      if (!(this.suppressRefreshCell || this.editing)) {
        var r = this.column.getColDef(), o = e != null && !!e.newData, i = e != null && !!e.suppressFlash || !!r.suppressCellFlash, s = r.field == null && r.valueGetter == null && r.showRowGroup == null, a = e && e.forceRefresh || s || o, l = this.updateAndFormatValue(), u = a || l;
        if (u) {
          this.showValue(o);
          var p = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering(), c = !i && !p && (this.beans.gridOptionsWrapper.isEnableCellChangeFlash() || r.enableCellChangeFlash);
          c && this.flashCell(), this.cellCustomStyleFeature.applyUserStyles(), this.cellCustomStyleFeature.applyClassesFromColDef();
        }
        this.refreshToolTip(), this.cellCustomStyleFeature.applyCellClassRules();
      }
    }, t.prototype.stopEditingAndFocus = function(e) {
      e === void 0 && (e = !1), this.stopRowOrCellEdit(), this.focusCell(!0), e || this.navigateAfterEdit();
    }, t.prototype.navigateAfterEdit = function() {
      var e = this.beans.gridOptionsWrapper.isFullRowEdit();
      if (!e) {
        var r = this.beans.gridOptionsWrapper.isEnterMovesDownAfterEdit();
        r && this.beans.navigationService.navigateToNextCell(null, P.DOWN, this.getCellPosition(), !1);
      }
    }, t.prototype.flashCell = function(e) {
      var r = e && e.flashDelay, o = e && e.fadeDelay;
      this.animateCell("data-changed", r, o);
    }, t.prototype.animateCell = function(e, r, o) {
      var i = this, s = "ag-cell-" + e, a = "ag-cell-" + e + "-animation", l = this.beans.gridOptionsWrapper;
      r || (r = l.getCellFlashDelay()), O(o) || (o = l.getCellFadeDelay()), this.cellComp.addOrRemoveCssClass(s, !0), this.cellComp.addOrRemoveCssClass(a, !1), window.setTimeout(function() {
        i.cellComp.addOrRemoveCssClass(s, !1), i.cellComp.addOrRemoveCssClass(a, !0), i.eGui.style.transition = "background-color " + o + "ms", window.setTimeout(function() {
          i.cellComp.addOrRemoveCssClass(a, !1), i.eGui.style.transition = "";
        }, o);
      }, r);
    }, t.prototype.onFlashCells = function(e) {
      if (this.cellComp) {
        var r = this.beans.cellPositionUtils.createId(this.getCellPosition()), o = e.cells[r];
        o && this.animateCell("highlight");
      }
    }, t.prototype.isCellEditable = function() {
      return this.column.isCellEditable(this.rowNode);
    }, t.prototype.isSuppressFillHandle = function() {
      return this.column.isSuppressFillHandle();
    }, t.prototype.formatValue = function(e) {
      var r = this.callValueFormatter(e);
      return r ?? e;
    }, t.prototype.callValueFormatter = function(e) {
      return this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, e);
    }, t.prototype.updateAndFormatValue = function(e) {
      e === void 0 && (e = !1);
      var r = this.value, o = this.valueFormatted;
      this.value = this.getValueFromValueService(), this.valueFormatted = this.callValueFormatter(this.value);
      var i = e ? !0 : !this.valuesAreEqual(r, this.value) || this.valueFormatted != o;
      return i;
    }, t.prototype.valuesAreEqual = function(e, r) {
      var o = this.column.getColDef();
      return o.equals ? o.equals(e, r) : e === r;
    }, t.prototype.getComp = function() {
      return this.cellComp;
    }, t.prototype.getValueFromValueService = function() {
      var e = this.rowNode.leafGroup && this.beans.columnModel.isPivotMode(), r = this.rowNode.group && this.rowNode.expanded && !this.rowNode.footer && !e, o = this.beans.gridOptionsWrapper.isGroupIncludeFooter(), i = this.beans.gridOptionsWrapper.isGroupSuppressBlankHeader(), s = r && o && !i, a = this.beans.valueService.getValue(this.column, this.rowNode, !1, s);
      return a;
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.getValueFormatted = function() {
      return this.valueFormatted;
    }, t.prototype.addDomData = function() {
      var e = this, r = this.getGui();
      this.beans.gridOptionsWrapper.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, this), this.addDestroyFunc(function() {
        return e.beans.gridOptionsWrapper.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, null);
      });
    }, t.prototype.createEvent = function(e, r) {
      var o = {
        type: r,
        node: this.rowNode,
        data: this.rowNode.data,
        value: this.value,
        column: this.column,
        colDef: this.column.getColDef(),
        context: this.beans.gridOptionsWrapper.getContext(),
        api: this.beans.gridApi,
        columnApi: this.beans.columnApi,
        rowPinned: this.rowNode.rowPinned,
        event: e,
        rowIndex: this.rowNode.rowIndex
      };
      return this.scope && (o.$scope = this.scope), o;
    }, t.prototype.onKeyPress = function(e) {
      this.cellKeyboardListenerFeature.onKeyPress(e);
    }, t.prototype.onKeyDown = function(e) {
      this.cellKeyboardListenerFeature.onKeyDown(e);
    }, t.prototype.onMouseEvent = function(e, r) {
      this.cellMouseListenerFeature.onMouseEvent(e, r);
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.refreshToolTip = function() {
      this.tooltipFeature.refreshToolTip();
    }, t.prototype.getColSpanningList = function() {
      return this.cellPositionFeature.getColSpanningList();
    }, t.prototype.onLeftChanged = function() {
      this.cellComp && this.cellPositionFeature.onLeftChanged();
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.eGui && this.setAriaColIndex();
    }, t.prototype.setAriaColIndex = function() {
      var e = this.beans.columnModel.getAriaColumnIndex(this.column);
      ga(this.getGui(), e);
    }, t.prototype.isSuppressNavigable = function() {
      return this.column.isSuppressNavigable(this.rowNode);
    }, t.prototype.onWidthChanged = function() {
      return this.cellPositionFeature.onWidthChanged();
    }, t.prototype.getColumn = function() {
      return this.column;
    }, t.prototype.getRowNode = function() {
      return this.rowNode;
    }, t.prototype.getBeans = function() {
      return this.beans;
    }, t.prototype.isPrintLayout = function() {
      return this.printLayout;
    }, t.prototype.appendChild = function(e) {
      this.eGui.appendChild(e);
    }, t.prototype.refreshHandle = function() {
      this.editing || this.cellRangeFeature && this.cellRangeFeature.refreshHandle();
    }, t.prototype.getCellPosition = function() {
      return this.cellPosition;
    }, t.prototype.isEditing = function() {
      return this.editing;
    }, t.prototype.startRowOrCellEdit = function(e, r, o) {
      o === void 0 && (o = null), this.beans.gridOptionsWrapper.isFullRowEdit() ? this.rowCtrl.startRowEditing(e, r, this) : this.startEditing(e, r, !0, o);
    }, t.prototype.getRowCtrl = function() {
      return this.rowCtrl;
    }, t.prototype.getRowPosition = function() {
      return {
        rowIndex: this.cellPosition.rowIndex,
        rowPinned: this.cellPosition.rowPinned
      };
    }, t.prototype.updateRangeBordersIfRangeCount = function() {
      this.cellComp && this.cellRangeFeature && this.cellRangeFeature.updateRangeBordersIfRangeCount();
    }, t.prototype.onRangeSelectionChanged = function() {
      this.cellComp && this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
    }, t.prototype.isRangeSelectionEnabled = function() {
      return this.cellRangeFeature != null;
    }, t.prototype.focusCell = function(e) {
      e === void 0 && (e = !1), this.beans.focusService.setFocusedCell(this.getCellPosition().rowIndex, this.column, this.rowNode.rowPinned, e);
    }, t.prototype.onRowIndexChanged = function() {
      this.createCellPosition(), this.onCellFocused(), this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
    }, t.prototype.onFirstRightPinnedChanged = function() {
      if (this.cellComp) {
        var e = this.column.isFirstRightPinned();
        this.cellComp.addOrRemoveCssClass(Bv, e);
      }
    }, t.prototype.onLastLeftPinnedChanged = function() {
      if (this.cellComp) {
        var e = this.column.isLastLeftPinned();
        this.cellComp.addOrRemoveCssClass(jv, e);
      }
    }, t.prototype.onCellFocused = function(e) {
      if (!(!this.cellComp || this.gow.isSuppressCellFocus())) {
        var r = this.beans.focusService.isCellFocused(this.cellPosition);
        if (this.cellComp.addOrRemoveCssClass(Vv, r), r && e && e.forceBrowserFocus) {
          var o = this.cellComp.getFocusableElement();
          o.focus();
        }
        var i = this.beans.gridOptionsWrapper.isFullRowEdit();
        !r && !i && this.editing && this.stopRowOrCellEdit();
      }
    }, t.prototype.createCellPosition = function() {
      this.cellPosition = {
        rowIndex: this.rowNode.rowIndex,
        rowPinned: this.rowNode.rowPinned,
        column: this.column
      };
    }, t.prototype.applyStaticCssClasses = function() {
      this.cellComp.addOrRemoveCssClass(xv, !0), this.cellComp.addOrRemoveCssClass(Gl, !0);
      var e = this.column.isAutoHeight() == !0;
      this.cellComp.addOrRemoveCssClass(Hv, e), this.cellComp.addOrRemoveCssClass(Wv, !e);
    }, t.prototype.onColumnHover = function() {
      if (this.cellComp && this.beans.gridOptionsWrapper.isColumnHoverHighlight()) {
        var e = this.beans.columnHoverService.isHovered(this.column);
        this.cellComp.addOrRemoveCssClass(zv, e);
      }
    }, t.prototype.onNewColumnsLoaded = function() {
      this.cellComp && (this.setWrapText(), this.editing || this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }));
    }, t.prototype.setWrapText = function() {
      var e = this.column.getColDef().wrapText == !0;
      this.cellComp.addOrRemoveCssClass($v, e);
    }, t.prototype.dispatchCellContextMenuEvent = function(e) {
      var r = this.column.getColDef(), o = this.createEvent(e, v.EVENT_CELL_CONTEXT_MENU);
      this.beans.eventService.dispatchEvent(o), r.onCellContextMenu && window.setTimeout(function() {
        return r.onCellContextMenu(o);
      }, 0);
    }, t.prototype.getCellRenderer = function() {
      return this.cellComp ? this.cellComp.getCellRenderer() : null;
    }, t.prototype.getCellEditor = function() {
      return this.cellComp ? this.cellComp.getCellEditor() : null;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.createSelectionCheckbox = function() {
      var e = new Sa();
      return this.beans.context.createBean(e), e.init({ rowNode: this.rowNode, column: this.column }), e;
    }, t.prototype.createDndSource = function() {
      var e = new Gv(this.rowNode, this.column, this.beans, this.eGui);
      return this.beans.context.createBean(e), e;
    }, t.prototype.registerRowDragger = function(e, r, o) {
      var i = this;
      if (this.customRowDragComp) {
        this.customRowDragComp.setDragElement(e, r);
        return;
      }
      var s = this.createRowDragComp(e, r, o);
      s && (this.customRowDragComp = s, this.addDestroyFunc(function() {
        return i.beans.context.destroyBean(s);
      }));
    }, t.prototype.createRowDragComp = function(e, r, o) {
      var i = this, s = this.beans.gridOptionsWrapper.isPagination(), a = this.beans.gridOptionsWrapper.isRowDragManaged(), l = this.beans.gridOptionsWrapper.isRowModelDefault();
      if (a) {
        if (!l) {
          ve(function() {
            return console.warn("AG Grid: managed row dragging is only allowed in the Client Side Row Model");
          }, "CellComp.addRowDragging");
          return;
        }
        if (s) {
          ve(function() {
            return console.warn("AG Grid: managed row dragging is not possible when doing pagination");
          }, "CellComp.addRowDragging");
          return;
        }
      }
      var u = new kn(function() {
        return i.value;
      }, this.rowNode, this.column, e, r, o);
      return this.beans.context.createBean(u), u;
    }, t.DOM_DATA_KEY_CELL_CTRL = "cellCtrl", t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var js = globalThis && globalThis.__assign || function() {
  return js = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, js.apply(this, arguments);
}, Yv = (
  /** @class */
  function() {
    function n() {
    }
    return n.createChildScopeOrNull = function(t, e, r) {
      var o = r.isAngularCompileRows();
      if (!o)
        return null;
      var i = e.$new();
      i.data = js({}, t.data), i.rowNode = t, i.context = r.getContext();
      var s = function() {
        i.$destroy(), i.data = null, i.rowNode = null, i.context = null;
      };
      return {
        scope: i,
        scopeDestroyFunc: s
      };
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var qv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ct = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Xv = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Qv = (
  /** @class */
  function(n) {
    qv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addMouseListeners(), this.mockContextMenuForIPad(), this.addKeyboardEvents();
    }, t.prototype.addKeyboardEvents = function() {
      var e = this, r = ["keydown", "keypress"];
      r.forEach(function(o) {
        var i = e.processKeyboardEvent.bind(e, o);
        e.addManagedListener(e.element, o, i);
      });
    }, t.prototype.addMouseListeners = function() {
      var e = this, r = ta("touchstart") ? "touchstart" : "mousedown", o = ["dblclick", "contextmenu", "mouseover", "mouseout", "click", r];
      o.forEach(function(i) {
        var s = e.processMouseEvent.bind(e, i);
        e.addManagedListener(e.element, i, s);
      });
    }, t.prototype.processMouseEvent = function(e, r) {
      if (!(!this.mouseEventService.isEventFromThisGrid(r) || Bt(r))) {
        var o = this.getRowForEvent(r), i = this.mouseEventService.getRenderedCellForEvent(r);
        e === "contextmenu" ? this.handleContextMenuMouseEvent(r, null, o, i) : (i && i.onMouseEvent(e, r), o && o.onMouseEvent(e, r));
      }
    }, t.prototype.mockContextMenuForIPad = function() {
      var e = this;
      if (ro()) {
        var r = new bt(this.element), o = function(i) {
          var s = e.getRowForEvent(i.touchEvent), a = e.mouseEventService.getRenderedCellForEvent(i.touchEvent);
          e.handleContextMenuMouseEvent(null, i.touchEvent, s, a);
        };
        this.addManagedListener(r, bt.EVENT_LONG_TAP, o), this.addDestroyFunc(function() {
          return r.destroy();
        });
      }
    }, t.prototype.getRowForEvent = function(e) {
      for (var r = e.target; r; ) {
        var o = this.gridOptionsWrapper.getDomData(r, lr.DOM_DATA_KEY_ROW_CTRL);
        if (o)
          return o;
        r = r.parentElement;
      }
      return null;
    }, t.prototype.handleContextMenuMouseEvent = function(e, r, o, i) {
      var s = o ? o.getRowNode() : null, a = i ? i.getColumn() : null, l = null;
      if (a) {
        var u = e || r;
        i.dispatchCellContextMenuEvent(u), l = this.valueService.getValue(a, s);
      }
      var p = this.ctrlsService.getGridBodyCtrl(), c = i ? i.getGui() : p.getGridBodyElement();
      this.contextMenuFactory && this.contextMenuFactory.onContextMenu(e, r, s, a, l, c);
    }, t.prototype.processKeyboardEvent = function(e, r) {
      var o = Nn(this.gridOptionsWrapper, r, ar.DOM_DATA_KEY_CELL_CTRL), i = Nn(this.gridOptionsWrapper, r, lr.DOM_DATA_KEY_ROW_CTRL);
      r.defaultPrevented || (o ? this.processCellKeyboardEvent(o, e, r) : i && i.isFullWidth() && this.processFullWidthRowKeyboardEvent(i, e, r));
    }, t.prototype.processCellKeyboardEvent = function(e, r, o) {
      var i = e.getRowNode(), s = e.getColumn(), a = e.isEditing(), l = !Bn(this.gridOptionsWrapper, o, i, s, a);
      if (l)
        switch (r) {
          case "keydown":
            var u = !a && this.navigationService.handlePageScrollingKey(o);
            u || e.onKeyDown(o), this.doGridOperations(o, e.isEditing());
            break;
          case "keypress":
            e.onKeyPress(o);
            break;
        }
      if (r === "keydown") {
        var p = e.createEvent(o, v.EVENT_CELL_KEY_DOWN);
        this.eventService.dispatchEvent(p);
      }
      if (r === "keypress") {
        var c = e.createEvent(o, v.EVENT_CELL_KEY_PRESS);
        this.eventService.dispatchEvent(c);
      }
    }, t.prototype.processFullWidthRowKeyboardEvent = function(e, r, o) {
      var i = e.getRowNode(), s = this.focusService.getFocusedCell(), a = s && s.column, l = !Bn(this.gridOptionsWrapper, o, i, a, !1);
      if (l) {
        var u = o.key;
        if (r === "keydown")
          switch (u) {
            case P.UP:
            case P.DOWN:
              e.onKeyboardNavigate(o);
              break;
            case P.TAB:
              e.onTabKeyDown(o);
          }
      }
      if (r === "keydown") {
        var p = e.createRowEvent(v.EVENT_CELL_KEY_DOWN, o);
        this.eventService.dispatchEvent(p);
      }
      if (r === "keypress") {
        var c = e.createRowEvent(v.EVENT_CELL_KEY_PRESS, o);
        this.eventService.dispatchEvent(c);
      }
    }, t.prototype.doGridOperations = function(e, r) {
      if (!(!e.ctrlKey && !e.metaKey) && !r && this.mouseEventService.isEventFromThisGrid(e))
        switch (e.key.toUpperCase()) {
          case P.A:
            return this.onCtrlAndA(e);
          case P.C:
            return this.onCtrlAndC(e);
          case P.V:
            return this.onCtrlAndV();
          case P.D:
            return this.onCtrlAndD(e);
          case P.Z:
            return e.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();
          case P.Y:
            return this.undoRedoService.redo();
        }
    }, t.prototype.onCtrlAndA = function(e) {
      var r = this, o = r.pinnedRowModel, i = r.paginationProxy, s = r.rangeService, a = w.PINNED_BOTTOM, l = w.PINNED_TOP;
      if (s && i.isRowsToRender()) {
        var u = Xv([
          o.isEmpty(l),
          o.isEmpty(a)
        ], 2), p = u[0], c = u[1], d = p ? null : l, f = void 0, g = void 0;
        c ? (f = null, g = this.paginationProxy.getRowCount() - 1) : (f = a, g = o.getPinnedBottomRowData().length - 1);
        var y = this.columnModel.getAllDisplayedColumns();
        if (gt(y))
          return;
        s.setCellRange({
          rowStartIndex: 0,
          rowStartPinned: d,
          rowEndIndex: g,
          rowEndPinned: f,
          columnStart: y[0],
          columnEnd: _e(y)
        });
      }
      e.preventDefault();
    }, t.prototype.onCtrlAndC = function(e) {
      !this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection() || (this.clipboardService.copyToClipboard(), e.preventDefault());
    }, t.prototype.onCtrlAndV = function() {
      Q.isRegistered(q.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste() && this.clipboardService.pasteFromClipboard();
    }, t.prototype.onCtrlAndD = function(e) {
      Q.isRegistered(q.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste() && this.clipboardService.copyRangeDown(), e.preventDefault();
    }, ct([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), ct([
      h("valueService")
    ], t.prototype, "valueService", void 0), ct([
      de("contextMenuFactory")
    ], t.prototype, "contextMenuFactory", void 0), ct([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), ct([
      h("navigationService")
    ], t.prototype, "navigationService", void 0), ct([
      h("focusService")
    ], t.prototype, "focusService", void 0), ct([
      h("undoRedoService")
    ], t.prototype, "undoRedoService", void 0), ct([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ct([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), ct([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), ct([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), ct([
      de("clipboardService")
    ], t.prototype, "clipboardService", void 0), ct([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Jv = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ir = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Zv = (
  /** @class */
  function(n) {
    Jv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.centerContainerCon = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function() {
        e.gridBodyCon = e.ctrlsService.getGridBodyCtrl(), e.listenForResize();
      }), this.addManagedListener(this.eventService, v.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));
    }, t.prototype.listenForResize = function() {
      var e = this.onCenterViewportResized.bind(this);
      this.centerContainerCon.registerViewportResizeListener(e), this.gridBodyCon.registerBodyViewportResizeListener(e);
    }, t.prototype.onScrollbarWidthChanged = function() {
      this.checkViewportAndScrolls();
    }, t.prototype.onCenterViewportResized = function() {
      if (this.centerContainerCon.isViewportVisible()) {
        this.checkViewportAndScrolls();
        var e = this.centerContainerCon.getCenterWidth();
        e !== this.centerWidth && (this.centerWidth = e, this.columnModel.refreshFlexedColumns({ viewportWidth: this.centerWidth, updateBodyWidths: !0, fireResizedEvent: !0 }));
      } else
        this.bodyHeight = 0;
    }, t.prototype.checkViewportAndScrolls = function() {
      this.updateScrollVisibleService(), this.checkBodyHeight(), this.onHorizontalViewportChanged(), this.gridBodyCon.getScrollFeature().checkScrollLeft();
    }, t.prototype.getBodyHeight = function() {
      return this.bodyHeight;
    }, t.prototype.checkBodyHeight = function() {
      var e = this.gridBodyCon.getBodyViewportElement(), r = Uo(e);
      if (this.bodyHeight !== r) {
        this.bodyHeight = r;
        var o = {
          type: v.EVENT_BODY_HEIGHT_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(o);
      }
    }, t.prototype.updateScrollVisibleService = function() {
      this.updateScrollVisibleServiceImpl(), setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);
    }, t.prototype.updateScrollVisibleServiceImpl = function() {
      var e = {
        horizontalScrollShowing: this.isHorizontalScrollShowing(),
        verticalScrollShowing: this.gridBodyCon.isVerticalScrollShowing()
      };
      this.scrollVisibleService.setScrollsVisible(e), this.gridBodyCon.setVerticalScrollPaddingVisible(e.verticalScrollShowing);
    }, t.prototype.isHorizontalScrollShowing = function() {
      var e = this.gridOptionsWrapper.isAlwaysShowHorizontalScroll();
      return e || this.centerContainerCon.isViewportHScrollShowing();
    }, t.prototype.onHorizontalViewportChanged = function() {
      var e = this.centerContainerCon.getCenterWidth(), r = this.centerContainerCon.getViewportScrollLeft();
      this.columnModel.setViewportPosition(e, r);
    }, Ir([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ir([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ir([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), Ir([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Ir([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Ir([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ey = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ty = (
  /** @class */
  function(n) {
    ey(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, v.EVENT_LEFT_PINNED_WIDTH_CHANGED, this.onPinnedLeftWidthChanged.bind(this));
    }, t.prototype.onPinnedLeftWidthChanged = function() {
      var e = this.pinnedWidthService.getPinnedLeftWidth(), r = e > 0;
      Ee(this.element, r), r && zt(this.element, e);
    }, Nl([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), Nl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ry = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, oy = (
  /** @class */
  function(n) {
    ry(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, v.EVENT_RIGHT_PINNED_WIDTH_CHANGED, this.onPinnedRightWidthChanged.bind(this));
    }, t.prototype.onPinnedRightWidthChanged = function() {
      var e = this.pinnedWidthService.getPinnedRightWidth(), r = e > 0;
      Ee(this.element, r), r && zt(this.element, e);
    }, xl([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), xl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ny = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Hl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, iy = (
  /** @class */
  function(n) {
    ny(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.eContainer = e, o.eWrapper = r, o;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, v.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, this.onHeightChanged.bind(this));
    }, t.prototype.onHeightChanged = function() {
      var e = this.maxDivHeightScaler.getUiContainerHeight(), r = e != null ? e + "px" : "";
      this.eContainer.style.height = r, this.eWrapper && (this.eWrapper.style.height = r);
    }, Hl([
      h("rowContainerHeightService")
    ], t.prototype, "maxDivHeightScaler", void 0), Hl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var sy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ay = (
  /** @class */
  function(n) {
    sy(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.eContainer = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      if (!(!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property
      K(this.rangeService))) {
        var r = {
          dragStartPixels: 0,
          eElement: this.eContainer,
          onDragStart: this.rangeService.onDragStart.bind(this.rangeService),
          onDragStop: this.rangeService.onDragStop.bind(this.rangeService),
          onDragging: this.rangeService.onDragging.bind(this.rangeService)
        };
        this.dragService.addDragSource(r), this.addDestroyFunc(function() {
          return e.dragService.removeDragSource(r);
        });
      }
    }, zi([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), zi([
      h("dragService")
    ], t.prototype, "dragService", void 0), zi([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ly = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Pa = (
  /** @class */
  function(n) {
    ly(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.callback = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this.setWidth.bind(this);
      this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, e), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.setWidth();
    }, t.prototype.setWidth = function() {
      var e = this.columnModel, r = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT, o = e.getBodyContainerWidth(), i = e.getDisplayedColumnsLeftWidth(), s = e.getDisplayedColumnsRightWidth(), a = r ? o + i + s : o;
      this.callback(a);
    }, Wl([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Wl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var uy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), fr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, py = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, cy = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(py(arguments[t]));
  return n;
}, F;
(function(n) {
  n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth", n.TOP_LEFT = "topLeft", n.TOP_RIGHT = "topRight", n.TOP_CENTER = "topCenter", n.TOP_FULL_WIDTH = "topFullWidth", n.BOTTOM_LEFT = "bottomLeft", n.BOTTOM_RIGHT = "bottomRight", n.BOTTOM_CENTER = "bottomCenter", n.BOTTOM_FULL_WIDTH = "bottomFullWidth";
})(F || (F = {}));
var lt;
(function(n) {
  n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth";
})(lt || (lt = {}));
function Zp(n) {
  switch (n) {
    case F.CENTER:
    case F.TOP_CENTER:
    case F.BOTTOM_CENTER:
      return lt.CENTER;
    case F.LEFT:
    case F.TOP_LEFT:
    case F.BOTTOM_LEFT:
      return lt.LEFT;
    case F.RIGHT:
    case F.TOP_RIGHT:
    case F.BOTTOM_RIGHT:
      return lt.RIGHT;
    case F.FULL_WIDTH:
    case F.TOP_FULL_WIDTH:
    case F.BOTTOM_FULL_WIDTH:
      return lt.FULL_WIDTH;
    default:
      throw Error("Invalid Row Container Type");
  }
}
var dy = or([
  [F.CENTER, "ag-center-cols-container"],
  [F.LEFT, "ag-pinned-left-cols-container"],
  [F.RIGHT, "ag-pinned-right-cols-container"],
  [F.FULL_WIDTH, "ag-full-width-container"],
  [F.TOP_CENTER, "ag-floating-top-container"],
  [F.TOP_LEFT, "ag-pinned-left-floating-top"],
  [F.TOP_RIGHT, "ag-pinned-right-floating-top"],
  [F.TOP_FULL_WIDTH, "ag-floating-top-full-width-container"],
  [F.BOTTOM_CENTER, "ag-floating-bottom-container"],
  [F.BOTTOM_LEFT, "ag-pinned-left-floating-bottom"],
  [F.BOTTOM_RIGHT, "ag-pinned-right-floating-bottom"],
  [F.BOTTOM_FULL_WIDTH, "ag-floating-bottom-full-width-container"]
]), hy = or([
  [F.CENTER, "ag-center-cols-viewport"],
  [F.TOP_CENTER, "ag-floating-top-viewport"],
  [F.BOTTOM_CENTER, "ag-floating-bottom-viewport"]
]), fy = or([
  [F.CENTER, "ag-center-cols-clipper"]
]), Kn = (
  /** @class */
  function(n) {
    uy(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.name = e, r;
    }
    return t.getRowContainerCssClasses = function(e) {
      var r = dy.get(e), o = hy.get(e), i = fy.get(e);
      return { container: r, viewport: o, wrapper: i };
    }, t.getPinned = function(e) {
      switch (e) {
        case F.BOTTOM_LEFT:
        case F.TOP_LEFT:
        case F.LEFT:
          return w.PINNED_LEFT;
        case F.BOTTOM_RIGHT:
        case F.TOP_RIGHT:
        case F.RIGHT:
          return w.PINNED_RIGHT;
        default:
          return null;
      }
    }, t.prototype.postConstruct = function() {
      var e = this;
      this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.embedFullWidthRows = this.gridOptionsWrapper.isEmbedFullWidthRows(), this.addManagedListener(this.eventService, v.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_ROWS_CHANGED, this.onDisplayedRowsChanged.bind(this)), this.forContainers([F.CENTER], function() {
        return e.viewportSizeFeature = e.createManagedBean(new Zv(e));
      }), this.registerWithCtrlsService();
    }, t.prototype.registerWithCtrlsService = function() {
      switch (this.name) {
        case F.CENTER:
          this.ctrlsService.registerCenterRowContainerCtrl(this);
          break;
        case F.LEFT:
          this.ctrlsService.registerLeftRowContainerCtrl(this);
          break;
        case F.RIGHT:
          this.ctrlsService.registerRightRowContainerCtrl(this);
          break;
        case F.TOP_CENTER:
          this.ctrlsService.registerTopCenterRowContainerCtrl(this);
          break;
        case F.TOP_LEFT:
          this.ctrlsService.registerTopLeftRowContainerCon(this);
          break;
        case F.TOP_RIGHT:
          this.ctrlsService.registerTopRightRowContainerCtrl(this);
          break;
        case F.BOTTOM_CENTER:
          this.ctrlsService.registerBottomCenterRowContainerCtrl(this);
          break;
        case F.BOTTOM_LEFT:
          this.ctrlsService.registerBottomLeftRowContainerCtrl(this);
          break;
        case F.BOTTOM_RIGHT:
          this.ctrlsService.registerBottomRightRowContainerCtrl(this);
          break;
      }
    }, t.prototype.forContainers = function(e, r) {
      e.indexOf(this.name) >= 0 && r();
    }, t.prototype.getContainerElement = function() {
      return this.eContainer;
    }, t.prototype.getViewportSizeFeature = function() {
      return this.viewportSizeFeature;
    }, t.prototype.setComp = function(e, r, o, i) {
      var s = this;
      this.comp = e, this.eContainer = r, this.eViewport = o, this.eWrapper = i, this.createManagedBean(new Qv(this.eContainer)), this.addPreventScrollWhileDragging(), this.listenOnDomOrder(), this.stopHScrollOnPinnedRows();
      var a = [F.TOP_CENTER, F.TOP_LEFT, F.TOP_RIGHT], l = [F.BOTTOM_CENTER, F.BOTTOM_LEFT, F.BOTTOM_RIGHT], u = [F.CENTER, F.LEFT, F.RIGHT], p = cy(a, l, u), c = [F.CENTER, F.LEFT, F.RIGHT, F.FULL_WIDTH], d = [F.CENTER, F.TOP_CENTER, F.BOTTOM_CENTER], f = [F.LEFT, F.BOTTOM_LEFT, F.TOP_LEFT], g = [F.RIGHT, F.BOTTOM_RIGHT, F.TOP_RIGHT];
      this.forContainers(f, function() {
        return s.createManagedBean(new ty(s.eContainer));
      }), this.forContainers(g, function() {
        return s.createManagedBean(new oy(s.eContainer));
      }), this.forContainers(c, function() {
        return s.createManagedBean(new iy(s.eContainer, s.eWrapper));
      }), this.forContainers(p, function() {
        return s.createManagedBean(new ay(s.eContainer));
      }), this.forContainers(d, function() {
        return s.createManagedBean(new Pa(function(y) {
          return s.comp.setContainerWidth(y + "px");
        }));
      });
    }, t.prototype.listenOnDomOrder = function() {
      var e = this, r = function() {
        return e.comp.setDomOrder(e.gridOptionsWrapper.isEnsureDomOrder());
      };
      this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, r), r();
    }, t.prototype.stopHScrollOnPinnedRows = function() {
      var e = this;
      this.forContainers([F.TOP_CENTER, F.BOTTOM_CENTER], function() {
        var r = function() {
          return e.eViewport.scrollLeft = 0;
        };
        e.addManagedListener(e.eViewport, "scroll", r);
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      var e = this;
      this.forContainers([F.CENTER], function() {
        return e.onHorizontalViewportChanged();
      });
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      var e = this;
      this.forContainers([F.CENTER], function() {
        return e.onHorizontalViewportChanged();
      });
    }, t.prototype.onScrollVisibilityChanged = function() {
      if (this.name === F.CENTER) {
        var e = this.scrollVisibleService.isHorizontalScrollShowing(), r = e && this.gridOptionsWrapper.getScrollbarWidth() || 0, o = r == 0 ? "100%" : "calc(100% + " + r + "px)";
        this.comp.setViewportHeight(o);
      }
    }, t.prototype.addPreventScrollWhileDragging = function() {
      var e = this, r = function(o) {
        e.dragService.isDragging() && o.cancelable && o.preventDefault();
      };
      this.eContainer.addEventListener("touchmove", r, { passive: !1 }), this.addDestroyFunc(function() {
        return e.eContainer.removeEventListener("touchmove", r);
      });
    }, t.prototype.onHorizontalViewportChanged = function() {
      var e = this.getCenterWidth(), r = this.getCenterViewportScrollLeft();
      this.columnModel.setViewportPosition(e, r);
    }, t.prototype.getCenterWidth = function() {
      return oi(this.eViewport);
    }, t.prototype.getCenterViewportScrollLeft = function() {
      return Wo(this.eViewport, this.enableRtl);
    }, t.prototype.registerViewportResizeListener = function(e) {
      var r = this.resizeObserverService.observeResize(this.eViewport, e);
      this.addDestroyFunc(function() {
        return r();
      });
    }, t.prototype.isViewportVisible = function() {
      return no(this.eViewport);
    }, t.prototype.isViewportHScrollShowing = function() {
      return Ms(this.eViewport);
    }, t.prototype.getViewportScrollLeft = function() {
      return Wo(this.eViewport, this.enableRtl);
    }, t.prototype.isHorizontalScrollShowing = function() {
      var e = this.gridOptionsWrapper.isAlwaysShowHorizontalScroll();
      return e || Ms(this.eViewport);
    }, t.prototype.getViewportElement = function() {
      return this.eViewport;
    }, t.prototype.setContainerTranslateX = function(e) {
      this.eContainer.style.transform = "translateX(" + e + "px)";
    }, t.prototype.getHScrollPosition = function() {
      var e = {
        left: this.eViewport.scrollLeft,
        right: this.eViewport.scrollLeft + this.eViewport.offsetWidth
      };
      return e;
    }, t.prototype.setCenterViewportScrollLeft = function(e) {
      Wn(this.eViewport, e, this.enableRtl);
    }, t.prototype.onDisplayedRowsChanged = function() {
      var e = this, r = this.name === F.TOP_FULL_WIDTH || this.name === F.BOTTOM_FULL_WIDTH || this.name === F.FULL_WIDTH, o = function(a) {
        var l = a.isFullWidth(), u = e.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT, p = e.embedFullWidthRows || u, c = r ? !p && l : p || !l;
        return c;
      }, i = this.getRowCtrls(), s = i.filter(o);
      this.comp.setRowCtrls(s);
    }, t.prototype.getRowCtrls = function() {
      switch (this.name) {
        case F.TOP_CENTER:
        case F.TOP_LEFT:
        case F.TOP_RIGHT:
        case F.TOP_FULL_WIDTH:
          return this.rowRenderer.getTopRowCtrls();
        case F.BOTTOM_CENTER:
        case F.BOTTOM_LEFT:
        case F.BOTTOM_RIGHT:
        case F.BOTTOM_FULL_WIDTH:
          return this.rowRenderer.getBottomRowCtrls();
        default:
          return this.rowRenderer.getRowCtrls();
      }
    }, fr([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), fr([
      h("dragService")
    ], t.prototype, "dragService", void 0), fr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), fr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), fr([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), fr([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), fr([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var gy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vy = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, yy = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(vy(arguments[t]));
  return n;
}, at;
(function(n) {
  n.Normal = "Normal", n.FullWidth = "FullWidth", n.FullWidthLoading = "FullWidthLoading", n.FullWidthGroup = "FullWidthGroup", n.FullWidthDetail = "FullWidthDetail";
})(at || (at = {}));
var Cy = 0, lr = (
  /** @class */
  function(n) {
    gy(t, n);
    function t(e, r, o, i, s, a) {
      var l = n.call(this) || this;
      return l.allRowGuis = [], l.active = !0, l.centerCellCtrls = { list: [], map: {} }, l.leftCellCtrls = { list: [], map: {} }, l.rightCellCtrls = { list: [], map: {} }, l.lastMouseDownOnDragger = !1, l.updateColumnListsPending = !1, l.parentScope = e, l.beans = o, l.rowNode = r, l.paginationPage = l.beans.paginationProxy.getCurrentPage(), l.useAnimationFrameForCreate = s, l.printLayout = a, l.instanceId = r.id + "-" + Cy++, l.setAnimateFlags(i), l.rowFocused = l.beans.focusService.isRowFocused(l.rowNode.rowIndex, l.rowNode.rowPinned), l.setupAngular1Scope(), l.rowLevel = l.beans.rowCssClassCalculator.calculateRowLevel(l.rowNode), l.setRowType(), l.addListeners(), l.setInitialRowTop(), l;
    }
    return t.prototype.getBeans = function() {
      return this.beans;
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.setComp = function(e, r, o) {
      var i = { rowComp: e, element: r, containerType: o };
      this.allRowGuis.push(i), o === lt.LEFT ? this.leftGui = i : o === lt.RIGHT ? this.rightGui = i : o === lt.FULL_WIDTH ? this.fullWidthGui = i : this.centerGui = i;
      var s = this.leftGui != null && this.rightGui != null && this.centerGui != null, a = this.fullWidthGui != null;
      (s || a) && this.initialiseRowComps();
    }, t.prototype.isCacheable = function() {
      return this.rowType === at.FullWidthDetail && this.beans.gridOptionsWrapper.isKeepDetailRows();
    }, t.prototype.setCached = function(e) {
      var r = e ? "none" : "";
      this.allRowGuis.forEach(function(o) {
        return o.element.style.display = r;
      });
    }, t.prototype.initialiseRowComps = function() {
      var e = this, r = this.beans.gridOptionsWrapper;
      this.onRowHeightChanged(), this.updateRowIndexes(), this.setFocusedClasses(), this.setStylesFromGridOptions(), r.isRowSelection() && this.rowNode.selectable && this.onRowSelected(), this.updateColumnLists(!this.useAnimationFrameForCreate), this.slideRowIn && Es(this.onTopChanged.bind(this)), this.fadeRowIn && Es(function() {
        e.allRowGuis.forEach(function(a) {
          return a.rowComp.addOrRemoveCssClass("ag-opacity-zero", !1);
        });
      });
      var o = this.getRowBusinessKey(), i = kt(this.rowNode.id), s = kt(o);
      this.allRowGuis.forEach(function(a) {
        var l = a.rowComp;
        l.setRole("row");
        var u = e.getInitialRowClasses(a.containerType);
        u.forEach(function(p) {
          return l.addOrRemoveCssClass(p, !0);
        }), e.rowNode.group && vt(a.element, e.rowNode.expanded == !0), i != null && l.setRowId(i), s != null && l.setRowBusinessKey(s), e.isFullWidth() && !e.beans.gridOptionsWrapper.isSuppressCellFocus() && l.setTabIndex(-1), r.setDomData(a.element, t.DOM_DATA_KEY_ROW_CTRL, e), e.addDestroyFunc(function() {
          return r.setDomData(a.element, t.DOM_DATA_KEY_ROW_CTRL, null);
        }), e.useAnimationFrameForCreate ? e.beans.animationFrameService.createTask(e.addHoverFunctionality.bind(e, a.element), e.rowNode.rowIndex, "createTasksP2") : e.addHoverFunctionality(a.element), e.isFullWidth() && e.setupFullWidth(a), r.isRowDragEntireRow() && e.addRowDraggerToRow(a), e.useAnimationFrameForCreate && e.beans.animationFrameService.addDestroyTask(function() {
          e.isAlive() && a.rowComp.addOrRemoveCssClass("ag-after-created", !0);
        });
      }), this.executeProcessRowPostCreateFunc();
    }, t.prototype.addRowDraggerToRow = function(e) {
      var r = this.beans.gridOptionsWrapper;
      if (r.isEnableRangeSelection()) {
        ve(function() {
          console.warn("AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`");
        }, "rowDragAndRangeSelectionEnabled");
        return;
      }
      var o = new kn(function() {
        return "1 row";
      }, this.rowNode, void 0, e.element, void 0, !0);
      this.createManagedBean(o, this.beans.context);
    }, t.prototype.setupFullWidth = function(e) {
      var r = this.getPinnedForContainer(e.containerType), o = this.createFullWidthParams(e.element, r), i = Q.isRegistered(q.MasterDetailModule);
      if (this.rowType == at.FullWidthDetail && !i) {
        Q.isPackageBased() ? console.warn("AG Grid: cell renderer 'agDetailCellRenderer' (for master detail) not found. Can only be used with ag-grid-enterprise package.") : console.warn("AG Grid: cell renderer 'agDetailCellRenderer' (for master detail) not found. Can only be used with AG Grid Enterprise Module " + q.MasterDetailModule);
        return;
      }
      var s;
      switch (this.rowType) {
        case at.FullWidthDetail:
          s = this.beans.userComponentFactory.getFullWidthDetailCellRendererDetails(o);
          break;
        case at.FullWidthGroup:
          s = this.beans.userComponentFactory.getFullWidthGroupCellRendererDetails(o);
          break;
        case at.FullWidthLoading:
          s = this.beans.userComponentFactory.getFullWidthLoadingCellRendererDetails(o);
          break;
        default:
          s = this.beans.userComponentFactory.getFullWidthCellRendererDetails(o);
          break;
      }
      e.rowComp.showFullWidth(s);
    }, t.prototype.getScope = function() {
      return this.scope;
    }, t.prototype.isPrintLayout = function() {
      return this.printLayout;
    }, t.prototype.setupAngular1Scope = function() {
      var e = Yv.createChildScopeOrNull(this.rowNode, this.parentScope, this.beans.gridOptionsWrapper);
      e && (this.scope = e.scope, this.addDestroyFunc(e.scopeDestroyFunc));
    }, t.prototype.getCellElement = function(e) {
      var r = this.getCellCtrl(e);
      return r ? r.getGui() : null;
    }, t.prototype.executeProcessRowPostCreateFunc = function() {
      var e = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();
      if (e) {
        var r = {
          eRow: this.centerGui ? this.centerGui.element : void 0,
          ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,
          ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,
          node: this.rowNode,
          api: this.beans.gridOptionsWrapper.getApi(),
          rowIndex: this.rowNode.rowIndex,
          addRenderedRowListener: this.addEventListener.bind(this),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext()
        };
        e(r);
      }
    }, t.prototype.setRowType = function() {
      var e = this.rowNode.stub, r = this.rowNode.isFullWidthCell(), o = this.beans.doingMasterDetail && this.rowNode.detail, i = this.beans.columnModel.isPivotMode(), s = !!this.rowNode.group && !this.rowNode.footer, a = s && this.beans.gridOptionsWrapper.isGroupUseEntireRow(i);
      e ? this.rowType = at.FullWidthLoading : o ? this.rowType = at.FullWidthDetail : r ? this.rowType = at.FullWidth : a ? this.rowType = at.FullWidthGroup : this.rowType = at.Normal;
    }, t.prototype.updateColumnLists = function(e) {
      var r = this;
      if (e === void 0 && (e = !1), !this.isFullWidth()) {
        var o = e || this.beans.gridOptionsWrapper.isSuppressAnimationFrame() || this.printLayout;
        if (o) {
          this.updateColumnListsImpl();
          return;
        }
        this.updateColumnListsPending || (this.beans.animationFrameService.createTask(function() {
          r.active && r.updateColumnListsImpl();
        }, this.rowNode.rowIndex, "createTasksP1"), this.updateColumnListsPending = !0);
      }
    }, t.prototype.createCellCtrls = function(e, r, o) {
      var i = this;
      o === void 0 && (o = null);
      var s = {
        list: [],
        map: {}
      }, a = function(l, u) {
        s.list.push(u), s.map[l] = u;
      };
      return r.forEach(function(l) {
        var u = l.getInstanceId(), p = e.map[u];
        p || (p = new ar(l, i.rowNode, i.beans, i)), a(u, p);
      }), e.list.forEach(function(l) {
        var u = s.map[l.getColumn().getInstanceId()] != null;
        if (!u) {
          var p = !i.isCellEligibleToBeRemoved(l, o);
          if (p) {
            a(l.getColumn().getInstanceId(), l);
            return;
          }
          l.destroy();
        }
      }), s;
    }, t.prototype.updateColumnListsImpl = function() {
      var e = this;
      this.updateColumnListsPending = !1;
      var r = this.beans.columnModel;
      if (this.printLayout)
        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, r.getAllDisplayedColumns()), this.leftCellCtrls = { list: [], map: {} }, this.rightCellCtrls = { list: [], map: {} };
      else {
        var o = r.getViewportCenterColumnsForRow(this.rowNode);
        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, o);
        var i = r.getDisplayedLeftColumnsForRow(this.rowNode);
        this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, i, w.PINNED_LEFT);
        var s = r.getDisplayedRightColumnsForRow(this.rowNode);
        this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, s, w.PINNED_RIGHT);
      }
      this.allRowGuis.forEach(function(a) {
        var l = a.containerType === lt.LEFT ? e.leftCellCtrls : a.containerType === lt.RIGHT ? e.rightCellCtrls : e.centerCellCtrls;
        a.rowComp.setCellCtrls(l.list);
      });
    }, t.prototype.isCellEligibleToBeRemoved = function(e, r) {
      var o = !0, i = !1, s = e.getColumn();
      if (s.getPinned() != r)
        return o;
      var a = e.isEditing(), l = this.beans.focusService.isCellFocused(e.getCellPosition()), u = a || l;
      if (u) {
        var p = e.getColumn(), c = this.beans.columnModel.getAllDisplayedColumns(), d = c.indexOf(p) >= 0;
        return d ? i : o;
      }
      return o;
    }, t.prototype.setAnimateFlags = function(e) {
      if (e) {
        var r = O(this.rowNode.oldRowTop);
        this.slideRowIn = r, this.fadeRowIn = !r;
      } else
        this.slideRowIn = !1, this.fadeRowIn = !1;
    }, t.prototype.isEditing = function() {
      return this.editingRow;
    }, t.prototype.stopRowEditing = function(e) {
      this.stopEditing(e);
    }, t.prototype.isFullWidth = function() {
      return this.rowType !== at.Normal;
    }, t.prototype.getRowType = function() {
      return this.rowType;
    }, t.prototype.refreshFullWidth = function() {
      var e = this, r = function(u, p) {
        if (!u)
          return !0;
        var c = u.rowComp.getFullWidthCellRenderer();
        if (!c || !c.refresh)
          return !1;
        var d = e.createFullWidthParams(u.element, p), f = c.refresh(d);
        return f;
      }, o = r(this.fullWidthGui, null), i = r(this.centerGui, null), s = r(this.leftGui, w.PINNED_LEFT), a = r(this.rightGui, w.PINNED_RIGHT), l = o && i && s && a;
      return l;
    }, t.prototype.addListeners = function() {
      this.addManagedListener(this.rowNode, te.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_ROW_SELECTED, this.onRowSelected.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_TOP_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this)), this.addManagedListener(this.rowNode, te.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));
      var e = this.beans.eventService;
      this.addManagedListener(e, v.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this)), this.addManagedListener(e, v.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(e, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(e, v.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(e, v.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this)), this.addManagedListener(e, v.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), this.addManagedListener(e, v.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedListener(e, v.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this)), this.addListenersForCellComps();
    }, t.prototype.onColumnMoved = function() {
      this.updateColumnLists();
    }, t.prototype.addListenersForCellComps = function() {
      var e = this;
      this.addManagedListener(this.rowNode, te.EVENT_ROW_INDEX_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(r) {
          return r.onRowIndexChanged();
        });
      }), this.addManagedListener(this.rowNode, te.EVENT_CELL_CHANGED, function(r) {
        e.getAllCellCtrls().forEach(function(o) {
          return o.onCellChanged(r);
        });
      });
    }, t.prototype.onRowNodeDataChanged = function(e) {
      this.getAllCellCtrls().forEach(function(r) {
        return r.refreshCell({
          suppressFlash: !e.update,
          newData: !e.update
        });
      }), this.onRowSelected(), this.postProcessCss();
    }, t.prototype.onRowNodeCellChanged = function() {
      this.postProcessCss();
    }, t.prototype.postProcessCss = function() {
      this.setStylesFromGridOptions(), this.postProcessClassesFromGridOptions(), this.postProcessRowClassRules(), this.postProcessRowDragging();
    }, t.prototype.onRowNodeHighlightChanged = function() {
      var e = this.rowNode.highlighted;
      this.allRowGuis.forEach(function(r) {
        var o = e === Ut.Above, i = e === Ut.Below;
        r.rowComp.addOrRemoveCssClass("ag-row-highlight-above", o), r.rowComp.addOrRemoveCssClass("ag-row-highlight-below", i);
      });
    }, t.prototype.onRowNodeDraggingChanged = function() {
      this.postProcessRowDragging();
    }, t.prototype.postProcessRowDragging = function() {
      var e = this.rowNode.dragging;
      this.allRowGuis.forEach(function(r) {
        return r.rowComp.addOrRemoveCssClass("ag-row-dragging", e);
      });
    }, t.prototype.updateExpandedCss = function() {
      var e = this.rowNode.isExpandable(), r = this.rowNode.expanded == !0;
      this.allRowGuis.forEach(function(o) {
        o.rowComp.addOrRemoveCssClass("ag-row-group", e), o.rowComp.addOrRemoveCssClass("ag-row-group-expanded", e && r), o.rowComp.addOrRemoveCssClass("ag-row-group-contracted", e && !r), vt(o.element, e && r);
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.updateColumnLists(!0), this.beans.columnModel.wasAutoRowHeightEverActive() && this.rowNode.checkAutoHeights();
    }, t.prototype.onVirtualColumnsChanged = function() {
      this.updateColumnLists();
    }, t.prototype.getRowPosition = function() {
      return {
        rowPinned: this.rowNode.rowPinned,
        rowIndex: this.rowNode.rowIndex
      };
    }, t.prototype.onKeyboardNavigate = function(e) {
      var r = this.allRowGuis.find(function(u) {
        return u.element.contains(e.target);
      }), o = r ? r.element : null, i = o === e.target;
      if (i) {
        var s = this.rowNode, a = this.beans.focusService.getFocusedCell(), l = {
          rowIndex: s.rowIndex,
          rowPinned: s.rowPinned,
          column: a && a.column
        };
        this.beans.navigationService.navigateToNextCell(e, e.key, l, !0), e.preventDefault();
      }
    }, t.prototype.onTabKeyDown = function(e) {
      if (!(e.defaultPrevented || Bt(e))) {
        var r = this.allRowGuis.find(function(a) {
          return a.element.contains(e.target);
        }), o = r ? r.element : null, i = o === e.target, s = null;
        i || (s = this.beans.focusService.findNextFocusableElement(o, !1, e.shiftKey)), (this.isFullWidth() && i || !s) && this.beans.navigationService.onTabKeyDown(this, e);
      }
    }, t.prototype.onFullWidthRowFocused = function(e) {
      var r, o = this.rowNode, i = this.isFullWidth() && e.rowIndex === o.rowIndex && e.rowPinned == o.rowPinned, s = this.fullWidthGui ? this.fullWidthGui.element : (r = this.centerGui) === null || r === void 0 ? void 0 : r.element;
      s && (s.classList.toggle("ag-full-width-focus", i), i && s.focus({ preventScroll: !0 }));
    }, t.prototype.refreshCell = function(e) {
      this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, e), this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, e), this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, e), this.updateColumnLists();
    }, t.prototype.removeCellCtrl = function(e, r) {
      var o = {
        list: [],
        map: {}
      };
      return e.list.forEach(function(i) {
        i !== r && (o.list.push(i), o.map[i.getInstanceId()] = i);
      }), o;
    }, t.prototype.onMouseEvent = function(e, r) {
      switch (e) {
        case "dblclick":
          this.onRowDblClick(r);
          break;
        case "click":
          this.onRowClick(r);
          break;
        case "touchstart":
        case "mousedown":
          this.onRowMouseDown(r);
          break;
      }
    }, t.prototype.createRowEvent = function(e, r) {
      return {
        type: e,
        node: this.rowNode,
        data: this.rowNode.data,
        rowIndex: this.rowNode.rowIndex,
        rowPinned: this.rowNode.rowPinned,
        context: this.beans.gridOptionsWrapper.getContext(),
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        event: r
      };
    }, t.prototype.createRowEventWithSource = function(e, r) {
      var o = this.createRowEvent(e, r);
      return o.source = this, o;
    }, t.prototype.onRowDblClick = function(e) {
      if (!Bt(e)) {
        var r = this.createRowEventWithSource(v.EVENT_ROW_DOUBLE_CLICKED, e);
        this.beans.eventService.dispatchEvent(r);
      }
    }, t.prototype.onRowMouseDown = function(e) {
      if (this.lastMouseDownOnDragger = ri(e.target, "ag-row-drag", 3), !!this.isFullWidth()) {
        var r = this.rowNode, o = this.beans.columnModel;
        this.beans.focusService.setFocusedCell(r.rowIndex, o.getAllDisplayedColumns()[0], r.rowPinned, !0);
      }
    }, t.prototype.onRowClick = function(e) {
      var r = Bt(e) || this.lastMouseDownOnDragger;
      if (!r) {
        var o = this.createRowEventWithSource(v.EVENT_ROW_CLICKED, e);
        this.beans.eventService.dispatchEvent(o);
        var i = e.ctrlKey || e.metaKey, s = e.shiftKey, a = this.beans.gridOptionsWrapper.isGroupSelectsChildren();
        if (
          // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,
          // so return if it's a group row
          !(a && this.rowNode.group || // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,
          // and we click it, the selection should not change (ie any currently selected row should stay selected)
          !this.rowNode.selectable || // we also don't allow selection of pinned rows
          this.rowNode.rowPinned || // if no selection method enabled, do nothing
          !this.beans.gridOptionsWrapper.isRowSelection() || // if click selection suppressed, do nothing
          this.beans.gridOptionsWrapper.isSuppressRowClickSelection())
        ) {
          var l = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick(), u = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();
          if (this.rowNode.isSelected())
            l ? this.rowNode.setSelectedParams({ newValue: !1 }) : i ? u && this.rowNode.setSelectedParams({ newValue: !1 }) : this.rowNode.setSelectedParams({ newValue: !s, clearSelection: !s, rangeSelect: s });
          else {
            var p = l ? !1 : !i;
            this.rowNode.setSelectedParams({ newValue: !0, clearSelection: p, rangeSelect: s });
          }
        }
      }
    }, t.prototype.setupDetailRowAutoHeight = function(e) {
      var r = this;
      if (this.rowType === at.FullWidthDetail && this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) {
        var o = function() {
          var s = e.clientHeight;
          if (s != null && s > 0) {
            var a = function() {
              r.rowNode.setRowHeight(s), r.beans.clientSideRowModel ? r.beans.clientSideRowModel.onRowHeightChanged() : r.beans.serverSideRowModel && r.beans.serverSideRowModel.onRowHeightChanged();
            };
            r.beans.frameworkOverrides.setTimeout(a, 0);
          }
        }, i = this.beans.resizeObserverService.observeResize(e, o);
        this.addDestroyFunc(i), o();
      }
    }, t.prototype.createFullWidthParams = function(e, r) {
      var o = this, i = {
        fullWidth: !0,
        data: this.rowNode.data,
        node: this.rowNode,
        value: this.rowNode.key,
        valueFormatted: this.rowNode.key,
        $scope: this.scope ? this.scope : this.parentScope,
        $compile: this.beans.$compile,
        rowIndex: this.rowNode.rowIndex,
        api: this.beans.gridOptionsWrapper.getApi(),
        columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
        context: this.beans.gridOptionsWrapper.getContext(),
        // these need to be taken out, as part of 'afterAttached' now
        eGridCell: e,
        eParentOfValue: e,
        pinned: r,
        addRenderedRowListener: this.addEventListener.bind(this),
        registerRowDragger: function(s, a, l, u) {
          return o.addFullWidthRowDragging(s, a, l, u);
        }
      };
      return i;
    }, t.prototype.addFullWidthRowDragging = function(e, r, o, i) {
      if (o === void 0 && (o = ""), !!this.isFullWidth()) {
        var s = new kn(function() {
          return o;
        }, this.rowNode, void 0, e, r, i);
        this.createManagedBean(s, this.beans.context);
      }
    }, t.prototype.onUiLevelChanged = function() {
      var e = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);
      if (this.rowLevel != e) {
        var r = "ag-row-level-" + e, o = "ag-row-level-" + this.rowLevel;
        this.allRowGuis.forEach(function(i) {
          i.rowComp.addOrRemoveCssClass(r, !0), i.rowComp.addOrRemoveCssClass(o, !1);
        });
      }
      this.rowLevel = e;
    }, t.prototype.isFirstRowOnPage = function() {
      return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();
    }, t.prototype.isLastRowOnPage = function() {
      return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();
    }, t.prototype.onModelUpdated = function() {
      this.refreshFirstAndLastRowStyles();
    }, t.prototype.refreshFirstAndLastRowStyles = function() {
      var e = this.isFirstRowOnPage(), r = this.isLastRowOnPage();
      this.firstRowOnPage !== e && (this.firstRowOnPage = e, this.allRowGuis.forEach(function(o) {
        return o.rowComp.addOrRemoveCssClass("ag-row-first", e);
      })), this.lastRowOnPage !== r && (this.lastRowOnPage = r, this.allRowGuis.forEach(function(o) {
        return o.rowComp.addOrRemoveCssClass("ag-row-last", r);
      }));
    }, t.prototype.stopEditing = function(e) {
      if (e === void 0 && (e = !1), this.getAllCellCtrls().forEach(function(o) {
        return o.stopEditing(e);
      }), !!this.editingRow) {
        if (!e) {
          var r = this.createRowEvent(v.EVENT_ROW_VALUE_CHANGED);
          this.beans.eventService.dispatchEvent(r);
        }
        this.setEditingRow(!1);
      }
    }, t.prototype.setInlineEditingCss = function(e) {
      this.allRowGuis.forEach(function(r) {
        r.rowComp.addOrRemoveCssClass("ag-row-inline-editing", e), r.rowComp.addOrRemoveCssClass("ag-row-not-inline-editing", !e);
      });
    }, t.prototype.setEditingRow = function(e) {
      this.editingRow = e, this.allRowGuis.forEach(function(o) {
        return o.rowComp.addOrRemoveCssClass("ag-row-editing", e);
      });
      var r = e ? this.createRowEvent(v.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(v.EVENT_ROW_EDITING_STOPPED);
      this.beans.eventService.dispatchEvent(r);
    }, t.prototype.startRowEditing = function(e, r, o, i) {
      e === void 0 && (e = null), r === void 0 && (r = null), o === void 0 && (o = null), i === void 0 && (i = null), !this.editingRow && (this.getAllCellCtrls().forEach(function(s) {
        var a = s === o;
        a ? s.startEditing(e, r, a, i) : s.startEditing(null, null, a, i);
      }), this.setEditingRow(!0));
    }, t.prototype.getAllCellCtrls = function() {
      var e = yy(this.centerCellCtrls.list, this.leftCellCtrls.list, this.rightCellCtrls.list);
      return e;
    }, t.prototype.postProcessClassesFromGridOptions = function() {
      var e = this, r = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode, this.scope);
      !r || !r.length || r.forEach(function(o) {
        e.allRowGuis.forEach(function(i) {
          return i.rowComp.addOrRemoveCssClass(o, !0);
        });
      });
    }, t.prototype.postProcessRowClassRules = function() {
      var e = this;
      this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, this.scope, function(r) {
        e.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass(r, !0);
        });
      }, function(r) {
        e.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass(r, !1);
        });
      });
    }, t.prototype.setStylesFromGridOptions = function() {
      var e = this.processStylesFromGridOptions();
      this.allRowGuis.forEach(function(r) {
        return r.rowComp.setUserStyles(e);
      });
    }, t.prototype.getRowBusinessKey = function() {
      var e = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();
      if (typeof e == "function")
        return e(this.rowNode);
    }, t.prototype.getPinnedForContainer = function(e) {
      var r = e === lt.LEFT ? w.PINNED_LEFT : e === lt.RIGHT ? w.PINNED_RIGHT : null;
      return r;
    }, t.prototype.getInitialRowClasses = function(e) {
      var r = this.getPinnedForContainer(e), o = {
        rowNode: this.rowNode,
        rowFocused: this.rowFocused,
        fadeRowIn: this.fadeRowIn,
        rowIsEven: this.rowNode.rowIndex % 2 === 0,
        rowLevel: this.rowLevel,
        fullWidthRow: this.isFullWidth(),
        firstRowOnPage: this.isFirstRowOnPage(),
        lastRowOnPage: this.isLastRowOnPage(),
        printLayout: this.printLayout,
        expandable: this.rowNode.isExpandable(),
        scope: this.scope,
        pinned: r
      };
      return this.beans.rowCssClassCalculator.getInitialRowClasses(o);
    }, t.prototype.processStylesFromGridOptions = function() {
      var e = this.beans.gridOptionsWrapper.getRowStyle();
      if (e && typeof e == "function") {
        console.warn("AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead");
        return;
      }
      var r = this.beans.gridOptionsWrapper.getRowStyleFunc(), o;
      if (r) {
        var i = {
          data: this.rowNode.data,
          node: this.rowNode,
          rowIndex: this.rowNode.rowIndex,
          $scope: this.scope,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext()
        };
        o = r(i);
      }
      return Object.assign({}, e, o);
    }, t.prototype.onRowSelected = function() {
      var e = this, r = this.rowNode.isSelected();
      this.allRowGuis.forEach(function(o) {
        o.rowComp.addOrRemoveCssClass("ag-row-selected", r), Zr(o.element, r ? !0 : void 0);
        var i = e.createAriaLabel();
        Tr(o.element, i ?? "");
      });
    }, t.prototype.createAriaLabel = function() {
      var e = this.rowNode.isSelected();
      if (!(e && this.beans.gridOptionsWrapper.isSuppressRowDeselection())) {
        var r = this.beans.gridOptionsWrapper.getLocaleTextFunc(), o = r(e ? "ariaRowDeselect" : "ariaRowSelect", "Press SPACE to " + (e ? "deselect" : "select") + " this row.");
        return o;
      }
    }, t.prototype.isUseAnimationFrameForCreate = function() {
      return this.useAnimationFrameForCreate;
    }, t.prototype.addHoverFunctionality = function(e) {
      var r = this;
      this.active && (this.addManagedListener(e, "mouseenter", function() {
        return r.rowNode.onMouseEnter();
      }), this.addManagedListener(e, "mouseleave", function() {
        return r.rowNode.onMouseLeave();
      }), this.addManagedListener(this.rowNode, te.EVENT_MOUSE_ENTER, function() {
        r.beans.gridOptionsWrapper.isSuppressRowHoverHighlight() || e.classList.add("ag-row-hover");
      }), this.addManagedListener(this.rowNode, te.EVENT_MOUSE_LEAVE, function() {
        e.classList.remove("ag-row-hover");
      }));
    }, t.prototype.roundRowTopToBounds = function(e) {
      var r = this.beans.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.applyPaginationOffset(o.top, !0) - 100, s = this.applyPaginationOffset(o.bottom, !0) + 100;
      return Math.min(Math.max(i, e), s);
    }, t.prototype.getFrameworkOverrides = function() {
      return this.beans.frameworkOverrides;
    }, t.prototype.onRowHeightChanged = function() {
      if (this.rowNode.rowHeight != null) {
        var e = this.beans.gridOptionsWrapper.isGetRowHeightFunction(), r = this.rowNode.rowHeight, o = this.beans.gridOptionsWrapper.getDefaultRowHeight();
        this.allRowGuis.forEach(function(i) {
          i.element.style.height = r + "px", e && i.element.style.setProperty("--ag-row-height", Math.min(o, r) - 2 + "px");
        });
      }
    }, t.prototype.addEventListener = function(e, r) {
      (e === "renderedRowRemoved" || e === "rowRemoved") && (e = v.EVENT_VIRTUAL_ROW_REMOVED, console.warn("AG Grid: Since version 11, event renderedRowRemoved is now called " + v.EVENT_VIRTUAL_ROW_REMOVED)), n.prototype.addEventListener.call(this, e, r);
    }, t.prototype.removeEventListener = function(e, r) {
      (e === "renderedRowRemoved" || e === "rowRemoved") && (e = v.EVENT_VIRTUAL_ROW_REMOVED, console.warn("AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called " + v.EVENT_VIRTUAL_ROW_REMOVED)), n.prototype.removeEventListener.call(this, e, r);
    }, t.prototype.destroyFirstPass = function() {
      this.active = !1, this.setupRemoveAnimation();
      var e = this.createRowEvent(v.EVENT_VIRTUAL_ROW_REMOVED);
      this.dispatchEvent(e), this.beans.eventService.dispatchEvent(e), n.prototype.destroy.call(this);
    }, t.prototype.setupRemoveAnimation = function() {
      var e = this.rowNode.rowTop != null;
      if (e) {
        var r = this.roundRowTopToBounds(this.rowNode.rowTop);
        this.setRowTop(r);
      } else
        this.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass("ag-opacity-zero", !0);
        });
    }, t.prototype.destroySecondPass = function() {
      this.allRowGuis.length = 0;
      var e = function(r) {
        return r.list.forEach(function(o) {
          return o.destroy();
        }), { list: [], map: {} };
      };
      this.centerCellCtrls = e(this.centerCellCtrls), this.leftCellCtrls = e(this.leftCellCtrls), this.rightCellCtrls = e(this.rightCellCtrls);
    }, t.prototype.setFocusedClasses = function() {
      var e = this;
      this.allRowGuis.forEach(function(r) {
        r.rowComp.addOrRemoveCssClass("ag-row-focus", e.rowFocused), r.rowComp.addOrRemoveCssClass("ag-row-no-focus", !e.rowFocused);
      });
    }, t.prototype.onCellFocusChanged = function() {
      var e = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);
      e !== this.rowFocused && (this.rowFocused = e, this.setFocusedClasses()), !e && this.editingRow && this.stopEditing(!1);
    }, t.prototype.onPaginationChanged = function() {
      var e = this.beans.paginationProxy.getCurrentPage();
      this.paginationPage !== e && (this.paginationPage = e, this.onTopChanged()), this.refreshFirstAndLastRowStyles();
    }, t.prototype.onTopChanged = function() {
      this.setRowTop(this.rowNode.rowTop);
    }, t.prototype.onPaginationPixelOffsetChanged = function() {
      this.onTopChanged();
    }, t.prototype.applyPaginationOffset = function(e, r) {
      if (r === void 0 && (r = !1), this.rowNode.isRowPinned())
        return e;
      var o = this.beans.paginationProxy.getPixelOffset(), i = r ? 1 : -1;
      return e + o * i;
    }, t.prototype.setRowTop = function(e) {
      if (!this.printLayout && O(e)) {
        var r = this.applyPaginationOffset(e), o = this.rowNode.isRowPinned() ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r), i = o + "px";
        this.setRowTopStyle(i);
      }
    }, t.prototype.getInitialRowTop = function() {
      return this.initialTop;
    }, t.prototype.getInitialTransform = function() {
      return this.initialTransform;
    }, t.prototype.setInitialRowTop = function() {
      if (this.printLayout)
        return "";
      var e = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop, r = this.applyPaginationOffset(e), o = this.rowNode.isRowPinned() ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r), i = o + "px", s = this.beans.gridOptionsWrapper.isSuppressRowTransform();
      s ? this.initialTop = i : this.initialTransform = "translateY(" + i + ")";
    }, t.prototype.setRowTopStyle = function(e) {
      var r = this.beans.gridOptionsWrapper.isSuppressRowTransform();
      this.allRowGuis.forEach(function(o) {
        return r ? o.rowComp.setTop(e) : o.rowComp.setTransform("translateY(" + e + ")");
      });
    }, t.prototype.getRowNode = function() {
      return this.rowNode;
    }, t.prototype.getCellCtrl = function(e) {
      var r = null;
      return this.getAllCellCtrls().forEach(function(o) {
        o.getColumn() == e && (r = o);
      }), r != null || this.getAllCellCtrls().forEach(function(o) {
        o.getColSpanningList().indexOf(e) >= 0 && (r = o);
      }), r;
    }, t.prototype.onRowIndexChanged = function() {
      this.rowNode.rowIndex != null && (this.onCellFocusChanged(), this.updateRowIndexes(), this.postProcessCss());
    }, t.prototype.updateRowIndexes = function() {
      var e = this.rowNode.getRowIndexString(), r = this.beans.headerNavigationService.getHeaderRowCount(), o = this.rowNode.rowIndex % 2 === 0, i = r + this.rowNode.rowIndex + 1;
      this.allRowGuis.forEach(function(s) {
        s.rowComp.setRowIndex(e), s.rowComp.addOrRemoveCssClass("ag-row-even", o), s.rowComp.addOrRemoveCssClass("ag-row-odd", !o), fa(s.element, i);
      });
    }, t.prototype.getPinnedLeftRowElement = function() {
      return this.leftGui ? this.leftGui.element : void 0;
    }, t.prototype.getPinnedRightRowElement = function() {
      return this.rightGui ? this.rightGui.element : void 0;
    }, t.prototype.getBodyRowElement = function() {
      return this.centerGui ? this.centerGui.element : void 0;
    }, t.prototype.getFullWidthRowElement = function() {
      return this.fullWidthGui ? this.fullWidthGui.element : void 0;
    }, t.DOM_DATA_KEY_ROW_CTRL = "renderedRow", t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var my = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), dt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, _y = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Vl = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(_y(arguments[t]));
  return n;
}, ec = (
  /** @class */
  function(n) {
    my(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.destroyFuncsForColumnListeners = [], e.rowCtrlsByRowIndex = {}, e.zombieRowCtrls = {}, e.allRowCtrls = [], e.topRowCtrls = [], e.bottomRowCtrls = [], e.refreshInProgress = !1, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function() {
        e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl(), e.initialise();
      });
    }, t.prototype.initialise = function() {
      this.addManagedListener(this.eventService, v.EVENT_PAGINATION_CHANGED, this.onPageLoaded.bind(this)), this.addManagedListener(this.eventService, v.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_BODY_SCROLL, this.redrawAfterScroll.bind(this)), this.addManagedListener(this.eventService, v.EVENT_BODY_HEIGHT_CHANGED, this.redrawAfterScroll.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.registerCellEventListeners(), this.initialiseCache(), this.printLayout = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT, this.embedFullWidthRows = this.printLayout || this.gridOptionsWrapper.isEmbedFullWidthRows(), this.redrawAfterModelUpdate();
    }, t.prototype.initialiseCache = function() {
      if (this.gridOptionsWrapper.isKeepDetailRows()) {
        var e = this.gridOptionsWrapper.getKeepDetailRowsCount(), r = e ?? 3;
        this.cachedRowCtrls = new wy(r);
      }
    }, t.prototype.getRowCtrls = function() {
      return this.allRowCtrls;
    }, t.prototype.updateAllRowCtrls = function() {
      var e = Lt(this.rowCtrlsByRowIndex);
      this.gridOptionsWrapper.isEnsureDomOrder() && e.sort(function(i, s) {
        return i.getRowNode().rowIndex - s.getRowNode.rowIndex;
      });
      var r = Lt(this.zombieRowCtrls), o = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];
      this.allRowCtrls = Vl(e, r, o);
    }, t.prototype.registerCellEventListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_CELL_FOCUSED, function(o) {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onCellFocused(o);
        }), e.getFullWidthRowCtrls().forEach(function(i) {
          i.onFullWidthRowFocused(o);
        });
      }), this.addManagedListener(this.eventService, v.EVENT_FLASH_CELLS, function(o) {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onFlashCells(o);
        });
      }), this.addManagedListener(this.eventService, v.EVENT_COLUMN_HOVER_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.onColumnHover();
        });
      }), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.onDisplayedColumnsChanged();
        });
      }), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function() {
        e.printLayout && e.getAllCellCtrls().forEach(function(o) {
          return o.onLeftChanged();
        });
      });
      var r = this.gridOptionsWrapper.isEnableRangeSelection();
      r && (this.addManagedListener(this.eventService, v.EVENT_RANGE_SELECTION_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.onRangeSelectionChanged();
        });
      }), this.addManagedListener(this.eventService, v.EVENT_COLUMN_MOVED, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.updateRangeBordersIfRangeCount();
        });
      }), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PINNED, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.updateRangeBordersIfRangeCount();
        });
      }), this.addManagedListener(this.eventService, v.EVENT_COLUMN_VISIBLE, function() {
        e.getAllCellCtrls().forEach(function(o) {
          return o.updateRangeBordersIfRangeCount();
        });
      })), this.refreshListenersToColumnsForCellComps(), this.addManagedListener(this.eventService, v.EVENT_GRID_COLUMNS_CHANGED, this.refreshListenersToColumnsForCellComps.bind(this)), this.addDestroyFunc(this.removeGridColumnListeners.bind(this));
    }, t.prototype.removeGridColumnListeners = function() {
      this.destroyFuncsForColumnListeners.forEach(function(e) {
        return e();
      }), this.destroyFuncsForColumnListeners.length = 0;
    }, t.prototype.refreshListenersToColumnsForCellComps = function() {
      var e = this;
      this.removeGridColumnListeners();
      var r = this.columnModel.getAllGridColumns();
      r && r.forEach(function(o) {
        var i = function(p) {
          e.getAllCellCtrls().forEach(function(c) {
            c.getColumn() === o && p(c);
          });
        }, s = function() {
          i(function(p) {
            return p.onLeftChanged();
          });
        }, a = function() {
          i(function(p) {
            return p.onWidthChanged();
          });
        }, l = function() {
          i(function(p) {
            return p.onFirstRightPinnedChanged();
          });
        }, u = function() {
          i(function(p) {
            return p.onLastLeftPinnedChanged();
          });
        };
        o.addEventListener(pe.EVENT_LEFT_CHANGED, s), o.addEventListener(pe.EVENT_WIDTH_CHANGED, a), o.addEventListener(pe.EVENT_FIRST_RIGHT_PINNED_CHANGED, l), o.addEventListener(pe.EVENT_LAST_LEFT_PINNED_CHANGED, u), e.destroyFuncsForColumnListeners.push(function() {
          o.removeEventListener(pe.EVENT_LEFT_CHANGED, s), o.removeEventListener(pe.EVENT_WIDTH_CHANGED, a), o.removeEventListener(pe.EVENT_FIRST_RIGHT_PINNED_CHANGED, l), o.removeEventListener(pe.EVENT_LAST_LEFT_PINNED_CHANGED, u);
        });
      });
    }, t.prototype.onDomLayoutChanged = function() {
      var e = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT, r = e || this.gridOptionsWrapper.isEmbedFullWidthRows(), o = r !== this.embedFullWidthRows || this.printLayout !== e;
      this.printLayout = e, this.embedFullWidthRows = r, o && this.redrawAfterModelUpdate();
    }, t.prototype.datasourceChanged = function() {
      this.firstRenderedRow = 0, this.lastRenderedRow = -1;
      var e = Object.keys(this.rowCtrlsByRowIndex);
      this.removeRowCtrls(e);
    }, t.prototype.onPageLoaded = function(e) {
      var r = {
        recycleRows: e.keepRenderedRows,
        animate: e.animate,
        newData: e.newData,
        newPage: e.newPage,
        // because this is a model updated event (not pinned rows), we
        // can skip updating the pinned rows. this is needed so that if user
        // is doing transaction updates, the pinned rows are not getting constantly
        // trashed - or editing cells in pinned rows are not refreshed and put into read mode
        onlyBody: !0
      };
      this.redrawAfterModelUpdate(r);
    }, t.prototype.getAllCellsForColumn = function(e) {
      var r = [];
      return this.getAllRowCtrls().forEach(function(o) {
        var i = o.getCellElement(e);
        i && r.push(i);
      }), r;
    }, t.prototype.refreshFloatingRowComps = function() {
      this.refreshFloatingRows(this.topRowCtrls, this.pinnedRowModel.getPinnedTopRowData()), this.refreshFloatingRows(this.bottomRowCtrls, this.pinnedRowModel.getPinnedBottomRowData());
    }, t.prototype.getTopRowCtrls = function() {
      return this.topRowCtrls;
    }, t.prototype.getBottomRowCtrls = function() {
      return this.bottomRowCtrls;
    }, t.prototype.refreshFloatingRows = function(e, r) {
      var o = this;
      e.forEach(function(i) {
        i.destroyFirstPass(), i.destroySecondPass();
      }), e.length = 0, r && r.forEach(function(i) {
        var s = new lr(o.$scope, i, o.beans, !1, !1, o.printLayout);
        e.push(s);
      });
    }, t.prototype.onPinnedRowDataChanged = function() {
      var e = {
        recycleRows: !0
      };
      this.redrawAfterModelUpdate(e);
    }, t.prototype.getRenderedIndexesForRowNodes = function(e) {
      var r = [];
      return K(e) || ge(this.rowCtrlsByRowIndex, function(o, i) {
        var s = i.getRowNode();
        e.indexOf(s) >= 0 && r.push(o);
      }), r;
    }, t.prototype.redrawRows = function(e) {
      var r = e != null && e.length > 0;
      if (r) {
        var o = this.getRenderedIndexesForRowNodes(e);
        this.removeRowCtrls(o);
      }
      this.redrawAfterModelUpdate({
        recycleRows: r
      });
    }, t.prototype.getCellToRestoreFocusToAfterRefresh = function(e) {
      var r = e.suppressKeepFocus ? null : this.focusService.getFocusCellToUseAfterRefresh();
      if (r == null)
        return null;
      var o = this.gridOptionsWrapper.getDocument(), i = o.activeElement, s = this.gridOptionsWrapper.getDomData(i, ar.DOM_DATA_KEY_CELL_CTRL), a = this.gridOptionsWrapper.getDomData(i, lr.DOM_DATA_KEY_ROW_CTRL), l = s || a;
      return l ? r : null;
    }, t.prototype.redrawAfterModelUpdate = function(e) {
      e === void 0 && (e = {}), this.getLockOnRefresh();
      var r = this.getCellToRestoreFocusToAfterRefresh(e);
      this.updateContainerHeights(), this.scrollToTopIfNewData(e);
      var o = !this.printLayout && !!e.recycleRows, i = e.animate && this.gridOptionsWrapper.isAnimateRows(), s = o ? this.recycleRows() : null;
      o || this.removeAllRowComps();
      var a = function() {
        if (r == null || s == null)
          return !1;
        var u = !1;
        return ge(s, function(p, c) {
          var d = c.getRowNode(), f = d.rowIndex == r.rowIndex, g = d.rowPinned == r.rowPinned;
          f && g && (u = !0);
        }), u;
      }, l = a();
      this.redraw(s, i), e.onlyBody || this.refreshFloatingRowComps(), this.dispatchDisplayedRowsChanged(), l || this.restoreFocusedCell(r), this.releaseLockOnRefresh();
    }, t.prototype.scrollToTopIfNewData = function(e) {
      var r = e.newData || e.newPage, o = this.gridOptionsWrapper.isSuppressScrollOnNewData();
      r && !o && this.gridBodyCtrl.getScrollFeature().scrollToTop();
    }, t.prototype.updateContainerHeights = function() {
      if (this.printLayout) {
        this.rowContainerHeightService.setModelHeight(null);
        return;
      }
      var e = this.paginationProxy.getCurrentPageHeight();
      e === 0 && (e = 1), this.rowContainerHeightService.setModelHeight(e);
    }, t.prototype.getLockOnRefresh = function() {
      if (this.refreshInProgress)
        throw new Error("AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.");
      this.refreshInProgress = !0;
    }, t.prototype.releaseLockOnRefresh = function() {
      this.refreshInProgress = !1;
    }, t.prototype.restoreFocusedCell = function(e) {
      e && this.focusService.setFocusedCell(e.rowIndex, e.column, e.rowPinned, !0);
    }, t.prototype.stopEditing = function(e) {
      e === void 0 && (e = !1), this.getAllRowCtrls().forEach(function(r) {
        r.stopEditing(e);
      });
    }, t.prototype.onNewColumnsLoaded = function() {
      this.getAllCellCtrls().forEach(function(e) {
        return e.onNewColumnsLoaded();
      });
    }, t.prototype.getAllCellCtrls = function() {
      var e = [];
      return this.getAllRowCtrls().forEach(function(r) {
        return e = e.concat(r.getAllCellCtrls());
      }), e;
    }, t.prototype.getAllRowCtrls = function() {
      var e = this, r = Vl(this.topRowCtrls, this.bottomRowCtrls);
      return Object.keys(this.rowCtrlsByRowIndex).forEach(function(o) {
        return r.push(e.rowCtrlsByRowIndex[o]);
      }), r;
    }, t.prototype.addRenderedRowListener = function(e, r, o) {
      var i = this.rowCtrlsByRowIndex[r];
      i && i.addEventListener(e, o);
    }, t.prototype.flashCells = function(e) {
      e === void 0 && (e = {});
      var r = e.flashDelay, o = e.fadeDelay;
      this.getCellCtrls(e.rowNodes, e.columns).forEach(function(i) {
        return i.flashCell({ flashDelay: r, fadeDelay: o });
      });
    }, t.prototype.refreshCells = function(e) {
      e === void 0 && (e = {});
      var r = {
        forceRefresh: e.force,
        newData: !1,
        suppressFlash: e.suppressFlash
      };
      this.getCellCtrls(e.rowNodes, e.columns).forEach(function(o) {
        if (o.refreshShouldDestroy()) {
          var i = o.getRowCtrl();
          i && i.refreshCell(o);
        } else
          o.refreshCell(r);
      }), this.getFullWidthRowCtrls(e.rowNodes).forEach(function(o) {
        o.refreshFullWidth();
      });
    }, t.prototype.getCellRendererInstances = function(e) {
      var r = this.getCellCtrls(e.rowNodes, e.columns).map(function(o) {
        return o.getCellRenderer();
      }).filter(function(o) {
        return o != null;
      });
      return r;
    }, t.prototype.getCellEditorInstances = function(e) {
      var r = [];
      return this.getCellCtrls(e.rowNodes, e.columns).forEach(function(o) {
        var i = o.getCellEditor();
        i && r.push(i);
      }), r;
    }, t.prototype.getEditingCells = function() {
      var e = [];
      return this.getAllCellCtrls().forEach(function(r) {
        if (r.isEditing()) {
          var o = r.getCellPosition();
          e.push(o);
        }
      }), e;
    }, t.prototype.mapRowNodes = function(e) {
      if (e) {
        var r = {
          top: {},
          bottom: {},
          normal: {}
        };
        return e.forEach(function(o) {
          var i = o.id;
          o.rowPinned === w.PINNED_TOP ? r.top[i] = o : o.rowPinned === w.PINNED_BOTTOM ? r.bottom[i] = o : r.normal[i] = o;
        }), r;
      }
    }, t.prototype.isRowInMap = function(e, r) {
      var o = e.id, i = e.rowPinned;
      return i === w.PINNED_BOTTOM ? r.bottom[o] != null : i === w.PINNED_TOP ? r.top[o] != null : r.normal[o] != null;
    }, t.prototype.getCellCtrls = function(e, r) {
      var o = this, i = this.mapRowNodes(e), s = [], a;
      O(r) && (a = {}, r.forEach(function(u) {
        var p = o.columnModel.getGridColumn(u);
        O(p) && (a[p.getId()] = !0);
      }));
      var l = function(u) {
        var p = u.getRowNode();
        i != null && !o.isRowInMap(p, i) || u.getAllCellCtrls().forEach(function(c) {
          var d = c.getColumn().getId(), f = a && !a[d];
          f || s.push(c);
        });
      };
      return ge(this.rowCtrlsByRowIndex, function(u, p) {
        l(p);
      }), this.topRowCtrls && this.topRowCtrls.forEach(l), this.bottomRowCtrls && this.bottomRowCtrls.forEach(l), s;
    }, t.prototype.destroy = function() {
      this.removeAllRowComps(), n.prototype.destroy.call(this);
    }, t.prototype.removeAllRowComps = function() {
      var e = Object.keys(this.rowCtrlsByRowIndex);
      this.removeRowCtrls(e);
    }, t.prototype.recycleRows = function() {
      var e = [];
      ge(this.rowCtrlsByRowIndex, function(o, i) {
        var s = i.getRowNode().id == null;
        s && e.push(o);
      }), this.removeRowCtrls(e);
      var r = {};
      return ge(this.rowCtrlsByRowIndex, function(o, i) {
        var s = i.getRowNode();
        r[s.id] = i;
      }), this.rowCtrlsByRowIndex = {}, r;
    }, t.prototype.removeRowCtrls = function(e) {
      var r = this;
      e.forEach(function(o) {
        var i = r.rowCtrlsByRowIndex[o];
        i && (i.destroyFirstPass(), i.destroySecondPass()), delete r.rowCtrlsByRowIndex[o];
      });
    }, t.prototype.redrawAfterScroll = function() {
      this.getLockOnRefresh(), this.redraw(null, !1, !0), this.releaseLockOnRefresh(), this.dispatchDisplayedRowsChanged();
    }, t.prototype.removeRowCompsNotToDraw = function(e) {
      var r = {};
      e.forEach(function(s) {
        return r[s] = !0;
      });
      var o = Object.keys(this.rowCtrlsByRowIndex), i = o.filter(function(s) {
        return !r[s];
      });
      this.removeRowCtrls(i);
    }, t.prototype.calculateIndexesToDraw = function(e) {
      var r = this, o = Sp(this.firstRenderedRow, this.lastRenderedRow), i = function(s, a) {
        var l = a.getRowNode().rowIndex;
        l != null && (l < r.firstRenderedRow || l > r.lastRenderedRow) && r.doNotUnVirtualiseRow(a) && o.push(l);
      };
      return ge(this.rowCtrlsByRowIndex, i), ge(e, i), o.sort(function(s, a) {
        return s - a;
      }), o;
    }, t.prototype.redraw = function(e, r, o) {
      var i = this;
      r === void 0 && (r = !1), o === void 0 && (o = !1), this.rowContainerHeightService.updateOffset(), this.workOutFirstAndLastRowsToRender();
      var s = this.calculateIndexesToDraw(e);
      if (this.removeRowCompsNotToDraw(s), this.printLayout && (r = !1), s.forEach(function(l) {
        var u = i.createOrUpdateRowCtrl(l, e, r, o);
        O(u);
      }), e) {
        var a = o && !this.gridOptionsWrapper.isSuppressAnimationFrame() && !this.printLayout;
        a ? this.beans.animationFrameService.addDestroyTask(function() {
          i.destroyRowCtrls(e, r), i.updateAllRowCtrls(), i.dispatchDisplayedRowsChanged();
        }) : this.destroyRowCtrls(e, r);
      }
      this.updateAllRowCtrls(), this.checkAngularCompile(), this.gridBodyCtrl.updateRowCount();
    }, t.prototype.dispatchDisplayedRowsChanged = function() {
      var e = { type: v.EVENT_DISPLAYED_ROWS_CHANGED };
      this.eventService.dispatchEvent(e);
    }, t.prototype.onDisplayedColumnsChanged = function() {
      var e = this.columnModel.isPinningLeft(), r = this.columnModel.isPinningRight(), o = this.pinningLeft !== e || r !== this.pinningRight;
      o && (this.pinningLeft = e, this.pinningRight = r, this.embedFullWidthRows && this.redrawFullWidthEmbeddedRows());
    }, t.prototype.redrawFullWidthEmbeddedRows = function() {
      var e = [];
      this.getFullWidthRowCtrls().forEach(function(r) {
        var o = r.getRowNode().rowIndex;
        e.push(o.toString());
      }), this.refreshFloatingRowComps(), this.removeRowCtrls(e), this.redrawAfterScroll();
    }, t.prototype.getFullWidthRowCtrls = function(e) {
      var r = this, o = this.mapRowNodes(e);
      return Lt(this.rowCtrlsByRowIndex).filter(function(i) {
        if (!i.isFullWidth())
          return !1;
        var s = i.getRowNode();
        return !(o != null && !r.isRowInMap(s, o));
      });
    }, t.prototype.refreshFullWidthRows = function(e) {
      var r = [], o = !!e, i = o ? {} : void 0;
      o && i && e.forEach(function(s) {
        return i[s.id] = !0;
      }), this.getFullWidthRowCtrls().forEach(function(s) {
        var a = s.getRowNode();
        if (o && i) {
          var l = a.level > 0 && a.parent ? a.parent.id : void 0, u = !i[a.id] && !i[l];
          if (u)
            return;
        }
        var p = s.refreshFullWidth();
        if (!p) {
          var c = s.getRowNode().rowIndex;
          r.push(c.toString());
        }
      }), this.removeRowCtrls(r), this.redrawAfterScroll();
    }, t.prototype.createOrUpdateRowCtrl = function(e, r, o, i) {
      var s, a = this.rowCtrlsByRowIndex[e];
      a || (s = this.paginationProxy.getRow(e), O(s) && O(r) && r[s.id] && s.alreadyRendered && (a = r[s.id], r[s.id] = null));
      var l = !a;
      if (l)
        if (s || (s = this.paginationProxy.getRow(e)), O(s))
          a = this.createRowCon(s, o, i);
        else
          return;
      return s && (s.alreadyRendered = !0), this.rowCtrlsByRowIndex[e] = a, a;
    }, t.prototype.destroyRowCtrls = function(e, r) {
      var o = this, i = [];
      ge(e, function(s, a) {
        if (a) {
          if (o.cachedRowCtrls && a.isCacheable()) {
            o.cachedRowCtrls.addRow(a);
            return;
          }
          a.destroyFirstPass(), r ? (o.zombieRowCtrls[a.getInstanceId()] = a, i.push(function() {
            a.destroySecondPass(), delete o.zombieRowCtrls[a.getInstanceId()];
          })) : a.destroySecondPass();
        }
      }), r && (i.push(function() {
        o.updateAllRowCtrls(), o.dispatchDisplayedRowsChanged();
      }), Iu(i));
    }, t.prototype.checkAngularCompile = function() {
      var e = this;
      this.gridOptionsWrapper.isAngularCompileRows() && window.setTimeout(function() {
        e.$scope.$apply();
      }, 0);
    }, t.prototype.workOutFirstAndLastRowsToRender = function() {
      var e = this, r, o;
      if (!this.paginationProxy.isRowsToRender())
        r = 0, o = -1;
      else if (this.printLayout)
        r = this.paginationProxy.getPageFirstRow(), o = this.paginationProxy.getPageLastRow();
      else {
        var i = this.gridOptionsWrapper.getRowBufferInPixels(), s = this.ctrlsService.getGridBodyCtrl(), a = this.gridOptionsWrapper.isSuppressRowVirtualisation(), l = !1, u = void 0, p = void 0;
        do {
          var c = this.paginationProxy.getPixelOffset(), d = this.paginationProxy.getCurrentPagePixelRange(), f = d.pageFirstPixel, g = d.pageLastPixel, y = this.rowContainerHeightService.getDivStretchOffset();
          if (a)
            u = f + y, p = g + y;
          else {
            var C = s.getScrollFeature().getVScrollPosition(), m = C.top, _ = C.bottom;
            u = Math.max(m + c - i, f) + y, p = Math.min(_ + c + i, g) + y;
          }
          l = this.ensureAllRowsInRangeHaveHeightsCalculated(u, p);
        } while (l);
        var E = this.paginationProxy.getRowIndexAtPixel(u), S = this.paginationProxy.getRowIndexAtPixel(p), b = this.paginationProxy.getPageFirstRow(), x = this.paginationProxy.getPageLastRow();
        E < b && (E = b), S > x && (S = x), r = E, o = S;
      }
      var I = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_NORMAL, A = this.gridOptionsWrapper.isSuppressMaxRenderedRowRestriction(), M = Math.max(this.gridOptionsWrapper.getRowBuffer(), 500);
      I && !A && o - r > M && (o = r + M);
      var V = r !== this.firstRenderedRow, H = o !== this.lastRenderedRow;
      if (V || H) {
        this.firstRenderedRow = r, this.lastRenderedRow = o;
        var z = {
          type: v.EVENT_VIEWPORT_CHANGED,
          firstRow: r,
          lastRow: o,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(z);
      }
      if (this.paginationProxy.isRowsToRender()) {
        var $ = {
          type: v.EVENT_FIRST_DATA_RENDERED,
          firstRow: r,
          lastRow: o,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        window.setTimeout(function() {
          return e.eventService.dispatchEventOnce($);
        }, 50);
      }
    }, t.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function(e, r) {
      var o = this.paginationProxy.ensureRowHeightsValid(e, r, -1, -1);
      return o && this.updateContainerHeights(), o;
    }, t.prototype.getFirstVirtualRenderedRow = function() {
      return this.firstRenderedRow;
    }, t.prototype.getLastVirtualRenderedRow = function() {
      return this.lastRenderedRow;
    }, t.prototype.doNotUnVirtualiseRow = function(e) {
      var r = !1, o = !0, i = e.getRowNode(), s = this.focusService.isRowNodeFocused(i), a = e.isEditing(), l = i.detail, u = s || a || l;
      if (!u)
        return r;
      var p = this.paginationProxy.isRowPresent(i);
      return p ? o : r;
    }, t.prototype.createRowCon = function(e, r, o) {
      var i = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(e) : null;
      if (i)
        return i;
      var s = this.gridOptionsWrapper.isSuppressAnimationFrame(), a = o && !s && !this.printLayout, l = new lr(this.$scope, e, this.beans, r, a, this.printLayout);
      return l;
    }, t.prototype.getRenderedNodes = function() {
      var e = this.rowCtrlsByRowIndex;
      return Object.keys(e).map(function(r) {
        return e[r].getRowNode();
      });
    }, t.prototype.getRowByPosition = function(e) {
      var r;
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          r = this.topRowCtrls[e.rowIndex];
          break;
        case w.PINNED_BOTTOM:
          r = this.bottomRowCtrls[e.rowIndex];
          break;
        default:
          r = this.rowCtrlsByRowIndex[e.rowIndex];
          break;
      }
      return r;
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case w.PINNED_BOTTOM:
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, t.prototype.isRangeInRenderedViewport = function(e, r) {
      var o = e == null || r == null;
      if (o)
        return !1;
      var i = e > this.lastRenderedRow, s = r < this.firstRenderedRow, a = !s && !i;
      return a;
    }, dt([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), dt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), dt([
      h("$scope")
    ], t.prototype, "$scope", void 0), dt([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), dt([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), dt([
      h("focusService")
    ], t.prototype, "focusService", void 0), dt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), dt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), dt([
      h("beans")
    ], t.prototype, "beans", void 0), dt([
      h("rowContainerHeightService")
    ], t.prototype, "rowContainerHeightService", void 0), dt([
      de("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), dt([
      G
    ], t.prototype, "postConstruct", null), t = dt([
      U("rowRenderer")
    ], t), t;
  }(D)
), wy = (
  /** @class */
  function() {
    function n(t) {
      this.entriesMap = {}, this.entriesList = [], this.maxCount = t;
    }
    return n.prototype.addRow = function(t) {
      if (this.entriesMap[t.getRowNode().id] = t, this.entriesList.push(t), t.setCached(!0), this.entriesList.length > this.maxCount) {
        var e = this.entriesList[0];
        e.destroyFirstPass(), e.destroySecondPass(), this.removeFromCache(e);
      }
    }, n.prototype.getRow = function(t) {
      if (t == null || t.id == null)
        return null;
      var e = this.entriesMap[t.id];
      if (!e)
        return null;
      this.removeFromCache(e), e.setCached(!1);
      var r = e.getRowNode() != t;
      return r ? null : e;
    }, n.prototype.removeFromCache = function(t) {
      var e = t.getRowNode().id;
      delete this.entriesMap[e], Ye(this.entriesList, t);
    }, n.prototype.getEntries = function() {
      return this.entriesList;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ey = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ba = (
  /** @class */
  function(n) {
    Ey(t, n);
    function t(e, r) {
      var o = n.call(this, e) || this;
      return o.ctrl = r, o;
    }
    return t.prototype.getCtrl = function() {
      return this.ctrl;
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ry = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $i = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Sy = (
  /** @class */
  function(n) {
    Ry(t, n);
    function t(e) {
      var r = n.call(this, t.TEMPLATE, e) || this;
      return r.headerCompVersion = 0, r.column = e.getColumnGroupChild(), r.pinned = e.getPinned(), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), o = function(a, l, u) {
        var p = u || r;
        l != null && l != "" ? p.setAttribute(a, l) : p.removeAttribute(a);
      }, i = {
        setWidth: function(a) {
          return r.style.width = a;
        },
        addOrRemoveCssClass: function(a, l) {
          return e.addOrRemoveCssClass(a, l);
        },
        setAriaSort: function(a) {
          return a ? wp(r, a) : Ep(r);
        },
        setColId: function(a) {
          return o("col-id", a);
        },
        setTitle: function(a) {
          return o("title", a);
        },
        setAriaDescribedBy: function(a) {
          return ii(r, a);
        },
        setUserCompDetails: function(a) {
          return e.setUserCompDetails(a);
        },
        getUserCompInstance: function() {
          return e.headerComp;
        }
      };
      this.ctrl.setComp(i, this.getGui(), this.eResize);
      var s = this.ctrl.getSelectAllGui();
      this.eResize.insertAdjacentElement("afterend", s);
    }, t.prototype.destroyHeaderComp = function() {
      this.headerComp && (this.getGui().removeChild(this.headerCompGui), this.headerComp = this.destroyBean(this.headerComp), this.headerCompGui = void 0);
    }, t.prototype.setUserCompDetails = function(e) {
      var r = this;
      this.headerCompVersion++;
      var o = this.headerCompVersion;
      e.newAgStackInstance().then(function(i) {
        return r.afterCompCreated(o, i);
      });
    }, t.prototype.afterCompCreated = function(e, r) {
      if (e != this.headerCompVersion || !this.isAlive()) {
        this.destroyBean(r);
        return;
      }
      this.destroyHeaderComp(), this.headerComp = r, this.headerCompGui = r.getGui(), this.getGui().appendChild(this.headerCompGui), this.ctrl.setDragSource(this.headerCompGui);
    }, t.TEMPLATE = `<div class="ag-header-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`, $i([
      T("eResize")
    ], t.prototype, "eResize", void 0), $i([
      G
    ], t.prototype, "postConstruct", null), $i([
      ot
    ], t.prototype, "destroyHeaderComp", null), t;
  }(ba)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Oy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ki = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ty = (
  /** @class */
  function(n) {
    Oy(t, n);
    function t(e) {
      return n.call(this, t.TEMPLATE, e) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), o = function(s, a) {
        return a != null ? r.setAttribute(s, a) : r.removeAttribute(s);
      }, i = {
        addOrRemoveCssClass: function(s, a) {
          return e.addOrRemoveCssClass(s, a);
        },
        addOrRemoveResizableCssClass: function(s, a) {
          return e.eResize.classList.toggle(s, a);
        },
        setWidth: function(s) {
          return r.style.width = s;
        },
        setColId: function(s) {
          return r.setAttribute("col-id", s);
        },
        setAriaExpanded: function(s) {
          return o("aria-expanded", s);
        },
        setTitle: function(s) {
          return o("title", s);
        },
        setUserCompDetails: function(s) {
          return e.setUserCompDetails(s);
        }
      };
      this.ctrl.setComp(i, r, this.eResize);
    }, t.prototype.setUserCompDetails = function(e) {
      var r = this;
      e.newAgStackInstance().then(function(o) {
        return r.afterHeaderCompCreated(o);
      });
    }, t.prototype.afterHeaderCompCreated = function(e) {
      var r = this, o = function() {
        return r.destroyBean(e);
      };
      if (!this.isAlive()) {
        o();
        return;
      }
      this.getGui().appendChild(e.getGui()), this.addDestroyFunc(o), this.ctrl.setDragSource(e.getGui());
    }, t.TEMPLATE = `<div class="ag-header-group-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`, Ki([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Ki([
      T("eResize")
    ], t.prototype, "eResize", void 0), Ki([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ba)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Py = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, tc = (
  /** @class */
  function(n) {
    Py(t, n);
    function t(e) {
      return n.call(this, t.TEMPLATE, e) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), o = {
        addOrRemoveCssClass: function(i, s) {
          return e.addOrRemoveCssClass(i, s);
        },
        addOrRemoveBodyCssClass: function(i, s) {
          return e.eFloatingFilterBody.classList.toggle(i, s);
        },
        addOrRemoveButtonWrapperCssClass: function(i, s) {
          return e.eButtonWrapper.classList.toggle(i, s);
        },
        setCompDetails: function(i) {
          return e.setCompDetails(i);
        },
        getFloatingFilterComp: function() {
          return e.compPromise;
        },
        setWidth: function(i) {
          return r.style.width = i;
        },
        setMenuIcon: function(i) {
          return e.eButtonShowMainFilter.appendChild(i);
        }
      };
      this.ctrl.setComp(o, r, this.eButtonShowMainFilter, this.eFloatingFilterBody);
    }, t.prototype.setCompDetails = function(e) {
      var r = this;
      this.compPromise = e.newAgStackInstance(), this.compPromise.then(function(o) {
        return r.afterCompCreated(o);
      });
    }, t.prototype.afterCompCreated = function(e) {
      var r = this;
      e && (this.addDestroyFunc(function() {
        return r.context.destroyBean(e);
      }), this.isAlive() && (this.eFloatingFilterBody.appendChild(e.getGui()), e.afterGuiAttached && e.afterGuiAttached()));
    }, t.TEMPLATE = `<div class="ag-header-cell ag-floating-filter" role="gridcell" tabindex="-1">
            <div ref="eFloatingFilterBody" role="presentation"></div>
            <div class="ag-floating-filter-button ag-hidden" ref="eButtonWrapper" role="presentation">
                <button type="button" aria-label="Open Filter Menu" class="ag-floating-filter-button-button" ref="eButtonShowMainFilter" tabindex="-1"></button>
            </div>
        </div>`, nn([
      T("eFloatingFilterBody")
    ], t.prototype, "eFloatingFilterBody", void 0), nn([
      T("eButtonWrapper")
    ], t.prototype, "eButtonWrapper", void 0), nn([
      T("eButtonShowMainFilter")
    ], t.prototype, "eButtonShowMainFilter", void 0), nn([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ba)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var by = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Xe;
(function(n) {
  n.COLUMN_GROUP = "group", n.COLUMN = "column", n.FLOATING_FILTER = "filter";
})(Xe || (Xe = {}));
var rc = (
  /** @class */
  function(n) {
    by(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.headerComps = {};
      var o = e.getType() == Xe.COLUMN_GROUP ? "ag-header-row-column-group" : e.getType() == Xe.FLOATING_FILTER ? "ag-header-row-column-filter" : "ag-header-row-column";
      return r.setTemplate(
        /* html */
        '<div class="ag-header-row ' + o + '" role="row"></div>'
      ), r.ctrl = e, r;
    }
    return t.prototype.init = function() {
      var e = this, r = {
        setTransform: function(o) {
          return e.getGui().style.transform = o;
        },
        setHeight: function(o) {
          return e.getGui().style.height = o;
        },
        setTop: function(o) {
          return e.getGui().style.top = o;
        },
        setHeaderCtrls: function(o) {
          return e.setHeaderCtrls(o);
        },
        setWidth: function(o) {
          return e.getGui().style.width = o;
        },
        setAriaRowIndex: function(o) {
          return fa(e.getGui(), o);
        }
      };
      this.ctrl.setComp(r);
    }, t.prototype.destroyHeaderCtrls = function() {
      this.setHeaderCtrls([]);
    }, t.prototype.setHeaderCtrls = function(e) {
      var r = this;
      if (this.isAlive()) {
        var o = this.headerComps;
        this.headerComps = {}, e.forEach(function(l) {
          var u = l.getInstanceId(), p = o[u];
          delete o[u], p == null && (p = r.createHeaderComp(l), r.getGui().appendChild(p.getGui())), r.headerComps[u] = p;
        }), ge(o, function(l, u) {
          r.getGui().removeChild(u.getGui()), r.destroyBean(u);
        });
        var i = this.gridOptionsWrapper.isEnsureDomOrder();
        if (i) {
          var s = Lt(this.headerComps);
          s.sort(function(l, u) {
            var p = l.getCtrl().getColumnGroupChild().getLeft(), c = u.getCtrl().getColumnGroupChild().getLeft();
            return p - c;
          });
          var a = s.map(function(l) {
            return l.getGui();
          });
          aa(this.getGui(), a);
        }
      }
    }, t.prototype.createHeaderComp = function(e) {
      var r;
      switch (this.ctrl.getType()) {
        case Xe.COLUMN_GROUP:
          r = new Ty(e);
          break;
        case Xe.FLOATING_FILTER:
          r = new tc(e);
          break;
        default:
          r = new Sy(e);
          break;
      }
      return this.createBean(r), r.setParentComponent(this), r;
    }, Bl([
      G
    ], t.prototype, "init", null), Bl([
      ot
    ], t.prototype, "destroyHeaderCtrls", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Dy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, It;
(function(n) {
  n[n.UP = 0] = "UP", n[n.DOWN = 1] = "DOWN", n[n.LEFT = 2] = "LEFT", n[n.RIGHT = 3] = "RIGHT";
})(It || (It = {}));
var oc = (
  /** @class */
  function(n) {
    Dy(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.gridBodyCon = r.gridBodyCtrl;
      });
    }, t.prototype.getHeaderRowCount = function() {
      var e = this.ctrlsService.getHeaderRowContainerCtrl();
      return e ? e.getRowCount() : 0;
    }, t.prototype.getHeaderRowType = function(e) {
      var r = this.ctrlsService.getHeaderRowContainerCtrl();
      if (r)
        return r.getRowType(e);
    }, t.prototype.navigateVertically = function(e, r, o) {
      if (r || (r = this.focusService.getFocusedHeader()), !r)
        return !1;
      var i = r.headerRowIndex, s = r.column, a = this.getHeaderRowCount(), l = e === It.UP, u = l ? i - 1 : i + 1, p = null, c = !1;
      u < 0 && (u = 0, p = s, c = !0), u >= a && (u = -1);
      var d = this.getHeaderRowType(i);
      if (!c) {
        if (d === Xe.COLUMN_GROUP) {
          var f = s;
          p = l ? s.getParent() : f.getDisplayedChildren()[0];
        } else if (d === Xe.FLOATING_FILTER)
          p = s;
        else {
          var f = s;
          p = l ? f.getParent() : f;
        }
        if (!p)
          return !1;
      }
      return this.focusService.focusHeaderPosition({
        headerPosition: { headerRowIndex: u, column: p },
        allowUserOverride: !0,
        event: o
      });
    }, t.prototype.navigateHorizontally = function(e, r, o) {
      r === void 0 && (r = !1);
      var i = this.focusService.getFocusedHeader(), s = e === It.LEFT, a = this.gridOptionsWrapper.isEnableRtl(), l, u;
      return s !== a ? (u = "Before", l = this.headerPositionUtils.findHeader(i, u)) : (u = "After", l = this.headerPositionUtils.findHeader(i, u)), l ? this.focusService.focusHeaderPosition({
        headerPosition: l,
        direction: u,
        fromTab: r,
        allowUserOverride: !0,
        event: o
      }) : r ? this.focusNextHeaderRow(i, u, o) : !0;
    }, t.prototype.focusNextHeaderRow = function(e, r, o) {
      var i = e.headerRowIndex, s = null, a;
      return r === "Before" ? i > 0 && (a = i - 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "end")) : (a = i + 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "start")), this.focusService.focusHeaderPosition({
        headerPosition: s,
        direction: r,
        fromTab: !0,
        allowUserOverride: !0,
        event: o
      });
    }, t.prototype.scrollToColumn = function(e, r) {
      if (r === void 0 && (r = "After"), !e.getPinned()) {
        var o;
        if (e instanceof qe) {
          var i = e.getDisplayedLeafColumns();
          o = r === "Before" ? _e(i) : i[0];
        } else
          o = e;
        this.gridBodyCon.getScrollFeature().ensureColumnVisible(o), this.gridBodyCon.getScrollFeature().horizontallyScrollHeaderCenterAndFloatingCenter(), this.animationFrameService.flushAllFrames();
      }
    }, Mr([
      h("focusService")
    ], t.prototype, "focusService", void 0), Mr([
      h("headerPositionUtils")
    ], t.prototype, "headerPositionUtils", void 0), Mr([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), Mr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Mr([
      G
    ], t.prototype, "postConstruct", null), t = Mr([
      U("headerNavigationService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ay = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), sn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, nc = (
  /** @class */
  function(n) {
    Ay(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setComp = function(e, r, o) {
      this.comp = e, this.eGui = r, this.createManagedBean(new Xt(o, {
        onTabKeyDown: this.onTabKeyDown.bind(this),
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusOut: this.onFocusOut.bind(this)
      })), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this)), this.onPivotModeChanged(), this.setupHeaderHeight(), this.ctrlsService.registerGridHeaderCtrl(this);
    }, t.prototype.setupHeaderHeight = function() {
      var e = this.setHeaderHeight.bind(this);
      e(), this.addManagedListener(this.gridOptionsWrapper, B.PROP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, B.PROP_PIVOT_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, B.PROP_GROUP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, B.PROP_PIVOT_GROUP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, B.PROP_FLOATING_FILTERS_HEIGHT, e), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, e);
    }, t.prototype.setHeaderHeight = function() {
      var e = this, r = e.columnModel, o = e.gridOptionsWrapper, i = 0, s = r.getHeaderRowCount(), a, l, u;
      if (r.isPivotMode())
        l = o.getPivotGroupHeaderHeight(), u = o.getPivotHeaderHeight();
      else {
        var p = r.hasFloatingFilters();
        p && (s++, i = 1), l = o.getGroupHeaderHeight(), u = o.getHeaderHeight();
      }
      var c = 1 + i, d = s - c;
      a = i * o.getFloatingFiltersHeight(), a += d * l, a += u;
      var f = a + 1 + "px";
      this.comp.setHeightAndMinHeight(f);
    }, t.prototype.onPivotModeChanged = function() {
      var e = this.columnModel.isPivotMode();
      this.comp.addOrRemoveCssClass("ag-pivot-on", e), this.comp.addOrRemoveCssClass("ag-pivot-off", !e);
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.gridOptionsWrapper.isEnableRtl(), o = e.shiftKey !== r ? It.LEFT : It.RIGHT;
      (this.headerNavigationService.navigateHorizontally(o, !0, e) || this.focusService.focusNextGridCoreContainer(e.shiftKey)) && e.preventDefault();
    }, t.prototype.handleKeyDown = function(e) {
      var r = null;
      switch (e.key) {
        case P.LEFT:
          r = It.LEFT;
        case P.RIGHT:
          O(r) || (r = It.RIGHT), this.headerNavigationService.navigateHorizontally(r, !1, e);
          break;
        case P.UP:
          r = It.UP;
        case P.DOWN:
          O(r) || (r = It.DOWN), this.headerNavigationService.navigateVertically(r, null, e) && e.preventDefault();
          break;
        default:
          return;
      }
    }, t.prototype.onFocusOut = function(e) {
      var r = this.gridOptionsWrapper.getDocument(), o = e.relatedTarget;
      !o && this.eGui.contains(r.activeElement) || this.eGui.contains(o) || this.focusService.clearFocusedHeader();
    }, sn([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), sn([
      h("focusService")
    ], t.prototype, "focusService", void 0), sn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), sn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Co = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ic = (
  /** @class */
  function() {
    function n(t, e) {
      this.needToMoveLeft = !1, this.needToMoveRight = !1, this.pinned = t, this.eContainer = e, this.centerContainer = !O(t);
    }
    return n.prototype.init = function() {
      var t = this;
      this.ctrlsService.whenReady(function() {
        t.gridBodyCon = t.ctrlsService.getGridBodyCtrl();
      });
    }, n.prototype.getIconName = function() {
      return this.pinned ? et.ICON_PINNED : et.ICON_MOVE;
    }, n.prototype.onDragEnter = function(t) {
      var e = t.dragItem.columns, r = t.dragSource.type === mt.ToolPanel;
      if (r)
        this.setColumnsVisible(e, !0, "uiColumnDragged");
      else {
        var o = t.dragItem.visibleState, i = (e || []).filter(function(s) {
          return o[s.getId()];
        });
        this.setColumnsVisible(i, !0, "uiColumnDragged");
      }
      this.setColumnsPinned(e, this.pinned, "uiColumnDragged"), this.onDragging(t, !0);
    }, n.prototype.onDragLeave = function(t) {
      var e = !this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns() && !t.fromNudge;
      if (e) {
        var r = t.dragSource.getDragItem(), o = r.columns;
        this.setColumnsVisible(o, !1, "uiColumnDragged");
      }
      this.ensureIntervalCleared();
    }, n.prototype.setColumnsVisible = function(t, e, r) {
      if (r === void 0 && (r = "api"), t) {
        var o = t.filter(function(i) {
          return !i.getColDef().lockVisible;
        });
        this.columnModel.setColumnsVisible(o, e, r);
      }
    }, n.prototype.setColumnsPinned = function(t, e, r) {
      if (r === void 0 && (r = "api"), t) {
        var o = t.filter(function(i) {
          return !i.getColDef().lockPinned;
        });
        this.columnModel.setColumnsPinned(o, e, r);
      }
    }, n.prototype.onDragStop = function() {
      this.ensureIntervalCleared();
    }, n.prototype.normaliseX = function(t) {
      if (this.gridOptionsWrapper.isEnableRtl()) {
        var e = this.eContainer.clientWidth;
        t = e - t;
      }
      return this.centerContainer && (t += this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft()), t;
    }, n.prototype.checkCenterForScrolling = function(t) {
      if (this.centerContainer) {
        var e = this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft(), r = e + this.ctrlsService.getCenterRowContainerCtrl().getCenterWidth();
        this.gridOptionsWrapper.isEnableRtl() ? (this.needToMoveRight = t < e + 50, this.needToMoveLeft = t > r - 50) : (this.needToMoveLeft = t < e + 50, this.needToMoveRight = t > r - 50), this.needToMoveLeft || this.needToMoveRight ? this.ensureIntervalStarted() : this.ensureIntervalCleared();
      }
    }, n.prototype.onDragging = function(t, e) {
      var r = this;
      if (e === void 0 && (e = !1), this.lastDraggingEvent = t, !K(t.hDirection)) {
        var o = this.normaliseX(t.x);
        e || this.checkCenterForScrolling(o);
        var i = this.normaliseDirection(t.hDirection), s = t.dragSource.type, a = t.dragSource.getDragItem().columns;
        a = a.filter(function(l) {
          return l.getColDef().lockPinned ? l.getPinned() == r.pinned : !0;
        }), this.attemptMoveColumns(s, a, i, o, e);
      }
    }, n.prototype.normaliseDirection = function(t) {
      if (this.gridOptionsWrapper.isEnableRtl())
        switch (t) {
          case Ft.Left:
            return Ft.Right;
          case Ft.Right:
            return Ft.Left;
          default:
            console.error("AG Grid: Unknown direction " + t);
        }
      else
        return t;
    }, n.prototype.calculateOldIndex = function(t) {
      var e = this.columnModel.getAllGridColumns(), r = Wu(t.map(function(l) {
        return e.indexOf(l);
      })), o = r[0], i = _e(r), s = i - o, a = s !== r.length - 1;
      return a ? null : o;
    }, n.prototype.attemptMoveColumns = function(t, e, r, o, i) {
      var s = r === Ft.Left, a = r === Ft.Right, l = e.slice();
      this.columnModel.sortColumnsLikeGridColumns(l);
      var u = this.calculateValidMoves(l, a, o), p = this.calculateOldIndex(l);
      if (u.length !== 0) {
        var c = u[0], d = p !== null && !i;
        if (t == mt.HeaderCell && (d = p !== null), !(d && (s && c >= p || a && c <= p)))
          for (var f = 0; f < u.length; f++) {
            var g = u[f];
            if (this.columnModel.doesMovePassRules(l, g)) {
              this.columnModel.moveColumns(l, g, "uiColumnDragged");
              return;
            }
          }
      }
    }, n.prototype.calculateValidMoves = function(t, e, r) {
      var o = this.gridOptionsWrapper.isSuppressMovableColumns() || t.some(function(I) {
        return I.getColDef().suppressMovable;
      });
      if (o)
        return [];
      var i = this.columnModel.getDisplayedColumns(this.pinned), s = this.columnModel.getAllGridColumns(), a = i.filter(function(I) {
        return yt(t, I);
      }), l = i.filter(function(I) {
        return !yt(t, I);
      }), u = s.filter(function(I) {
        return !yt(t, I);
      }), p = 0, c = r;
      if (e) {
        var d = 0;
        a.forEach(function(I) {
          return d += I.getActualWidth();
        }), c -= d;
      }
      if (c > 0) {
        for (var f = 0; f < l.length; f++) {
          var g = l[f];
          if (c -= g.getActualWidth(), c < 0)
            break;
          p++;
        }
        e && p++;
      }
      var y;
      if (p > 0) {
        var C = l[p - 1];
        y = u.indexOf(C) + 1;
      } else
        y = u.indexOf(l[0]), y === -1 && (y = 0);
      var m = [y], _ = function(I, A) {
        return I - A;
      };
      if (e) {
        for (var E = y + 1, S = s.length - 1; E <= S; )
          m.push(E), E++;
        m.sort(_);
      } else {
        for (var E = y, S = s.length - 1, b = s[E]; E <= S && this.isColumnHidden(i, b); )
          E++, m.push(E), b = s[E];
        E = y - 1;
        for (var x = 0; E >= x; )
          m.push(E), E--;
        m.sort(_).reverse();
      }
      return m;
    }, n.prototype.isColumnHidden = function(t, e) {
      return t.indexOf(e) < 0;
    }, n.prototype.ensureIntervalStarted = function() {
      this.movingIntervalId || (this.intervalCount = 0, this.failedMoveAttempts = 0, this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100), this.needToMoveLeft ? this.dragAndDropService.setGhostIcon(et.ICON_LEFT, !0) : this.dragAndDropService.setGhostIcon(et.ICON_RIGHT, !0));
    }, n.prototype.ensureIntervalCleared = function() {
      this.movingIntervalId && (window.clearInterval(this.movingIntervalId), this.movingIntervalId = null, this.dragAndDropService.setGhostIcon(et.ICON_MOVE));
    }, n.prototype.moveInterval = function() {
      var t;
      this.intervalCount++, t = 10 + this.intervalCount * 5, t > 100 && (t = 100);
      var e = null, r = this.gridBodyCon.getScrollFeature();
      if (this.needToMoveLeft ? e = r.scrollHorizontally(-t) : this.needToMoveRight && (e = r.scrollHorizontally(t)), e !== 0)
        this.onDragging(this.lastDraggingEvent), this.failedMoveAttempts = 0;
      else {
        this.failedMoveAttempts++;
        var o = this.lastDraggingEvent.dragItem.columns, i = o.filter(function(a) {
          return !a.getColDef().lockPinned;
        });
        if (i.length > 0 && (this.dragAndDropService.setGhostIcon(et.ICON_PINNED), this.failedMoveAttempts > 7)) {
          var s = this.needToMoveLeft ? w.PINNED_LEFT : w.PINNED_RIGHT;
          this.setColumnsPinned(i, s, "uiColumnDragged"), this.dragAndDropService.nudge();
        }
      }
    }, Co([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), Co([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), Co([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), Co([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), Co([
      G
    ], n.prototype, "init", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, sc = (
  /** @class */
  function() {
    function n(t) {
      this.columnsToAggregate = [], this.columnsToGroup = [], this.columnsToPivot = [], this.pinned = t;
    }
    return n.prototype.onDragEnter = function(t) {
      var e = this;
      if (this.clearColumnsList(), !this.gridOptionsWrapper.isFunctionsReadOnly()) {
        var r = t.dragItem.columns;
        r && r.forEach(function(o) {
          o.isPrimary() && (o.isAnyFunctionActive() || (o.isAllowValue() ? e.columnsToAggregate.push(o) : o.isAllowRowGroup() ? e.columnsToGroup.push(o) : o.isAllowPivot() && e.columnsToPivot.push(o)));
        });
      }
    }, n.prototype.getIconName = function() {
      var t = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;
      return t > 0 ? this.pinned ? et.ICON_PINNED : et.ICON_MOVE : null;
    }, n.prototype.onDragLeave = function(t) {
      this.clearColumnsList();
    }, n.prototype.clearColumnsList = function() {
      this.columnsToAggregate.length = 0, this.columnsToGroup.length = 0, this.columnsToPivot.length = 0;
    }, n.prototype.onDragging = function(t) {
    }, n.prototype.onDragStop = function(t) {
      this.columnsToAggregate.length > 0 && this.columnModel.addValueColumns(this.columnsToAggregate, "toolPanelDragAndDrop"), this.columnsToGroup.length > 0 && this.columnModel.addRowGroupColumns(this.columnsToGroup, "toolPanelDragAndDrop"), this.columnsToPivot.length > 0 && this.columnModel.addPivotColumns(this.columnsToPivot, "toolPanelDragAndDrop");
    }, jl([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), jl([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Fy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), mo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ac = (
  /** @class */
  function(n) {
    Fy(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.pinned = e, o.eContainer = r, o;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        switch (e.pinned) {
          case w.PINNED_LEFT:
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.leftRowContainerCtrl.getContainerElement()],
              [r.bottomLeftRowContainerCtrl.getContainerElement()],
              [r.topLeftRowContainerCtrl.getContainerElement()]
            ];
            break;
          case w.PINNED_RIGHT:
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.rightRowContainerCtrl.getContainerElement()],
              [r.bottomRightRowContainerCtrl.getContainerElement()],
              [r.topRightRowContainerCtrl.getContainerElement()]
            ];
            break;
          default:
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.centerRowContainerCtrl.getViewportElement()],
              [r.bottomCenterRowContainerCtrl.getViewportElement()],
              [r.topCenterRowContainerCtrl.getViewportElement()]
            ];
            break;
        }
      });
    }, t.prototype.isInterestedIn = function(e) {
      return e === mt.HeaderCell || e === mt.ToolPanel && this.gridOptionsWrapper.isAllowDragFromColumnsToolPanel();
    }, t.prototype.getSecondaryContainers = function() {
      return this.eSecondaryContainers;
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, t.prototype.init = function() {
      this.moveColumnFeature = this.createManagedBean(new ic(this.pinned, this.eContainer)), this.bodyDropPivotTarget = this.createManagedBean(new sc(this.pinned)), this.dragAndDropService.addDropTarget(this);
    }, t.prototype.getIconName = function() {
      return this.currentDropListener.getIconName();
    }, t.prototype.isDropColumnInPivotMode = function(e) {
      return this.columnModel.isPivotMode() && e.dragSource.type === mt.ToolPanel;
    }, t.prototype.onDragEnter = function(e) {
      this.currentDropListener = this.isDropColumnInPivotMode(e) ? this.bodyDropPivotTarget : this.moveColumnFeature, this.currentDropListener.onDragEnter(e);
    }, t.prototype.onDragLeave = function(e) {
      this.currentDropListener.onDragLeave(e);
    }, t.prototype.onDragging = function(e) {
      this.currentDropListener.onDragging(e);
    }, t.prototype.onDragStop = function(e) {
      this.currentDropListener.onDragStop(e);
    }, mo([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), mo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), mo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), mo([
      G
    ], t.prototype, "postConstruct", null), mo([
      G
    ], t.prototype, "init", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Iy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), My = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ly = 0, $o = (
  /** @class */
  function(n) {
    Iy(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.lastFocusEvent = null, o.columnGroupChild = e, o.parentRowCtrl = r, o.instanceId = e.getUniqueId() + "-" + Ly++, o;
    }
    return t.prototype.shouldStopEventPropagation = function(e) {
      var r = this.focusService.getFocusedHeader(), o = r.headerRowIndex, i = r.column;
      return Fp(this.gridOptionsWrapper, e, o, i);
    }, t.prototype.setGui = function(e) {
      this.eGui = e, this.addDomData();
    }, t.prototype.addDomData = function() {
      var e = this, r = t.DOM_DATA_KEY_HEADER_CTRL;
      this.gridOptionsWrapper.setDomData(this.eGui, r, this), this.addDestroyFunc(function() {
        return e.gridOptionsWrapper.setDomData(e.eGui, r, null);
      });
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.focus = function(e) {
      return this.eGui ? (this.lastFocusEvent = e || null, this.eGui.focus(), !0) : !1;
    }, t.prototype.getRowIndex = function() {
      return this.parentRowCtrl.getRowIndex();
    }, t.prototype.getParentRowCtrl = function() {
      return this.parentRowCtrl;
    }, t.prototype.getPinned = function() {
      return this.parentRowCtrl.getPinned();
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.getColumnGroupChild = function() {
      return this.columnGroupChild;
    }, t.DOM_DATA_KEY_HEADER_CTRL = "headerCtrl", My([
      h("focusService")
    ], t.prototype, "focusService", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Kr;
(function(n) {
  n[n.SINGLE_SHEET = 0] = "SINGLE_SHEET", n[n.MULTI_SHEET = 1] = "MULTI_SHEET";
})(Kr || (Kr = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var fe;
(function(n) {
  n.EVERYTHING = "group", n.FILTER = "filter", n.SORT = "sort", n.MAP = "map", n.AGGREGATE = "aggregate", n.PIVOT = "pivot", n.NOTHING = "nothing";
})(fe || (fe = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ue = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
};
function yr(n) {
  var t = n, e = t != null && t.getFrameworkComponentInstance != null;
  return e ? t.getFrameworkComponentInstance() : n;
}
var lc = (
  /** @class */
  function() {
    function n() {
      this.detailGridInfoMap = {}, this.destroyCalled = !1;
    }
    return n.prototype.registerOverlayWrapperComp = function(t) {
      this.overlayWrapperComp = t;
    }, n.prototype.registerSideBarComp = function(t) {
      this.sideBarComp = t;
    }, n.prototype.init = function() {
      var t = this;
      switch (this.rowModel.getType()) {
        case w.ROW_MODEL_TYPE_CLIENT_SIDE:
          this.clientSideRowModel = this.rowModel;
          break;
        case w.ROW_MODEL_TYPE_INFINITE:
          this.infiniteRowModel = this.rowModel;
          break;
        case w.ROW_MODEL_TYPE_SERVER_SIDE:
          this.serverSideRowModel = this.rowModel;
          break;
      }
      this.ctrlsService.whenReady(function() {
        t.gridBodyCon = t.ctrlsService.getGridBodyCtrl();
      });
    }, n.prototype.__getAlignedGridService = function() {
      return this.alignedGridsService;
    }, n.prototype.__getContext = function() {
      return this.context;
    }, n.prototype.addDetailGridInfo = function(t, e) {
      this.detailGridInfoMap[t] = e;
    }, n.prototype.removeDetailGridInfo = function(t) {
      this.detailGridInfoMap[t] = void 0;
    }, n.prototype.getDetailGridInfo = function(t) {
      return this.detailGridInfoMap[t];
    }, n.prototype.forEachDetailGridInfo = function(t) {
      var e = 0;
      ge(this.detailGridInfoMap, function(r, o) {
        O(o) && (t(o, e), e++);
      });
    }, n.prototype.getDataAsCsv = function(t) {
      if (Q.assertRegistered(q.CsvExportModule, "api.getDataAsCsv"))
        return this.csvCreator.getDataAsCsv(t);
    }, n.prototype.exportDataAsCsv = function(t) {
      Q.assertRegistered(q.CsvExportModule, "api.exportDataAsCSv") && this.csvCreator.exportDataAsCsv(t);
    }, n.prototype.getExcelExportMode = function(t) {
      var e = this.gridOptionsWrapper.getDefaultExportParams("excel"), r = Object.assign({ exportMode: "xlsx" }, e, t);
      return r.exportMode;
    }, n.prototype.getDataAsExcel = function(t) {
      if (Q.assertRegistered(q.ExcelExportModule, "api.getDataAsExcel")) {
        var e = this.getExcelExportMode(t);
        if (this.excelCreator.getFactoryMode(e) === Kr.MULTI_SHEET) {
          console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`");
          return;
        }
        return this.excelCreator.getDataAsExcel(t);
      }
    }, n.prototype.exportDataAsExcel = function(t) {
      if (Q.assertRegistered(q.ExcelExportModule, "api.exportDataAsExcel")) {
        var e = this.getExcelExportMode(t);
        if (this.excelCreator.getFactoryMode(e) === Kr.MULTI_SHEET) {
          console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`");
          return;
        }
        this.excelCreator.exportDataAsExcel(t);
      }
    }, n.prototype.getSheetDataForExcel = function(t) {
      if (Q.assertRegistered(q.ExcelExportModule, "api.getSheetDataForExcel")) {
        var e = this.getExcelExportMode(t);
        return this.excelCreator.setFactoryMode(Kr.MULTI_SHEET, e), this.excelCreator.getSheetDataForExcel(t);
      }
    }, n.prototype.getMultipleSheetsAsExcel = function(t) {
      if (Q.assertRegistered(q.ExcelExportModule, "api.getMultipleSheetsAsExcel"))
        return this.excelCreator.getMultipleSheetsAsExcel(t);
    }, n.prototype.exportMultipleSheetsAsExcel = function(t) {
      if (Q.assertRegistered(q.ExcelExportModule, "api.exportMultipleSheetsAsExcel"))
        return this.excelCreator.exportMultipleSheetsAsExcel(t);
    }, n.prototype.setEnterpriseDatasource = function(t) {
      console.warn("AG Grid: since version 18.x, api.setEnterpriseDatasource() should be replaced with api.setServerSideDatasource()"), this.setServerSideDatasource(t);
    }, n.prototype.setGridAriaProperty = function(t, e) {
      if (t) {
        var r = this.ctrlsService.getGridBodyCtrl().getGui(), o = "aria-" + t;
        e === null ? r.removeAttribute(o) : r.setAttribute(o, e);
      }
    }, n.prototype.setServerSideDatasource = function(t) {
      this.serverSideRowModel ? this.serverSideRowModel.setDatasource(t) : console.warn("AG Grid: you can only use an enterprise datasource when gridOptions.rowModelType is '" + w.ROW_MODEL_TYPE_SERVER_SIDE + "'");
    }, n.prototype.setDatasource = function(t) {
      this.gridOptionsWrapper.isRowModelInfinite() ? this.rowModel.setDatasource(t) : console.warn("AG Grid: you can only use a datasource when gridOptions.rowModelType is '" + w.ROW_MODEL_TYPE_INFINITE + "'");
    }, n.prototype.setViewportDatasource = function(t) {
      this.gridOptionsWrapper.isRowModelViewport() ? this.rowModel.setViewportDatasource(t) : console.warn("AG Grid: you can only use a viewport datasource when gridOptions.rowModelType is '" + w.ROW_MODEL_TYPE_VIEWPORT + "'");
    }, n.prototype.setRowData = function(t) {
      var e = this.immutableService == null;
      if (e) {
        console.warn("AG Grid: you can only set rowData when using the Client Side Row Model");
        return;
      }
      this.immutableService.isActive() ? this.immutableService.setRowData(t) : (this.selectionService.reset(), this.clientSideRowModel.setRowData(t));
    }, n.prototype.setFloatingTopRowData = function(t) {
      console.warn("AG Grid: since v12, api.setFloatingTopRowData() is now api.setPinnedTopRowData()"), this.setPinnedTopRowData(t);
    }, n.prototype.setFloatingBottomRowData = function(t) {
      console.warn("AG Grid: since v12, api.setFloatingBottomRowData() is now api.setPinnedBottomRowData()"), this.setPinnedBottomRowData(t);
    }, n.prototype.getFloatingTopRowCount = function() {
      return console.warn("AG Grid: since v12, api.getFloatingTopRowCount() is now api.getPinnedTopRowCount()"), this.getPinnedTopRowCount();
    }, n.prototype.getFloatingBottomRowCount = function() {
      return console.warn("AG Grid: since v12, api.getFloatingBottomRowCount() is now api.getPinnedBottomRowCount()"), this.getPinnedBottomRowCount();
    }, n.prototype.getFloatingTopRow = function(t) {
      return console.warn("AG Grid: since v12, api.getFloatingTopRow() is now api.getPinnedTopRow()"), this.getPinnedTopRow(t);
    }, n.prototype.getFloatingBottomRow = function(t) {
      return console.warn("AG Grid: since v12, api.getFloatingBottomRow() is now api.getPinnedBottomRow()"), this.getPinnedBottomRow(t);
    }, n.prototype.setPinnedTopRowData = function(t) {
      this.pinnedRowModel.setPinnedTopRowData(t);
    }, n.prototype.setPinnedBottomRowData = function(t) {
      this.pinnedRowModel.setPinnedBottomRowData(t);
    }, n.prototype.getPinnedTopRowCount = function() {
      return this.pinnedRowModel.getPinnedTopRowCount();
    }, n.prototype.getPinnedBottomRowCount = function() {
      return this.pinnedRowModel.getPinnedBottomRowCount();
    }, n.prototype.getPinnedTopRow = function(t) {
      return this.pinnedRowModel.getPinnedTopRow(t);
    }, n.prototype.getPinnedBottomRow = function(t) {
      return this.pinnedRowModel.getPinnedBottomRow(t);
    }, n.prototype.setColumnDefs = function(t, e) {
      e === void 0 && (e = "api"), this.columnModel.setColumnDefs(t, e);
    }, n.prototype.setAutoGroupColumnDef = function(t, e) {
      this.gridOptionsWrapper.setProperty("autoGroupColumnDef", t, !0);
    }, n.prototype.setDefaultColDef = function(t, e) {
      this.gridOptionsWrapper.setProperty("defaultColDef", t, !0);
    }, n.prototype.expireValueCache = function() {
      this.valueCache.expire();
    }, n.prototype.getVerticalPixelRange = function() {
      return this.gridBodyCon.getScrollFeature().getVScrollPosition();
    }, n.prototype.getHorizontalPixelRange = function() {
      return this.gridBodyCon.getScrollFeature().getHScrollPosition();
    }, n.prototype.setAlwaysShowHorizontalScroll = function(t) {
      this.gridOptionsWrapper.setProperty("alwaysShowHorizontalScroll", t);
    }, n.prototype.setAlwaysShowVerticalScroll = function(t) {
      this.gridOptionsWrapper.setProperty("alwaysShowVerticalScroll", t);
    }, n.prototype.refreshToolPanel = function() {
      this.sideBarComp && this.sideBarComp.refresh();
    }, n.prototype.refreshCells = function(t) {
      if (t === void 0 && (t = {}), Array.isArray(t)) {
        console.warn("since AG Grid v11.1, refreshCells() now takes parameters, please see the documentation.");
        return;
      }
      this.rowRenderer.refreshCells(t);
    }, n.prototype.flashCells = function(t) {
      t === void 0 && (t = {}), this.rowRenderer.flashCells(t);
    }, n.prototype.redrawRows = function(t) {
      t === void 0 && (t = {});
      var e = t ? t.rowNodes : void 0;
      this.rowRenderer.redrawRows(e);
    }, n.prototype.setFunctionsReadOnly = function(t) {
      this.gridOptionsWrapper.setProperty("functionsReadOnly", t);
    }, n.prototype.refreshHeader = function() {
      this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(t) {
        return t.refresh();
      });
    }, n.prototype.isAnyFilterPresent = function() {
      return this.filterManager.isAnyFilterPresent();
    }, n.prototype.isColumnFilterPresent = function() {
      return this.filterManager.isAdvancedFilterPresent();
    }, n.prototype.isQuickFilterPresent = function() {
      return this.filterManager.isQuickFilterPresent();
    }, n.prototype.getModel = function() {
      return this.rowModel;
    }, n.prototype.setRowNodeExpanded = function(t, e) {
      t && t.setExpanded(e);
    }, n.prototype.onGroupExpandedOrCollapsed = function(t) {
      K(this.clientSideRowModel) && console.warn("AG Grid: cannot call onGroupExpandedOrCollapsed unless using normal row model"), O(t) && console.warn("AG Grid: api.onGroupExpandedOrCollapsed - refreshFromIndex parameter is no longer used, the grid will refresh all rows"), this.clientSideRowModel.refreshModel({ step: fe.MAP });
    }, n.prototype.refreshInMemoryRowModel = function(t) {
      console.warn("ag-grid: since version 18.x, api.refreshInMemoryRowModel() should be replaced with api.refreshClientSideRowModel()"), this.refreshClientSideRowModel(t);
    }, n.prototype.refreshClientSideRowModel = function(t) {
      K(this.clientSideRowModel) && console.warn("cannot call refreshClientSideRowModel unless using normal row model");
      var e = fe.EVERYTHING, r = {
        group: fe.EVERYTHING,
        filter: fe.FILTER,
        map: fe.MAP,
        aggregate: fe.AGGREGATE,
        sort: fe.SORT,
        pivot: fe.PIVOT
      };
      if (O(t) && (e = r[t]), K(e)) {
        console.error("AG Grid: invalid step " + t + ", available steps are " + Object.keys(r).join(", "));
        return;
      }
      var o = !this.gridOptionsWrapper.isSuppressAnimationFrame(), i = {
        step: e,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: o
      };
      this.clientSideRowModel.refreshModel(i);
    }, n.prototype.isAnimationFrameQueueEmpty = function() {
      return this.animationFrameService.isQueueEmpty();
    }, n.prototype.flushAllAnimationFrames = function() {
      this.animationFrameService.flushAllFrames();
    }, n.prototype.getRowNode = function(t) {
      return this.rowModel.getRowNode(t);
    }, n.prototype.getSizesForCurrentTheme = function() {
      return {
        rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
        headerHeight: this.gridOptionsWrapper.getHeaderHeight()
      };
    }, n.prototype.expandAll = function() {
      this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!0) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!0) : console.warn("AG Grid: expandAll only works with Client Side Row Model and Server Side Row Model");
    }, n.prototype.collapseAll = function() {
      this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!1) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!1) : console.warn("AG Grid: collapseAll only works with Client Side Row Model and Server Side Row Model");
    }, n.prototype.getToolPanelInstance = function(t) {
      if (!this.sideBarComp) {
        console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
        return;
      }
      var e = this.sideBarComp.getToolPanelInstance(t);
      return yr(e);
    }, n.prototype.addVirtualRowListener = function(t, e, r) {
      typeof t != "string" && console.warn("AG Grid: addVirtualRowListener is deprecated, please use addRenderedRowListener."), this.addRenderedRowListener(t, e, r);
    }, n.prototype.addRenderedRowListener = function(t, e, r) {
      t === "virtualRowSelected" && console.warn(`AG Grid: event virtualRowSelected is deprecated, to register for individual row
                selection events, add a listener directly to the row node.`), this.rowRenderer.addRenderedRowListener(t, e, r);
    }, n.prototype.setQuickFilter = function(t) {
      this.filterManager.setQuickFilter(t);
    }, n.prototype.selectIndex = function(t, e, r) {
      console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"), r && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), this.selectionService.selectIndex(t, e);
    }, n.prototype.deselectIndex = function(t, e) {
      e === void 0 && (e = !1), console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"), e && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), this.selectionService.deselectIndex(t);
    }, n.prototype.selectNode = function(t, e, r) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"), r && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), t.setSelectedParams({ newValue: !0, clearSelection: !e });
    }, n.prototype.deselectNode = function(t, e) {
      e === void 0 && (e = !1), console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"), e && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), t.setSelectedParams({ newValue: !1 });
    }, n.prototype.selectAll = function() {
      this.selectionService.selectAllRowNodes();
    }, n.prototype.deselectAll = function() {
      this.selectionService.deselectAllRowNodes();
    }, n.prototype.selectAllFiltered = function() {
      this.selectionService.selectAllRowNodes(!0);
    }, n.prototype.deselectAllFiltered = function() {
      this.selectionService.deselectAllRowNodes(!0);
    }, n.prototype.recomputeAggregates = function() {
      K(this.clientSideRowModel) && console.warn("cannot call recomputeAggregates unless using normal row model"), console.warn("recomputeAggregates is deprecated, please call api.refreshClientSideRowModel('aggregate') instead"), this.clientSideRowModel.refreshModel({ step: fe.AGGREGATE });
    }, n.prototype.sizeColumnsToFit = function() {
      this.gridBodyCon.sizeColumnsToFit();
    }, n.prototype.showLoadingOverlay = function() {
      this.overlayWrapperComp.showLoadingOverlay();
    }, n.prototype.showNoRowsOverlay = function() {
      this.overlayWrapperComp.showNoRowsOverlay();
    }, n.prototype.hideOverlay = function() {
      this.overlayWrapperComp.hideOverlay();
    }, n.prototype.isNodeSelected = function(t) {
      return console.warn("AG Grid: no need to call api.isNodeSelected(), just call node.isSelected() instead"), t.isSelected();
    }, n.prototype.getSelectedNodesById = function() {
      return console.error("AG Grid: since version 3.4, getSelectedNodesById no longer exists, use getSelectedNodes() instead"), null;
    }, n.prototype.getSelectedNodes = function() {
      return this.selectionService.getSelectedNodes();
    }, n.prototype.getSelectedRows = function() {
      return this.selectionService.getSelectedRows();
    }, n.prototype.getBestCostNodeSelection = function() {
      return this.selectionService.getBestCostNodeSelection();
    }, n.prototype.getRenderedNodes = function() {
      return this.rowRenderer.getRenderedNodes();
    }, n.prototype.ensureColIndexVisible = function(t) {
      console.warn("AG Grid: ensureColIndexVisible(index) no longer supported, use ensureColumnVisible(colKey) instead.");
    }, n.prototype.ensureColumnVisible = function(t, e) {
      e === void 0 && (e = "auto"), this.gridBodyCon.getScrollFeature().ensureColumnVisible(t, e);
    }, n.prototype.ensureIndexVisible = function(t, e) {
      this.gridBodyCon.getScrollFeature().ensureIndexVisible(t, e);
    }, n.prototype.ensureNodeVisible = function(t, e) {
      e === void 0 && (e = null), this.gridBodyCon.getScrollFeature().ensureNodeVisible(t, e);
    }, n.prototype.forEachLeafNode = function(t) {
      K(this.clientSideRowModel) && console.warn("cannot call forEachNode unless using normal row model"), this.clientSideRowModel.forEachLeafNode(t);
    }, n.prototype.forEachNode = function(t) {
      this.rowModel.forEachNode(t);
    }, n.prototype.forEachNodeAfterFilter = function(t) {
      K(this.clientSideRowModel) && console.warn("cannot call forEachNodeAfterFilter unless using normal row model"), this.clientSideRowModel.forEachNodeAfterFilter(t);
    }, n.prototype.forEachNodeAfterFilterAndSort = function(t) {
      K(this.clientSideRowModel) && console.warn("cannot call forEachNodeAfterFilterAndSort unless using normal row model"), this.clientSideRowModel.forEachNodeAfterFilterAndSort(t);
    }, n.prototype.getFilterInstance = function(t, e) {
      var r = this.getFilterInstanceImpl(t, function(i) {
        if (e) {
          var s = yr(i);
          e(s);
        }
      }), o = yr(r);
      return o;
    }, n.prototype.getFilterInstanceImpl = function(t, e) {
      var r = this.columnModel.getPrimaryColumn(t);
      if (r) {
        var o = this.filterManager.getFilterComponent(r, "NO_UI"), i = o && o.resolveNow(null, function(s) {
          return s;
        });
        return i ? setTimeout(e, 0, i) : o && o.then(function(s) {
          e(s);
        }), i;
      }
    }, n.prototype.destroyFilter = function(t) {
      var e = this.columnModel.getPrimaryColumn(t);
      if (e)
        return this.filterManager.destroyFilter(e, "filterDestroyed");
    }, n.prototype.getStatusPanel = function(t) {
      if (this.statusBarService) {
        var e = this.statusBarService.getStatusPanel(t);
        return yr(e);
      }
    }, n.prototype.getColumnDef = function(t) {
      var e = this.columnModel.getPrimaryColumn(t);
      return e ? e.getColDef() : null;
    }, n.prototype.getColumnDefs = function() {
      return this.columnModel.getColumnDefs();
    }, n.prototype.onFilterChanged = function() {
      this.filterManager.onFilterChanged();
    }, n.prototype.onSortChanged = function() {
      this.sortController.onSortChanged();
    }, n.prototype.setFilterModel = function(t) {
      this.filterManager.setFilterModel(t);
    }, n.prototype.getFilterModel = function() {
      return this.filterManager.getFilterModel();
    }, n.prototype.getFocusedCell = function() {
      return this.focusService.getFocusedCell();
    }, n.prototype.clearFocusedCell = function() {
      return this.focusService.clearFocusedCell();
    }, n.prototype.setFocusedCell = function(t, e, r) {
      this.focusService.setFocusedCell(t, e, r, !0);
    }, n.prototype.setSuppressRowDrag = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_SUPPRESS_ROW_DRAG, t);
    }, n.prototype.setSuppressMoveWhenRowDragging = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG, t);
    }, n.prototype.setSuppressRowClickSelection = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_SUPPRESS_ROW_CLICK_SELECTION, t);
    }, n.prototype.addRowDropZone = function(t) {
      this.gridBodyCon.getRowDragFeature().addRowDropZone(t);
    }, n.prototype.removeRowDropZone = function(t) {
      var e = this.dragAndDropService.findExternalZone(t);
      e && this.dragAndDropService.removeDropTarget(e);
    }, n.prototype.getRowDropZoneParams = function(t) {
      return this.gridBodyCon.getRowDragFeature().getRowDropZone(t);
    }, n.prototype.setHeaderHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_HEADER_HEIGHT, t);
    }, n.prototype.setDomLayout = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_DOM_LAYOUT, t);
    }, n.prototype.setEnableCellTextSelection = function(t) {
      this.gridBodyCon.setCellTextSelection(t);
    }, n.prototype.setFillHandleDirection = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_FILL_HANDLE_DIRECTION, t);
    }, n.prototype.setGroupHeaderHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GROUP_HEADER_HEIGHT, t);
    }, n.prototype.setFloatingFiltersHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_FLOATING_FILTERS_HEIGHT, t);
    }, n.prototype.setPivotHeaderHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PIVOT_HEADER_HEIGHT, t);
    }, n.prototype.setPivotGroupHeaderHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PIVOT_GROUP_HEADER_HEIGHT, t);
    }, n.prototype.setIsExternalFilterPresent = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_EXTERNAL_FILTER_PRESENT, t);
    }, n.prototype.setDoesExternalFilterPass = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_DOES_EXTERNAL_FILTER_PASS, t);
    }, n.prototype.setNavigateToNextCell = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_NAVIGATE_TO_NEXT_CELL, t);
    }, n.prototype.setTabToNextCell = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_TAB_TO_NEXT_CELL, t);
    }, n.prototype.setTabToNextHeader = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_TAB_TO_NEXT_HEADER, t);
    }, n.prototype.setNavigateToNextHeader = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_NAVIGATE_TO_NEXT_HEADER, t);
    }, n.prototype.setGroupRowAggNodes = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GROUP_ROW_AGG_NODES, t);
    }, n.prototype.setGetBusinessKeyForNode = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_BUSINESS_KEY_FOR_NODE, t);
    }, n.prototype.setGetChildCount = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_CHILD_COUNT, t);
    }, n.prototype.setProcessRowPostCreate = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PROCESS_ROW_POST_CREATE, t);
    }, n.prototype.setGetRowNodeId = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_ROW_NODE_ID, t);
    }, n.prototype.setGetRowClass = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_ROW_CLASS, t);
    }, n.prototype.setIsFullWidthCell = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_FULL_WIDTH_CELL, t);
    }, n.prototype.setIsRowSelectable = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_ROW_SELECTABLE, t);
    }, n.prototype.setIsRowMaster = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_ROW_MASTER, t);
    }, n.prototype.setPostSort = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_POST_SORT, t);
    }, n.prototype.setGetDocument = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_DOCUMENT, t);
    }, n.prototype.setGetContextMenuItems = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_CONTEXT_MENU_ITEMS, t);
    }, n.prototype.setGetMainMenuItems = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_MAIN_MENU_ITEMS, t);
    }, n.prototype.setProcessCellForClipboard = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PROCESS_CELL_FOR_CLIPBOARD, t);
    }, n.prototype.setSendToClipboard = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_SEND_TO_CLIPBOARD, t);
    }, n.prototype.setProcessCellFromClipboard = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PROCESS_CELL_FROM_CLIPBOARD, t);
    }, n.prototype.setProcessSecondaryColDef = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PROCESS_TO_SECONDARY_COLDEF, t);
    }, n.prototype.setProcessSecondaryColGroupDef = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PROCESS_SECONDARY_COL_GROUP_DEF, t);
    }, n.prototype.setPostProcessPopup = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_POST_PROCESS_POPUP, t);
    }, n.prototype.setDefaultGroupOrderComparator = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_DEFAULT_GROUP_ORDER_COMPARATOR, t);
    }, n.prototype.setGetChartToolbarItems = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_CHART_TOOLBAR_ITEMS, t);
    }, n.prototype.setPaginationNumberFormatter = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_PAGINATION_NUMBER_FORMATTER, t);
    }, n.prototype.setGetServerSideStoreParams = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_SERVER_SIDE_STORE_PARAMS, t);
    }, n.prototype.setIsServerSideGroupOpenByDefault = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_SERVER_SIDE_GROUPS_OPEN_BY_DEFAULT, t);
    }, n.prototype.setIsApplyServerSideTransaction = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_APPLY_SERVER_SIDE_TRANSACTION, t);
    }, n.prototype.setIsServerSideGroup = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_IS_SERVER_SIDE_GROUP, t);
    }, n.prototype.setGetServerSideGroupKey = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_SERVER_SIDE_GROUP_KEY, t);
    }, n.prototype.setGetRowStyle = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_ROW_STYLE, t);
    }, n.prototype.setGetRowHeight = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GET_ROW_HEIGHT, t);
    }, n.prototype.isSideBarVisible = function() {
      return this.sideBarComp ? this.sideBarComp.isDisplayed() : !1;
    }, n.prototype.setSideBarVisible = function(t) {
      if (!this.sideBarComp) {
        t && console.warn("AG Grid: sideBar is not loaded");
        return;
      }
      this.sideBarComp.setDisplayed(t);
    }, n.prototype.setSideBarPosition = function(t) {
      if (!this.sideBarComp) {
        console.warn("AG Grid: sideBar is not loaded");
        return;
      }
      this.sideBarComp.setSideBarPosition(t);
    }, n.prototype.openToolPanel = function(t) {
      if (!this.sideBarComp) {
        console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
        return;
      }
      this.sideBarComp.openToolPanel(t);
    }, n.prototype.closeToolPanel = function() {
      if (!this.sideBarComp) {
        console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
        return;
      }
      this.sideBarComp.close();
    }, n.prototype.getOpenedToolPanel = function() {
      return this.sideBarComp ? this.sideBarComp.openedItem() : null;
    }, n.prototype.getSideBar = function() {
      return this.gridOptionsWrapper.getSideBar();
    }, n.prototype.setSideBar = function(t) {
      this.gridOptionsWrapper.setProperty("sideBar", Xp.parse(t));
    }, n.prototype.setSuppressClipboardPaste = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_SUPPRESS_CLIPBOARD_PASTE, t);
    }, n.prototype.isToolPanelShowing = function() {
      return this.sideBarComp.isToolPanelShowing();
    }, n.prototype.doLayout = function() {
      var t = "AG Grid - since version 25.1, doLayout was taken out, as it's not needed. The grid responds to grid size changes automatically";
      ve(function() {
        return console.warn(t);
      }, "doLayoutDeprecated");
    }, n.prototype.resetRowHeights = function() {
      if (O(this.clientSideRowModel)) {
        if (this.columnModel.isAutoRowHeightActive()) {
          console.warn("AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.");
          return;
        }
        this.clientSideRowModel.resetRowHeights();
      }
    }, n.prototype.setGroupRemoveSingleChildren = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GROUP_REMOVE_SINGLE_CHILDREN, t);
    }, n.prototype.setGroupRemoveLowestSingleChildren = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, t);
    }, n.prototype.onRowHeightChanged = function() {
      this.clientSideRowModel ? this.clientSideRowModel.onRowHeightChanged() : this.serverSideRowModel && this.serverSideRowModel.onRowHeightChanged();
    }, n.prototype.getValue = function(t, e) {
      var r = this.columnModel.getPrimaryColumn(t);
      return K(r) && (r = this.columnModel.getGridColumn(t)), K(r) ? null : this.valueService.getValue(r, e);
    }, n.prototype.addEventListener = function(t, e) {
      var r = this.gridOptionsWrapper.useAsyncEvents();
      this.eventService.addEventListener(t, e, r);
    }, n.prototype.addGlobalListener = function(t) {
      var e = this.gridOptionsWrapper.useAsyncEvents();
      this.eventService.addGlobalListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      var r = this.gridOptionsWrapper.useAsyncEvents();
      this.eventService.removeEventListener(t, e, r);
    }, n.prototype.removeGlobalListener = function(t) {
      var e = this.gridOptionsWrapper.useAsyncEvents();
      this.eventService.removeGlobalListener(t, e);
    }, n.prototype.dispatchEvent = function(t) {
      this.eventService.dispatchEvent(t);
    }, n.prototype.destroy = function() {
      if (!this.destroyCalled) {
        this.destroyCalled = !0;
        var t = this.ctrlsService.getGridCtrl();
        t && t.destroyGridUi(), this.context.destroy();
      }
    }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
      setTimeout(Fu.bind(window, this, "Grid API"), 100);
    }, n.prototype.warnIfDestroyed = function(t) {
      return this.destroyCalled && console.warn("AG Grid: Grid API method " + t + " was called on a grid that was destroyed."), this.destroyCalled;
    }, n.prototype.resetQuickFilter = function() {
      this.warnIfDestroyed("resetQuickFilter") || this.rowModel.forEachNode(function(t) {
        return t.quickFilterAggregateText = null;
      });
    }, n.prototype.getRangeSelections = function() {
      return console.warn(`AG Grid: in v20.1.x, api.getRangeSelections() is gone, please use getCellRanges() instead.
        We had to change how cell selections works a small bit to allow charting to integrate. The return type of
        getCellRanges() is a bit different, please check the AG Grid documentation.`), null;
    }, n.prototype.getCellRanges = function() {
      return this.rangeService ? this.rangeService.getCellRanges() : (console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), null);
    }, n.prototype.camelCaseToHumanReadable = function(t) {
      return oa(t);
    }, n.prototype.addRangeSelection = function(t) {
      console.warn("AG Grid: As of version 21.x, range selection changed slightly to allow charting integration. Please call api.addCellRange() instead of api.addRangeSelection()");
    }, n.prototype.addCellRange = function(t) {
      this.rangeService || console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), this.rangeService.addCellRange(t);
    }, n.prototype.clearRangeSelection = function() {
      this.rangeService || console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), this.rangeService.removeAllCellRanges();
    }, n.prototype.undoCellEditing = function() {
      this.undoRedoService.undo();
    }, n.prototype.redoCellEditing = function() {
      this.undoRedoService.redo();
    }, n.prototype.getCurrentUndoSize = function() {
      return this.undoRedoService.getCurrentUndoStackSize();
    }, n.prototype.getCurrentRedoSize = function() {
      return this.undoRedoService.getCurrentRedoStackSize();
    }, n.prototype.getChartModels = function() {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.getChartModels") && Q.assertRegistered(q.GridChartsModule, "api.getChartModels"))
        return this.chartService.getChartModels();
    }, n.prototype.getChartRef = function(t) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.getChartRef") && Q.assertRegistered(q.GridChartsModule, "api.getChartRef"))
        return this.chartService.getChartRef(t);
    }, n.prototype.getChartImageDataURL = function(t) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.getChartImageDataURL") && Q.assertRegistered(q.GridChartsModule, "api.getChartImageDataURL"))
        return this.chartService.getChartImageDataURL(t);
    }, n.prototype.createRangeChart = function(t) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.createRangeChart") && Q.assertRegistered(q.GridChartsModule, "api.createRangeChart"))
        return this.chartService.createRangeChart(t);
    }, n.prototype.createCrossFilterChart = function(t) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.createCrossFilterChart") && Q.assertRegistered(q.GridChartsModule, "api.createCrossFilterChart"))
        return this.chartService.createCrossFilterChart(t);
    }, n.prototype.restoreChart = function(t, e) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.restoreChart") && Q.assertRegistered(q.GridChartsModule, "api.restoreChart"))
        return this.chartService.restoreChart(t, e);
    }, n.prototype.createPivotChart = function(t) {
      if (Q.assertRegistered(q.RangeSelectionModule, "api.createPivotChart") && Q.assertRegistered(q.GridChartsModule, "api.createPivotChart"))
        return this.chartService.createPivotChart(t);
    }, n.prototype.copySelectedRowsToClipboard = function(t) {
      this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copySelectedRowsToClipboard(t);
    }, n.prototype.copySelectedRangeToClipboard = function(t) {
      this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copySelectedRangeToClipboard(t);
    }, n.prototype.copySelectedRangeDown = function() {
      this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copyRangeDown();
    }, n.prototype.showColumnMenuAfterButtonClick = function(t, e) {
      var r = this.columnModel.getGridColumn(t);
      this.menuFactory.showMenuAfterButtonClick(r, e, "columnMenu");
    }, n.prototype.showColumnMenuAfterMouseClick = function(t, e) {
      var r = this.columnModel.getGridColumn(t);
      if (r || (r = this.columnModel.getPrimaryColumn(t)), !r) {
        console.error("AG Grid: column '" + t + "' not found");
        return;
      }
      this.menuFactory.showMenuAfterMouseEvent(r, e);
    }, n.prototype.hidePopupMenu = function() {
      this.contextMenuFactory && this.contextMenuFactory.hideActiveMenu(), this.menuFactory.hideActiveMenu();
    }, n.prototype.setPopupParent = function(t) {
      this.gridOptionsWrapper.setProperty(B.PROP_POPUP_PARENT, t);
    }, n.prototype.tabToNextCell = function(t) {
      return this.navigationService.tabToNextCell(!1, t);
    }, n.prototype.tabToPreviousCell = function(t) {
      return this.navigationService.tabToNextCell(!0, t);
    }, n.prototype.getCellRendererInstances = function(t) {
      t === void 0 && (t = {});
      var e = this.rowRenderer.getCellRendererInstances(t), r = e.map(yr);
      return r;
    }, n.prototype.getCellEditorInstances = function(t) {
      t === void 0 && (t = {});
      var e = this.rowRenderer.getCellEditorInstances(t), r = e.map(yr);
      return r;
    }, n.prototype.getEditingCells = function() {
      return this.rowRenderer.getEditingCells();
    }, n.prototype.stopEditing = function(t) {
      t === void 0 && (t = !1), this.rowRenderer.stopEditing(t);
    }, n.prototype.startEditingCell = function(t) {
      var e = this.columnModel.getGridColumn(t.colKey);
      if (!e) {
        console.warn("AG Grid: no column found for " + t.colKey);
        return;
      }
      var r = {
        rowIndex: t.rowIndex,
        rowPinned: t.rowPinned || null,
        column: e
      }, o = t.rowPinned == null;
      o && this.gridBodyCon.getScrollFeature().ensureIndexVisible(t.rowIndex);
      var i = this.navigationService.getCellByPosition(r);
      i && i.startRowOrCellEdit(t.key, t.charPress);
    }, n.prototype.addAggFunc = function(t, e) {
      this.aggFuncService && this.aggFuncService.addAggFunc(t, e);
    }, n.prototype.addAggFuncs = function(t) {
      this.aggFuncService && this.aggFuncService.addAggFuncs(t);
    }, n.prototype.clearAggFuncs = function() {
      this.aggFuncService && this.aggFuncService.clear();
    }, n.prototype.applyServerSideTransaction = function(t) {
      if (!this.serverSideTransactionManager) {
        console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.");
        return;
      }
      return this.serverSideTransactionManager.applyTransaction(t);
    }, n.prototype.applyServerSideTransactionAsync = function(t, e) {
      if (!this.serverSideTransactionManager) {
        console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.");
        return;
      }
      return this.serverSideTransactionManager.applyTransactionAsync(t, e);
    }, n.prototype.retryServerSideLoads = function() {
      if (!this.serverSideRowModel) {
        console.warn("AG Grid: API retryServerSideLoads() can only be used when using Server-Side Row Model.");
        return;
      }
      this.serverSideRowModel.retryLoads();
    }, n.prototype.flushServerSideAsyncTransactions = function() {
      if (!this.serverSideTransactionManager) {
        console.warn("AG Grid: Cannot flush Server Side Transaction if not using the Server Side Row Model.");
        return;
      }
      return this.serverSideTransactionManager.flushAsyncTransactions();
    }, n.prototype.applyTransaction = function(t) {
      if (!this.clientSideRowModel) {
        console.error("AG Grid: updateRowData() only works with ClientSideRowModel. Working with InfiniteRowModel was deprecated in v23.1 and removed in v24.1");
        return;
      }
      var e = this.clientSideRowModel.updateRowData(t);
      return this.rowRenderer.refreshFullWidthRows(e.update), this.gridOptionsWrapper.isSuppressChangeDetection() || this.rowRenderer.refreshCells(), e;
    }, n.prototype.updateRowData = function(t) {
      var e = "AG Grid: as of v23.1, grid API updateRowData(transaction) is now called applyTransaction(transaction). updateRowData is deprecated and will be removed in a future major release.";
      return ve(function() {
        return console.warn(e);
      }, "updateRowData deprecated"), this.applyTransaction(t);
    }, n.prototype.applyTransactionAsync = function(t, e) {
      if (!this.clientSideRowModel) {
        console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.");
        return;
      }
      this.clientSideRowModel.batchUpdateRowData(t, e);
    }, n.prototype.flushAsyncTransactions = function() {
      if (!this.clientSideRowModel) {
        console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.");
        return;
      }
      this.clientSideRowModel.flushAsyncTransactions();
    }, n.prototype.batchUpdateRowData = function(t, e) {
      var r = "AG Grid: as of v23.1, grid API batchUpdateRowData(transaction, callback) is now called applyTransactionAsync(transaction, callback). batchUpdateRowData is deprecated and will be removed in a future major release.";
      ve(function() {
        return console.warn(r);
      }, "batchUpdateRowData deprecated"), this.applyTransactionAsync(t, e);
    }, n.prototype.insertItemsAtIndex = function(t, e, r) {
      console.warn("AG Grid: insertItemsAtIndex() is deprecated, use updateRowData(transaction) instead."), this.updateRowData({ add: e, addIndex: t, update: null, remove: null });
    }, n.prototype.removeItems = function(t, e) {
      console.warn("AG Grid: removeItems() is deprecated, use updateRowData(transaction) instead.");
      var r = t.map(function(o) {
        return o.data;
      });
      this.updateRowData({ add: null, addIndex: null, update: null, remove: r });
    }, n.prototype.addItems = function(t, e) {
      console.warn("AG Grid: addItems() is deprecated, use updateRowData(transaction) instead."), this.updateRowData({ add: t, addIndex: null, update: null, remove: null });
    }, n.prototype.refreshVirtualPageCache = function() {
      console.warn("AG Grid: refreshVirtualPageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"), this.refreshInfiniteCache();
    }, n.prototype.refreshInfinitePageCache = function() {
      console.warn("AG Grid: refreshInfinitePageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"), this.refreshInfiniteCache();
    }, n.prototype.refreshInfiniteCache = function() {
      this.infiniteRowModel ? this.infiniteRowModel.refreshCache() : console.warn("AG Grid: api.refreshInfiniteCache is only available when rowModelType='infinite'.");
    }, n.prototype.purgeVirtualPageCache = function() {
      console.warn("AG Grid: purgeVirtualPageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"), this.purgeInfinitePageCache();
    }, n.prototype.purgeInfinitePageCache = function() {
      console.warn("AG Grid: purgeInfinitePageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"), this.purgeInfiniteCache();
    }, n.prototype.purgeInfiniteCache = function() {
      this.infiniteRowModel ? this.infiniteRowModel.purgeCache() : console.warn("AG Grid: api.purgeInfiniteCache is only available when rowModelType='infinite'.");
    }, n.prototype.purgeEnterpriseCache = function(t) {
      console.warn("ag-grid: since version 18.x, api.purgeEnterpriseCache() should be replaced with api.purgeServerSideCache()"), this.purgeServerSideCache(t);
    }, n.prototype.purgeServerSideCache = function(t) {
      t === void 0 && (t = []), this.serverSideRowModel ? (console.warn("AG Grid: since v25.0, api.purgeServerSideCache is deprecated. Please use api.refreshServerSideStore({purge: true}) instead."), this.refreshServerSideStore({
        route: t,
        purge: !0
      })) : console.warn("AG Grid: api.purgeServerSideCache is only available when rowModelType='serverSide'.");
    }, n.prototype.refreshServerSideStore = function(t) {
      this.serverSideRowModel ? this.serverSideRowModel.refreshStore(t) : console.warn("AG Grid: api.refreshServerSideStore is only available when rowModelType='serverSide'.");
    }, n.prototype.getServerSideStoreState = function() {
      return this.serverSideRowModel ? this.serverSideRowModel.getStoreState() : (console.warn("AG Grid: api.getServerSideStoreState is only available when rowModelType='serverSide'."), []);
    }, n.prototype.getVirtualRowCount = function() {
      return console.warn("AG Grid: getVirtualRowCount() is now called getInfiniteRowCount(), please call getInfiniteRowCount() instead"), this.getInfiniteRowCount();
    }, n.prototype.getInfiniteRowCount = function() {
      if (this.infiniteRowModel)
        return this.infiniteRowModel.getRowCount();
      console.warn("AG Grid: api.getVirtualRowCount is only available when rowModelType='virtual'.");
    }, n.prototype.isMaxRowFound = function() {
      return console.warn("AG Grid: api.isLastRowIndexKnown is deprecated, please use api.isLastRowIndexKnown()"), this.isLastRowIndexKnown();
    }, n.prototype.isLastRowIndexKnown = function() {
      if (this.infiniteRowModel)
        return this.infiniteRowModel.isLastRowIndexKnown();
      console.warn("AG Grid: api.isMaxRowFound is only available when rowModelType='virtual'.");
    }, n.prototype.setVirtualRowCount = function(t, e) {
      console.warn("AG Grid: setVirtualRowCount() is now called setInfiniteRowCount(), please call setInfiniteRowCount() instead"), this.setRowCount(t, e);
    }, n.prototype.setInfiniteRowCount = function(t, e) {
      console.warn("AG Grid: setInfiniteRowCount() is now called setRowCount(), please call setRowCount() instead"), this.setRowCount(t, e);
    }, n.prototype.setRowCount = function(t, e) {
      this.infiniteRowModel ? this.infiniteRowModel.setRowCount(t, e) : console.warn("AG Grid: api.setRowCount is only available for Infinite Row Model.");
    }, n.prototype.getVirtualPageState = function() {
      return console.warn("AG Grid: getVirtualPageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"), this.getCacheBlockState();
    }, n.prototype.getInfinitePageState = function() {
      return console.warn("AG Grid: getInfinitePageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"), this.getCacheBlockState();
    }, n.prototype.getCacheBlockState = function() {
      return this.rowNodeBlockLoader.getBlockState();
    }, n.prototype.checkGridSize = function() {
      console.warn("in AG Grid v25.2.0, checkGridSize() was removed, as it was legacy and didn't do anything uesful.");
    }, n.prototype.getFirstRenderedRow = function() {
      return console.warn("in AG Grid v12, getFirstRenderedRow() was renamed to getFirstDisplayedRow()"), this.getFirstDisplayedRow();
    }, n.prototype.getFirstDisplayedRow = function() {
      return this.rowRenderer.getFirstVirtualRenderedRow();
    }, n.prototype.getLastRenderedRow = function() {
      return console.warn("in AG Grid v12, getLastRenderedRow() was renamed to getLastDisplayedRow()"), this.getLastDisplayedRow();
    }, n.prototype.getLastDisplayedRow = function() {
      return this.rowRenderer.getLastVirtualRenderedRow();
    }, n.prototype.getDisplayedRowAtIndex = function(t) {
      return this.rowModel.getRow(t);
    }, n.prototype.getDisplayedRowCount = function() {
      return this.rowModel.getRowCount();
    }, n.prototype.paginationIsLastPageFound = function() {
      return this.paginationProxy.isLastPageFound();
    }, n.prototype.paginationGetPageSize = function() {
      return this.paginationProxy.getPageSize();
    }, n.prototype.paginationSetPageSize = function(t) {
      this.gridOptionsWrapper.setProperty("paginationPageSize", t);
    }, n.prototype.paginationGetCurrentPage = function() {
      return this.paginationProxy.getCurrentPage();
    }, n.prototype.paginationGetTotalPages = function() {
      return this.paginationProxy.getTotalPages();
    }, n.prototype.paginationGetRowCount = function() {
      return this.paginationProxy.getMasterRowCount();
    }, n.prototype.paginationGoToNextPage = function() {
      this.paginationProxy.goToNextPage();
    }, n.prototype.paginationGoToPreviousPage = function() {
      this.paginationProxy.goToPreviousPage();
    }, n.prototype.paginationGoToFirstPage = function() {
      this.paginationProxy.goToFirstPage();
    }, n.prototype.paginationGoToLastPage = function() {
      this.paginationProxy.goToLastPage();
    }, n.prototype.paginationGoToPage = function(t) {
      this.paginationProxy.goToPage(t);
    }, ue([
      de("immutableService")
    ], n.prototype, "immutableService", void 0), ue([
      de("csvCreator")
    ], n.prototype, "csvCreator", void 0), ue([
      de("excelCreator")
    ], n.prototype, "excelCreator", void 0), ue([
      h("rowRenderer")
    ], n.prototype, "rowRenderer", void 0), ue([
      h("navigationService")
    ], n.prototype, "navigationService", void 0), ue([
      h("filterManager")
    ], n.prototype, "filterManager", void 0), ue([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), ue([
      h("selectionService")
    ], n.prototype, "selectionService", void 0), ue([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), ue([
      h("valueService")
    ], n.prototype, "valueService", void 0), ue([
      h("alignedGridsService")
    ], n.prototype, "alignedGridsService", void 0), ue([
      h("eventService")
    ], n.prototype, "eventService", void 0), ue([
      h("pinnedRowModel")
    ], n.prototype, "pinnedRowModel", void 0), ue([
      h("context")
    ], n.prototype, "context", void 0), ue([
      h("rowModel")
    ], n.prototype, "rowModel", void 0), ue([
      h("sortController")
    ], n.prototype, "sortController", void 0), ue([
      h("paginationProxy")
    ], n.prototype, "paginationProxy", void 0), ue([
      h("focusService")
    ], n.prototype, "focusService", void 0), ue([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), ue([
      de("rangeService")
    ], n.prototype, "rangeService", void 0), ue([
      de("clipboardService")
    ], n.prototype, "clipboardService", void 0), ue([
      de("aggFuncService")
    ], n.prototype, "aggFuncService", void 0), ue([
      h("menuFactory")
    ], n.prototype, "menuFactory", void 0), ue([
      de("contextMenuFactory")
    ], n.prototype, "contextMenuFactory", void 0), ue([
      h("valueCache")
    ], n.prototype, "valueCache", void 0), ue([
      h("animationFrameService")
    ], n.prototype, "animationFrameService", void 0), ue([
      de("statusBarService")
    ], n.prototype, "statusBarService", void 0), ue([
      de("chartService")
    ], n.prototype, "chartService", void 0), ue([
      de("undoRedoService")
    ], n.prototype, "undoRedoService", void 0), ue([
      de("rowNodeBlockLoader")
    ], n.prototype, "rowNodeBlockLoader", void 0), ue([
      de("ssrmTransactionManager")
    ], n.prototype, "serverSideTransactionManager", void 0), ue([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), ue([
      de("frameworkComponentWrapper")
    ], n.prototype, "frameworkComponentWrapper", void 0), ue([
      G
    ], n.prototype, "init", null), ue([
      ot
    ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = ue([
      U("gridApi")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Gy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ny = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ci = (
  /** @class */
  function(n) {
    Gy(t, n);
    function t(e, r, o, i) {
      var s = n.call(this) || this;
      return s.columnOrGroup = e, s.eCell = r, s.ariaEl = s.eCell.querySelector("[role=columnheader]") || s.eCell, s.colsSpanning = i, s.beans = o, s;
    }
    return t.prototype.setColsSpanning = function(e) {
      this.colsSpanning = e, this.onLeftChanged();
    }, t.prototype.getColumnOrGroup = function() {
      return this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning ? _e(this.colsSpanning) : this.columnOrGroup;
    }, t.prototype.postConstruct = function() {
      this.addManagedListener(this.columnOrGroup, pe.EVENT_LEFT_CHANGED, this.onLeftChanged.bind(this)), this.setLeftFirstTime(), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onLeftChanged.bind(this)), this.addManagedListener(this.beans.gridOptionsWrapper, B.PROP_DOM_LAYOUT, this.onLeftChanged.bind(this));
    }, t.prototype.setLeftFirstTime = function() {
      var e = this.beans.gridOptionsWrapper.isSuppressColumnMoveAnimation(), r = O(this.columnOrGroup.getOldLeft()), o = this.beans.columnAnimationService.isActive() && r && !e;
      o ? this.animateInLeft() : this.onLeftChanged();
    }, t.prototype.animateInLeft = function() {
      var e = this, r = this.getColumnOrGroup(), o = r.getLeft(), i = r.getOldLeft(), s = this.modifyLeftForPrintLayout(r, i), a = this.modifyLeftForPrintLayout(r, o);
      this.setLeft(s), this.actualLeft = a, this.beans.columnAnimationService.executeNextVMTurn(function() {
        e.actualLeft === a && e.setLeft(a);
      });
    }, t.prototype.onLeftChanged = function() {
      var e = this.getColumnOrGroup(), r = e.getLeft();
      this.actualLeft = this.modifyLeftForPrintLayout(e, r), this.setLeft(this.actualLeft);
    }, t.prototype.modifyLeftForPrintLayout = function(e, r) {
      var o = this.beans.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT;
      if (!o || e.getPinned() === w.PINNED_LEFT)
        return r;
      var i = this.beans.columnModel.getDisplayedColumnsLeftWidth();
      if (e.getPinned() === w.PINNED_RIGHT) {
        var s = this.beans.columnModel.getBodyContainerWidth();
        return i + s + r;
      }
      return i + r;
    }, t.prototype.setLeft = function(e) {
      O(e) && (this.eCell.style.left = e + "px");
      var r;
      if (this.columnOrGroup instanceof pe)
        r = this.columnOrGroup;
      else {
        var o = this.columnOrGroup, i = o.getLeafColumns();
        if (!i.length)
          return;
        i.length > 1 && _p(this.ariaEl, i.length), r = i[0];
      }
      var s = this.beans.columnModel.getAriaColumnIndex(r);
      ga(this.ariaEl, s);
    }, Ny([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var xy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ul = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Da = (
  /** @class */
  function(n) {
    xy(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.columns = e, o.element = r, o;
    }
    return t.prototype.postConstruct = function() {
      this.gridOptionsWrapper.isColumnHoverHighlight() && this.addMouseHoverListeners();
    }, t.prototype.addMouseHoverListeners = function() {
      this.addManagedListener(this.element, "mouseout", this.onMouseOut.bind(this)), this.addManagedListener(this.element, "mouseover", this.onMouseOver.bind(this));
    }, t.prototype.onMouseOut = function() {
      this.columnHoverService.clearMouseOver();
    }, t.prototype.onMouseOver = function() {
      this.columnHoverService.setMouseOver(this.columns);
    }, Ul([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), Ul([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Hy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, uc = (
  /** @class */
  function(n) {
    Hy(t, n);
    function t(e, r) {
      var o = n.call(this, e, r) || this;
      return o.column = e, o;
    }
    return t.prototype.setComp = function(e, r, o, i) {
      n.prototype.setGui.call(this, r), this.comp = e, this.eButtonShowMainFilter = o, this.eFloatingFilterBody = i;
      var s = this.column.getColDef(), a = !!s.filter || !!s.filterFramework, l = !!s.floatingFilter;
      this.active = a && l, this.setupWidth(), this.setupLeft(), this.setupHover(), this.setupFocus(), this.setupUserComp(), this.setupSyncWithFilter(), this.setupUi(), this.addManagedListener(this.eButtonShowMainFilter, "click", this.showParentFilter.bind(this));
    }, t.prototype.setupUi = function() {
      if (this.comp.addOrRemoveButtonWrapperCssClass("ag-hidden", !this.active || this.suppressFilterButton), !!this.active) {
        this.comp.addOrRemoveBodyCssClass("ag-floating-filter-full-body", this.suppressFilterButton), this.comp.addOrRemoveBodyCssClass("ag-floating-filter-body", !this.suppressFilterButton);
        var e = xe("filter", this.gridOptionsWrapper, this.column);
        e && this.eButtonShowMainFilter.appendChild(e);
      }
    }, t.prototype.setupFocus = function() {
      this.createManagedBean(new Xt(this.eGui, {
        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
        onTabKeyDown: this.onTabKeyDown.bind(this),
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this)
      }));
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
      if (!i) {
        var s = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);
        if (s) {
          this.beans.headerNavigationService.scrollToColumn(this.column), e.preventDefault(), s.focus();
          return;
        }
        var a = this.findNextColumnWithFloatingFilter(e.shiftKey);
        a && this.focusService.focusHeaderPosition({
          headerPosition: {
            headerRowIndex: this.getParentRowCtrl().getRowIndex(),
            column: a
          },
          event: e
        }) && e.preventDefault();
      }
    }, t.prototype.findNextColumnWithFloatingFilter = function(e) {
      var r = this.beans.columnModel, o = this.column;
      do
        if (o = e ? r.getDisplayedColBefore(o) : r.getDisplayedColAfter(o), !o)
          break;
      while (!o.getColDef().filter || !o.getColDef().floatingFilter);
      return o;
    }, t.prototype.handleKeyDown = function(e) {
      var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
      switch (e.key) {
        case P.UP:
        case P.DOWN:
          i || e.preventDefault();
        case P.LEFT:
        case P.RIGHT:
          if (i)
            return;
          e.stopPropagation();
        case P.ENTER:
          i && this.focusService.focusInto(this.eGui) && e.preventDefault();
          break;
        case P.ESCAPE:
          i || this.eGui.focus();
      }
    }, t.prototype.onFocusIn = function(e) {
      var r = this.eGui.contains(e.relatedTarget);
      if (!r) {
        var o = !!e.relatedTarget && !e.relatedTarget.classList.contains("ag-floating-filter"), i = !!e.relatedTarget && ri(e.relatedTarget, "ag-floating-filter");
        if (o && i && e.target === this.eGui) {
          var s = this.lastFocusEvent, a = !!(s && s.key === P.TAB);
          if (s && a) {
            var l = s.shiftKey;
            this.focusService.focusInto(this.eGui, l);
          }
        }
        var u = this.getRowIndex();
        this.beans.focusService.setFocusedHeader(u, this.column);
      }
    }, t.prototype.setupHover = function() {
      var e = this;
      this.createManagedBean(new Da([this.column], this.eGui));
      var r = function() {
        if (e.gridOptionsWrapper.isColumnHoverHighlight()) {
          var o = e.columnHoverService.isHovered(e.column);
          e.comp.addOrRemoveCssClass("ag-column-hover", o);
        }
      };
      this.addManagedListener(this.eventService, v.EVENT_COLUMN_HOVER_CHANGED, r), r();
    }, t.prototype.setupLeft = function() {
      var e = new ci(this.column, this.eGui, this.beans);
      this.createManagedBean(e);
    }, t.prototype.setupUserComp = function() {
      var e = this;
      if (this.active) {
        var r = this.column.getColDef(), o = this.filterManager.createFilterParams(this.column, r), i = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(r, Bs, o), s = this.userComponentFactory.getDefaultFloatingFilterType(r);
        s == null && (s = "agReadOnlyFloatingFilter");
        var a = {
          api: this.gridApi,
          column: this.column,
          filterParams: i,
          currentParentModel: function() {
            return e.currentParentModel();
          },
          parentFilterInstance: function(u) {
            return e.parentFilterInstance(u);
          },
          showParentFilter: function() {
            return e.showParentFilter();
          },
          suppressFilterButton: !1
          // This one might be overridden from the colDef
        };
        this.suppressFilterButton = r.floatingFilterComponentParams ? !!r.floatingFilterComponentParams.suppressFilterButton : !1;
        var l = this.userComponentFactory.getFloatingFilterCompDetails(r, a, s);
        l && this.comp.setCompDetails(l);
      }
    }, t.prototype.currentParentModel = function() {
      var e = this.getFilterComponent(!1);
      return e ? e.resolveNow(null, function(r) {
        return r && r.getModel();
      }) : null;
    }, t.prototype.getFilterComponent = function(e) {
      return e === void 0 && (e = !0), this.filterManager.getFilterComponent(this.column, "NO_UI", e);
    }, t.prototype.parentFilterInstance = function(e) {
      var r = this.getFilterComponent();
      r != null && r.then(function(o) {
        e(yr(o));
      });
    }, t.prototype.showParentFilter = function() {
      var e = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;
      this.menuFactory.showMenuAfterButtonClick(this.column, e, "floatingFilter", "filterMenuTab", ["filterMenuTab"]);
    }, t.prototype.setupSyncWithFilter = function() {
      var e = this;
      if (this.active) {
        var r = function(o) {
          var i = e.comp.getFloatingFilterComp();
          if (i) {
            var s = e.currentParentModel();
            i.then(function(a) {
              a && a.onParentModelChanged(s, o);
            });
          }
        };
        this.addManagedListener(this.column, pe.EVENT_FILTER_CHANGED, r), this.filterManager.isFilterActive(this.column) && r(null);
      }
    }, t.prototype.setupWidth = function() {
      var e = this, r = function() {
        var o = e.column.getActualWidth() + "px";
        e.comp.setWidth(o);
      };
      this.addManagedListener(this.column, pe.EVENT_WIDTH_CHANGED, r), r();
    }, Lr([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Lr([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), Lr([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), Lr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Lr([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), Lr([
      h("beans")
    ], t.prototype, "beans", void 0), t;
  }($o)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Aa = (
  /** @class */
  function() {
    function n() {
    }
    return n.getHeaderClassesFromColDef = function(t, e, r, o) {
      return K(t) ? [] : this.getColumnClassesFromCollDef(t.headerClass, t, e, r, o);
    }, n.getToolPanelClassesFromColDef = function(t, e, r, o) {
      return K(t) ? [] : this.getColumnClassesFromCollDef(t.toolPanelClass, t, e, r, o);
    }, n.getClassParams = function(t, e, r, o) {
      return {
        // bad naming, as colDef here can be a group or a column,
        // however most people won't appreciate the difference,
        // so keeping it as colDef to avoid confusion.
        colDef: t,
        column: r,
        columnGroup: o,
        context: e.getContext(),
        api: e.getApi()
      };
    }, n.getColumnClassesFromCollDef = function(t, e, r, o, i) {
      if (K(t))
        return [];
      var s;
      if (typeof t == "function") {
        var a = this.getClassParams(e, r, o, i);
        s = t(a);
      } else
        s = t;
      return typeof s == "string" ? [s] : Array.isArray(s) ? s : [];
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Wy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Vy = (
  /** @class */
  function(n) {
    Wy(t, n);
    function t(e, r, o, i, s) {
      var a = n.call(this) || this;
      return a.pinned = e, a.column = r, a.eResize = o, a.comp = i, a.ctrl = s, a;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.column.getColDef(), o = [], i, s, a = function() {
        if (Ee(e.eResize, i), !!i) {
          var p = e.horizontalResizeService.addResizeBar({
            eResizeBar: e.eResize,
            onResizeStart: e.onResizeStart.bind(e),
            onResizing: e.onResizing.bind(e, !1),
            onResizeEnd: e.onResizing.bind(e, !0)
          });
          if (o.push(p), s) {
            var c = e.gridOptionsWrapper.isSkipHeaderOnAutoSize(), d = function() {
              e.columnModel.autoSizeColumn(e.column, c, "uiColumnResized");
            };
            e.eResize.addEventListener("dblclick", d);
            var f = new bt(e.eResize);
            f.addEventListener(bt.EVENT_DOUBLE_TAP, d), e.addDestroyFunc(function() {
              e.eResize.removeEventListener("dblclick", d), f.removeEventListener(bt.EVENT_DOUBLE_TAP, d), f.destroy();
            });
          }
        }
      }, l = function() {
        o.forEach(function(p) {
          return p();
        }), o.length = 0;
      }, u = function() {
        var p = e.column.isResizable(), c = !e.gridOptionsWrapper.isSuppressAutoSize() && !r.suppressAutoSize, d = p !== i || c !== s;
        d && (i = p, s = c, l(), a());
      };
      u(), this.addDestroyFunc(l), this.ctrl.addRefreshFunction(u);
    }, t.prototype.onResizing = function(e, r) {
      var o = this.normaliseResizeAmount(r), i = [{ key: this.column, newWidth: this.resizeStartWidth + o }];
      this.columnModel.setColumnWidths(i, this.resizeWithShiftKey, e, "uiColumnDragged"), e && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
    }, t.prototype.onResizeStart = function(e) {
      this.resizeStartWidth = this.column.getActualWidth(), this.resizeWithShiftKey = e, this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
    }, t.prototype.normaliseResizeAmount = function(e) {
      var r = e, o = this.pinned !== w.PINNED_LEFT, i = this.pinned === w.PINNED_RIGHT;
      return this.gridOptionsWrapper.isEnableRtl() ? o && (r *= -1) : i && (r *= -1), r;
    }, Yi([
      h("horizontalResizeService")
    ], t.prototype, "horizontalResizeService", void 0), Yi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Yi([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var By = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), eo = (
  /** @class */
  function(n) {
    By(t, n);
    function t(e, r, o) {
      r === void 0 && (r = "ag-checkbox"), o === void 0 && (o = "checkbox");
      var i = n.call(this, e, r, o) || this;
      return i.labelAlignment = "right", i.selected = !1, i.readOnly = !1, i.passive = !1, i;
    }
    return t.prototype.addInputListeners = function() {
      this.addManagedListener(this.eInput, "click", this.onCheckboxClick.bind(this)), this.addManagedListener(this.eLabel, "click", this.toggle.bind(this));
    }, t.prototype.getNextValue = function() {
      return this.selected === void 0 ? !0 : !this.selected;
    }, t.prototype.setPassive = function(e) {
      this.passive = e;
    }, t.prototype.isReadOnly = function() {
      return this.readOnly;
    }, t.prototype.setReadOnly = function(e) {
      this.eWrapper.classList.toggle("ag-disabled", e), this.eInput.disabled = e, this.readOnly = e;
    }, t.prototype.setDisabled = function(e) {
      return this.eWrapper.classList.toggle("ag-disabled", e), n.prototype.setDisabled.call(this, e);
    }, t.prototype.toggle = function() {
      if (!this.eInput.disabled) {
        var e = this.isSelected(), r = this.getNextValue();
        this.passive ? this.dispatchChange(r, e) : this.setValue(r);
      }
    }, t.prototype.getValue = function() {
      return this.isSelected();
    }, t.prototype.setValue = function(e, r) {
      return this.refreshSelectedClass(e), this.setSelected(e, r), this;
    }, t.prototype.setName = function(e) {
      var r = this.getInputElement();
      return r.name = e, this;
    }, t.prototype.isSelected = function() {
      return this.selected;
    }, t.prototype.setSelected = function(e, r) {
      this.isSelected() !== e && (this.previousValue = this.isSelected(), e = this.selected = typeof e == "boolean" ? e : void 0, this.eInput.checked = e, this.eInput.indeterminate = e === void 0, r || this.dispatchChange(this.selected, this.previousValue));
    }, t.prototype.dispatchChange = function(e, r, o) {
      this.dispatchEvent({ type: t.EVENT_CHANGED, selected: e, previousValue: r, event: o });
      var i = this.getInputElement(), s = {
        type: v.EVENT_CHECKBOX_CHANGED,
        id: i.id,
        name: i.name,
        selected: e,
        previousValue: r
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.onCheckboxClick = function(e) {
      if (!(this.passive || this.eInput.disabled)) {
        var r = this.isSelected(), o = this.selected = e.target.checked;
        this.refreshSelectedClass(o), this.dispatchChange(o, r, e);
      }
    }, t.prototype.refreshSelectedClass = function(e) {
      this.eWrapper.classList.toggle("ag-checked", e === !0), this.eWrapper.classList.toggle("ag-indeterminate", e == null);
    }, t;
  }(Yt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), an = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Uy = (
  /** @class */
  function(n) {
    jy(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.cbSelectAllVisible = !1, r.processingEventFromCheckbox = !1, r.column = e;
      var o = e.getColDef();
      return r.filteredOnly = o ? !!o.headerCheckboxSelectionFilteredOnly : !1, r;
    }
    return t.prototype.onSpaceKeyPressed = function(e) {
      var r = this.cbSelectAll, o = this.gridOptionsWrapper.getDocument();
      r.isDisplayed() && !r.getGui().contains(o.activeElement) && (e.preventDefault(), r.setValue(!r.getValue()));
    }, t.prototype.getCheckboxGui = function() {
      return this.cbSelectAll.getGui();
    }, t.prototype.setComp = function(e) {
      this.comp = e, this.cbSelectAll = this.createManagedBean(new eo()), this.cbSelectAll.addCssClass("ag-header-select-all"), rt(this.cbSelectAll.getGui(), "presentation"), this.showOrHideSelectAll(), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, v.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this)), this.addManagedListener(this.cbSelectAll, eo.EVENT_CHANGED, this.onCbSelectAll.bind(this)), this.cbSelectAll.getInputElement().setAttribute("tabindex", "-1"), this.refreshSelectAllLabel();
    }, t.prototype.showOrHideSelectAll = function() {
      this.cbSelectAllVisible = this.isCheckboxSelection(), this.cbSelectAll.setDisplayed(this.cbSelectAllVisible), this.cbSelectAllVisible && (this.checkRightRowModelType(), this.updateStateOfCheckbox()), this.refreshHeaderAriaDescribedBy(this.cbSelectAllVisible);
    }, t.prototype.refreshHeaderAriaDescribedBy = function(e) {
      var r = e ? this.cbSelectAll.getInputElement().id : void 0;
      this.comp.setAriaDescribedBy(r);
    }, t.prototype.onModelChanged = function() {
      this.cbSelectAllVisible && this.updateStateOfCheckbox();
    }, t.prototype.onSelectionChanged = function() {
      this.cbSelectAllVisible && this.updateStateOfCheckbox();
    }, t.prototype.getNextCheckboxState = function(e) {
      return e.selected === 0 && e.notSelected === 0 ? !1 : e.selected > 0 && e.notSelected > 0 ? null : e.selected > 0;
    }, t.prototype.updateStateOfCheckbox = function() {
      if (!this.processingEventFromCheckbox) {
        this.processingEventFromCheckbox = !0;
        var e = this.getSelectionCount(), r = this.getNextCheckboxState(e);
        this.cbSelectAll.setValue(r), this.refreshSelectAllLabel(), this.processingEventFromCheckbox = !1;
      }
    }, t.prototype.refreshSelectAllLabel = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.cbSelectAll.getValue(), o = r ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), i = e("ariaRowSelectAll", "Press Space to toggle all rows selection");
      this.cbSelectAll.setInputAriaLabel(i + " (" + o + ")");
    }, t.prototype.getSelectionCount = function() {
      var e = this, r = 0, o = 0, i = function(s) {
        e.gridOptionsWrapper.isGroupSelectsChildren() && s.group || (s.isSelected() ? r++ : s.selectable && o++);
      };
      return this.filteredOnly ? this.gridApi.forEachNodeAfterFilter(i) : this.gridApi.forEachNode(i), {
        notSelected: o,
        selected: r
      };
    }, t.prototype.checkRightRowModelType = function() {
      var e = this.rowModel.getType(), r = e === w.ROW_MODEL_TYPE_CLIENT_SIDE;
      r || console.warn("AG Grid: selectAllCheckbox is only available if using normal row model, you are using " + e);
    }, t.prototype.onCbSelectAll = function() {
      if (!this.processingEventFromCheckbox && this.cbSelectAllVisible) {
        var e = this.cbSelectAll.getValue();
        e ? this.selectionService.selectAllRowNodes(this.filteredOnly) : this.selectionService.deselectAllRowNodes(this.filteredOnly);
      }
    }, t.prototype.isCheckboxSelection = function() {
      var e = this.column.getColDef().headerCheckboxSelection;
      if (typeof e == "function") {
        var r = e;
        e = r({
          column: this.column,
          colDef: this.column.getColDef(),
          columnApi: this.columnApi,
          api: this.gridApi
        });
      }
      return e ? this.gridOptionsWrapper.isRowModelServerSide() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Server Side Row Model"), !1) : this.gridOptionsWrapper.isRowModelInfinite() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Infinite Row Model"), !1) : this.gridOptionsWrapper.isRowModelViewport() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Viewport Row Model"), !1) : !0 : !1;
    }, an([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), an([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), an([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), an([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ky = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, pc = (
  /** @class */
  function(n) {
    ky(t, n);
    function t(e, r) {
      var o = n.call(this, e, r) || this;
      return o.refreshFunctions = [], o.userHeaderClasses = /* @__PURE__ */ new Set(), o.column = e, o;
    }
    return t.prototype.setComp = function(e, r, o) {
      var i = this;
      n.prototype.setGui.call(this, r), this.comp = e, this.colDefVersion = this.columnModel.getColDefVersion(), this.updateState(), this.setupWidth(), this.setupMovingCss(), this.setupMenuClass(), this.setupSortableClass(), this.addColumnHoverListener(), this.setupFilterCss(), this.setupColId(), this.setupClassesFromColDef(), this.setupTooltip(), this.addActiveHeaderMouseListeners(), this.setupSelectAll(), this.setupUserComp(), this.createManagedBean(new Vy(this.getPinned(), this.column, o, e, this)), this.createManagedBean(new Da([this.column], r)), this.createManagedBean(new ci(this.column, r, this.beans)), this.createManagedBean(new Xt(r, {
        shouldStopEventPropagation: function(s) {
          return i.shouldStopEventPropagation(s);
        },
        onTabKeyDown: function() {
          return null;
        },
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this),
        onFocusOut: this.onFocusOut.bind(this)
      })), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));
    }, t.prototype.setupUserComp = function() {
      var e = this.lookupUserCompDetails();
      this.setCompDetails(e);
    }, t.prototype.setCompDetails = function(e) {
      this.userCompDetails = e, this.comp.setUserCompDetails(e);
    }, t.prototype.lookupUserCompDetails = function() {
      var e = this.createParams(), r = this.column.getColDef();
      return this.userComponentFactory.getHeaderCompDetails(r, e);
    }, t.prototype.createParams = function() {
      var e = this, r = this.column.getColDef(), o = {
        column: this.column,
        displayName: this.displayName,
        enableSorting: r.sortable,
        enableMenu: this.menuEnabled,
        showColumnMenu: function(i) {
          e.gridApi.showColumnMenuAfterButtonClick(e.column, i);
        },
        progressSort: function(i) {
          e.sortController.progressSort(e.column, !!i, "uiColumnSorted");
        },
        setSort: function(i, s) {
          e.sortController.setSortForColumn(e.column, i, !!s, "uiColumnSorted");
        },
        api: this.gridApi,
        columnApi: this.columnApi,
        context: this.gridOptionsWrapper.getContext(),
        eGridHeader: this.getGui()
      };
      return o;
    }, t.prototype.setupSelectAll = function() {
      this.selectAllFeature = this.createManagedBean(new Uy(this.column)), this.selectAllFeature.setComp(this.comp);
    }, t.prototype.getSelectAllGui = function() {
      return this.selectAllFeature.getCheckboxGui();
    }, t.prototype.handleKeyDown = function(e) {
      e.key === P.SPACE && this.selectAllFeature.onSpaceKeyPressed(e), e.key === P.ENTER && this.onEnterKeyPressed(e);
    }, t.prototype.onEnterKeyPressed = function(e) {
      var r = this.comp.getUserCompInstance();
      if (r) {
        if (e.ctrlKey || e.metaKey)
          this.menuEnabled && r.showMenu && (e.preventDefault(), r.showMenu());
        else if (this.sortable) {
          var o = e.shiftKey;
          this.sortController.progressSort(this.column, o, "uiColumnSorted");
        }
      }
    }, t.prototype.isMenuEnabled = function() {
      return this.menuEnabled;
    }, t.prototype.onFocusIn = function(e) {
      if (!this.getGui().contains(e.relatedTarget)) {
        var r = this.getRowIndex();
        this.focusService.setFocusedHeader(r, this.column);
      }
      this.setActiveHeader(!0);
    }, t.prototype.onFocusOut = function(e) {
      this.getGui().contains(e.relatedTarget) || this.setActiveHeader(!1);
    }, t.prototype.setupTooltip = function() {
      var e = this, r = {
        getColumn: function() {
          return e.column;
        },
        getColDef: function() {
          return e.column.getColDef();
        },
        getGui: function() {
          return e.eGui;
        },
        getLocation: function() {
          return "header";
        },
        getTooltipValue: function() {
          var i = e.column.getColDef().headerTooltip;
          return i;
        }
      }, o = this.createManagedBean(new Oa(r, this.beans));
      o.setComp(this.comp), this.refreshFunctions.push(function() {
        return o.refreshToolTip();
      });
    }, t.prototype.setupClassesFromColDef = function() {
      var e = this, r = function() {
        var o = e.column.getColDef(), i = e.gridOptionsWrapper, s = Aa.getHeaderClassesFromColDef(o, i, e.column, null), a = e.userHeaderClasses;
        e.userHeaderClasses = new Set(s), s.forEach(function(l) {
          a.has(l) ? a.delete(l) : e.comp.addOrRemoveCssClass(l, !0);
        }), a.forEach(function(l) {
          return e.comp.addOrRemoveCssClass(l, !1);
        });
      };
      this.refreshFunctions.push(r), r();
    }, t.prototype.setDragSource = function(e) {
      var r = this;
      this.dragSourceElement = e, this.removeDragSource(), e && this.draggable && (this.moveDragSource = {
        type: mt.HeaderCell,
        eElement: e,
        defaultIconName: et.ICON_HIDE,
        getDragItem: function() {
          return r.createDragItem();
        },
        dragItemName: this.displayName,
        onDragStarted: function() {
          return r.column.setMoving(!0, "uiColumnMoved");
        },
        onDragStopped: function() {
          return r.column.setMoving(!1, "uiColumnMoved");
        }
      }, this.dragAndDropService.addDragSource(this.moveDragSource, !0));
    }, t.prototype.createDragItem = function() {
      var e = {};
      return e[this.column.getId()] = this.column.isVisible(), {
        columns: [this.column],
        visibleState: e
      };
    }, t.prototype.removeDragSource = function() {
      this.moveDragSource && (this.dragAndDropService.removeDragSource(this.moveDragSource), this.moveDragSource = void 0);
    }, t.prototype.onNewColumnsLoaded = function() {
      var e = this.columnModel.getColDefVersion();
      e != this.colDefVersion && (this.colDefVersion = e, this.refresh());
    }, t.prototype.updateState = function() {
      var e = this.column.getColDef();
      this.menuEnabled = this.menuFactory.isMenuEnabled(this.column) && !e.suppressMenu, this.sortable = e.sortable, this.displayName = this.calculateDisplayName(), this.draggable = this.workOutDraggable();
    }, t.prototype.addRefreshFunction = function(e) {
      this.refreshFunctions.push(e);
    }, t.prototype.refresh = function() {
      this.updateState(), this.refreshHeaderComp(), this.refreshFunctions.forEach(function(e) {
        return e();
      });
    }, t.prototype.refreshHeaderComp = function() {
      var e = this.lookupUserCompDetails(), r = this.comp.getUserCompInstance(), o = r != null && this.userCompDetails.componentClass == e.componentClass, i = o ? this.attemptHeaderCompRefresh(e.params) : !1;
      i ? this.setDragSource(this.dragSourceElement) : this.setCompDetails(e);
    }, t.prototype.attemptHeaderCompRefresh = function(e) {
      var r = this.comp.getUserCompInstance();
      if (!r || !r.refresh)
        return !1;
      var o = r.refresh(e);
      return o;
    }, t.prototype.calculateDisplayName = function() {
      return this.columnModel.getDisplayNameForColumn(this.column, "header", !0);
    }, t.prototype.checkDisplayName = function() {
      this.displayName !== this.calculateDisplayName() && this.refresh();
    }, t.prototype.workOutDraggable = function() {
      var e = this.column.getColDef(), r = this.gridOptionsWrapper.isSuppressMovableColumns(), o = !r && !e.suppressMovable && !e.lockPosition;
      return !!o || !!e.enableRowGroup || !!e.enablePivot;
    }, t.prototype.onColumnRowGroupChanged = function() {
      this.checkDisplayName();
    }, t.prototype.onColumnPivotChanged = function() {
      this.checkDisplayName();
    }, t.prototype.onColumnValueChanged = function() {
      this.checkDisplayName();
    }, t.prototype.setupWidth = function() {
      var e = this, r = function() {
        e.comp.setWidth(e.column.getActualWidth() + "px");
      };
      this.addManagedListener(this.column, pe.EVENT_WIDTH_CHANGED, r), r();
    }, t.prototype.setupMovingCss = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.column.isMoving());
      };
      this.addManagedListener(this.column, pe.EVENT_MOVING_CHANGED, r), r();
    }, t.prototype.setupMenuClass = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-column-menu-visible", e.column.isMenuVisible());
      };
      this.addManagedListener(this.column, pe.EVENT_MENU_VISIBLE_CHANGED, r), r();
    }, t.prototype.setupSortableClass = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-sortable", !!e.sortable);
      }, o = function() {
        e.sortable ? e.comp.setAriaSort(hp(e.column)) : e.comp.setAriaSort(void 0);
      };
      r(), o(), this.addRefreshFunction(r), this.addRefreshFunction(o), this.addManagedListener(this.column, pe.EVENT_SORT_CHANGED, o);
    }, t.prototype.addColumnHoverListener = function() {
      var e = this, r = function() {
        if (e.gridOptionsWrapper.isColumnHoverHighlight()) {
          var o = e.columnHoverService.isHovered(e.column);
          e.comp.addOrRemoveCssClass("ag-column-hover", o);
        }
      };
      this.addManagedListener(this.eventService, v.EVENT_COLUMN_HOVER_CHANGED, r), r();
    }, t.prototype.setupFilterCss = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-filtered", e.column.isFilterActive());
      };
      this.addManagedListener(this.column, pe.EVENT_FILTER_ACTIVE_CHANGED, r), r();
    }, t.prototype.setupColId = function() {
      this.comp.setColId(this.column.getColId());
    }, t.prototype.addActiveHeaderMouseListeners = function() {
      var e = this, r = function(o) {
        return e.setActiveHeader(o.type === "mouseenter");
      };
      this.addManagedListener(this.getGui(), "mouseenter", r), this.addManagedListener(this.getGui(), "mouseleave", r);
    }, t.prototype.setActiveHeader = function(e) {
      this.comp.addOrRemoveCssClass("ag-header-active", e);
    }, xt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), xt([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), xt([
      h("beans")
    ], t.prototype, "beans", void 0), xt([
      h("sortController")
    ], t.prototype, "sortController", void 0), xt([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), xt([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), xt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), xt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), xt([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), xt([
      ot
    ], t.prototype, "removeDragSource", null), t;
  }($o)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ln = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, $y = (
  /** @class */
  function(n) {
    zy(t, n);
    function t(e, r, o, i) {
      var s = n.call(this) || this;
      return s.eResize = r, s.comp = e, s.pinned = o, s.columnGroup = i, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      if (!this.columnGroup.isResizable()) {
        this.comp.addOrRemoveResizableCssClass("ag-hidden", !0);
        return;
      }
      var r = this.horizontalResizeService.addResizeBar({
        eResizeBar: this.eResize,
        onResizeStart: this.onResizeStart.bind(this),
        onResizing: this.onResizing.bind(this, !1),
        onResizeEnd: this.onResizing.bind(this, !0)
      });
      if (this.addDestroyFunc(r), !this.gridOptionsWrapper.isSuppressAutoSize()) {
        var o = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();
        this.eResize.addEventListener("dblclick", function() {
          var i = [], s = e.columnGroup.getDisplayedLeafColumns();
          s.forEach(function(a) {
            a.getColDef().suppressAutoSize || i.push(a.getColId());
          }), i.length > 0 && e.columnModel.autoSizeColumns({
            columns: i,
            skipHeader: o,
            stopAtGroup: e.columnGroup,
            source: "uiColumnResized"
          }), e.resizeLeafColumnsToFit();
        });
      }
    }, t.prototype.onResizeStart = function(e) {
      var r = this;
      this.calculateInitialValues();
      var o = null;
      if (e && (o = this.columnModel.getDisplayedGroupAfter(this.columnGroup)), o) {
        var i = o.getDisplayedLeafColumns();
        this.resizeTakeFromCols = i.filter(function(s) {
          return s.isResizable();
        }), this.resizeTakeFromStartWidth = 0, this.resizeTakeFromCols.forEach(function(s) {
          return r.resizeTakeFromStartWidth += s.getActualWidth();
        }), this.resizeTakeFromRatios = [], this.resizeTakeFromCols.forEach(function(s) {
          return r.resizeTakeFromRatios.push(s.getActualWidth() / r.resizeTakeFromStartWidth);
        });
      } else
        this.resizeTakeFromCols = null, this.resizeTakeFromStartWidth = null, this.resizeTakeFromRatios = null;
      this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
    }, t.prototype.onResizing = function(e, r) {
      var o = this.normaliseDragChange(r), i = this.resizeStartWidth + o;
      this.resizeColumns(i, e);
    }, t.prototype.resizeLeafColumnsToFit = function() {
      var e = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);
      this.calculateInitialValues(), e > this.resizeStartWidth && this.resizeColumns(e, !0);
    }, t.prototype.resizeColumns = function(e, r) {
      r === void 0 && (r = !0);
      var o = [];
      if (o.push({
        columns: this.resizeCols,
        ratios: this.resizeRatios,
        width: e
      }), this.resizeTakeFromCols) {
        var i = e - this.resizeStartWidth;
        o.push({
          columns: this.resizeTakeFromCols,
          ratios: this.resizeTakeFromRatios,
          width: this.resizeTakeFromStartWidth - i
        });
      }
      this.columnModel.resizeColumnSets({
        resizeSets: o,
        finished: r,
        source: "uiColumnDragged"
      }), r && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
    }, t.prototype.calculateInitialValues = function() {
      var e = this, r = this.columnGroup.getDisplayedLeafColumns();
      this.resizeCols = r.filter(function(o) {
        return o.isResizable();
      }), this.resizeStartWidth = 0, this.resizeCols.forEach(function(o) {
        return e.resizeStartWidth += o.getActualWidth();
      }), this.resizeRatios = [], this.resizeCols.forEach(function(o) {
        return e.resizeRatios.push(o.getActualWidth() / e.resizeStartWidth);
      });
    }, t.prototype.normaliseDragChange = function(e) {
      var r = e;
      return this.gridOptionsWrapper.isEnableRtl() ? this.pinned !== w.PINNED_LEFT && (r *= -1) : this.pinned === w.PINNED_RIGHT && (r *= -1), r;
    }, ln([
      h("horizontalResizeService")
    ], t.prototype, "horizontalResizeService", void 0), ln([
      h("autoWidthCalculator")
    ], t.prototype, "autoWidthCalculator", void 0), ln([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ln([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ky = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yy = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, qy = (
  /** @class */
  function(n) {
    Ky(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.removeChildListenersFuncs = [], o.columnGroup = r, o.comp = e, o;
    }
    return t.prototype.postConstruct = function() {
      this.addListenersToChildrenColumns(), this.addManagedListener(this.columnGroup, qe.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this)), this.onWidthChanged(), this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));
    }, t.prototype.addListenersToChildrenColumns = function() {
      var e = this;
      this.removeListenersOnChildrenColumns();
      var r = this.onWidthChanged.bind(this);
      this.columnGroup.getLeafColumns().forEach(function(o) {
        o.addEventListener(pe.EVENT_WIDTH_CHANGED, r), o.addEventListener(pe.EVENT_VISIBLE_CHANGED, r), e.removeChildListenersFuncs.push(function() {
          o.removeEventListener(pe.EVENT_WIDTH_CHANGED, r), o.removeEventListener(pe.EVENT_VISIBLE_CHANGED, r);
        });
      });
    }, t.prototype.removeListenersOnChildrenColumns = function() {
      this.removeChildListenersFuncs.forEach(function(e) {
        return e();
      }), this.removeChildListenersFuncs = [];
    }, t.prototype.onDisplayedChildrenChanged = function() {
      this.addListenersToChildrenColumns(), this.onWidthChanged();
    }, t.prototype.onWidthChanged = function() {
      this.comp.setWidth(this.columnGroup.getActualWidth() + "px");
    }, Yy([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Xy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Gr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, cc = (
  /** @class */
  function(n) {
    Xy(t, n);
    function t(e, r) {
      var o = n.call(this, e, r) || this;
      return o.columnGroup = e, o;
    }
    return t.prototype.setComp = function(e, r, o) {
      n.prototype.setGui.call(this, r), this.comp = e, this.displayName = this.columnModel.getDisplayNameForColumnGroup(this.columnGroup, "header"), this.addClasses(), this.addAttributes(), this.setupMovingCss(), this.setupExpandable(), this.setupTooltip(), this.setupUserComp();
      var i = this.getParentRowCtrl().getPinned(), s = this.columnGroup.getProvidedColumnGroup().getLeafColumns();
      this.createManagedBean(new Da(s, r)), this.createManagedBean(new ci(this.columnGroup, r, this.beans)), this.createManagedBean(new qy(e, this.columnGroup)), this.groupResizeFeature = this.createManagedBean(new $y(e, o, i, this.columnGroup)), this.createManagedBean(new Xt(r, {
        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
        onTabKeyDown: function() {
        },
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this)
      }));
    }, t.prototype.resizeLeafColumnsToFit = function() {
      this.groupResizeFeature.onResizeStart(!1), this.groupResizeFeature.resizeLeafColumnsToFit();
    }, t.prototype.setupUserComp = function() {
      var e = this, r = this.displayName, o = {
        displayName: this.displayName,
        columnGroup: this.columnGroup,
        setExpanded: function(u) {
          e.columnModel.setColumnGroupOpened(e.columnGroup.getProvidedColumnGroup(), u, "gridInitializing");
        },
        api: this.gridApi,
        columnApi: this.columnApi,
        context: this.gridOptionsWrapper.getContext()
      };
      if (!r) {
        for (var i = this.columnGroup, s = i.getLeafColumns(); i.getParent() && i.getParent().getLeafColumns().length === s.length; )
          i = i.getParent();
        var a = i.getColGroupDef();
        a && (r = a.headerName), r || (r = s ? this.columnModel.getDisplayNameForColumn(s[0], "header", !0) : "");
      }
      var l = this.userComponentFactory.getHeaderGroupCompDetails(o);
      this.comp.setUserCompDetails(l);
    }, t.prototype.setupTooltip = function() {
      var e = this, r = this.columnGroup.getColGroupDef(), o = {
        getColumn: function() {
          return e.columnGroup;
        },
        getGui: function() {
          return e.eGui;
        },
        getLocation: function() {
          return "headerGroup";
        },
        getTooltipValue: function() {
          return r && r.headerTooltip;
        }
      };
      r && (o.getColDef = function() {
        return r;
      });
      var i = this.createManagedBean(new Oa(o, this.beans));
      i.setComp(this.comp);
    }, t.prototype.setupExpandable = function() {
      var e = this.columnGroup.getProvidedColumnGroup();
      this.refreshExpanded(), this.addManagedListener(e, Pe.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this)), this.addManagedListener(e, Pe.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));
    }, t.prototype.refreshExpanded = function() {
      var e = this.columnGroup;
      this.expandable = e.isExpandable();
      var r = e.isExpanded();
      this.expandable ? this.comp.setAriaExpanded(r ? "true" : "false") : this.comp.setAriaExpanded(void 0);
    }, t.prototype.addAttributes = function() {
      this.comp.setColId(this.columnGroup.getUniqueId());
    }, t.prototype.addClasses = function() {
      var e = this, r = this.columnGroup.getColGroupDef(), o = Aa.getHeaderClassesFromColDef(r, this.gridOptionsWrapper, null, this.columnGroup);
      o.push(this.columnGroup.isPadding() ? "ag-header-group-cell-no-group" : "ag-header-group-cell-with-group"), o.forEach(function(i) {
        return e.comp.addOrRemoveCssClass(i, !0);
      });
    }, t.prototype.setupMovingCss = function() {
      var e = this, r = this.columnGroup.getProvidedColumnGroup(), o = r.getLeafColumns(), i = function() {
        return e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.columnGroup.isMoving());
      };
      o.forEach(function(s) {
        e.addManagedListener(s, pe.EVENT_MOVING_CHANGED, i);
      }), i();
    }, t.prototype.onFocusIn = function(e) {
      if (!this.eGui.contains(e.relatedTarget)) {
        var r = this.getRowIndex();
        this.beans.focusService.setFocusedHeader(r, this.columnGroup);
      }
    }, t.prototype.handleKeyDown = function(e) {
      var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
      if (!(!this.expandable || !i) && e.key === P.ENTER) {
        var s = this.columnGroup, a = !s.isExpanded();
        this.columnModel.setColumnGroupOpened(s.getProvidedColumnGroup(), a, "uiColumnExpanded");
      }
    }, t.prototype.setDragSource = function(e) {
      var r = this;
      if (!this.isSuppressMoving()) {
        var o = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), i = {
          type: mt.HeaderCell,
          eElement: e,
          defaultIconName: et.ICON_HIDE,
          dragItemName: this.displayName,
          // we add in the original group leaf columns, so we move both visible and non-visible items
          getDragItem: this.getDragItemForGroup.bind(this),
          onDragStarted: function() {
            return o.forEach(function(s) {
              return s.setMoving(!0, "uiColumnDragged");
            });
          },
          onDragStopped: function() {
            return o.forEach(function(s) {
              return s.setMoving(!1, "uiColumnDragged");
            });
          }
        };
        this.dragAndDropService.addDragSource(i, !0), this.addDestroyFunc(function() {
          return r.dragAndDropService.removeDragSource(i);
        });
      }
    }, t.prototype.getDragItemForGroup = function() {
      var e = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), r = {};
      e.forEach(function(i) {
        return r[i.getId()] = i.isVisible();
      });
      var o = [];
      return this.columnModel.getAllDisplayedColumns().forEach(function(i) {
        e.indexOf(i) >= 0 && (o.push(i), Ye(e, i));
      }), e.forEach(function(i) {
        return o.push(i);
      }), {
        columns: o,
        visibleState: r
      };
    }, t.prototype.isSuppressMoving = function() {
      var e = !1;
      this.columnGroup.getLeafColumns().forEach(function(o) {
        (o.getColDef().suppressMovable || o.getColDef().lockPosition) && (e = !0);
      });
      var r = e || this.gridOptionsWrapper.isSuppressMovableColumns();
      return r;
    }, Gr([
      h("beans")
    ], t.prototype, "beans", void 0), Gr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Gr([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), Gr([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Gr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Gr([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), t;
  }($o)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Qy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), qi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Jy = 0, An = (
  /** @class */
  function(n) {
    Qy(t, n);
    function t(e, r, o) {
      var i = n.call(this) || this;
      return i.instanceId = Jy++, i.headerCellCtrls = {}, i.rowIndex = e, i.pinned = r, i.type = o, i;
    }
    return t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.setComp = function(e) {
      this.comp = e, this.onRowHeightChanged(), this.onVirtualColumnsChanged(), this.setWidth(), this.addEventListeners(), ti() && this.comp.setTransform("translateZ(0)"), e.setAriaRowIndex(this.rowIndex + 1);
    }, t.prototype.addEventListeners = function() {
      this.addManagedListener(this.eventService, v.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_PIVOT_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, B.PROP_FLOATING_FILTERS_HEIGHT, this.onRowHeightChanged.bind(this));
    }, t.prototype.getHeaderCellCtrl = function(e) {
      return Or(this.headerCellCtrls).find(function(r) {
        return r.getColumnGroupChild() === e;
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.onVirtualColumnsChanged(), this.setWidth();
    }, t.prototype.getType = function() {
      return this.type;
    }, t.prototype.onColumnResized = function() {
      this.setWidth();
    }, t.prototype.setWidth = function() {
      var e = this.getWidthForRow();
      this.comp.setWidth(e + "px");
    }, t.prototype.getWidthForRow = function() {
      var e = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT;
      if (e) {
        var r = this.pinned != null;
        return r ? 0 : this.columnModel.getContainerWidth(w.PINNED_RIGHT) + this.columnModel.getContainerWidth(w.PINNED_LEFT) + this.columnModel.getContainerWidth(null);
      }
      return this.columnModel.getContainerWidth(this.pinned);
    }, t.prototype.onRowHeightChanged = function() {
      var e = this.columnModel.getHeaderRowCount(), r = [], o = 0, i, s;
      this.columnModel.isPivotMode() ? (i = this.gridOptionsWrapper.getPivotGroupHeaderHeight(), s = this.gridOptionsWrapper.getPivotHeaderHeight()) : (this.columnModel.hasFloatingFilters() && (e++, o = 1), i = this.gridOptionsWrapper.getGroupHeaderHeight(), s = this.gridOptionsWrapper.getHeaderHeight());
      for (var a = 1 + o, l = e - a, u = 0; u < l; u++)
        r.push(i);
      r.push(s);
      for (var u = 0; u < o; u++)
        r.push(this.gridOptionsWrapper.getFloatingFiltersHeight());
      for (var p = 0, u = 0; u < this.rowIndex; u++)
        p += r[u];
      this.comp.setTop(p + "px"), this.comp.setHeight(r[this.rowIndex] + "px");
    }, t.prototype.getPinned = function() {
      return this.pinned;
    }, t.prototype.getRowIndex = function() {
      return this.rowIndex;
    }, t.prototype.onVirtualColumnsChanged = function() {
      var e = this, r = this.headerCellCtrls;
      this.headerCellCtrls = {};
      var o = this.getColumnsInViewport();
      o.forEach(function(a) {
        if (!a.isEmptyGroup()) {
          var l = a.getUniqueId(), u = r[l];
          delete r[l];
          var p = u && u.getColumnGroupChild() != a;
          if (p && (e.destroyBean(u), u = void 0), u == null)
            switch (e.type) {
              case Xe.FLOATING_FILTER:
                u = e.createBean(new uc(a, e));
                break;
              case Xe.COLUMN_GROUP:
                u = e.createBean(new cc(a, e));
                break;
              default:
                u = e.createBean(new pc(a, e));
                break;
            }
          e.headerCellCtrls[l] = u;
        }
      });
      var i = function(a) {
        var l = e.focusService.isHeaderWrapperFocused(a);
        if (!l)
          return !1;
        var u = e.columnModel.isDisplayed(a.getColumnGroupChild());
        return u;
      };
      ge(r, function(a, l) {
        var u = i(l);
        u ? e.headerCellCtrls[a] = l : e.destroyBean(l);
      });
      var s = Lt(this.headerCellCtrls);
      this.comp.setHeaderCtrls(s);
    }, t.prototype.destroyCtrls = function() {
      var e = this;
      ge(this.headerCellCtrls, function(r, o) {
        e.destroyBean(o);
      }), this.headerCellCtrls = {};
    }, t.prototype.getColumnsInViewport = function() {
      var e = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT;
      return e ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();
    }, t.prototype.getColumnsInViewportPrintLayout = function() {
      var e = this;
      if (this.pinned != null)
        return [];
      var r = [], o = this.getActualDepth();
      return [w.PINNED_LEFT, null, w.PINNED_RIGHT].forEach(function(i) {
        var s = e.columnModel.getVirtualHeaderGroupRow(i, o);
        r = r.concat(s);
      }), r;
    }, t.prototype.getActualDepth = function() {
      return this.type == Xe.FLOATING_FILTER ? this.rowIndex - 1 : this.rowIndex;
    }, t.prototype.getColumnsInViewportNormalLayout = function() {
      return this.columnModel.getVirtualHeaderGroupRow(this.pinned, this.getActualDepth());
    }, t.prototype.focusHeader = function(e, r) {
      var o = Lt(this.headerCellCtrls), i = o.find(function(s) {
        return s.getColumnGroupChild() == e;
      });
      return i ? (i.focus(r), !0) : !1;
    }, qi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), qi([
      h("focusService")
    ], t.prototype, "focusService", void 0), qi([
      ot
    ], t.prototype, "destroyCtrls", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Zy = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _o = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, eC = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, tC = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(eC(arguments[t]));
  return n;
}, dc = (
  /** @class */
  function(n) {
    Zy(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.groupsRowCtrls = [], r.pinned = e, r;
    }
    return t.prototype.setComp = function(e, r) {
      this.comp = e, this.setupCenterWidth(), this.setupPinnedWidth(), this.setupDragAndDrop(r), this.addManagedListener(this.eventService, v.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.ctrlsService.registerHeaderContainer(this, this.pinned), this.columnModel.isReady() && this.refresh();
    }, t.prototype.setupDragAndDrop = function(e) {
      var r = new ac(this.pinned, e);
      this.createManagedBean(r);
    }, t.prototype.refresh = function(e) {
      var r = this;
      e === void 0 && (e = !1);
      var o = new si(), i = this.focusService.getFocusHeaderToUseAfterRefresh(), s = function() {
        var p = r.columnModel.getHeaderRowCount() - 1;
        r.groupsRowCtrls = r.destroyBeans(r.groupsRowCtrls);
        for (var c = 0; c < p; c++) {
          var d = r.createBean(new An(o.next(), r.pinned, Xe.COLUMN_GROUP));
          r.groupsRowCtrls.push(d);
        }
      }, a = function() {
        var p = o.next(), c = r.columnsRowCtrl == null || !e || r.columnsRowCtrl.getRowIndex() !== p;
        c && (r.destroyBean(r.columnsRowCtrl), r.columnsRowCtrl = r.createBean(new An(p, r.pinned, Xe.COLUMN)));
      }, l = function() {
        var p = !r.columnModel.isPivotMode() && r.columnModel.hasFloatingFilters(), c = function() {
          r.filtersRowCtrl = r.destroyBean(r.filtersRowCtrl);
        };
        if (!p) {
          c();
          return;
        }
        var d = o.next();
        if (r.filtersRowCtrl) {
          var f = r.filtersRowCtrl.getRowIndex() !== d;
          (!e || f) && c();
        }
        r.filtersRowCtrl || (r.filtersRowCtrl = r.createBean(new An(d, r.pinned, Xe.FLOATING_FILTER)));
      };
      s(), a(), l();
      var u = this.getAllCtrls();
      this.comp.setCtrls(u), this.restoreFocusOnHeader(i);
    }, t.prototype.restoreFocusOnHeader = function(e) {
      e == null || e.column.getPinned() != this.pinned || this.focusService.focusHeaderPosition({ headerPosition: e });
    }, t.prototype.getAllCtrls = function() {
      var e = tC(this.groupsRowCtrls, [this.columnsRowCtrl]);
      return this.filtersRowCtrl && e.push(this.filtersRowCtrl), e;
    }, t.prototype.onGridColumnsChanged = function() {
      this.refresh(!0);
    }, t.prototype.setupCenterWidth = function() {
      var e = this;
      this.pinned == null && this.createManagedBean(new Pa(function(r) {
        return e.comp.setCenterWidth(r + "px");
      }));
    }, t.prototype.setHorizontalScroll = function(e) {
      this.comp.setContainerTransform("translateX(" + e + "px)");
    }, t.prototype.setupPinnedWidth = function() {
      var e = this;
      if (this.pinned != null) {
        var r = this.pinned === w.PINNED_LEFT, o = this.pinned === w.PINNED_RIGHT, i = function() {
          var s = r ? e.pinnedWidthService.getPinnedLeftWidth() : e.pinnedWidthService.getPinnedRightWidth();
          if (s != null) {
            var a = s == 0, l = e.gridOptionsWrapper.isEnableRtl(), u = e.gridOptionsWrapper.getScrollbarWidth(), p = e.scrollVisibleService.isVerticalScrollShowing() && (l && r || !l && o), c = p ? s + u : s;
            e.comp.setPinnedContainerWidth(c + "px"), e.comp.addOrRemoveCssClass("ag-hidden", a);
          }
        };
        this.addManagedListener(this.eventService, v.EVENT_LEFT_PINNED_WIDTH_CHANGED, i), this.addManagedListener(this.eventService, v.EVENT_RIGHT_PINNED_WIDTH_CHANGED, i), this.addManagedListener(this.eventService, v.EVENT_SCROLL_VISIBILITY_CHANGED, i), this.addManagedListener(this.eventService, v.EVENT_SCROLLBAR_WIDTH_CHANGED, i);
      }
    }, t.prototype.getHeaderCtrlForColumn = function(e) {
      if (e instanceof pe)
        return this.columnsRowCtrl ? this.columnsRowCtrl.getHeaderCellCtrl(e) : void 0;
      if (this.groupsRowCtrls.length !== 0)
        for (var r = 0; r < this.groupsRowCtrls.length; r++) {
          var o = this.groupsRowCtrls[r].getHeaderCellCtrl(e);
          if (o)
            return o;
        }
    }, t.prototype.getHtmlElementForColumnHeader = function(e) {
      var r = this.getHeaderCtrlForColumn(e);
      return r ? r.getGui() : null;
    }, t.prototype.getRowType = function(e) {
      var r = this.getAllCtrls(), o = r[e];
      return o ? o.getType() : void 0;
    }, t.prototype.focusHeader = function(e, r, o) {
      var i = this.getAllCtrls(), s = i[e];
      return s ? s.focusHeader(r, o) : !1;
    }, t.prototype.getRowCount = function() {
      return this.getAllCtrls().length;
    }, _o([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), _o([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), _o([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), _o([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), _o([
      h("focusService")
    ], t.prototype, "focusService", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var rC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Xi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Fn = (
  /** @class */
  function(n) {
    rC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.headerRowComps = {}, r.rowCompsList = [], r.pinned = e, r;
    }
    return t.prototype.init = function() {
      var e = this;
      this.selectAndSetTemplate();
      var r = {
        addOrRemoveCssClass: function(i, s) {
          return e.addOrRemoveCssClass(i, s);
        },
        setCtrls: function(i) {
          return e.setCtrls(i);
        },
        // only gets called for center section
        setCenterWidth: function(i) {
          return e.eCenterContainer.style.width = i;
        },
        setContainerTransform: function(i) {
          return e.eCenterContainer.style.transform = i;
        },
        // only gets called for pinned sections
        setPinnedContainerWidth: function(i) {
          var s = e.getGui();
          s.style.width = i, s.style.maxWidth = i, s.style.minWidth = i;
        }
      }, o = this.createManagedBean(new dc(this.pinned));
      o.setComp(r, this.getGui());
    }, t.prototype.selectAndSetTemplate = function() {
      var e = this.pinned == w.PINNED_LEFT, r = this.pinned == w.PINNED_RIGHT, o = e ? t.PINNED_LEFT_TEMPLATE : r ? t.PINNED_RIGHT_TEMPLATE : t.CENTER_TEMPLATE;
      this.setTemplate(o), this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui();
    }, t.prototype.destroyRowComps = function() {
      this.setCtrls([]);
    }, t.prototype.destroyRowComp = function(e) {
      this.destroyBean(e), this.eRowContainer.removeChild(e.getGui());
    }, t.prototype.setCtrls = function(e) {
      var r = this, o = this.headerRowComps;
      this.headerRowComps = {}, this.rowCompsList = [];
      var i, s = function(a) {
        var l = a.getGui(), u = l.parentElement != r.eRowContainer;
        u && r.eRowContainer.appendChild(l), i && sa(r.eRowContainer, l, i), i = l;
      };
      e.forEach(function(a) {
        var l = a.getInstanceId(), u = o[l];
        delete o[l];
        var p = u || r.createBean(new rc(a));
        r.headerRowComps[l] = p, r.rowCompsList.push(p), s(p);
      }), Lt(o).forEach(function(a) {
        return r.destroyRowComp(a);
      });
    }, t.PINNED_LEFT_TEMPLATE = '<div class="ag-pinned-left-header" role="presentation"/>', t.PINNED_RIGHT_TEMPLATE = '<div class="ag-pinned-right-header" role="presentation"/>', t.CENTER_TEMPLATE = `<div class="ag-header-viewport" role="presentation">
            <div class="ag-header-container" ref="eCenterContainer" role="rowgroup"></div>
        </div>`, Xi([
      T("eCenterContainer")
    ], t.prototype, "eCenterContainer", void 0), Xi([
      G
    ], t.prototype, "init", null), Xi([
      ot
    ], t.prototype, "destroyRowComps", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var oC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nC = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, hc = (
  /** @class */
  function(n) {
    oC(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = {
        addOrRemoveCssClass: function(s, a) {
          return e.addOrRemoveCssClass(s, a);
        },
        setHeightAndMinHeight: function(s) {
          e.getGui().style.height = s, e.getGui().style.minHeight = s;
        }
      }, o = this.createManagedBean(new nc());
      o.setComp(r, this.getGui(), this.getFocusableElement());
      var i = function(s) {
        e.createManagedBean(s), e.appendChild(s);
      };
      i(new Fn(w.PINNED_LEFT)), i(new Fn(null)), i(new Fn(w.PINNED_RIGHT));
    }, t.TEMPLATE = '<div class="ag-header" role="presentation"/>', nC([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var iC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yn = globalThis && globalThis.__assign || function() {
  return Yn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Yn.apply(this, arguments);
}, Dt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, fc = (
  /** @class */
  function(n) {
    iC(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.allAdvancedFilters = /* @__PURE__ */ new Map(), r.activeAdvancedFilters = [], r.quickFilter = null, r.quickFilterParts = null, r.processingFilterChange = !1, r;
    }
    e = t, t.prototype.init = function() {
      var r = this;
      this.addManagedListener(this.eventService, v.EVENT_ROW_DATA_CHANGED, function(o) {
        return r.onNewRowsLoaded(o);
      }), this.addManagedListener(this.eventService, v.EVENT_GRID_COLUMNS_CHANGED, function() {
        return r.onColumnsChanged();
      }), this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText()), this.setQuickFilterParts(), this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();
    }, t.prototype.setQuickFilterParts = function() {
      this.quickFilterParts = this.quickFilter ? this.quickFilter.split(" ") : null;
    }, t.prototype.setFilterModel = function(r) {
      var o = this, i = [], s = this.getFilterModel();
      if (r) {
        var a = Ca(Object.keys(r));
        this.allAdvancedFilters.forEach(function(l, u) {
          var p = r[u];
          i.push(o.setModelOnFilterWrapper(l.filterPromise, p)), a.delete(u);
        }), a.forEach(function(l) {
          var u = o.columnModel.getPrimaryColumn(l);
          if (!u) {
            console.warn("AG Grid: setFilterModel() - no column found for colId: " + l);
            return;
          }
          if (!u.isFilterAllowed()) {
            console.warn("AG Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: " + l);
            return;
          }
          var p = o.getOrCreateFilterWrapper(u, "NO_UI");
          if (!p) {
            console.warn("AG-Grid: setFilterModel() - unable to fully apply model, unable to create filter for colId: " + l);
            return;
          }
          i.push(o.setModelOnFilterWrapper(p.filterPromise, r[l]));
        });
      } else
        this.allAdvancedFilters.forEach(function(l) {
          i.push(o.setModelOnFilterWrapper(l.filterPromise, null));
        });
      ut.all(i).then(function() {
        var l = o.getFilterModel(), u = [];
        o.allAdvancedFilters.forEach(function(p, c) {
          var d = s ? s[c] : null, f = l ? l[c] : null;
          se.jsonEquals(d, f) || u.push(p.column);
        }), u.length > 0 && o.onFilterChanged({ columns: u });
      });
    }, t.prototype.setModelOnFilterWrapper = function(r, o) {
      return new ut(function(i) {
        r.then(function(s) {
          typeof s.setModel != "function" && (console.warn("AG Grid: filter missing setModel method, which is needed for setFilterModel"), i()), (s.setModel(o) || ut.resolve()).then(function() {
            return i();
          });
        });
      });
    }, t.prototype.getFilterModel = function() {
      var r = {};
      return this.allAdvancedFilters.forEach(function(o, i) {
        var s = o.filterPromise, a = s.resolveNow(null, function(u) {
          return u;
        });
        if (a == null)
          return null;
        if (typeof a.getModel != "function") {
          console.warn("AG Grid: filter API missing getModel method, which is needed for getFilterModel");
          return;
        }
        var l = a.getModel();
        O(l) && (r[i] = l);
      }), r;
    }, t.prototype.isAdvancedFilterPresent = function() {
      return this.activeAdvancedFilters.length > 0;
    }, t.prototype.updateActiveFilters = function() {
      var r = this;
      this.activeAdvancedFilters.length = 0;
      var o = function(i) {
        return i ? i.isFilterActive ? i.isFilterActive() : (console.warn("AG Grid: Filter is missing isFilterActive() method"), !1) : !1;
      };
      this.allAdvancedFilters.forEach(function(i) {
        if (i.filterPromise.resolveNow(!1, o)) {
          var s = i.filterPromise.resolveNow(null, function(a) {
            return a;
          });
          r.activeAdvancedFilters.push(s);
        }
      });
    }, t.prototype.updateFilterFlagInColumns = function(r, o) {
      this.allAdvancedFilters.forEach(function(i) {
        var s = i.filterPromise.resolveNow(!1, function(a) {
          return a.isFilterActive();
        });
        i.column.setFilterActive(s, r, o);
      });
    }, t.prototype.isAnyFilterPresent = function() {
      return this.isQuickFilterPresent() || this.isAdvancedFilterPresent() || this.gridOptionsWrapper.isExternalFilterPresent();
    }, t.prototype.doAdvancedFiltersPass = function(r, o) {
      for (var i = r.data, s = 0; s < this.activeAdvancedFilters.length; s++) {
        var a = this.activeAdvancedFilters[s];
        if (!(a == null || a === o)) {
          if (typeof a.doesFilterPass != "function")
            throw new Error("Filter is missing method doesFilterPass");
          if (!a.doesFilterPass({ node: r, data: i }))
            return !1;
        }
      }
      return !0;
    }, t.prototype.parseQuickFilter = function(r) {
      return O(r) ? this.gridOptionsWrapper.isRowModelDefault() ? r.toUpperCase() : (console.warn("AG Grid - Quick filtering only works with the Client-Side Row Model"), null) : null;
    }, t.prototype.setQuickFilter = function(r) {
      if (r != null && typeof r != "string") {
        console.warn("AG Grid - setQuickFilter() only supports string inputs, received: " + typeof r);
        return;
      }
      var o = this.parseQuickFilter(r);
      this.quickFilter !== o && (this.quickFilter = o, this.setQuickFilterParts(), this.onFilterChanged());
    }, t.prototype.onFilterChanged = function(r) {
      r === void 0 && (r = {});
      var o = r.filterInstance, i = r.additionalEventAttributes, s = r.columns;
      this.updateActiveFilters(), this.updateFilterFlagInColumns("filterChanged", i), this.allAdvancedFilters.forEach(function(l) {
        l.filterPromise && l.filterPromise.then(function(u) {
          u && u !== o && u.onAnyFilterChanged && u.onAnyFilterChanged();
        });
      });
      var a = {
        type: v.EVENT_FILTER_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi,
        columns: s || []
      };
      i && Pt(a, i), this.processingFilterChange = !0, this.eventService.dispatchEvent(a), this.processingFilterChange = !1;
    }, t.prototype.isSuppressFlashingCellsBecauseFiltering = function() {
      return !this.allowShowChangeAfterFilter && this.processingFilterChange;
    }, t.prototype.isQuickFilterPresent = function() {
      return this.quickFilter !== null;
    }, t.prototype.doesRowPassOtherFilters = function(r, o) {
      return this.doesRowPassFilter({ rowNode: o, filterInstanceToSkip: r });
    }, t.prototype.doesRowPassQuickFilterNoCache = function(r, o) {
      var i = this, s = this.columnModel.getAllColumnsForQuickFilter();
      return s.some(function(a) {
        var l = i.getQuickFilterTextForColumn(a, r);
        return O(l) && l.indexOf(o) >= 0;
      });
    }, t.prototype.doesRowPassQuickFilterCache = function(r, o) {
      return r.quickFilterAggregateText || this.aggregateRowForQuickFilter(r), r.quickFilterAggregateText.indexOf(o) >= 0;
    }, t.prototype.doesRowPassQuickFilter = function(r) {
      var o = this, i = this.gridOptionsWrapper.isCacheQuickFilter();
      return this.quickFilterParts.every(function(s) {
        return i ? o.doesRowPassQuickFilterCache(r, s) : o.doesRowPassQuickFilterNoCache(r, s);
      });
    }, t.prototype.doesRowPassFilter = function(r) {
      return !(this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(r.rowNode) || this.gridOptionsWrapper.isExternalFilterPresent() && !this.gridOptionsWrapper.doesExternalFilterPass(r.rowNode) || this.isAdvancedFilterPresent() && !this.doAdvancedFiltersPass(r.rowNode, r.filterInstanceToSkip));
    }, t.prototype.getQuickFilterTextForColumn = function(r, o) {
      var i = this.valueService.getValue(r, o, !0), s = r.getColDef();
      if (s.getQuickFilterText) {
        var a = {
          value: i,
          node: o,
          data: o.data,
          column: r,
          colDef: s,
          context: this.gridOptionsWrapper.getContext()
        };
        i = s.getQuickFilterText(a);
      }
      return O(i) ? i.toString().toUpperCase() : null;
    }, t.prototype.aggregateRowForQuickFilter = function(r) {
      var o = this, i = [], s = this.columnModel.getAllColumnsForQuickFilter();
      s.forEach(function(a) {
        var l = o.getQuickFilterTextForColumn(a, r);
        O(l) && i.push(l);
      }), r.quickFilterAggregateText = i.join(e.QUICK_FILTER_SEPARATOR);
    }, t.prototype.onNewRowsLoaded = function(r) {
      this.allAdvancedFilters.forEach(function(o) {
        o.filterPromise.then(function(i) {
          i.onNewRowsLoaded && i.onNewRowsLoaded();
        });
      }), this.updateFilterFlagInColumns(r), this.updateActiveFilters();
    }, t.prototype.createValueGetter = function(r) {
      var o = this;
      return function(i) {
        var s = i.node;
        return o.valueService.getValue(r, s, !0);
      };
    }, t.prototype.getFilterComponent = function(r, o, i) {
      i === void 0 && (i = !0);
      var s;
      if (i)
        return ((s = this.getOrCreateFilterWrapper(r, o)) === null || s === void 0 ? void 0 : s.filterPromise) || null;
      var a = this.cachedFilter(r);
      return a ? a.filterPromise : null;
    }, t.prototype.isFilterActive = function(r) {
      var o = this.cachedFilter(r);
      return !!o && o.filterPromise.resolveNow(!1, function(i) {
        return i.isFilterActive();
      });
    }, t.prototype.getOrCreateFilterWrapper = function(r, o) {
      if (!r.isFilterAllowed())
        return null;
      var i = this.cachedFilter(r);
      return i ? o !== "NO_UI" && this.putIntoGui(i, o) : (i = this.createFilterWrapper(r, o), this.allAdvancedFilters.set(r.getColId(), i)), i;
    }, t.prototype.cachedFilter = function(r) {
      return this.allAdvancedFilters.get(r.getColId());
    }, t.prototype.createFilterInstance = function(r, o) {
      var i = this, s = Q.isRegistered(q.SetFilterModule) ? "agSetColumnFilter" : "agTextColumnFilter", a = r.getColDef(), l, u = Yn(Yn({}, this.createFilterParams(r, a, o)), { filterModifiedCallback: function() {
        var d = {
          type: v.EVENT_FILTER_MODIFIED,
          api: i.gridApi,
          columnApi: i.columnApi,
          column: r,
          filterInstance: l
        };
        i.eventService.dispatchEvent(d);
      }, filterChangedCallback: function(d) {
        return i.onFilterChanged({ filterInstance: l, additionalEventAttributes: d, columns: [r] });
      }, doesRowPassOtherFilter: function(d) {
        return i.doesRowPassOtherFilters(l, d);
      } }), p = this.userComponentFactory.getFilterDetails(a, u, s);
      if (!p)
        return null;
      var c = p.newAgStackInstance();
      return c && c.then(function(d) {
        return l = d;
      }), c;
    }, t.prototype.createFilterParams = function(r, o, i) {
      i === void 0 && (i = null);
      var s = {
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        column: r,
        colDef: Js(o),
        rowModel: this.rowModel,
        filterChangedCallback: function() {
        },
        filterModifiedCallback: function() {
        },
        valueGetter: this.createValueGetter(r),
        context: this.gridOptionsWrapper.getContext(),
        doesRowPassOtherFilter: function() {
          return !0;
        }
      };
      return i && (s.$scope = i), s;
    }, t.prototype.createFilterWrapper = function(r, o) {
      var i = {
        column: r,
        filterPromise: null,
        scope: null,
        compiledElement: null,
        guiPromise: ut.resolve(null)
      };
      return i.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null, i.filterPromise = this.createFilterInstance(r, i.scope), i.filterPromise && this.putIntoGui(i, o), i;
    }, t.prototype.putIntoGui = function(r, o) {
      var i = this, s = document.createElement("div");
      s.className = "ag-filter", r.guiPromise = new ut(function(a) {
        r.filterPromise.then(function(l) {
          var u = l.getGui();
          if (O(u) || console.warn("AG Grid: getGui method from filter returned " + u + ", it should be a DOM element or an HTML template string."), typeof u == "string" && (u = Ue(u)), s.appendChild(u), r.scope) {
            var p = i.$compile(s)(r.scope);
            r.compiledElement = p, window.setTimeout(function() {
              return r.scope.$apply();
            }, 0);
          }
          a(s), i.eventService.dispatchEvent({
            type: v.EVENT_FILTER_OPENED,
            column: r.column,
            source: o,
            eGui: s,
            api: i.gridApi,
            columnApi: i.columnApi
          });
        });
      });
    }, t.prototype.onColumnsChanged = function() {
      var r = this, o = [];
      this.allAdvancedFilters.forEach(function(i, s) {
        var a = r.columnModel.getPrimaryColumn(s);
        a || (o.push(i.column), r.disposeFilterWrapper(i, "filterDestroyed"));
      }), o.length > 0 && this.onFilterChanged({ columns: o });
    }, t.prototype.destroyFilter = function(r, o) {
      o === void 0 && (o = "api");
      var i = this.allAdvancedFilters.get(r.getColId());
      i && (this.disposeFilterWrapper(i, o), this.onFilterChanged({ columns: [r] }));
    }, t.prototype.disposeFilterWrapper = function(r, o) {
      var i = this;
      r.filterPromise.then(function(s) {
        (s.setModel(null) || ut.resolve()).then(function() {
          i.getContext().destroyBean(s), r.column.setFilterActive(!1, o), r.scope && (r.compiledElement && r.compiledElement.remove(), r.scope.$destroy()), i.allAdvancedFilters.delete(r.column.getColId());
        });
      });
    }, t.prototype.destroy = function() {
      var r = this;
      n.prototype.destroy.call(this), this.allAdvancedFilters.forEach(function(o) {
        return r.disposeFilterWrapper(o, "filterDestroyed");
      });
    };
    var e;
    return t.QUICK_FILTER_SEPARATOR = `
`, Dt([
      h("$compile")
    ], t.prototype, "$compile", void 0), Dt([
      h("$scope")
    ], t.prototype, "$scope", void 0), Dt([
      h("valueService")
    ], t.prototype, "valueService", void 0), Dt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Dt([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Dt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Dt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Dt([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Dt([
      G
    ], t.prototype, "init", null), Dt([
      ot
    ], t.prototype, "destroy", null), t = e = Dt([
      U("filterManager")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var sC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, gc = (
  /** @class */
  function(n) {
    sC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.initialised = !1, e;
    }
    return t.prototype.init = function() {
      this.cellExpressions = this.gridOptionsWrapper.isEnableCellExpressions(), this.initialised = !0;
    }, t.prototype.getValue = function(e, r, o, i) {
      if (o === void 0 && (o = !1), i === void 0 && (i = !1), this.initialised || this.init(), !!r) {
        var s = e.getColDef(), a = s.field, l = e.getId(), u = r.data, p, c = r.groupData && r.groupData[l] !== void 0, d = !i && r.aggData && r.aggData[l] !== void 0;
        if (o && s.filterValueGetter ? p = this.executeFilterValueGetter(s.filterValueGetter, u, e, r) : this.gridOptionsWrapper.isTreeData() && d ? p = r.aggData[l] : this.gridOptionsWrapper.isTreeData() && s.valueGetter ? p = this.executeValueGetter(s.valueGetter, u, e, r) : this.gridOptionsWrapper.isTreeData() && a && u ? p = Gn(u, a, e.isFieldContainsDots()) : c ? p = r.groupData[l] : d ? p = r.aggData[l] : s.valueGetter ? p = this.executeValueGetter(s.valueGetter, u, e, r) : a && u && (p = Gn(u, a, e.isFieldContainsDots())), this.cellExpressions && typeof p == "string" && p.indexOf("=") === 0) {
          var f = p.substring(1);
          p = this.executeValueGetter(f, u, e, r);
        }
        if (p == null) {
          var g = this.getOpenedGroup(r, e);
          if (g != null)
            return g;
        }
        return p;
      }
    }, t.prototype.getOpenedGroup = function(e, r) {
      if (this.gridOptionsWrapper.isShowOpenedGroup()) {
        var o = r.getColDef();
        if (o.showRowGroup)
          for (var i = r.getColDef().showRowGroup, s = e.parent; s != null; ) {
            if (s.rowGroupColumn && (i === !0 || i === s.rowGroupColumn.getId()))
              return s.key;
            s = s.parent;
          }
      }
    }, t.prototype.setValue = function(e, r, o, i) {
      var s = this.columnModel.getPrimaryColumn(r);
      if (!(!e || !s)) {
        K(e.data) && (e.data = {});
        var a = s.getColDef(), l = a.field, u = a.newValueHandler, p = a.valueSetter;
        if (K(l) && K(u) && K(p)) {
          console.warn("AG Grid: you need either field or valueSetter set on colDef for editing to work");
          return;
        }
        var c = {
          node: e,
          data: e.data,
          oldValue: this.getValue(s, e),
          newValue: o,
          colDef: s.getColDef(),
          column: s,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        c.newValue = o;
        var d;
        if (u && O(u) ? d = u(c) : O(p) ? d = this.expressionService.evaluate(p, c) : d = this.setValueUsingField(e.data, l, o, s.isFieldContainsDots()), d === void 0 && (d = !0), !!d) {
          e.resetQuickFilterAggregateText(), this.valueCache.onDataChanged(), c.newValue = this.getValue(s, e);
          var f = s.getColDef().onCellValueChanged;
          typeof f == "function" && setTimeout(function() {
            return f(c);
          }, 0);
          var g = {
            type: v.EVENT_CELL_VALUE_CHANGED,
            event: null,
            rowIndex: e.rowIndex,
            rowPinned: e.rowPinned,
            column: c.column,
            api: c.api,
            columnApi: c.columnApi,
            colDef: c.colDef,
            context: c.context,
            data: e.data,
            node: e,
            oldValue: c.oldValue,
            newValue: c.newValue,
            value: c.newValue,
            source: i
          };
          this.eventService.dispatchEvent(g);
        }
      }
    }, t.prototype.setValueUsingField = function(e, r, o, i) {
      if (!r)
        return !1;
      var s = !1;
      if (!i)
        e[r] = o;
      else
        for (var a = r.split("."), l = e; a.length > 0 && l; ) {
          var u = a.shift();
          a.length === 0 ? l[u] = o : l = l[u];
        }
      return !s;
    }, t.prototype.executeFilterValueGetter = function(e, r, o, i) {
      var s = {
        data: r,
        node: i,
        column: o,
        colDef: o.getColDef(),
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        context: this.gridOptionsWrapper.getContext(),
        getValue: this.getValueCallback.bind(this, i)
      };
      return this.expressionService.evaluate(e, s);
    }, t.prototype.executeValueGetter = function(e, r, o, i) {
      var s = o.getId(), a = this.valueCache.getValue(i, s);
      if (a !== void 0)
        return a;
      var l = {
        data: r,
        node: i,
        column: o,
        colDef: o.getColDef(),
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        context: this.gridOptionsWrapper.getContext(),
        getValue: this.getValueCallback.bind(this, i)
      }, u = this.expressionService.evaluate(e, l);
      return this.valueCache.setValue(i, s, u), u;
    }, t.prototype.getValueCallback = function(e, r) {
      var o = this.columnModel.getPrimaryColumn(r);
      return o ? this.getValue(o, e) : null;
    }, t.prototype.getKeyForNode = function(e, r) {
      var o = this.getValue(e, r), i = e.getColDef().keyCreator, s = o;
      if (i) {
        var a = {
          value: o,
          colDef: e.getColDef(),
          column: e,
          node: r,
          data: r.data,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        s = i(a);
      }
      return typeof s == "string" || s == null || (s = String(s), s === "[object Object]" && ve(function() {
        console.warn("AG Grid: a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key");
      }, "getKeyForNode - warn about [object,object]")), s;
    }, wo([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), wo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), wo([
      h("valueCache")
    ], t.prototype, "valueCache", void 0), wo([
      G
    ], t.prototype, "init", null), t = wo([
      U("valueService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var aC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), kl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Le;
(function(n) {
  n.AUTO_HEIGHT = "ag-layout-auto-height", n.NORMAL = "ag-layout-normal", n.PRINT = "ag-layout-print";
})(Le || (Le = {}));
var Fa = (
  /** @class */
  function(n) {
    aC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.view = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, this.updateLayoutClasses.bind(this)), this.updateLayoutClasses();
    }, t.prototype.updateLayoutClasses = function() {
      var e = this.gridOptionsWrapper.getDomLayout(), r = {
        autoHeight: e === w.DOM_LAYOUT_AUTO_HEIGHT,
        normal: e === w.DOM_LAYOUT_NORMAL,
        print: e === w.DOM_LAYOUT_PRINT
      }, o = r.autoHeight ? Le.AUTO_HEIGHT : r.print ? Le.PRINT : Le.NORMAL;
      this.view.updateLayoutClasses(o, r);
    }, kl([
      h("gridOptionsWrapper")
    ], t.prototype, "gridOptionsWrapper", void 0), kl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var lC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ht = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, uC = (
  /** @class */
  function(n) {
    lC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.scrollLeft = -1, r.nextScrollTop = -1, r.scrollTop = -1, r.eBodyViewport = e, r.resetLastHorizontalScrollElementDebounced = ur(r.resetLastHorizontalScrollElement.bind(r), 500), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this)), this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCon = r.centerRowContainerCtrl, e.onDisplayedColumnsWidthChanged(), e.addScrollListener();
      });
    }, t.prototype.addScrollListener = function() {
      var e = this.ctrlsService.getFakeHScrollCtrl();
      this.addManagedListener(this.centerRowContainerCon.getViewportElement(), "scroll", this.onCenterViewportScroll.bind(this)), this.addManagedListener(e.getViewport(), "scroll", this.onFakeHorizontalScroll.bind(this));
      var r = this.gridOptionsWrapper.isDebounceVerticalScrollbar() ? ur(this.onVerticalScroll.bind(this), 100) : this.onVerticalScroll.bind(this);
      this.addManagedListener(this.eBodyViewport, "scroll", r);
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      this.enableRtl && this.horizontallyScrollHeaderCenterAndFloatingCenter();
    }, t.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function(e) {
      var r = this.centerRowContainerCon == null;
      if (!r) {
        e === void 0 && (e = this.centerRowContainerCon.getCenterViewportScrollLeft());
        var o = this.enableRtl ? e : -e, i = this.ctrlsService.getTopCenterRowContainerCtrl(), s = this.ctrlsService.getBottomCenterRowContainerCtrl(), a = this.ctrlsService.getFakeHScrollCtrl(), l = this.ctrlsService.getHeaderRowContainerCtrl();
        l.setHorizontalScroll(o), s.setContainerTranslateX(o), i.setContainerTranslateX(o);
        var u = this.lastHorizontalScrollElement === this.centerRowContainerCon.getViewportElement() ? a.getViewport() : this.centerRowContainerCon.getViewportElement();
        Wn(u, Math.abs(e), this.enableRtl);
      }
    }, t.prototype.isControllingScroll = function(e) {
      return this.lastHorizontalScrollElement ? e === this.lastHorizontalScrollElement : (this.lastHorizontalScrollElement = e, !0);
    }, t.prototype.onFakeHorizontalScroll = function() {
      var e = this.ctrlsService.getFakeHScrollCtrl().getViewport();
      this.isControllingScroll(e) && this.onBodyHorizontalScroll(e);
    }, t.prototype.onCenterViewportScroll = function() {
      var e = this.centerRowContainerCon.getViewportElement();
      this.isControllingScroll(e) && this.onBodyHorizontalScroll(e);
    }, t.prototype.onBodyHorizontalScroll = function(e) {
      var r = this.centerRowContainerCon.getViewportElement(), o = r.scrollLeft;
      this.shouldBlockScrollUpdate("horizontal", o, !0) || (this.doHorizontalScroll(Math.round(Wo(e, this.enableRtl))), this.resetLastHorizontalScrollElementDebounced());
    }, t.prototype.onVerticalScroll = function() {
      var e = this.eBodyViewport.scrollTop;
      this.shouldBlockScrollUpdate("vertical", e, !0) || (this.animationFrameService.setScrollTop(e), this.nextScrollTop = e, this.gridOptionsWrapper.isSuppressAnimationFrame() ? (this.scrollTop = this.nextScrollTop, this.redrawRowsAfterScroll()) : this.animationFrameService.schedule());
    }, t.prototype.resetLastHorizontalScrollElement = function() {
      this.lastHorizontalScrollElement = null;
    }, t.prototype.doHorizontalScroll = function(e) {
      var r = this.ctrlsService.getFakeHScrollCtrl().getViewport(), o = Wo(r, this.enableRtl);
      this.scrollLeft === e && e === o || (this.scrollLeft = e, this.fireScrollEvent("horizontal"), this.horizontallyScrollHeaderCenterAndFloatingCenter(e), this.onHorizontalViewportChanged());
    }, t.prototype.fireScrollEvent = function(e) {
      var r = this, o = {
        type: v.EVENT_BODY_SCROLL,
        api: this.gridApi,
        columnApi: this.columnApi,
        direction: e,
        left: this.scrollLeft,
        top: this.scrollTop
      };
      this.eventService.dispatchEvent(o), window.clearTimeout(this.scrollTimer), this.scrollTimer = void 0, this.scrollTimer = window.setTimeout(function() {
        var i = Object.assign({}, o, {
          type: v.EVENT_BODY_SCROLL_END
        });
        r.eventService.dispatchEvent(i);
      }, 100);
    }, t.prototype.shouldBlockScrollUpdate = function(e, r, o) {
      if (o === void 0 && (o = !1), o && !ro())
        return !1;
      if (e === "vertical") {
        var i = Uo(this.eBodyViewport), s = this.eBodyViewport.scrollHeight;
        if (r < 0 || r + i > s)
          return !0;
      }
      if (e === "horizontal") {
        var a = this.centerRowContainerCon.getCenterWidth(), l = this.centerRowContainerCon.getViewportElement().scrollWidth;
        if (this.enableRtl && Ho()) {
          if (r > 0)
            return !0;
        } else if (r < 0)
          return !0;
        if (Math.abs(r) + a > l)
          return !0;
      }
      return !1;
    }, t.prototype.redrawRowsAfterScroll = function() {
      this.fireScrollEvent("vertical");
    }, t.prototype.onHorizontalViewportChanged = function() {
      this.centerRowContainerCon.onHorizontalViewportChanged();
    }, t.prototype.checkScrollLeft = function() {
      this.scrollLeft !== this.centerRowContainerCon.getCenterViewportScrollLeft() && this.onBodyHorizontalScroll(this.centerRowContainerCon.getViewportElement());
    }, t.prototype.executeAnimationFrameScroll = function() {
      var e = this.scrollTop != this.nextScrollTop;
      return e && (this.scrollTop = this.nextScrollTop, this.redrawRowsAfterScroll()), e;
    }, t.prototype.setHorizontalScrollPosition = function(e) {
      var r = 0, o = this.centerRowContainerCon.getViewportElement().scrollWidth - this.centerRowContainerCon.getCenterWidth();
      this.shouldBlockScrollUpdate("horizontal", e) && (this.enableRtl && Ho() ? e = e > 0 ? 0 : o : e = Math.min(Math.max(e, r), o)), Wn(this.centerRowContainerCon.getViewportElement(), Math.abs(e), this.enableRtl), this.doHorizontalScroll(e);
    }, t.prototype.setVerticalScrollPosition = function(e) {
      this.eBodyViewport.scrollTop = e;
    }, t.prototype.getVScrollPosition = function() {
      var e = {
        top: this.eBodyViewport.scrollTop,
        bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight
      };
      return e;
    }, t.prototype.getHScrollPosition = function() {
      return this.centerRowContainerCon.getHScrollPosition();
    }, t.prototype.isHorizontalScrollShowing = function() {
      return this.centerRowContainerCon.isHorizontalScrollShowing();
    }, t.prototype.scrollHorizontally = function(e) {
      var r = this.centerRowContainerCon.getViewportElement().scrollLeft;
      return this.setHorizontalScrollPosition(r + e), this.centerRowContainerCon.getViewportElement().scrollLeft - r;
    }, t.prototype.scrollToTop = function() {
      this.eBodyViewport.scrollTop = 0;
    }, t.prototype.ensureNodeVisible = function(e, r) {
      r === void 0 && (r = null);
      for (var o = this.rowModel.getRowCount(), i = typeof e == "function", s = -1, a = 0; a < o; a++) {
        var l = this.rowModel.getRow(a);
        if (i) {
          if (e(l)) {
            s = a;
            break;
          }
        } else if (e === l || e === l.data) {
          s = a;
          break;
        }
      }
      s >= 0 && this.ensureIndexVisible(s, r);
    }, t.prototype.ensureIndexVisible = function(e, r) {
      if (this.gridOptionsWrapper.getDomLayout() !== w.DOM_LAYOUT_PRINT) {
        var o = this.paginationProxy.getRowCount();
        if (typeof e != "number" || e < 0 || e >= o) {
          console.warn("invalid row index for ensureIndexVisible: " + e);
          return;
        }
        var i = this.gridOptionsWrapper.isPagination(), s = i && !this.gridOptionsWrapper.isSuppressPaginationPanel();
        s || this.paginationProxy.goToPageWithIndex(e);
        var a = this.paginationProxy.getRow(e), l;
        do {
          var u = a.rowTop, p = a.rowHeight, c = this.paginationProxy.getPixelOffset(), d = a.rowTop - c, f = d + a.rowHeight, g = this.getVScrollPosition(), y = this.heightScaler.getDivStretchOffset(), C = g.top + y, m = g.bottom + y, _ = m - C, E = this.heightScaler.getScrollPositionForPixel(d), S = this.heightScaler.getScrollPositionForPixel(f - _), b = Math.min((E + S) / 2, d), x = C > d, I = m < f, A = null;
          r === "top" ? A = E : r === "bottom" ? A = S : r === "middle" ? A = b : x ? A = E : I && (A = S), A !== null && (this.eBodyViewport.scrollTop = A, this.rowRenderer.redrawAfterScroll()), l = u !== a.rowTop || p !== a.rowHeight;
        } while (l);
        this.animationFrameService.flushAllFrames();
      }
    }, t.prototype.ensureColumnVisible = function(e, r) {
      r === void 0 && (r = "auto");
      var o = this.columnModel.getGridColumn(e);
      if (o && !o.isPinned() && this.columnModel.isColumnDisplayed(o)) {
        var i = this.getPositionedHorizontalScroll(o, r);
        i !== null && this.centerRowContainerCon.setCenterViewportScrollLeft(i), this.centerRowContainerCon.onHorizontalViewportChanged(), this.animationFrameService.flushAllFrames();
      }
    }, t.prototype.getPositionedHorizontalScroll = function(e, r) {
      var o = this.isColumnOutsideViewport(e), i = o.columnBeforeStart, s = o.columnAfterEnd, a = this.centerRowContainerCon.getCenterWidth() < e.getActualWidth(), l = this.centerRowContainerCon.getCenterWidth(), u = this.enableRtl, p = (u ? i : s) || a, c = u ? s : i;
      r !== "auto" && (p = r === "start", c = r === "end");
      var d = r === "middle";
      if (p || c || d) {
        var f = this.getColumnBounds(e), g = f.colLeft, y = f.colMiddle, C = f.colRight;
        return d ? y - l / 2 : p ? u ? C : g : u ? g - l : C - l;
      }
      return null;
    }, t.prototype.isColumnOutsideViewport = function(e) {
      var r = this.getViewportBounds(), o = r.start, i = r.end, s = this.getColumnBounds(e), a = s.colLeft, l = s.colRight, u = this.enableRtl, p = u ? o > l : i < l, c = u ? i < a : o > a;
      return { columnBeforeStart: p, columnAfterEnd: c };
    }, t.prototype.getColumnBounds = function(e) {
      var r = this.enableRtl, o = this.columnModel.getBodyContainerWidth(), i = e.getActualWidth(), s = e.getLeft(), a = r ? -1 : 1, l = r ? o - s : s, u = l + i * a, p = l + i / 2 * a;
      return { colLeft: l, colMiddle: p, colRight: u };
    }, t.prototype.getViewportBounds = function() {
      var e = this.centerRowContainerCon.getCenterWidth(), r = this.centerRowContainerCon.getCenterViewportScrollLeft(), o = r, i = e + r;
      return { start: o, end: i, width: e };
    }, Ht([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ht([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), Ht([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Ht([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Ht([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Ht([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Ht([
      h("rowContainerHeightService")
    ], t.prototype, "heightScaler", void 0), Ht([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ht([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ht([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var vc = (
  /** @class */
  function() {
    function n(t) {
      this.tickingInterval = null, this.onScrollCallback = null, this.scrollContainer = t.scrollContainer, this.scrollHorizontally = t.scrollAxis.indexOf("x") !== -1, this.scrollVertically = t.scrollAxis.indexOf("y") !== -1, this.scrollByTick = t.scrollByTick != null ? t.scrollByTick : 20, t.onScrollCallback && (this.onScrollCallback = t.onScrollCallback), this.scrollVertically && (this.getVerticalPosition = t.getVerticalPosition, this.setVerticalPosition = t.setVerticalPosition), this.scrollHorizontally && (this.getHorizontalPosition = t.getHorizontalPosition, this.setHorizontalPosition = t.setHorizontalPosition), this.shouldSkipVerticalScroll = t.shouldSkipVerticalScroll || function() {
        return !1;
      }, this.shouldSkipHorizontalScroll = t.shouldSkipHorizontalScroll || function() {
        return !1;
      };
    }
    return n.prototype.check = function(t, e) {
      e === void 0 && (e = !1);
      var r = e || this.shouldSkipVerticalScroll();
      if (!(r && this.shouldSkipHorizontalScroll())) {
        var o = this.scrollContainer.getBoundingClientRect(), i = this.scrollByTick;
        this.tickLeft = t.clientX < o.left + i, this.tickRight = t.clientX > o.right - i, this.tickUp = t.clientY < o.top + i && !r, this.tickDown = t.clientY > o.bottom - i && !r, this.tickLeft || this.tickRight || this.tickUp || this.tickDown ? this.ensureTickingStarted() : this.ensureCleared();
      }
    }, n.prototype.ensureTickingStarted = function() {
      this.tickingInterval === null && (this.tickingInterval = window.setInterval(this.doTick.bind(this), 100), this.tickCount = 0);
    }, n.prototype.doTick = function() {
      this.tickCount++;
      var t;
      if (t = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40, this.scrollVertically) {
        var e = this.getVerticalPosition();
        this.tickUp && this.setVerticalPosition(e - t), this.tickDown && this.setVerticalPosition(e + t);
      }
      if (this.scrollHorizontally) {
        var r = this.getHorizontalPosition();
        this.tickLeft && this.setHorizontalPosition(r - t), this.tickRight && this.setHorizontalPosition(r + t);
      }
      this.onScrollCallback && this.onScrollCallback();
    }, n.prototype.ensureCleared = function() {
      this.tickingInterval && (window.clearInterval(this.tickingInterval), this.tickingInterval = null);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var pC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Us = globalThis && globalThis.__assign || function() {
  return Us = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Us.apply(this, arguments);
}, it = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, cC = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, dC = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(cC(arguments[t]));
  return n;
}, hC = (
  /** @class */
  function(n) {
    pC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.isMultiRowDrag = !1, r.isGridSorted = !1, r.isGridFiltered = !1, r.isRowGroupActive = !1, r.eContainer = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.gridOptionsWrapper.isRowModelDefault() && (this.clientSideRowModel = this.rowModel);
      var r = function() {
        e.onSortChanged(), e.onFilterChanged(), e.onRowGroupChanged();
      };
      this.addManagedListener(this.eventService, v.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_MODEL_UPDATED, function() {
        r();
      }), r(), this.ctrlsService.whenReady(function() {
        var o = e.ctrlsService.getGridBodyCtrl();
        e.autoScrollService = new vc({
          scrollContainer: o.getBodyViewportElement(),
          scrollAxis: "y",
          getVerticalPosition: function() {
            return o.getScrollFeature().getVScrollPosition().top;
          },
          setVerticalPosition: function(i) {
            return o.getScrollFeature().setVerticalScrollPosition(i);
          },
          onScrollCallback: function() {
            e.onDragging(e.lastDraggingEvent);
          }
        });
      });
    }, t.prototype.onSortChanged = function() {
      this.isGridSorted = this.sortController.isSortActive();
    }, t.prototype.onFilterChanged = function() {
      this.isGridFiltered = this.filterManager.isAnyFilterPresent();
    }, t.prototype.onRowGroupChanged = function() {
      var e = this.columnModel.getRowGroupColumns();
      this.isRowGroupActive = !gt(e);
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, t.prototype.isInterestedIn = function(e) {
      return e === mt.RowDrag;
    }, t.prototype.getIconName = function() {
      var e = this.gridOptionsWrapper.isRowDragManaged();
      return e && this.shouldPreventRowMove() ? et.ICON_NOT_ALLOWED : et.ICON_MOVE;
    }, t.prototype.shouldPreventRowMove = function() {
      return this.isGridSorted || this.isGridFiltered || this.isRowGroupActive;
    }, t.prototype.getRowNodes = function(e) {
      var r = this;
      if (!this.isFromThisGrid(e))
        return e.dragItem.rowNodes || [];
      var o = this.gridOptionsWrapper.isRowDragMultiRow(), i = dC(this.selectionService.getSelectedNodes()).sort(function(a, l) {
        return r.getRowIndexNumber(a) - r.getRowIndexNumber(l);
      }), s = e.dragItem.rowNode;
      return o && i.indexOf(s) !== -1 ? (this.isMultiRowDrag = !0, i) : (this.isMultiRowDrag = !1, [s]);
    }, t.prototype.onDragEnter = function(e) {
      e.dragItem.rowNodes = this.getRowNodes(e), this.dispatchGridEvent(v.EVENT_ROW_DRAG_ENTER, e), this.getRowNodes(e).forEach(function(r) {
        r.setDragging(!0);
      }), this.onEnterOrDragging(e);
    }, t.prototype.onDragging = function(e) {
      this.onEnterOrDragging(e);
    }, t.prototype.isFromThisGrid = function(e) {
      var r = e.dragSource.dragSourceDomDataKey;
      return r === this.gridOptionsWrapper.getDomDataKey();
    }, t.prototype.isDropZoneWithinThisGrid = function(e) {
      var r = this.ctrlsService.getGridBodyCtrl(), o = r.getGui(), i = e.dropZoneTarget;
      return !o.contains(i);
    }, t.prototype.onEnterOrDragging = function(e) {
      this.dispatchGridEvent(v.EVENT_ROW_DRAG_MOVE, e), this.lastDraggingEvent = e;
      var r = this.mouseEventService.getNormalisedPosition(e).y, o = this.gridOptionsWrapper.isRowDragManaged();
      o && this.doManagedDrag(e, r), this.autoScrollService.check(e.event);
    }, t.prototype.doManagedDrag = function(e, r) {
      var o = this.isFromThisGrid(e), i = this.gridOptionsWrapper.isRowDragManaged(), s = e.dragItem.rowNodes;
      i && this.shouldPreventRowMove() || (this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() || !o ? this.isDropZoneWithinThisGrid(e) || this.clientSideRowModel.highlightRowAtPixel(s[0], r) : this.moveRows(s, r));
    }, t.prototype.getRowIndexNumber = function(e) {
      return parseInt(_e(e.getRowIndexString().split("-")), 10);
    }, t.prototype.moveRowAndClearHighlight = function(e) {
      var r = this, o = this.clientSideRowModel.getLastHighlightedRowNode(), i = o && o.highlighted === Ut.Below, s = this.mouseEventService.getNormalisedPosition(e).y, a = e.dragItem.rowNodes, l = i ? 1 : 0;
      if (this.isFromThisGrid(e))
        a.forEach(function(c) {
          c.rowTop < s && (l -= 1);
        }), this.moveRows(a, s, l);
      else {
        var u = this.gridOptionsWrapper.getRowIdFunc(), p = this.clientSideRowModel.getRowIndexAtPixel(s) + 1;
        this.clientSideRowModel.getHighlightPosition(s) === Ut.Above && p--, this.clientSideRowModel.updateRowData({
          add: a.map(function(c) {
            return c.data;
          }).filter(function(c) {
            return !r.clientSideRowModel.getRowNode(u ? u({ data: c, level: 0, api: r.gridApi, columnApi: r.columnApi }) : c.id);
          }),
          addIndex: p
        });
      }
      this.clearRowHighlight();
    }, t.prototype.clearRowHighlight = function() {
      this.clientSideRowModel.highlightRowAtPixel(null);
    }, t.prototype.moveRows = function(e, r, o) {
      o === void 0 && (o = 0);
      var i = this.clientSideRowModel.ensureRowsAtPixel(e, r, o);
      i && (this.focusService.clearFocusedCell(), this.rangeService && this.rangeService.removeAllCellRanges());
    }, t.prototype.addRowDropZone = function(e) {
      var r = this;
      if (!e.getContainer()) {
        ve(function() {
          return console.warn("AG Grid: addRowDropZone - A container target needs to be provided");
        }, "add-drop-zone-empty-target");
        return;
      }
      if (this.dragAndDropService.findExternalZone(e)) {
        console.warn("AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.");
        return;
      }
      var o = {
        getContainer: e.getContainer
      };
      e.fromGrid ? (e.fromGrid = void 0, o = e) : (e.onDragEnter && (o.onDragEnter = function(i) {
        e.onDragEnter(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_ENTER, i));
      }), e.onDragLeave && (o.onDragLeave = function(i) {
        e.onDragLeave(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_LEAVE, i));
      }), e.onDragging && (o.onDragging = function(i) {
        e.onDragging(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_MOVE, i));
      }), e.onDragStop && (o.onDragStop = function(i) {
        e.onDragStop(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_END, i));
      })), this.dragAndDropService.addDropTarget(Us({ isInterestedIn: function(i) {
        return i === mt.RowDrag;
      }, getIconName: function() {
        return et.ICON_MOVE;
      }, external: !0 }, o));
    }, t.prototype.getRowDropZone = function(e) {
      var r = this, o = this.getContainer.bind(this), i = this.onDragEnter.bind(this), s = this.onDragLeave.bind(this), a = this.onDragging.bind(this), l = this.onDragStop.bind(this);
      return e ? {
        getContainer: o,
        onDragEnter: e.onDragEnter ? function(u) {
          i(u), e.onDragEnter(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_ENTER, u));
        } : i,
        onDragLeave: e.onDragLeave ? function(u) {
          s(u), e.onDragLeave(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_LEAVE, u));
        } : s,
        onDragging: e.onDragging ? function(u) {
          a(u), e.onDragging(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_MOVE, u));
        } : a,
        onDragStop: e.onDragStop ? function(u) {
          l(u), e.onDragStop(r.draggingToRowDragEvent(v.EVENT_ROW_DRAG_END, u));
        } : l,
        fromGrid: !0
        /* @private */
      } : {
        getContainer: o,
        onDragEnter: i,
        onDragLeave: s,
        onDragging: a,
        onDragStop: l,
        /* @private */
        fromGrid: !0
      };
    }, t.prototype.draggingToRowDragEvent = function(e, r) {
      var o = this.mouseEventService.getNormalisedPosition(r).y, i = o > this.paginationProxy.getCurrentPageHeight(), s = -1, a;
      i || (s = this.rowModel.getRowIndexAtPixel(o), a = this.rowModel.getRow(s));
      var l;
      switch (r.vDirection) {
        case Rr.Down:
          l = "down";
          break;
        case Rr.Up:
          l = "up";
          break;
        default:
          l = null;
          break;
      }
      var u = {
        type: e,
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        event: r.event,
        node: r.dragItem.rowNode,
        nodes: r.dragItem.rowNodes,
        overIndex: s,
        overNode: a,
        y: o,
        vDirection: l
      };
      return u;
    }, t.prototype.dispatchGridEvent = function(e, r) {
      var o = this.draggingToRowDragEvent(e, r);
      this.eventService.dispatchEvent(o);
    }, t.prototype.onDragLeave = function(e) {
      this.dispatchGridEvent(v.EVENT_ROW_DRAG_LEAVE, e), this.stopDragging(e), this.gridOptionsWrapper.isRowDragManaged() && this.clearRowHighlight(), this.isFromThisGrid(e) && (this.isMultiRowDrag = !1);
    }, t.prototype.onDragStop = function(e) {
      this.dispatchGridEvent(v.EVENT_ROW_DRAG_END, e), this.stopDragging(e), this.gridOptionsWrapper.isRowDragManaged() && (this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() || !this.isFromThisGrid(e)) && !this.isDropZoneWithinThisGrid(e) && this.moveRowAndClearHighlight(e);
    }, t.prototype.stopDragging = function(e) {
      this.autoScrollService.ensureCleared(), this.getRowNodes(e).forEach(function(r) {
        r.setDragging(!1);
      });
    }, it([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), it([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), it([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), it([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), it([
      h("focusService")
    ], t.prototype, "focusService", void 0), it([
      h("sortController")
    ], t.prototype, "sortController", void 0), it([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), it([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), it([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), it([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), it([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), it([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), it([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), it([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var fC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ht = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Sr;
(function(n) {
  n.ANIMATION_ON = "ag-row-animation", n.ANIMATION_OFF = "ag-row-no-animation";
})(Sr || (Sr = {}));
var yc = "ag-selectable", Cc = "ag-force-vertical-scroll", mc = "ag-column-moving", _c = (
  /** @class */
  function(n) {
    fC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.angularApplyTriggered = !1, e;
    }
    return t.prototype.getScrollFeature = function() {
      return this.bodyScrollFeature;
    }, t.prototype.getBodyViewportElement = function() {
      return this.eBodyViewport;
    }, t.prototype.setComp = function(e, r, o, i, s) {
      this.comp = e, this.eGridBody = r, this.eBodyViewport = o, this.eTop = i, this.eBottom = s, this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect()), this.createManagedBean(new Fa(this.comp)), this.bodyScrollFeature = this.createManagedBean(new uC(this.eBodyViewport)), this.addRowDragListener(), this.setupRowAnimationCssClass(), this.ctrlsService.registerGridBodyCtrl(this), this.addEventListeners(), this.addFocusListeners([i, o, s]), this.onGridColumnsChanged(), this.addBodyViewportListener(), this.setFloatingHeights(), this.disableBrowserDragging(), this.addStopEditingWhenGridLosesFocus(), this.$scope && this.addAngularApplyCheck();
    }, t.prototype.getComp = function() {
      return this.comp;
    }, t.prototype.addEventListeners = function() {
      this.addManagedListener(this.eventService, v.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_PINNED_ROW_DATA_CHANGED, this.setFloatingHeights.bind(this));
    }, t.prototype.addFocusListeners = function(e) {
      var r = this;
      e.forEach(function(o) {
        r.addManagedListener(o, "focusin", function() {
          o.classList.add("ag-has-focus");
        }), r.addManagedListener(o, "focusout", function(i) {
          o.contains(i.relatedTarget) || o.classList.remove("ag-has-focus");
        });
      });
    }, t.prototype.setColumnMovingCss = function(e) {
      this.comp.setColumnMovingCss(e ? mc : null, e);
    }, t.prototype.setCellTextSelection = function(e) {
      e === void 0 && (e = !1);
      var r = e ? yc : null;
      this.comp.setCellSelectableCss(r, e);
    }, t.prototype.onScrollVisibilityChanged = function() {
      var e = this.scrollVisibleService.isVerticalScrollShowing();
      this.setVerticalScrollPaddingVisible(e);
    }, t.prototype.onGridColumnsChanged = function() {
      var e = this.columnModel.getAllGridColumns();
      this.comp.setColumnCount(e ? e.length : 0);
    }, t.prototype.disableBrowserDragging = function() {
      this.addManagedListener(this.eGridBody, "dragstart", function(e) {
        if (e.target instanceof HTMLImageElement)
          return e.preventDefault(), !1;
      });
    }, t.prototype.addStopEditingWhenGridLosesFocus = function() {
      var e = this;
      if (this.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus()) {
        var r = function(i) {
          var s = i.relatedTarget;
          if (Hn(s) === null) {
            e.rowRenderer.stopEditing();
            return;
          }
          var a = (
            // see if click came from inside the viewports
            o.some(function(u) {
              return u.contains(s);
            }) && e.mouseEventService.isElementInThisGrid(s)
          );
          if (!a) {
            var l = e.popupService;
            a = l.getActivePopups().some(function(u) {
              return u.contains(s);
            }) || l.isElementWithinCustomPopup(s);
          }
          a || e.rowRenderer.stopEditing();
        }, o = [this.eBodyViewport, this.eBottom, this.eTop];
        o.forEach(function(i) {
          return e.addManagedListener(i, "focusout", r);
        });
      }
    }, t.prototype.updateRowCount = function() {
      var e = this.headerNavigationService.getHeaderRowCount(), r = this.paginationProxy.getType(), o = -1;
      r === w.ROW_MODEL_TYPE_CLIENT_SIDE && (o = 0, this.paginationProxy.forEachNode(function(s) {
        s.group || o++;
      }));
      var i = o === -1 ? -1 : e + o;
      this.comp.setRowCount(i);
    }, t.prototype.registerBodyViewportResizeListener = function(e) {
      this.comp.registerBodyViewportResizeListener(e);
    }, t.prototype.setVerticalScrollPaddingVisible = function(e) {
      var r = e ? "scroll" : "hidden";
      this.comp.setPinnedTopBottomOverflowY(r);
    }, t.prototype.isVerticalScrollShowing = function() {
      var e = this.gridOptionsWrapper.isAlwaysShowVerticalScroll(), r = e ? Cc : null;
      return this.comp.setAlwaysVerticalScrollClass(r, e), e || ap(this.eBodyViewport);
    }, t.prototype.setupRowAnimationCssClass = function() {
      var e = this, r = function() {
        var o = e.gridOptionsWrapper.isAnimateRows() && !e.rowContainerHeightService.isStretching(), i = o ? Sr.ANIMATION_ON : Sr.ANIMATION_OFF;
        e.comp.setRowAnimationCssOnBodyViewport(i, o);
      };
      r(), this.addManagedListener(this.eventService, v.EVENT_HEIGHT_SCALE_CHANGED, r);
    }, t.prototype.getGridBodyElement = function() {
      return this.eGridBody;
    }, t.prototype.addBodyViewportListener = function() {
      var e = this, r = function(o) {
        e.gridOptionsWrapper.isPreventDefaultOnContextMenu() && o.preventDefault();
        var i = o.target;
        (i === e.eBodyViewport || i === e.ctrlsService.getCenterRowContainerCtrl().getViewportElement()) && e.contextMenuFactory && e.contextMenuFactory.onContextMenu(o, null, null, null, null, e.eGridBody);
      };
      this.addManagedListener(this.eBodyViewport, "contextmenu", r), this.addManagedListener(this.eBodyViewport, "wheel", this.onWheel.bind(this));
    }, t.prototype.onWheel = function(e) {
      this.gridOptionsWrapper.isSuppressScrollWhenPopupsAreOpen() && this.popupService.hasAnchoredPopup() && e.preventDefault();
    }, t.prototype.getGui = function() {
      return this.eGridBody;
    }, t.prototype.scrollVertically = function(e) {
      var r = this.eBodyViewport.scrollTop;
      return this.bodyScrollFeature.setVerticalScrollPosition(r + e), this.eBodyViewport.scrollTop - r;
    }, t.prototype.addRowDragListener = function() {
      this.rowDragFeature = this.createManagedBean(new hC(this.eBodyViewport)), this.dragAndDropService.addDropTarget(this.rowDragFeature);
    }, t.prototype.getRowDragFeature = function() {
      return this.rowDragFeature;
    }, t.prototype.setFloatingHeights = function() {
      var e = this.pinnedRowModel, r = e.getPinnedTopTotalHeight();
      r && (r += 1);
      var o = e.getPinnedBottomTotalHeight();
      o && (o += 1), this.comp.setTopHeight(r), this.comp.setBottomHeight(o), this.comp.setTopDisplay(r ? "inherit" : "none"), this.comp.setBottomDisplay(o ? "inherit" : "none");
    }, t.prototype.sizeColumnsToFit = function(e) {
      var r = this, o = this.isVerticalScrollShowing(), i = o ? this.gridOptionsWrapper.getScrollbarWidth() : 0, s = oi(this.eBodyViewport), a = s - i;
      if (a > 0) {
        this.columnModel.sizeColumnsToFit(a, "sizeColumnsToFit");
        return;
      }
      e === void 0 ? window.setTimeout(function() {
        r.sizeColumnsToFit(100);
      }, 0) : e === 100 ? window.setTimeout(function() {
        r.sizeColumnsToFit(500);
      }, 100) : e === 500 ? window.setTimeout(function() {
        r.sizeColumnsToFit(-1);
      }, 500) : console.warn("AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?");
    }, t.prototype.addScrollEventListener = function(e) {
      this.eBodyViewport.addEventListener("scroll", e);
    }, t.prototype.removeScrollEventListener = function(e) {
      this.eBodyViewport.removeEventListener("scroll", e);
    }, t.prototype.requestAngularApply = function() {
      var e = this;
      this.angularApplyTriggered || (this.angularApplyTriggered = !0, window.setTimeout(function() {
        e.angularApplyTriggered = !1, e.$scope.$apply();
      }, 0));
    }, t.prototype.addAngularApplyCheck = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
        return e.requestAngularApply();
      }), this.addManagedListener(this.eventService, v.EVENT_VIRTUAL_COLUMNS_CHANGED, function() {
        return e.requestAngularApply();
      });
    }, ht([
      h("rowContainerHeightService")
    ], t.prototype, "rowContainerHeightService", void 0), ht([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), ht([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ht([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), ht([
      de("contextMenuFactory")
    ], t.prototype, "contextMenuFactory", void 0), ht([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), ht([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), ht([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), ht([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), ht([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), ht([
      h("popupService")
    ], t.prototype, "popupService", void 0), ht([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), ht([
      h("$scope")
    ], t.prototype, "$scope", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var gC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, vC = (
  /* html */
  `<div class="ag-root ag-unselectable" role="grid">
        <ag-header-root ref="gridHeader"></ag-header-root>
        <div class="ag-floating-top" ref="eTop" role="presentation">
            <ag-row-container ref="topLeftContainer" name="` + F.TOP_LEFT + `"></ag-row-container>
            <ag-row-container ref="topCenterContainer" name="` + F.TOP_CENTER + `"></ag-row-container>
            <ag-row-container ref="topRightContainer" name="` + F.TOP_RIGHT + `"></ag-row-container>
            <ag-row-container ref="topFullWidthContainer" name="` + F.TOP_FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-body-viewport" ref="eBodyViewport" role="presentation">
            <ag-row-container ref="leftContainer" name="` + F.LEFT + `"></ag-row-container>
            <ag-row-container ref="centerContainer" name="` + F.CENTER + `"></ag-row-container>
            <ag-row-container ref="rightContainer" name="` + F.RIGHT + `"></ag-row-container>
            <ag-row-container ref="fullWidthContainer" name="` + F.FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-floating-bottom" ref="eBottom" role="presentation">
            <ag-row-container ref="bottomLeftContainer" name="` + F.BOTTOM_LEFT + `"></ag-row-container>
            <ag-row-container ref="bottomCenterContainer" name="` + F.BOTTOM_CENTER + `"></ag-row-container>
            <ag-row-container ref="bottomRightContainer" name="` + F.BOTTOM_RIGHT + `"></ag-row-container>
            <ag-row-container ref="bottomFullWidthContainer" name="` + F.BOTTOM_FULL_WIDTH + `"></ag-row-container>
        </div>
        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>
        <ag-overlay-wrapper></ag-overlay-wrapper>
    </div>`
), wc = (
  /** @class */
  function(n) {
    gC(t, n);
    function t() {
      return n.call(this, vC) || this;
    }
    return t.prototype.init = function() {
      var e = this, r = function(i, s) {
        var a = i + "px";
        s.style.minHeight = a, s.style.height = a;
      }, o = {
        setRowAnimationCssOnBodyViewport: function(i, s) {
          return e.setRowAnimationCssOnBodyViewport(i, s);
        },
        setColumnCount: function(i) {
          return mp(e.getGui(), i);
        },
        setRowCount: function(i) {
          return Cp(e.getGui(), i);
        },
        setTopHeight: function(i) {
          return r(i, e.eTop);
        },
        setBottomHeight: function(i) {
          return r(i, e.eBottom);
        },
        setTopDisplay: function(i) {
          return e.eTop.style.display = i;
        },
        setBottomDisplay: function(i) {
          return e.eBottom.style.display = i;
        },
        setColumnMovingCss: function(i, s) {
          return e.addOrRemoveCssClass(mc, s);
        },
        updateLayoutClasses: function(i, s) {
          var a = e.eBodyViewport.classList;
          a.toggle(Le.AUTO_HEIGHT, s.autoHeight), a.toggle(Le.NORMAL, s.normal), a.toggle(Le.PRINT, s.print), e.addOrRemoveCssClass(Le.AUTO_HEIGHT, s.autoHeight), e.addOrRemoveCssClass(Le.NORMAL, s.normal), e.addOrRemoveCssClass(Le.PRINT, s.print);
        },
        setAlwaysVerticalScrollClass: function(i, s) {
          return e.eBodyViewport.classList.toggle(Cc, s);
        },
        registerBodyViewportResizeListener: function(i) {
          var s = e.resizeObserverService.observeResize(e.eBodyViewport, i);
          e.addDestroyFunc(function() {
            return s();
          });
        },
        setPinnedTopBottomOverflowY: function(i) {
          return e.eTop.style.overflowY = e.eBottom.style.overflowY = i;
        },
        setCellSelectableCss: function(i, s) {
          [e.eTop, e.eBodyViewport, e.eBottom].forEach(function(a) {
            return a.classList.toggle(yc, s);
          });
        }
      };
      this.ctrl = this.createManagedBean(new _c()), this.ctrl.setComp(o, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom), (this.rangeService || this.gridOptionsWrapper.isRowSelectionMulti()) && yp(this.getGui(), !0);
    }, t.prototype.setRowAnimationCssOnBodyViewport = function(e, r) {
      var o = this.eBodyViewport.classList;
      o.toggle(Sr.ANIMATION_ON, r), o.toggle(Sr.ANIMATION_OFF, !r);
    }, t.prototype.getFloatingTopBottom = function() {
      return [this.eTop, this.eBottom];
    }, gr([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), gr([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), gr([
      T("eBodyViewport")
    ], t.prototype, "eBodyViewport", void 0), gr([
      T("eTop")
    ], t.prototype, "eTop", void 0), gr([
      T("eBottom")
    ], t.prototype, "eBottom", void 0), gr([
      T("gridHeader")
    ], t.prototype, "headerRootComp", void 0), gr([
      G
    ], t.prototype, "init", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var yC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, CC = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Ec = (
  /** @class */
  function(n) {
    yC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.expressionToFunctionCache = {}, e;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("ExpressionService");
    }, t.prototype.evaluate = function(e, r) {
      if (typeof e == "function") {
        var o = e;
        return o(r);
      } else if (typeof e == "string") {
        var i = e;
        return this.evaluateExpression(i, r);
      } else
        console.error("AG Grid: value should be either a string or a function", e);
    }, t.prototype.evaluateExpression = function(e, r) {
      try {
        var o = this.createExpressionFunction(e), i = o(r.value, r.context, r.oldValue, r.newValue, r.value, r.node, r.data, r.colDef, r.rowIndex, r.api, r.columnApi, r.getValue, r.column, r.columnGroup);
        return i;
      } catch (s) {
        return console.log("Processing of the expression failed"), console.log("Expression = " + e), console.log("Params =", r), console.log("Exception = " + s), null;
      }
    }, t.prototype.createExpressionFunction = function(e) {
      if (this.expressionToFunctionCache[e])
        return this.expressionToFunctionCache[e];
      var r = this.createFunctionBody(e), o = new Function("x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup", r);
      return this.expressionToFunctionCache[e] = o, o;
    }, t.prototype.createFunctionBody = function(e) {
      return e.indexOf("return") >= 0 ? e : "return " + e + ";";
    }, zl([
      CC(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), t = zl([
      U("expressionService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var mC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $l = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Rc = (
  /** @class */
  function(n) {
    mC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.templateCache = {}, e.waitingCallbacks = {}, e;
    }
    return t.prototype.getTemplate = function(e, r) {
      var o = this.templateCache[e];
      if (o)
        return o;
      var i = this.waitingCallbacks[e], s = this;
      if (!i) {
        i = [], this.waitingCallbacks[e] = i;
        var a = new XMLHttpRequest();
        a.onload = function() {
          s.handleHttpResult(this, e);
        }, a.open("GET", e), a.send();
      }
      return r && i.push(r), null;
    }, t.prototype.handleHttpResult = function(e, r) {
      if (e.status !== 200 || e.response === null) {
        console.warn("AG Grid: Unable to get template error " + e.status + " - " + r);
        return;
      }
      this.templateCache[r] = e.response || e.responseText;
      for (var o = this.waitingCallbacks[r], i = 0; i < o.length; i++) {
        var s = o[i];
        s();
      }
      if (this.$scope) {
        var a = this;
        window.setTimeout(function() {
          a.$scope.$apply();
        }, 0);
      }
    }, $l([
      h("$scope")
    ], t.prototype, "$scope", void 0), t = $l([
      U("templateService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var _C = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, wC = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, EC = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(wC(arguments[t]));
  return n;
}, Yr = (
  /** @class */
  function(n) {
    _C(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    e = t, t.addKeyboardModeEvents = function(r, o) {
      var i = e.instancesMonitored.get(r);
      i && i.length > 0 ? i.indexOf(o) === -1 && i.push(o) : (e.instancesMonitored.set(r, [o]), r.addEventListener("keydown", e.toggleKeyboardMode), r.addEventListener("mousedown", e.toggleKeyboardMode));
    }, t.removeKeyboardModeEvents = function(r, o) {
      var i = e.instancesMonitored.get(r), s = [];
      i && i.length && (s = EC(i).filter(function(a) {
        return a !== o;
      }), e.instancesMonitored.set(r, s)), s.length === 0 && (r.removeEventListener("keydown", e.toggleKeyboardMode), r.removeEventListener("mousedown", e.toggleKeyboardMode));
    }, t.toggleKeyboardMode = function(r) {
      var o = e.keyboardModeActive, i = r.type === "keydown";
      if (!(i && (r.ctrlKey || r.metaKey || r.altKey)) && !(o && i || !o && !i)) {
        e.keyboardModeActive = i;
        var s = r.target.ownerDocument;
        if (s) {
          var a = e.instancesMonitored.get(s);
          a && a.forEach(function(l) {
            l.dispatchEvent({ type: i ? v.EVENT_KEYBOARD_FOCUS : v.EVENT_MOUSE_FOCUS });
          });
        }
      }
    }, t.prototype.init = function() {
      var r = this, o = this.clearFocusedCell.bind(this);
      this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_MODE_CHANGED, o), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_GROUP_OPENED, o), this.addManagedListener(this.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, o), this.ctrlsService.whenReady(function(i) {
        r.gridCtrl = i.gridCtrl;
        var s = r.gridOptionsWrapper.getDocument();
        e.addKeyboardModeEvents(s, r.gridCtrl), r.addDestroyFunc(function() {
          return r.unregisterGridCompController(r.gridCtrl);
        });
      });
    }, t.prototype.unregisterGridCompController = function(r) {
      var o = this.gridOptionsWrapper.getDocument();
      e.removeKeyboardModeEvents(o, r);
    }, t.prototype.onColumnEverythingChanged = function() {
      if (this.focusedCellPosition) {
        var r = this.focusedCellPosition.column, o = this.columnModel.getGridColumn(r.getId());
        r !== o && this.clearFocusedCell();
      }
    }, t.prototype.isKeyboardMode = function() {
      return e.keyboardModeActive;
    }, t.prototype.getFocusCellToUseAfterRefresh = function() {
      var r = this.gridOptionsWrapper.getDocument();
      return this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition || this.isDomDataMissingInHierarchy(r.activeElement, lr.DOM_DATA_KEY_ROW_CTRL) ? null : this.focusedCellPosition;
    }, t.prototype.getFocusHeaderToUseAfterRefresh = function() {
      var r = this.gridOptionsWrapper.getDocument();
      return this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedHeaderPosition || this.isDomDataMissingInHierarchy(r.activeElement, $o.DOM_DATA_KEY_HEADER_CTRL) ? null : this.focusedHeaderPosition;
    }, t.prototype.isDomDataMissingInHierarchy = function(r, o) {
      for (var i = r; i; ) {
        var s = this.gridOptionsWrapper.getDomData(i, o);
        if (s)
          return !1;
        i = i.parentNode;
      }
      return !0;
    }, t.prototype.clearFocusedCell = function() {
      this.focusedCellPosition = null, this.onCellFocused(!1);
    }, t.prototype.getFocusedCell = function() {
      return this.focusedCellPosition;
    }, t.prototype.setFocusedCell = function(r, o, i, s) {
      s === void 0 && (s = !1);
      var a = this.columnModel.getGridColumn(o);
      if (!a) {
        this.focusedCellPosition = null;
        return;
      }
      this.focusedCellPosition = a ? { rowIndex: r, rowPinned: $r(i), column: a } : null, this.onCellFocused(s);
    }, t.prototype.isCellFocused = function(r) {
      return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.column === r.column && this.isRowFocused(r.rowIndex, r.rowPinned);
    }, t.prototype.isRowNodeFocused = function(r) {
      return this.isRowFocused(r.rowIndex, r.rowPinned);
    }, t.prototype.isHeaderWrapperFocused = function(r) {
      if (this.focusedHeaderPosition == null)
        return !1;
      var o = r.getColumnGroupChild(), i = r.getRowIndex(), s = r.getPinned(), a = this.focusedHeaderPosition, l = a.column, u = a.headerRowIndex;
      return o === l && i === u && s == l.getPinned();
    }, t.prototype.clearFocusedHeader = function() {
      this.focusedHeaderPosition = null;
    }, t.prototype.getFocusedHeader = function() {
      return this.focusedHeaderPosition;
    }, t.prototype.setFocusedHeader = function(r, o) {
      this.focusedHeaderPosition = { headerRowIndex: r, column: o };
    }, t.prototype.focusHeaderPosition = function(r) {
      var o = r.direction, i = r.fromTab, s = r.allowUserOverride, a = r.event, l = r.headerPosition;
      if (s) {
        var u = this.gridOptionsWrapper, p = this.getFocusedHeader(), c = this.headerNavigationService.getHeaderRowCount();
        if (i) {
          var d = u.getTabToNextHeaderFunc();
          if (d) {
            var f = {
              backwards: o === "Before",
              previousHeaderPosition: p,
              nextHeaderPosition: l,
              headerRowCount: c,
              api: u.getApi(),
              columnApi: u.getColumnApi()
            };
            l = d(f);
          }
        } else {
          var d = u.getNavigateToNextHeaderFunc();
          if (d && a) {
            var g = {
              key: a.key,
              previousHeaderPosition: p,
              nextHeaderPosition: l,
              headerRowCount: c,
              event: a,
              api: u.getApi(),
              columnApi: u.getColumnApi()
            };
            l = d(g);
          }
        }
      }
      if (!l)
        return !1;
      if (l.headerRowIndex === -1)
        return this.focusGridView(l.column);
      this.headerNavigationService.scrollToColumn(l.column, o);
      var y = this.ctrlsService.getHeaderRowContainerCtrl(l.column.getPinned()), C = y.focusHeader(l.headerRowIndex, l.column, a);
      return C;
    }, t.prototype.focusFirstHeader = function() {
      var r = this.columnModel.getAllDisplayedColumns()[0];
      return r ? (r.getParent() && (r = this.columnModel.getColumnGroupAtLevel(r, 0)), this.focusHeaderPosition({
        headerPosition: { headerRowIndex: 0, column: r }
      })) : !1;
    }, t.prototype.focusLastHeader = function(r) {
      var o = this.headerNavigationService.getHeaderRowCount() - 1, i = _e(this.columnModel.getAllDisplayedColumns());
      return this.focusHeaderPosition({
        headerPosition: { headerRowIndex: o, column: i },
        event: r
      });
    }, t.prototype.isAnyCellFocused = function() {
      return !!this.focusedCellPosition;
    }, t.prototype.isRowFocused = function(r, o) {
      return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.rowIndex === r && this.focusedCellPosition.rowPinned === $r(o);
    }, t.prototype.findFocusableElements = function(r, o, i) {
      i === void 0 && (i = !1);
      var s = w.FOCUSABLE_SELECTOR, a = w.FOCUSABLE_EXCLUDE;
      o && (a += ", " + o), i && (a += ', [tabindex="-1"]');
      var l = Array.prototype.slice.apply(r.querySelectorAll(s)), u = Array.prototype.slice.apply(r.querySelectorAll(a));
      if (!u.length)
        return l;
      var p = function(c, d) {
        return c.filter(function(f) {
          return d.indexOf(f) === -1;
        });
      };
      return p(l, u);
    }, t.prototype.focusInto = function(r, o, i) {
      o === void 0 && (o = !1), i === void 0 && (i = !1);
      var s = this.findFocusableElements(r, null, i), a = o ? _e(s) : s[0];
      return a ? (a.focus(), !0) : !1;
    }, t.prototype.findNextFocusableElement = function(r, o, i) {
      r === void 0 && (r = this.eGridDiv);
      var s = this.findFocusableElements(r, o ? ':not([tabindex="-1"])' : null), a = this.gridOptionsWrapper.getDocument(), l = a.activeElement, u;
      o ? u = s.findIndex(function(c) {
        return c.contains(l);
      }) : u = s.indexOf(l);
      var p = u + (i ? -1 : 1);
      return p < 0 || p >= s.length ? null : s[p];
    }, t.prototype.isFocusUnderManagedComponent = function(r) {
      var o = this.gridOptionsWrapper.getDocument(), i = r.querySelectorAll("." + Xt.FOCUS_MANAGED_CLASS);
      if (!i.length)
        return !1;
      for (var s = 0; s < i.length; s++)
        if (i[s].contains(o.activeElement))
          return !0;
      return !1;
    }, t.prototype.findTabbableParent = function(r, o) {
      o === void 0 && (o = 5);
      for (var i = 0; r && Hn(r) === null && ++i <= o; )
        r = r.parentElement;
      return Hn(r) === null ? null : r;
    }, t.prototype.onCellFocused = function(r) {
      var o = {
        type: v.EVENT_CELL_FOCUSED,
        forceBrowserFocus: r,
        rowIndex: null,
        column: null,
        floating: null,
        api: this.gridApi,
        columnApi: this.columnApi,
        rowPinned: null,
        isFullWidthCell: !1
      };
      if (this.focusedCellPosition) {
        var i = o.rowIndex = this.focusedCellPosition.rowIndex, s = o.rowPinned = this.focusedCellPosition.rowPinned;
        o.column = this.focusedCellPosition.column;
        var a = this.rowRenderer.getRowByPosition({ rowIndex: i, rowPinned: s });
        a && (o.isFullWidthCell = a.isFullWidth());
      }
      this.eventService.dispatchEvent(o);
    }, t.prototype.focusGridView = function(r, o) {
      if (this.gridOptionsWrapper.isSuppressCellFocus())
        return o ? this.focusLastHeader() : this.focusNextGridCoreContainer(!1);
      var i = o ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();
      if (!i)
        return !1;
      var s = i.rowIndex, a = i.rowPinned, l = this.getFocusedHeader();
      if (!r && l && (r = l.column), s == null || !r)
        return !1;
      if (this.navigationService.ensureCellVisible({ rowIndex: s, column: r, rowPinned: a }), this.setFocusedCell(s, r, $r(a), !0), this.rangeService) {
        var u = { rowIndex: s, rowPinned: a, column: r };
        this.rangeService.setRangeToCell(u);
      }
      return !0;
    }, t.prototype.focusNextGridCoreContainer = function(r) {
      return this.gridCtrl.focusNextInnerContainer(r) ? !0 : (r || this.gridCtrl.forceFocusOutOfContainer(), !1);
    };
    var e;
    return t.AG_KEYBOARD_FOCUS = "ag-keyboard-focus", t.keyboardModeActive = !1, t.instancesMonitored = /* @__PURE__ */ new Map(), wt([
      h("eGridDiv")
    ], t.prototype, "eGridDiv", void 0), wt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), wt([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), wt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), wt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), wt([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), wt([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), wt([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), wt([
      h("navigationService")
    ], t.prototype, "navigationService", void 0), wt([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), wt([
      G
    ], t.prototype, "init", null), t = e = wt([
      U("focusService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var RC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Eo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, rr;
(function(n) {
  n[n.vertical = 0] = "vertical", n[n.horizontal = 1] = "horizontal";
})(rr || (rr = {}));
var SC = 0, Sc = (
  /** @class */
  function(n) {
    RC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.popupList = [], e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.gridCtrl = r.gridCtrl, e.addManagedListener(e.gridCtrl, v.EVENT_KEYBOARD_FOCUS, function() {
          e.popupList.forEach(function(o) {
            return o.element.classList.add(Yr.AG_KEYBOARD_FOCUS);
          });
        }), e.addManagedListener(e.gridCtrl, v.EVENT_MOUSE_FOCUS, function() {
          e.popupList.forEach(function(o) {
            return o.element.classList.remove(Yr.AG_KEYBOARD_FOCUS);
          });
        });
      });
    }, t.prototype.getPopupParent = function() {
      var e = this.gridOptionsWrapper.getPopupParent();
      return e || this.gridCtrl.getGui();
    }, t.prototype.positionPopupForMenu = function(e) {
      var r = e.eventSource.getBoundingClientRect(), o = this.getParentRect(), i = this.keepXYWithinBounds(e.ePopup, r.top - o.top, rr.vertical), s = e.ePopup.clientWidth > 0 ? e.ePopup.clientWidth : 200;
      e.ePopup.style.minWidth = s + "px";
      var a = o.right - o.left, l = a - s, u;
      this.gridOptionsWrapper.isEnableRtl() ? (u = c(), u < 0 && (u = p()), u > l && (u = 0)) : (u = p(), u > l && (u = c()), u < 0 && (u = 0)), e.ePopup.style.left = u + "px", e.ePopup.style.top = i + "px";
      function p() {
        return r.right - o.left - 2;
      }
      function c() {
        return r.left - o.left - s;
      }
    }, t.prototype.positionPopupUnderMouseEvent = function(e) {
      var r = e.ePopup, o = e.nudgeX, i = e.nudgeY, s = this.calculatePointerAlign(e.mouseEvent), a = s.x, l = s.y;
      this.positionPopup({
        ePopup: r,
        x: a,
        y: l,
        nudgeX: o,
        nudgeY: i,
        keepWithinBounds: !0
      }), this.callPostProcessPopup(e.type, e.ePopup, null, e.mouseEvent, e.column, e.rowNode);
    }, t.prototype.calculatePointerAlign = function(e) {
      var r = this.getParentRect();
      return {
        x: e.clientX - r.left,
        y: e.clientY - r.top
      };
    }, t.prototype.positionPopupUnderComponent = function(e) {
      var r = e.eventSource.getBoundingClientRect(), o = e.alignSide || "left", i = this.getParentRect(), s = r.left - i.left;
      o === "right" && (s -= e.ePopup.offsetWidth - r.width), this.positionPopup({
        ePopup: e.ePopup,
        nudgeX: e.nudgeX,
        nudgeY: e.nudgeY,
        x: s,
        y: r.top - i.top + r.height,
        keepWithinBounds: e.keepWithinBounds
      }), this.callPostProcessPopup(e.type, e.ePopup, e.eventSource, null, e.column, e.rowNode);
    }, t.prototype.positionPopupOverComponent = function(e) {
      var r = e.eventSource.getBoundingClientRect(), o = this.getParentRect();
      this.positionPopup({
        ePopup: e.ePopup,
        nudgeX: e.nudgeX,
        nudgeY: e.nudgeY,
        x: r.left - o.left,
        y: r.top - o.top,
        keepWithinBounds: e.keepWithinBounds
      }), this.callPostProcessPopup(e.type, e.ePopup, e.eventSource, null, e.column, e.rowNode);
    }, t.prototype.callPostProcessPopup = function(e, r, o, i, s, a) {
      var l = this.gridOptionsWrapper.getPostProcessPopupFunc();
      if (l) {
        var u = {
          column: s,
          rowNode: a,
          ePopup: r,
          type: e,
          eventSource: o,
          mouseEvent: i
        };
        l(u);
      }
    }, t.prototype.positionPopup = function(e) {
      var r = e.ePopup, o = e.keepWithinBounds, i = e.nudgeX, s = e.nudgeY, a = e.x, l = e.y;
      i && (a += i), s && (l += s), o && (a = this.keepXYWithinBounds(r, a, rr.horizontal), l = this.keepXYWithinBounds(r, l, rr.vertical)), r.style.left = a + "px", r.style.top = l + "px";
    }, t.prototype.getActivePopups = function() {
      return this.popupList.map(function(e) {
        return e.element;
      });
    }, t.prototype.getPopupList = function() {
      return this.popupList;
    }, t.prototype.getParentRect = function() {
      var e = this.gridOptionsWrapper.getDocument(), r = this.getPopupParent();
      r === e.body && (r = e.documentElement);
      var o = getComputedStyle(r), i = r.getBoundingClientRect();
      return {
        top: i.top + parseFloat(o.borderTopWidth) || 0,
        left: i.left + parseFloat(o.borderLeftWidth) || 0,
        right: i.right + parseFloat(o.borderRightWidth) || 0,
        bottom: i.bottom + parseFloat(o.borderBottomWidth) || 0
      };
    }, t.prototype.keepXYWithinBounds = function(e, r, o) {
      var i = o === rr.vertical, s = i ? "clientHeight" : "clientWidth", a = i ? "top" : "left", l = i ? "offsetHeight" : "offsetWidth", u = i ? "scrollTop" : "scrollLeft", p = this.gridOptionsWrapper.getDocument(), c = p.documentElement, d = this.getPopupParent(), f = d.getBoundingClientRect(), g = p.documentElement.getBoundingClientRect(), y = d === p.body, C = e[l], m = i ? ia : ni, _ = y ? m(c) + c[u] : d[s];
      y && (_ -= Math.abs(g[a] - f[a]));
      var E = _ - C;
      return Math.min(Math.max(r, 0), Math.abs(E));
    }, t.prototype.keepPopupPositionedRelativeTo = function(e) {
      var r = this, o = this.getPopupParent(), i = o.getBoundingClientRect(), s = e.element.getBoundingClientRect(), a = i.top - s.top, l = i.left - s.left, u = a, p = l, c = e.ePopup.style.top, d = parseInt(c.substring(0, c.length - 1), 10), f = e.ePopup.style.left, g = parseInt(f.substring(0, f.length - 1), 10);
      return new ut(function(y) {
        r.getFrameworkOverrides().setInterval(function() {
          var C = o.getBoundingClientRect(), m = e.element.getBoundingClientRect(), _ = m.top == 0 && m.left == 0 && m.height == 0 && m.width == 0;
          if (_) {
            e.hidePopup();
            return;
          }
          var E = C.top - m.top;
          if (E != u) {
            var S = r.keepXYWithinBounds(e.ePopup, d + a - E, rr.vertical);
            e.ePopup.style.top = S + "px";
          }
          u = E;
          var b = C.left - m.left;
          if (b != p) {
            var x = r.keepXYWithinBounds(e.ePopup, g + l - b, rr.horizontal);
            e.ePopup.style.left = x + "px";
          }
          p = b;
        }, 200).then(function(C) {
          var m = function() {
            C != null && window.clearInterval(C);
          };
          y(m);
        });
      });
    }, t.prototype.addPopup = function(e) {
      var r = this, o = e.modal, i = e.eChild, s = e.closeOnEsc, a = e.closedCallback, l = e.click, u = e.alwaysOnTop, p = e.afterGuiAttached, c = e.positionCallback, d = e.anchorToElement, f = e.ariaLabel, g = this.gridOptionsWrapper.getDocument(), y = new ut(function(V) {
        return V(function() {
        });
      });
      if (!g)
        return console.warn("ag-grid: could not find the document, document is empty"), { hideFunc: function() {
        }, stopAnchoringPromise: y };
      var C = this.popupList.findIndex(function(V) {
        return V.element === i;
      });
      if (C !== -1) {
        var m = this.popupList[C];
        return { hideFunc: m.hideFunc, stopAnchoringPromise: m.stopAnchoringPromise };
      }
      var _ = this.getPopupParent();
      i.style.top == null && (i.style.top = "0px"), i.style.left == null && (i.style.left = "0px");
      var E = document.createElement("div"), S = this.environment.getTheme().theme;
      S && E.classList.add(S), E.classList.add("ag-popup"), i.classList.add(this.gridOptionsWrapper.isEnableRtl() ? "ag-rtl" : "ag-ltr", "ag-popup-child"), i.hasAttribute("role") || rt(i, "dialog"), Tr(i, f), this.focusService.isKeyboardMode() && i.classList.add(Yr.AG_KEYBOARD_FOCUS), E.appendChild(i), _.appendChild(E), u ? this.setAlwaysOnTop(E, !0) : this.bringPopupToFront(E);
      var b = !1, x = function(V) {
        if (E.contains(g.activeElement)) {
          var H = V.key;
          H === P.ESCAPE && M({ keyboardEvent: V });
        }
      }, I = function(V) {
        return M({ mouseEvent: V });
      }, A = function(V) {
        return M({ touchEvent: V });
      }, M = function(V) {
        V === void 0 && (V = {});
        var H = V.mouseEvent, z = V.touchEvent, $ = V.keyboardEvent;
        // we don't hide popup if the event was on the child, or any
        // children of this child
        r.isEventFromCurrentPopup({ mouseEvent: H, touchEvent: z }, i) || // if the event to close is actually the open event, then ignore it
        r.isEventSameChainAsOriginalEvent({ originalMouseEvent: l, mouseEvent: H, touchEvent: z }) || // this method should only be called once. the client can have different
        // paths, each one wanting to close, so this method may be called multiple times.
        b || (b = !0, _.removeChild(E), g.removeEventListener("keydown", x), g.removeEventListener("mousedown", I), g.removeEventListener("touchstart", A), g.removeEventListener("contextmenu", I), r.eventService.removeEventListener(v.EVENT_DRAG_STARTED, I), a && a(H || z || $), r.popupList = r.popupList.filter(function(Z) {
          return Z.element !== i;
        }), y && y.then(function(Z) {
          return Z && Z();
        }));
      };
      return p && p({ hidePopup: M }), window.setTimeout(function() {
        s && g.addEventListener("keydown", x), o && (g.addEventListener("mousedown", I), r.eventService.addEventListener(v.EVENT_DRAG_STARTED, I), g.addEventListener("touchstart", A), g.addEventListener("contextmenu", I));
      }, 0), c && c(), d && (y = this.keepPopupPositionedRelativeTo({
        element: d,
        ePopup: i,
        hidePopup: M
      })), this.popupList.push({
        element: i,
        wrapper: E,
        hideFunc: M,
        stopAnchoringPromise: y,
        instanceId: SC++,
        isAnchored: !!d
      }), {
        hideFunc: M,
        stopAnchoringPromise: y
      };
    }, t.prototype.hasAnchoredPopup = function() {
      return this.popupList.some(function(e) {
        return e.isAnchored;
      });
    }, t.prototype.isEventFromCurrentPopup = function(e, r) {
      var o = e.mouseEvent, i = e.touchEvent, s = o || i;
      if (!s)
        return !1;
      var a = this.popupList.findIndex(function(p) {
        return p.element === r;
      });
      if (a === -1)
        return !1;
      for (var l = a; l < this.popupList.length; l++) {
        var u = this.popupList[l];
        if (xn(u.element, s))
          return !0;
      }
      return this.isElementWithinCustomPopup(s.target);
    }, t.prototype.isElementWithinCustomPopup = function(e) {
      for (var r = this.gridOptionsWrapper.getDocument(); e && e !== r.body; ) {
        if (e.classList.contains("ag-custom-component-popup") || e.parentElement === null)
          return !0;
        e = e.parentElement;
      }
      return !1;
    }, t.prototype.isEventSameChainAsOriginalEvent = function(e) {
      var r = e.originalMouseEvent, o = e.mouseEvent, i = e.touchEvent, s = null;
      if (o ? s = o : i && (s = i.touches[0]), s && r) {
        var a = o ? o.screenX : 0, l = o ? o.screenY : 0, u = Math.abs(r.screenX - a) < 5, p = Math.abs(r.screenY - l) < 5;
        if (u && p)
          return !0;
      }
      return !1;
    }, t.prototype.getWrapper = function(e) {
      for (; !e.classList.contains("ag-popup") && e.parentElement; )
        e = e.parentElement;
      return e.classList.contains("ag-popup") ? e : null;
    }, t.prototype.setAlwaysOnTop = function(e, r) {
      var o = this.getWrapper(e);
      o && (o.classList.toggle("ag-always-on-top", !!r), r && this.bringPopupToFront(o));
    }, t.prototype.bringPopupToFront = function(e) {
      var r = this.getPopupParent(), o = Array.prototype.slice.call(r.querySelectorAll(".ag-popup")), i = o.length, s = Array.prototype.slice.call(r.querySelectorAll(".ag-popup.ag-always-on-top")), a = s.length, l = this.getWrapper(e);
      if (!(!l || i <= 1 || !r.contains(e))) {
        var u = o.indexOf(l), p = l.querySelectorAll("div"), c = [];
        if (p.forEach(function(y) {
          y.scrollTop !== 0 && c.push([y, y.scrollTop]);
        }), a) {
          var d = l.classList.contains("ag-always-on-top");
          d ? u !== i - 1 && _e(s).insertAdjacentElement("afterend", l) : u !== i - a - 1 && s[0].insertAdjacentElement("beforebegin", l);
        } else
          u !== i - 1 && _e(o).insertAdjacentElement("afterend", l);
        for (; c.length; ) {
          var f = c.pop();
          f[0].scrollTop = f[1];
        }
        var g = {
          type: "popupToFront",
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          eWrapper: l
        };
        this.eventService.dispatchEvent(g);
      }
    }, Eo([
      h("environment")
    ], t.prototype, "environment", void 0), Eo([
      h("focusService")
    ], t.prototype, "focusService", void 0), Eo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Eo([
      G
    ], t.prototype, "postConstruct", null), t = Eo([
      U("popupService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var OC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Kl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, TC = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Oc = (
  /** @class */
  function(n) {
    OC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logging = e.isDebug();
    }, t.prototype.create = function(e) {
      return new qn(e, this.isLogging.bind(this));
    }, t.prototype.isLogging = function() {
      return this.logging;
    }, Kl([
      TC(0, tt("gridOptionsWrapper"))
    ], t.prototype, "setBeans", null), t = Kl([
      U("loggerFactory")
    ], t), t;
  }(D)
), qn = (
  /** @class */
  function() {
    function n(t, e) {
      this.name = t, this.isLoggingFunc = e;
    }
    return n.prototype.isLogging = function() {
      return this.isLoggingFunc();
    }, n.prototype.log = function(t) {
      this.isLoggingFunc() && console.log("AG Grid." + this.name + ": " + t);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var PC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ro = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Tc = (
  /** @class */
  function(n) {
    PC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCon = r.centerRowContainerCtrl;
      });
    }, t.prototype.getPreferredWidthForColumn = function(e, r) {
      var o = this.getHeaderCellForColumn(e);
      if (!o)
        return -1;
      var i = this.rowRenderer.getAllCellsForColumn(e);
      return r || i.push(o), this.addElementsToContainerAndGetWidth(i);
    }, t.prototype.getPreferredWidthForColumnGroup = function(e) {
      var r = this.getHeaderCellForColumn(e);
      return r ? this.addElementsToContainerAndGetWidth([r]) : -1;
    }, t.prototype.addElementsToContainerAndGetWidth = function(e) {
      var r = this, o = document.createElement("span");
      o.style.position = "fixed";
      var i = this.centerRowContainerCon.getContainerElement();
      i.appendChild(o), e.forEach(function(l) {
        return r.cloneItemIntoDummy(l, o);
      });
      var s = o.offsetWidth;
      i.removeChild(o);
      var a = this.gridOptionsWrapper.getAutoSizePadding();
      return s + a;
    }, t.prototype.getHeaderCellForColumn = function(e) {
      var r = null;
      return this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(o) {
        var i = o.getHtmlElementForColumnHeader(e);
        i != null && (r = i);
      }), r;
    }, t.prototype.cloneItemIntoDummy = function(e, r) {
      var o = e.cloneNode(!0);
      o.style.width = "", o.style.position = "static", o.style.left = "";
      var i = document.createElement("div"), s = i.classList, a = ["ag-header-cell", "ag-header-group-cell"].some(function(d) {
        return o.classList.contains(d);
      });
      a ? (s.add("ag-header", "ag-header-row"), i.style.position = "static") : s.add("ag-row");
      for (var l = e.parentElement; l; ) {
        var u = ["ag-header-row", "ag-row"].some(function(d) {
          return l.classList.contains(d);
        });
        if (u) {
          for (var p = 0; p < l.classList.length; p++) {
            var c = l.classList[p];
            c != "ag-row-position-absolute" && s.add(c);
          }
          break;
        }
        l = l.parentElement;
      }
      i.appendChild(o), r.appendChild(i);
    }, Ro([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ro([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ro([
      h("rowCssClassCalculator")
    ], t.prototype, "rowCssClassCalculator", void 0), Ro([
      G
    ], t.prototype, "postConstruct", null), t = Ro([
      U("autoWidthCalculator")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var bC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Pc = (
  /** @class */
  function(n) {
    bC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.addResizeBar = function(e) {
      var r = this, o = {
        dragStartPixels: e.dragStartPixels || 0,
        eElement: e.eResizeBar,
        onDragStart: this.onDragStart.bind(this, e),
        onDragStop: this.onDragStop.bind(this, e),
        onDragging: this.onDragging.bind(this, e)
      };
      this.dragService.addDragSource(o, !0);
      var i = function() {
        return r.dragService.removeDragSource(o);
      };
      return i;
    }, t.prototype.onDragStart = function(e, r) {
      this.dragStartX = r.clientX, this.setResizeIcons();
      var o = r instanceof MouseEvent && r.shiftKey === !0;
      e.onResizeStart(o);
    }, t.prototype.setResizeIcons = function() {
      var e = this.ctrlsService.getGridCtrl();
      e.setResizeCursor(!0), e.disableUserSelect(!0);
    }, t.prototype.onDragStop = function(e, r) {
      e.onResizeEnd(this.resizeAmount), this.resetIcons();
    }, t.prototype.resetIcons = function() {
      var e = this.ctrlsService.getGridCtrl();
      e.setResizeCursor(!1), e.disableUserSelect(!1);
    }, t.prototype.onDragging = function(e, r) {
      this.resizeAmount = r.clientX - this.dragStartX, e.onResizing(this.resizeAmount);
    }, Qi([
      h("dragService")
    ], t.prototype, "dragService", void 0), Qi([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = Qi([
      U("horizontalResizeService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var DC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zt = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, bc = (
  /** @class */
  function(n) {
    DC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.ctrlsService.registerGridCtrl(this);
    }, t.prototype.setComp = function(e, r, o) {
      var i = this;
      this.view = e, this.eGridHostDiv = r, this.eGui = o, this.mouseEventService.stampTopLevelGridCompWithGridInstance(r), this.createManagedBean(new Fa(this.view)), this.addRtlSupport(), this.addManagedListener(this, v.EVENT_KEYBOARD_FOCUS, function() {
        i.view.addOrRemoveKeyboardFocusClass(!0);
      }), this.addManagedListener(this, v.EVENT_MOUSE_FOCUS, function() {
        i.view.addOrRemoveKeyboardFocusClass(!1);
      });
      var s = this.resizeObserverService.observeResize(this.eGridHostDiv, this.onGridSizeChanged.bind(this));
      this.addDestroyFunc(function() {
        return s();
      });
    }, t.prototype.showDropZones = function() {
      return Q.isRegistered(q.RowGroupingModule);
    }, t.prototype.showSideBar = function() {
      return Q.isRegistered(q.SideBarModule);
    }, t.prototype.showStatusBar = function() {
      return Q.isRegistered(q.StatusBarModule);
    }, t.prototype.showWatermark = function() {
      return Q.isRegistered(q.EnterpriseCoreModule);
    }, t.prototype.onGridSizeChanged = function() {
      var e = {
        type: v.EVENT_GRID_SIZE_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi,
        clientWidth: this.eGridHostDiv.clientWidth,
        clientHeight: this.eGridHostDiv.clientHeight
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.addRtlSupport = function() {
      var e = this.gridOptionsWrapper.isEnableRtl() ? "ag-rtl" : "ag-ltr";
      this.view.setRtlClass(e);
    }, t.prototype.destroyGridUi = function() {
      this.view.destroyGridUi();
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.setResizeCursor = function(e) {
      this.view.setCursor(e ? "ew-resize" : null);
    }, t.prototype.disableUserSelect = function(e) {
      this.view.setUserSelect(e ? "none" : null);
    }, t.prototype.focusNextInnerContainer = function(e) {
      var r = this.gridOptionsWrapper.getDocument(), o = this.view.getFocusableContainers(), i = o.findIndex(function(a) {
        return a.contains(r.activeElement);
      }), s = i + (e ? -1 : 1);
      return s <= 0 || s >= o.length ? !1 : this.focusService.focusInto(o[s]);
    }, t.prototype.focusInnerElement = function(e) {
      var r = this.view.getFocusableContainers();
      if (e) {
        if (r.length > 1)
          return this.focusService.focusInto(_e(r), !0);
        var o = _e(this.columnModel.getAllDisplayedColumns());
        if (this.focusService.focusGridView(o, !0))
          return !0;
      }
      return this.focusService.focusFirstHeader();
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1), this.view.forceFocusOutOfContainer(e);
    }, Zt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Zt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Zt([
      h("focusService")
    ], t.prototype, "focusService", void 0), Zt([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Zt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Zt([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Zt([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Zt([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var AC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Dc = (
  /** @class */
  function(n) {
    AC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.skipTabGuardFocus = !1;
      var o = e.comp, i = e.eTopGuard, s = e.eBottomGuard, a = e.focusInnerElement, l = e.onFocusIn, u = e.onFocusOut, p = e.shouldStopEventPropagation, c = e.onTabKeyDown, d = e.handleKeyDown, f = e.eFocusableElement;
      return r.comp = o, r.eTopGuard = i, r.eBottomGuard = s, r.providedFocusInnerElement = a, r.eFocusableElement = f, r.providedFocusIn = l, r.providedFocusOut = u, r.providedShouldStopEventPropagation = p, r.providedOnTabKeyDown = c, r.providedHandleKeyDown = d, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.createManagedBean(new Xt(this.eFocusableElement, {
        shouldStopEventPropagation: function() {
          return e.shouldStopEventPropagation();
        },
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        },
        onFocusIn: function(r) {
          return e.onFocusIn(r);
        },
        onFocusOut: function(r) {
          return e.onFocusOut(r);
        }
      })), this.activateTabGuards(), [this.eTopGuard, this.eBottomGuard].forEach(function(r) {
        return e.addManagedListener(r, "focus", e.onFocus.bind(e));
      });
    }, t.prototype.handleKeyDown = function(e) {
      this.providedHandleKeyDown && this.providedHandleKeyDown(e);
    }, t.prototype.tabGuardsAreActive = function() {
      return !!this.eTopGuard && this.eTopGuard.hasAttribute("tabIndex");
    }, t.prototype.shouldStopEventPropagation = function() {
      return this.providedShouldStopEventPropagation ? this.providedShouldStopEventPropagation() : !1;
    }, t.prototype.activateTabGuards = function() {
      this.comp.setTabIndex(this.getGridTabIndex());
    }, t.prototype.deactivateTabGuards = function() {
      this.comp.setTabIndex();
    }, t.prototype.onFocus = function(e) {
      if (this.skipTabGuardFocus) {
        this.skipTabGuardFocus = !1;
        return;
      }
      var r = e.target === this.eBottomGuard;
      this.providedFocusInnerElement ? this.providedFocusInnerElement(r) : this.focusInnerElement(r);
    }, t.prototype.onFocusIn = function(e) {
      this.providedFocusIn && this.providedFocusIn(e) || this.deactivateTabGuards();
    }, t.prototype.onFocusOut = function(e) {
      this.providedFocusOut && this.providedFocusOut(e) || this.eFocusableElement.contains(e.relatedTarget) || this.activateTabGuards();
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this;
      if (this.providedOnTabKeyDown) {
        this.providedOnTabKeyDown(e);
        return;
      }
      if (!e.defaultPrevented) {
        var o = this.tabGuardsAreActive();
        o && this.deactivateTabGuards();
        var i = this.getNextFocusableElement(e.shiftKey);
        o && setTimeout(function() {
          return r.activateTabGuards();
        }, 0), i && (i.focus(), e.preventDefault());
      }
    }, t.prototype.getGridTabIndex = function() {
      return this.gridOptionsWrapper.getGridTabIndex();
    }, t.prototype.focusInnerElement = function(e) {
      e === void 0 && (e = !1);
      var r = this.focusService.findFocusableElements(this.eFocusableElement);
      this.tabGuardsAreActive() && (r.splice(0, 1), r.splice(r.length - 1, 1)), r.length && r[e ? r.length - 1 : 0].focus();
    }, t.prototype.getNextFocusableElement = function(e) {
      return this.focusService.findNextFocusableElement(this.eFocusableElement, !1, e);
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1);
      var r = e ? this.eTopGuard : this.eBottomGuard;
      this.activateTabGuards(), this.skipTabGuardFocus = !0, r.focus();
    }, Yl([
      h("focusService")
    ], t.prototype, "focusService", void 0), Yl([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var FC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), IC = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, MC = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(IC(arguments[t]));
  return n;
}, Ko = (
  /** @class */
  function(n) {
    FC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.initialiseTabGuard = function(e) {
      this.eTopGuard = this.createTabGuard("top"), this.eBottomGuard = this.createTabGuard("bottom"), this.eFocusableElement = this.getFocusableElement();
      var r = [this.eTopGuard, this.eBottomGuard], o = {
        setTabIndex: function(i) {
          r.forEach(function(s) {
            return i != null ? s.setAttribute("tabIndex", i) : s.removeAttribute("tabIndex");
          });
        }
      };
      this.addTabGuards(this.eTopGuard, this.eBottomGuard), this.tabGuardCtrl = this.createManagedBean(new Dc({
        comp: o,
        eTopGuard: this.eTopGuard,
        eBottomGuard: this.eBottomGuard,
        eFocusableElement: this.eFocusableElement,
        onFocusIn: e.onFocusIn,
        onFocusOut: e.onFocusOut,
        focusInnerElement: e.focusInnerElement,
        handleKeyDown: e.handleKeyDown,
        onTabKeyDown: e.onTabKeyDown,
        shouldStopEventPropagation: e.shouldStopEventPropagation
      }));
    }, t.prototype.createTabGuard = function(e) {
      var r = document.createElement("div");
      return r.classList.add("ag-tab-guard", "ag-tab-guard-" + e), rt(r, "presentation"), r;
    }, t.prototype.addTabGuards = function(e, r) {
      this.eFocusableElement.insertAdjacentElement("afterbegin", e), this.eFocusableElement.insertAdjacentElement("beforeend", r);
    }, t.prototype.removeAllChildrenExceptTabGuards = function() {
      var e = [this.eTopGuard, this.eBottomGuard];
      Ct(this.getFocusableElement()), this.addTabGuards.apply(this, MC(e));
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1), this.tabGuardCtrl.forceFocusOutOfContainer(e);
    }, t.prototype.appendChild = function(e, r) {
      zo(e) || (e = e.getGui());
      var o = this.eBottomGuard;
      o ? o.insertAdjacentElement("beforebegin", e) : n.prototype.appendChild.call(this, e, r);
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var LC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), So = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ac = (
  /** @class */
  function(n) {
    LC(t, n);
    function t(e) {
      var r = n.call(this, void 0) || this;
      return r.eGridDiv = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.logger = this.loggerFactory.create("GridComp");
      var r = {
        destroyGridUi: function() {
          return e.destroyBean(e);
        },
        setRtlClass: function(i) {
          return e.addCssClass(i);
        },
        addOrRemoveKeyboardFocusClass: function(i) {
          return e.addOrRemoveCssClass(Yr.AG_KEYBOARD_FOCUS, i);
        },
        forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),
        updateLayoutClasses: this.updateLayoutClasses.bind(this),
        getFocusableContainers: this.getFocusableContainers.bind(this),
        setUserSelect: function(i) {
          e.getGui().style.userSelect = i ?? "", e.getGui().style.webkitUserSelect = i ?? "";
        },
        setCursor: function(i) {
          e.getGui().style.cursor = i ?? "";
        }
      };
      this.ctrl = this.createManagedBean(new bc());
      var o = this.createTemplate();
      this.setTemplate(o), this.ctrl.setComp(r, this.eGridDiv, this.getGui()), this.insertGridIntoDom(), this.initialiseTabGuard({
        // we want to override the default behaviour to do nothing for onTabKeyDown
        onTabKeyDown: function() {
        },
        focusInnerElement: function(i) {
          return e.ctrl.focusInnerElement(i);
        }
      });
    }, t.prototype.insertGridIntoDom = function() {
      var e = this, r = this.getGui();
      this.eGridDiv.appendChild(r), this.addDestroyFunc(function() {
        e.eGridDiv.removeChild(r), e.logger.log("Grid removed from DOM");
      });
    }, t.prototype.updateLayoutClasses = function(e, r) {
      var o = this.eRootWrapperBody.classList;
      o.toggle(Le.AUTO_HEIGHT, r.autoHeight), o.toggle(Le.NORMAL, r.normal), o.toggle(Le.PRINT, r.print), this.addOrRemoveCssClass(Le.AUTO_HEIGHT, r.autoHeight), this.addOrRemoveCssClass(Le.NORMAL, r.normal), this.addOrRemoveCssClass(Le.PRINT, r.print);
    }, t.prototype.createTemplate = function() {
      var e = this.ctrl.showDropZones() ? "<ag-grid-header-drop-zones></ag-grid-header-drop-zones>" : "", r = this.ctrl.showSideBar() ? '<ag-side-bar ref="sideBar"></ag-side-bar>' : "", o = this.ctrl.showStatusBar() ? '<ag-status-bar ref="statusBar"></ag-status-bar>' : "", i = this.ctrl.showWatermark() ? "<ag-watermark></ag-watermark>" : "", s = (
        /* html */
        `<div class="ag-root-wrapper">
                ` + e + `
                <div class="ag-root-wrapper-body" ref="rootWrapperBody">
                    <ag-grid-body ref="gridBody"></ag-grid-body>
                    ` + r + `
                </div>
                ` + o + `
                <ag-pagination></ag-pagination>
                ` + i + `
            </div>`
      );
      return s;
    }, t.prototype.getFocusableElement = function() {
      return this.eRootWrapperBody;
    }, t.prototype.getFocusableContainers = function() {
      var e = [
        this.gridBodyComp.getGui()
      ];
      return this.sideBarComp && e.push(this.sideBarComp.getGui()), e.filter(function(r) {
        return no(r);
      });
    }, So([
      h("loggerFactory")
    ], t.prototype, "loggerFactory", void 0), So([
      T("gridBody")
    ], t.prototype, "gridBodyComp", void 0), So([
      T("sideBar")
    ], t.prototype, "sideBarComp", void 0), So([
      T("rootWrapperBody")
    ], t.prototype, "eRootWrapperBody", void 0), So([
      G
    ], t.prototype, "postConstruct", null), t;
  }(Ko)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var GC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Fc = (
  /** @class */
  function(n) {
    GC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.dragEndFunctions = [], e.dragSources = [], e;
    }
    return t.prototype.init = function() {
      this.logger = this.loggerFactory.create("DragService");
    }, t.prototype.removeAllListeners = function() {
      this.dragSources.forEach(this.removeListener.bind(this)), this.dragSources.length = 0;
    }, t.prototype.removeListener = function(e) {
      var r = e.dragSource.eElement, o = e.mouseDownListener;
      if (r.removeEventListener("mousedown", o), e.touchEnabled) {
        var i = e.touchStartListener;
        r.removeEventListener("touchstart", i, { passive: !0 });
      }
    }, t.prototype.removeDragSource = function(e) {
      var r = this.dragSources.find(function(o) {
        return o.dragSource === e;
      });
      r && (this.removeListener(r), Ye(this.dragSources, r));
    }, t.prototype.isDragging = function() {
      return this.dragging;
    }, t.prototype.addDragSource = function(e, r) {
      var o = this;
      r === void 0 && (r = !1);
      var i = this.onMouseDown.bind(this, e);
      e.eElement.addEventListener("mousedown", i);
      var s = null, a = this.gridOptionsWrapper.isSuppressTouch();
      r && !a && (s = function(l) {
        l.cancelable && l.preventDefault(), o.onTouchStart(e, l);
      }, e.eElement.addEventListener("touchstart", s, { passive: !0 })), this.dragSources.push({
        dragSource: e,
        mouseDownListener: i,
        touchStartListener: s,
        touchEnabled: r
      });
    }, t.prototype.onTouchStart = function(e, r) {
      var o = this;
      this.currentDragParams = e, this.dragging = !1;
      var i = r.touches[0];
      this.touchLastTime = i, this.touchStart = i;
      var s = function(c) {
        return o.onTouchMove(c, e.eElement);
      }, a = function(c) {
        return o.onTouchUp(c, e.eElement);
      }, l = function(c) {
        c.cancelable && c.preventDefault();
      }, u = e.eElement, p = [
        // Prevents the page document from moving while we are dragging items around.
        // preventDefault needs to be called in the touchmove listener and never inside the
        // touchstart, because using touchstart causes the click event to be cancelled on touch devices.
        { target: document, type: "touchmove", listener: l, options: { passive: !1 } },
        { target: u, type: "touchmove", listener: s, options: { passive: !0 } },
        { target: u, type: "touchend", listener: a, options: { passive: !0 } },
        { target: u, type: "touchcancel", listener: a, options: { passive: !0 } }
      ];
      this.addTemporaryEvents(p), e.dragStartPixels === 0 && this.onCommonMove(i, this.touchStart, e.eElement);
    }, t.prototype.onMouseDown = function(e, r) {
      var o = this, i = r;
      if (!(e.skipMouseEvent && e.skipMouseEvent(r)) && !i._alreadyProcessedByDragService && (i._alreadyProcessedByDragService = !0, r.button === 0)) {
        this.currentDragParams = e, this.dragging = !1, this.mouseStartEvent = r;
        var s = this.gridOptionsWrapper.getDocument(), a = function(d) {
          return o.onMouseMove(d, e.eElement);
        }, l = function(d) {
          return o.onMouseUp(d, e.eElement);
        }, u = function(d) {
          return d.preventDefault();
        }, p = s, c = [
          { target: p, type: "mousemove", listener: a },
          { target: p, type: "mouseup", listener: l },
          { target: p, type: "contextmenu", listener: u }
        ];
        this.addTemporaryEvents(c), e.dragStartPixels === 0 && this.onMouseMove(r, e.eElement);
      }
    }, t.prototype.addTemporaryEvents = function(e) {
      e.forEach(function(r) {
        var o = r.target, i = r.type, s = r.listener, a = r.options;
        o.addEventListener(i, s, a);
      }), this.dragEndFunctions.push(function() {
        e.forEach(function(r) {
          var o = r.target, i = r.type, s = r.listener, a = r.options;
          o.removeEventListener(i, s, a);
        });
      });
    }, t.prototype.isEventNearStartEvent = function(e, r) {
      var o = this.currentDragParams.dragStartPixels, i = O(o) ? o : 4;
      return ya(e, r, i);
    }, t.prototype.getFirstActiveTouch = function(e) {
      for (var r = 0; r < e.length; r++)
        if (e[r].identifier === this.touchStart.identifier)
          return e[r];
      return null;
    }, t.prototype.onCommonMove = function(e, r, o) {
      if (!this.dragging) {
        if (!this.dragging && this.isEventNearStartEvent(e, r))
          return;
        this.dragging = !0;
        var i = {
          type: v.EVENT_DRAG_STARTED,
          api: this.gridApi,
          columnApi: this.columnApi,
          target: o
        };
        this.eventService.dispatchEvent(i), this.currentDragParams.onDragStart(r), this.currentDragParams.onDragging(r);
      }
      this.currentDragParams.onDragging(e);
    }, t.prototype.onTouchMove = function(e, r) {
      var o = this.getFirstActiveTouch(e.touches);
      o && this.onCommonMove(o, this.touchStart, r);
    }, t.prototype.onMouseMove = function(e, r) {
      e.type === "mousemove" && e.cancelable && e.preventDefault(), this.onCommonMove(e, this.mouseStartEvent, r);
    }, t.prototype.onTouchUp = function(e, r) {
      var o = this.getFirstActiveTouch(e.changedTouches);
      o || (o = this.touchLastTime), this.onUpCommon(o, r);
    }, t.prototype.onMouseUp = function(e, r) {
      this.onUpCommon(e, r);
    }, t.prototype.onUpCommon = function(e, r) {
      if (this.dragging) {
        this.dragging = !1, this.currentDragParams.onDragStop(e);
        var o = {
          type: v.EVENT_DRAG_STOPPED,
          api: this.gridApi,
          columnApi: this.columnApi,
          target: r
        };
        this.eventService.dispatchEvent(o);
      }
      this.mouseStartEvent = null, this.touchStart = null, this.touchLastTime = null, this.currentDragParams = null, this.dragEndFunctions.forEach(function(i) {
        return i();
      }), this.dragEndFunctions.length = 0;
    }, Nr([
      h("loggerFactory")
    ], t.prototype, "loggerFactory", void 0), Nr([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Nr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Nr([
      G
    ], t.prototype, "init", null), Nr([
      ot
    ], t.prototype, "removeAllListeners", null), t = Nr([
      U("dragService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var NC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), un = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ic = (
  /** @class */
  function(n) {
    NC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    e = t, t.prototype.progressSort = function(r, o, i) {
      i === void 0 && (i = "api");
      var s = this.getNextSortDirection(r);
      this.setSortForColumn(r, s, o, i);
    }, t.prototype.setSortForColumn = function(r, o, i, s) {
      s === void 0 && (s = "api"), o !== w.SORT_ASC && o !== w.SORT_DESC && (o = null), r.setSort(o, s);
      var a = i && !this.gridOptionsWrapper.isSuppressMultiSort();
      a || this.clearSortBarThisColumn(r, s), this.updateSortIndex(r), this.dispatchSortChangedEvents();
    }, t.prototype.updateSortIndex = function(r) {
      var o = this.getColumnsWithSortingOrdered(), i = 0;
      o.forEach(function(a) {
        a !== r && (a.setSortIndex(i), i++);
      }), r.getSort() && r.setSortIndex(i);
      var s = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();
      s.filter(function(a) {
        return a.getSort() == null;
      }).forEach(function(a) {
        return a.setSortIndex();
      });
    }, t.prototype.onSortChanged = function() {
      this.dispatchSortChangedEvents();
    }, t.prototype.isSortActive = function() {
      var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(), o = r.filter(function(i) {
        return !!i.getSort();
      });
      return o && o.length > 0;
    }, t.prototype.dispatchSortChangedEvents = function() {
      var r = {
        type: v.EVENT_SORT_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.clearSortBarThisColumn = function(r, o) {
      this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function(i) {
        i !== r && i.setSort(void 0, o);
      });
    }, t.prototype.getNextSortDirection = function(r) {
      var o;
      if (r.getColDef().sortingOrder ? o = r.getColDef().sortingOrder : this.gridOptionsWrapper.getSortingOrder() ? o = this.gridOptionsWrapper.getSortingOrder() : o = e.DEFAULT_SORTING_ORDER, !Array.isArray(o) || o.length <= 0)
        return console.warn("AG Grid: sortingOrder must be an array with at least one element, currently it's " + o), null;
      var i = o.indexOf(r.getSort()), s = i < 0, a = i == o.length - 1, l;
      return s || a ? l = o[0] : l = o[i + 1], e.DEFAULT_SORTING_ORDER.indexOf(l) < 0 ? (console.warn("AG Grid: invalid sort type " + l), null) : l;
    }, t.prototype.getColumnsWithSortingOrdered = function() {
      var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(), o = r.filter(function(s) {
        return !!s.getSort();
      }), i = {};
      return r.forEach(function(s, a) {
        return i[s.getId()] = a;
      }), o.sort(function(s, a) {
        var l = s.getSortIndex(), u = a.getSortIndex();
        if (l != null && u != null)
          return l - u;
        if (l == null && u == null) {
          var p = i[s.getId()], c = i[a.getId()];
          return p > c ? 1 : -1;
        } else
          return u == null ? -1 : 1;
      }), o;
    }, t.prototype.getSortModel = function() {
      return this.getColumnsWithSortingOrdered().map(function(r) {
        return {
          sort: r.getSort(),
          colId: r.getId()
        };
      });
    }, t.prototype.getSortOptions = function() {
      return this.getColumnsWithSortingOrdered().map(function(r) {
        return {
          sort: r.getSort(),
          column: r
        };
      });
    };
    var e;
    return t.DEFAULT_SORTING_ORDER = [w.SORT_ASC, w.SORT_DESC, null], un([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), un([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), un([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), t = e = un([
      U("sortController")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var xC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ql = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Mc = (
  /** @class */
  function(n) {
    xC(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.gridInstanceId = e.gridInstanceSequence.next(), r;
    }
    e = t, t.prototype.stampTopLevelGridCompWithGridInstance = function(r) {
      r[e.GRID_DOM_KEY] = this.gridInstanceId;
    }, t.prototype.getRenderedCellForEvent = function(r) {
      return Nn(this.gridOptionsWrapper, r, ar.DOM_DATA_KEY_CELL_CTRL);
    }, t.prototype.isEventFromThisGrid = function(r) {
      var o = this.isElementInThisGrid(r.target);
      return o;
    }, t.prototype.isElementInThisGrid = function(r) {
      for (var o = r; o; ) {
        var i = o[e.GRID_DOM_KEY];
        if (O(i)) {
          var s = i === this.gridInstanceId;
          return s;
        }
        o = o.parentElement;
      }
      return !1;
    }, t.prototype.getCellPositionForEvent = function(r) {
      var o = this.getRenderedCellForEvent(r);
      return o ? o.getCellPosition() : null;
    }, t.prototype.getNormalisedPosition = function(r) {
      var o = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_NORMAL, i = r, s, a;
      if (i.clientX != null || i.clientY != null ? (s = i.clientX, a = i.clientY) : (s = i.x, a = i.y), o) {
        var l = this.ctrlsService.getGridBodyCtrl(), u = l.getScrollFeature().getVScrollPosition(), p = l.getScrollFeature().getHScrollPosition();
        s += p.left, a += u.top;
      }
      return { x: s, y: a };
    };
    var e;
    return t.gridInstanceSequence = new si(), t.GRID_DOM_KEY = "__ag_grid_instance", ql([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = e = ql([
      U("mouseEventService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var HC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Oo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Lc = (
  /** @class */
  function(n) {
    HC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getNextCellToFocus = function(e, r) {
      for (var o = r, i = !1; !i; ) {
        switch (e) {
          case P.UP:
            o = this.getCellAbove(o);
            break;
          case P.DOWN:
            o = this.getCellBelow(o);
            break;
          case P.RIGHT:
            this.gridOptionsWrapper.isEnableRtl() ? o = this.getCellToLeft(o) : o = this.getCellToRight(o);
            break;
          case P.LEFT:
            this.gridOptionsWrapper.isEnableRtl() ? o = this.getCellToRight(o) : o = this.getCellToLeft(o);
            break;
          default:
            o = null, console.warn("AG Grid: unknown key for navigation " + e);
            break;
        }
        o ? i = this.isCellGoodToFocusOn(o) : i = !0;
      }
      return o;
    }, t.prototype.isCellGoodToFocusOn = function(e) {
      var r = e.column, o;
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          o = this.pinnedRowModel.getPinnedTopRow(e.rowIndex);
          break;
        case w.PINNED_BOTTOM:
          o = this.pinnedRowModel.getPinnedBottomRow(e.rowIndex);
          break;
        default:
          o = this.rowModel.getRow(e.rowIndex);
          break;
      }
      if (!o)
        return !1;
      var i = r.isSuppressNavigable(o);
      return !i;
    }, t.prototype.getCellToLeft = function(e) {
      if (!e)
        return null;
      var r = this.columnModel.getDisplayedColBefore(e.column);
      return r ? {
        rowIndex: e.rowIndex,
        column: r,
        rowPinned: e.rowPinned
      } : null;
    }, t.prototype.getCellToRight = function(e) {
      if (!e)
        return null;
      var r = this.columnModel.getDisplayedColAfter(e.column);
      return r ? {
        rowIndex: e.rowIndex,
        column: r,
        rowPinned: e.rowPinned
      } : null;
    }, t.prototype.getRowBelow = function(e) {
      var r = e.rowIndex, o = e.rowPinned;
      if (this.isLastRowInContainer(e))
        switch (o) {
          case w.PINNED_BOTTOM:
            return null;
          case w.PINNED_TOP:
            return this.rowModel.isRowsToRender() ? { rowIndex: this.paginationProxy.getPageFirstRow(), rowPinned: null } : this.pinnedRowModel.isRowsToRender(w.PINNED_BOTTOM) ? { rowIndex: 0, rowPinned: w.PINNED_BOTTOM } : null;
          default:
            return this.pinnedRowModel.isRowsToRender(w.PINNED_BOTTOM) ? { rowIndex: 0, rowPinned: w.PINNED_BOTTOM } : null;
        }
      return { rowIndex: r + 1, rowPinned: o };
    }, t.prototype.getCellBelow = function(e) {
      if (!e)
        return null;
      var r = this.getRowBelow(e);
      return r ? {
        rowIndex: r.rowIndex,
        column: e.column,
        rowPinned: r.rowPinned
      } : null;
    }, t.prototype.isLastRowInContainer = function(e) {
      var r = e.rowPinned, o = e.rowIndex;
      if (r === w.PINNED_TOP) {
        var i = this.pinnedRowModel.getPinnedTopRowData().length - 1;
        return i <= o;
      }
      if (r === w.PINNED_BOTTOM) {
        var s = this.pinnedRowModel.getPinnedBottomRowData().length - 1;
        return s <= o;
      }
      var a = this.paginationProxy.getPageLastRow();
      return a <= o;
    }, t.prototype.getRowAbove = function(e) {
      var r = e.rowIndex, o = e.rowPinned, i = o ? r === 0 : r === this.paginationProxy.getPageFirstRow();
      return i ? o === w.PINNED_TOP ? null : o ? this.rowModel.isRowsToRender() ? this.getLastBodyCell() : this.pinnedRowModel.isRowsToRender(w.PINNED_TOP) ? this.getLastFloatingTopRow() : null : this.pinnedRowModel.isRowsToRender(w.PINNED_TOP) ? this.getLastFloatingTopRow() : null : { rowIndex: r - 1, rowPinned: o };
    }, t.prototype.getCellAbove = function(e) {
      if (!e)
        return null;
      var r = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
      return r ? {
        rowIndex: r.rowIndex,
        column: e.column,
        rowPinned: r.rowPinned
      } : null;
    }, t.prototype.getLastBodyCell = function() {
      var e = this.paginationProxy.getPageLastRow();
      return { rowIndex: e, rowPinned: null };
    }, t.prototype.getLastFloatingTopRow = function() {
      var e = this.pinnedRowModel.getPinnedTopRowData().length - 1;
      return { rowIndex: e, rowPinned: w.PINNED_TOP };
    }, t.prototype.getNextTabbedCell = function(e, r) {
      return r ? this.getNextTabbedCellBackwards(e) : this.getNextTabbedCellForwards(e);
    }, t.prototype.getNextTabbedCellForwards = function(e) {
      var r = this.columnModel.getAllDisplayedColumns(), o = e.rowIndex, i = e.rowPinned, s = this.columnModel.getDisplayedColAfter(e.column);
      if (!s) {
        s = r[0];
        var a = this.getRowBelow(e);
        if (K(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
          return null;
        o = a ? a.rowIndex : null, i = a ? a.rowPinned : null;
      }
      return { rowIndex: o, column: s, rowPinned: i };
    }, t.prototype.getNextTabbedCellBackwards = function(e) {
      var r = this.columnModel.getAllDisplayedColumns(), o = e.rowIndex, i = e.rowPinned, s = this.columnModel.getDisplayedColBefore(e.column);
      if (!s) {
        s = _e(r);
        var a = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
        if (K(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
          return null;
        o = a ? a.rowIndex : null, i = a ? a.rowPinned : null;
      }
      return { rowIndex: o, column: s, rowPinned: i };
    }, Oo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Oo([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Oo([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), Oo([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), t = Oo([
      U("cellNavigationService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var WC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Xl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Gc = (
  /** @class */
  function(n) {
    WC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.formatValue = function(e, r, o, i, s, a) {
      a === void 0 && (a = !0);
      var l = null, u, p = e.getColDef();
      if (s ? u = s : a && (u = r && r.rowPinned && p.pinnedRowValueFormatter ? p.pinnedRowValueFormatter : p.valueFormatter), u) {
        var c = {
          value: i,
          node: r,
          data: r ? r.data : null,
          colDef: p,
          column: e,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        c.$scope = o, l = this.expressionService.evaluate(u, c);
      } else if (p.refData)
        return p.refData[i] || "";
      return l == null && Array.isArray(i) && (l = i.join(", ")), l;
    }, Xl([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), t = Xl([
      U("valueFormatterService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var VC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nc = (
  /** @class */
  function(n) {
    VC(t, n);
    function t(e) {
      return n.call(this, e, "ag-radio-button", "radio") || this;
    }
    return t.prototype.isSelected = function() {
      return this.eInput.checked;
    }, t.prototype.toggle = function() {
      this.eInput.disabled || this.isSelected() || this.setValue(!0);
    }, t.prototype.addInputListeners = function() {
      n.prototype.addInputListeners.call(this), this.addManagedListener(this.eventService, v.EVENT_CHECKBOX_CHANGED, this.onChange.bind(this));
    }, t.prototype.onChange = function(e) {
      e.selected && e.name && this.eInput.name && this.eInput.name === e.name && e.id && this.eInput.id !== e.id && this.setValue(!1, !0);
    }, t;
  }(eo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var BC = ["mouseover", "mouseout", "mouseenter", "mouseleave"], jC = ["touchstart", "touchend", "touchmove", "touchcancel"], xc = (
  /** @class */
  function() {
    function n() {
      this.isOutsideAngular = function(t) {
        return yt(BC, t);
      };
    }
    return n.prototype.setTimeout = function(t, e) {
      window.setTimeout(t, e);
    }, n.prototype.setInterval = function(t, e) {
      return new ut(function(r) {
        r(window.setInterval(t, e));
      });
    }, n.prototype.addEventListener = function(t, e, r, o) {
      var i = yt(jC, e);
      t.addEventListener(e, r, { capture: !!o, passive: i });
    }, n.prototype.dispatchEvent = function(t, e, r) {
      e();
    }, n.prototype.frameworkComponent = function(t) {
      return null;
    }, n.prototype.isFrameworkComponent = function(t) {
      return !1;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var UC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), To = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Hc = (
  /** @class */
  function(n) {
    UC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.update();
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      this.update();
    }, t.prototype.update = function() {
      this.updateImpl(), setTimeout(this.updateImpl.bind(this), 500);
    }, t.prototype.updateImpl = function() {
      var e = this.ctrlsService.getCenterRowContainerCtrl();
      if (e) {
        var r = {
          horizontalScrollShowing: e.isHorizontalScrollShowing(),
          verticalScrollShowing: this.isVerticalScrollShowing()
        };
        this.setScrollsVisible(r);
      }
    }, t.prototype.setScrollsVisible = function(e) {
      var r = this.horizontalScrollShowing !== e.horizontalScrollShowing || this.verticalScrollShowing !== e.verticalScrollShowing;
      if (r) {
        this.horizontalScrollShowing = e.horizontalScrollShowing, this.verticalScrollShowing = e.verticalScrollShowing;
        var o = {
          type: v.EVENT_SCROLL_VISIBILITY_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(o);
      }
    }, t.prototype.isHorizontalScrollShowing = function() {
      return this.horizontalScrollShowing;
    }, t.prototype.isVerticalScrollShowing = function() {
      return this.verticalScrollShowing;
    }, To([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), To([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), To([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), To([
      G
    ], t.prototype, "postConstruct", null), t = To([
      U("scrollVisibleService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var kC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ql = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Wc = (
  /** @class */
  function(n) {
    kC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.processAllCellClasses = function(e, r, o, i) {
      this.processClassRules(e.cellClassRules, r, o, i), this.processStaticCellClasses(e, r, o);
    }, t.prototype.processClassRules = function(e, r, o, i) {
      if (e != null) {
        for (var s = Object.keys(e), a = {}, l = {}, u = function(d) {
          var f = s[d], g = e[f], y;
          typeof g == "string" ? y = p.expressionService.evaluate(g, r) : typeof g == "function" && (y = g(r)), f.split(" ").forEach(function(C) {
            C == null || C.trim() == "" || (y ? a[C] = !0 : l[C] = !0);
          });
        }, p = this, c = 0; c < s.length; c++)
          u(c);
        i && Object.keys(l).forEach(i), Object.keys(a).forEach(o);
      }
    }, t.prototype.getStaticCellClasses = function(e, r) {
      var o = e.cellClass;
      if (!o)
        return [];
      var i;
      if (typeof o == "function") {
        var s = o;
        i = s(r);
      } else
        i = o;
      return typeof i == "string" && (i = [i]), i || [];
    }, t.prototype.processStaticCellClasses = function(e, r, o) {
      var i = this.getStaticCellClasses(e, r);
      i.forEach(function(s) {
        o(s);
      });
    }, Ql([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), t = Ql([
      U("stylingService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ji = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, $C = (
  /** @class */
  function(n) {
    zC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setMouseOver = function(e) {
      this.selectedColumns = e;
      var r = {
        type: v.EVENT_COLUMN_HOVER_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.clearMouseOver = function() {
      this.selectedColumns = null;
      var e = {
        type: v.EVENT_COLUMN_HOVER_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.isHovered = function(e) {
      return !!this.selectedColumns && this.selectedColumns.indexOf(e) >= 0;
    }, Ji([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Ji([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), t = Ji([
      U("columnHoverService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var KC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zi = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, YC = (
  /** @class */
  function(n) {
    KC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.executeNextFuncs = [], e.executeLaterFuncs = [], e.active = !1, e.animationThreadCount = 0, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        return e.gridBodyCtrl = r.gridBodyCtrl;
      });
    }, t.prototype.isActive = function() {
      return this.active;
    }, t.prototype.start = function() {
      this.active || this.gridOptionsWrapper.isSuppressColumnMoveAnimation() || this.gridOptionsWrapper.isEnableRtl() || (this.ensureAnimationCssClassPresent(), this.active = !0);
    }, t.prototype.finish = function() {
      this.active && (this.flush(), this.active = !1);
    }, t.prototype.executeNextVMTurn = function(e) {
      this.active ? this.executeNextFuncs.push(e) : e();
    }, t.prototype.executeLaterVMTurn = function(e) {
      this.active ? this.executeLaterFuncs.push(e) : e();
    }, t.prototype.ensureAnimationCssClassPresent = function() {
      var e = this;
      this.animationThreadCount++;
      var r = this.animationThreadCount;
      this.gridBodyCtrl.setColumnMovingCss(!0), this.executeLaterFuncs.push(function() {
        e.animationThreadCount === r && e.gridBodyCtrl.setColumnMovingCss(!1);
      });
    }, t.prototype.flush = function() {
      var e = this.executeNextFuncs;
      this.executeNextFuncs = [];
      var r = this.executeLaterFuncs;
      this.executeLaterFuncs = [], !(e.length === 0 && r.length === 0) && (window.setTimeout(function() {
        return e.forEach(function(o) {
          return o();
        });
      }, 0), window.setTimeout(function() {
        return r.forEach(function(o) {
          return o();
        });
      }, 300));
    }, Zi([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Zi([
      G
    ], t.prototype, "postConstruct", null), t = Zi([
      U("columnAnimationService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var qC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), es = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, XC = (
  /** @class */
  function(n) {
    qC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    e = t, t.prototype.createAutoGroupColumns = function(r) {
      var o = this, i = [], s = this.gridOptionsWrapper.isTreeData(), a = this.gridOptionsWrapper.isGroupMultiAutoColumn();
      return s && a && (console.warn("AG Grid: you cannot mix groupMultiAutoColumn with treeData, only one column can be used to display groups when doing tree data"), a = !1), a ? r.forEach(function(l, u) {
        i.push(o.createOneAutoGroupColumn(l, u));
      }) : i.push(this.createOneAutoGroupColumn()), i;
    }, t.prototype.createOneAutoGroupColumn = function(r, o) {
      var i = this.generateDefaultColDef(r), s;
      r ? s = w.GROUP_AUTO_COLUMN_ID + "-" + r.getId() : s = e.GROUP_AUTO_COLUMN_BUNDLE_ID;
      var a = this.gridOptionsWrapper.getAutoGroupColumnDef();
      if (Pt(i, a), i = this.columnFactory.mergeColDefs(i), i.colId = s, !this.gridOptionsWrapper.isTreeData()) {
        var l = K(i.field) && K(i.valueGetter) && K(i.filterValueGetter);
        l && (i.filter = !1);
      }
      o && o > 0 && (i.headerCheckboxSelection = !1);
      var u = new pe(i, null, s, !0);
      return this.context.createBean(u), u;
    }, t.prototype.generateDefaultColDef = function(r) {
      var o = this.gridOptionsWrapper.getAutoGroupColumnDef(), i = this.gridOptionsWrapper.getLocaleTextFunc(), s = {
        headerName: i("group", "Group")
      }, a = o && (o.cellRenderer || o.cellRendererFramework || o.cellRendererSelector);
      if (a || (s.cellRenderer = "agGroupCellRenderer"), r) {
        var l = r.getColDef();
        Object.assign(s, {
          // cellRendererParams.groupKey: colDefToCopy.field;
          headerName: this.columnModel.getDisplayNameForColumn(r, "header"),
          headerValueGetter: l.headerValueGetter
        }), (l.cellRenderer || l.cellRendererFramework) && Object.assign(s, {
          cellRendererParams: {
            innerRenderer: l.cellRenderer,
            innerRendererFramework: l.cellRendererFramework,
            innerRendererParams: l.cellRendererParams
          }
        }), s.showRowGroup = r.getColId();
      } else
        s.showRowGroup = !0;
      return s;
    };
    var e;
    return t.GROUP_AUTO_COLUMN_BUNDLE_ID = w.GROUP_AUTO_COLUMN_ID, es([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), es([
      h("columnFactory")
    ], t.prototype, "columnFactory", void 0), t = e = es([
      U("autoGroupColService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var QC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Po = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Vc = (
  /** @class */
  function(n) {
    QC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.currentPage = 0, e.topDisplayedRowIndex = 0, e.bottomDisplayedRowIndex = 0, e.pixelOffset = 0, e.masterRowCount = 0, e;
    }
    return t.prototype.postConstruct = function() {
      this.active = this.gridOptionsWrapper.isPagination(), this.paginateChildRows = this.gridOptionsWrapper.isPaginateChildRows(), this.addManagedListener(this.eventService, v.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedListener(this.gridOptionsWrapper, "paginationPageSize", this.onPaginationPageSizeChanged.bind(this)), this.onModelUpdated();
    }, t.prototype.ensureRowHeightsValid = function(e, r, o, i) {
      var s = this.rowModel.ensureRowHeightsValid(e, r, this.getPageFirstRow(), this.getPageLastRow());
      return s && this.calculatePages(), s;
    }, t.prototype.onModelUpdated = function(e) {
      this.calculatePages();
      var r = {
        type: v.EVENT_PAGINATION_CHANGED,
        animate: e ? e.animate : !1,
        newData: e ? e.newData : !1,
        newPage: e ? e.newPage : !1,
        keepRenderedRows: e ? e.keepRenderedRows : !1,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.onPaginationPageSizeChanged = function() {
      this.calculatePages();
      var e = {
        type: v.EVENT_PAGINATION_CHANGED,
        animate: !1,
        newData: !1,
        newPage: !1,
        // important to keep rendered rows, otherwise every time grid is resized,
        // we would destroy all the rows.
        keepRenderedRows: !0,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.goToPage = function(e) {
      if (!(!this.active || this.currentPage === e)) {
        this.currentPage = e;
        var r = {
          type: v.EVENT_MODEL_UPDATED,
          animate: !1,
          keepRenderedRows: !1,
          newData: !1,
          newPage: !0,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.onModelUpdated(r);
      }
    }, t.prototype.getPixelOffset = function() {
      return this.pixelOffset;
    }, t.prototype.getRow = function(e) {
      return this.rowModel.getRow(e);
    }, t.prototype.getRowNode = function(e) {
      return this.rowModel.getRowNode(e);
    }, t.prototype.getRowIndexAtPixel = function(e) {
      return this.rowModel.getRowIndexAtPixel(e);
    }, t.prototype.getCurrentPageHeight = function() {
      return K(this.topRowBounds) || K(this.bottomRowBounds) ? 0 : Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);
    }, t.prototype.getCurrentPagePixelRange = function() {
      var e = this.topRowBounds ? this.topRowBounds.rowTop : 0, r = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;
      return { pageFirstPixel: e, pageLastPixel: r };
    }, t.prototype.isRowPresent = function(e) {
      if (!this.rowModel.isRowPresent(e))
        return !1;
      var r = e.rowIndex >= this.topDisplayedRowIndex && e.rowIndex <= this.bottomDisplayedRowIndex;
      return r;
    }, t.prototype.isEmpty = function() {
      return this.rowModel.isEmpty();
    }, t.prototype.isRowsToRender = function() {
      return this.rowModel.isRowsToRender();
    }, t.prototype.getNodesInRangeForSelection = function(e, r) {
      return this.rowModel.getNodesInRangeForSelection(e, r);
    }, t.prototype.forEachNode = function(e) {
      return this.rowModel.forEachNode(e);
    }, t.prototype.getType = function() {
      return this.rowModel.getType();
    }, t.prototype.getRowBounds = function(e) {
      var r = this.rowModel.getRowBounds(e);
      return r.rowIndex = e, r;
    }, t.prototype.getPageFirstRow = function() {
      return this.topRowBounds ? this.topRowBounds.rowIndex : -1;
    }, t.prototype.getPageLastRow = function() {
      return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;
    }, t.prototype.getRowCount = function() {
      return this.rowModel.getRowCount();
    }, t.prototype.getPageForIndex = function(e) {
      return Math.floor(e / this.pageSize);
    }, t.prototype.goToPageWithIndex = function(e) {
      if (this.active) {
        var r = this.getPageForIndex(e);
        this.goToPage(r);
      }
    }, t.prototype.isRowInPage = function(e) {
      if (!this.active)
        return !0;
      var r = this.getPageForIndex(e.rowIndex);
      return r === this.currentPage;
    }, t.prototype.isLastPageFound = function() {
      return this.rowModel.isLastRowIndexKnown();
    }, t.prototype.getCurrentPage = function() {
      return this.currentPage;
    }, t.prototype.goToNextPage = function() {
      this.goToPage(this.currentPage + 1);
    }, t.prototype.goToPreviousPage = function() {
      this.goToPage(this.currentPage - 1);
    }, t.prototype.goToFirstPage = function() {
      this.goToPage(0);
    }, t.prototype.goToLastPage = function() {
      var e = this.rowModel.getRowCount(), r = Math.floor(e / this.pageSize);
      this.goToPage(r);
    }, t.prototype.getPageSize = function() {
      return this.pageSize;
    }, t.prototype.getTotalPages = function() {
      return this.totalPages;
    }, t.prototype.setPageSize = function() {
      this.pageSize = this.gridOptionsWrapper.getPaginationPageSize(), (this.pageSize == null || this.pageSize < 1) && (this.pageSize = 100);
    }, t.prototype.calculatePages = function() {
      this.active ? (this.setPageSize(), this.paginateChildRows ? this.calculatePagesAllRows() : this.calculatePagesMasterRowsOnly()) : this.calculatedPagesNotActive(), this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex), this.topRowBounds && (this.topRowBounds.rowIndex = this.topDisplayedRowIndex), this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex), this.bottomRowBounds && (this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex), this.setPixelOffset(O(this.topRowBounds) ? this.topRowBounds.rowTop : 0);
    }, t.prototype.setPixelOffset = function(e) {
      this.pixelOffset !== e && (this.pixelOffset = e, this.eventService.dispatchEvent({ type: v.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED }));
    }, t.prototype.setZeroRows = function() {
      this.masterRowCount = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = -1, this.currentPage = 0, this.totalPages = 0;
    }, t.prototype.calculatePagesMasterRowsOnly = function() {
      if (this.masterRowCount = this.rowModel.getTopLevelRowCount(), this.masterRowCount <= 0) {
        this.setZeroRows();
        return;
      }
      var e = this.masterRowCount - 1;
      this.totalPages = Math.floor(e / this.pageSize) + 1, this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1), (!Vn(this.currentPage) || this.currentPage < 0) && (this.currentPage = 0);
      var r = this.pageSize * this.currentPage, o = this.pageSize * (this.currentPage + 1) - 1;
      if (o > e && (o = e), this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(r), o === e)
        this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
      else {
        var i = this.rowModel.getTopLevelRowDisplayedIndex(o + 1);
        this.bottomDisplayedRowIndex = i - 1;
      }
    }, t.prototype.getMasterRowCount = function() {
      return this.masterRowCount;
    }, t.prototype.calculatePagesAllRows = function() {
      if (this.masterRowCount = this.rowModel.getRowCount(), this.masterRowCount === 0) {
        this.setZeroRows();
        return;
      }
      var e = this.masterRowCount - 1;
      this.totalPages = Math.floor(e / this.pageSize) + 1, this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1), (!Vn(this.currentPage) || this.currentPage < 0) && (this.currentPage = 0), this.topDisplayedRowIndex = this.pageSize * this.currentPage, this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1, this.bottomDisplayedRowIndex > e && (this.bottomDisplayedRowIndex = e);
    }, t.prototype.calculatedPagesNotActive = function() {
      this.pageSize = this.rowModel.getRowCount(), this.totalPages = 1, this.currentPage = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
    }, Po([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Po([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Po([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Po([
      G
    ], t.prototype, "postConstruct", null), t = Po([
      U("paginationProxy")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var JC = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ts = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ZC = (
  /** @class */
  function(n) {
    JC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCon = r.centerRowContainerCtrl, e.addManagedListener(e.eventService, v.EVENT_BODY_HEIGHT_CHANGED, e.onBodyHeightChanged.bind(e)), e.addManagedListener(e.eventService, v.EVENT_SCROLL_VISIBILITY_CHANGED, e.onScrollVisibilityChanged.bind(e)), e.checkPageSize();
      });
    }, t.prototype.notActive = function() {
      return !this.gridOptionsWrapper.isPaginationAutoPageSize();
    }, t.prototype.onScrollVisibilityChanged = function() {
      this.checkPageSize();
    }, t.prototype.onBodyHeightChanged = function() {
      this.checkPageSize();
    }, t.prototype.checkPageSize = function() {
      if (!this.notActive()) {
        var e = this.gridOptionsWrapper.getRowHeightAsNumber(), r = this.centerRowContainerCon.getViewportSizeFeature().getBodyHeight();
        if (r > 0) {
          var o = Math.floor(r / e);
          this.gridOptionsWrapper.setProperty("paginationPageSize", o);
        }
      }
    }, ts([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), ts([
      G
    ], t.prototype, "postConstruct", null), t = ts([
      U("paginationAutoPageSizeService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var em = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Jl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Bc = (
  /** @class */
  function(n) {
    em(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.cacheVersion = 0, e;
    }
    return t.prototype.init = function() {
      this.active = this.gridOptionsWrapper.isValueCache(), this.neverExpires = this.gridOptionsWrapper.isValueCacheNeverExpires();
    }, t.prototype.onDataChanged = function() {
      this.neverExpires || this.expire();
    }, t.prototype.expire = function() {
      this.cacheVersion++;
    }, t.prototype.setValue = function(e, r, o) {
      this.active && (e.__cacheVersion !== this.cacheVersion && (e.__cacheVersion = this.cacheVersion, e.__cacheData = {}), e.__cacheData[r] = o);
    }, t.prototype.getValue = function(e, r) {
      if (!(!this.active || e.__cacheVersion !== this.cacheVersion))
        return e.__cacheData[r];
    }, Jl([
      G
    ], t.prototype, "init", null), t = Jl([
      U("valueCache")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var tm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), pn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, rm = (
  /** @class */
  function(n) {
    tm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.rowModel.getType() === w.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel), this.addManagedListener(this.eventService, v.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));
    }, t.prototype.onCellValueChanged = function(e) {
      e.source !== w.SOURCE_PASTE && this.doChangeDetection(e.node, e.column);
    }, t.prototype.doChangeDetection = function(e, r) {
      if (!this.gridOptionsWrapper.isSuppressChangeDetection()) {
        if (this.clientSideRowModel && !e.isRowPinned()) {
          var o = this.gridOptionsWrapper.isAggregateOnlyChangedColumns(), i = new pi(o, this.clientSideRowModel.getRootNode());
          i.addParentNode(e.parent, [r]), this.clientSideRowModel.doAggregate(i);
        }
        this.rowRenderer.refreshCells();
      }
    }, pn([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), pn([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), pn([
      G
    ], t.prototype, "init", null), t = pn([
      U("changeDetectionService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var om = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), bo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, nm = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, jc = (
  /** @class */
  function(n) {
    om(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.consuming = !1, e;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("AlignedGridsService");
    }, t.prototype.init = function() {
      this.addManagedListener(this.eventService, v.EVENT_COLUMN_MOVED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_VISIBLE, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PINNED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_GROUP_OPENED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_RESIZED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, v.EVENT_BODY_SCROLL, this.fireScrollEvent.bind(this));
    }, t.prototype.fireEvent = function(e) {
      if (!this.consuming) {
        var r = this.gridOptionsWrapper.getAlignedGrids();
        r && r.forEach(function(o) {
          if (o.api) {
            var i = o.api.__getAlignedGridService();
            e(i);
          }
        });
      }
    }, t.prototype.onEvent = function(e) {
      this.consuming = !0, e(), this.consuming = !1;
    }, t.prototype.fireColumnEvent = function(e) {
      this.fireEvent(function(r) {
        r.onColumnEvent(e);
      });
    }, t.prototype.fireScrollEvent = function(e) {
      e.direction === "horizontal" && this.fireEvent(function(r) {
        r.onScrollEvent(e);
      });
    }, t.prototype.onScrollEvent = function(e) {
      var r = this;
      this.onEvent(function() {
        var o = r.ctrlsService.getGridBodyCtrl();
        o.getScrollFeature().setHorizontalScrollPosition(e.left);
      });
    }, t.prototype.getMasterColumns = function(e) {
      var r = [];
      return e.columns ? e.columns.forEach(function(o) {
        r.push(o);
      }) : e.column && r.push(e.column), r;
    }, t.prototype.getColumnIds = function(e) {
      var r = [];
      return e.columns ? e.columns.forEach(function(o) {
        r.push(o.getColId());
      }) : e.column && r.push(e.column.getColId()), r;
    }, t.prototype.onColumnEvent = function(e) {
      var r = this;
      this.onEvent(function() {
        switch (e.type) {
          case v.EVENT_COLUMN_MOVED:
          case v.EVENT_COLUMN_VISIBLE:
          case v.EVENT_COLUMN_PINNED:
          case v.EVENT_COLUMN_RESIZED:
            var o = e;
            r.processColumnEvent(o);
            break;
          case v.EVENT_COLUMN_GROUP_OPENED:
            var i = e;
            r.processGroupOpenedEvent(i);
            break;
          case v.EVENT_COLUMN_PIVOT_CHANGED:
            console.warn("AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.");
            break;
        }
      });
    }, t.prototype.processGroupOpenedEvent = function(e) {
      var r = e.columnGroup, o = null;
      if (r) {
        var i = r.getGroupId();
        o = this.columnModel.getProvidedColumnGroup(i);
      }
      r && !o || (this.logger.log("onColumnEvent-> processing " + e + " expanded = " + r.isExpanded()), this.columnModel.setColumnGroupOpened(o, r.isExpanded(), "alignedGridChanged"));
    }, t.prototype.processColumnEvent = function(e) {
      var r = this, o = e.column, i = null;
      if (o && (i = this.columnModel.getPrimaryColumn(o.getColId())), !(o && !i)) {
        var s = this.getMasterColumns(e);
        switch (e.type) {
          case v.EVENT_COLUMN_MOVED:
            {
              var a = e, l = e.columnApi.getColumnState(), u = l.map(function(C) {
                return { colId: C.colId };
              });
              this.columnModel.applyColumnState({ state: u, applyOrder: !0 }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " toIndex = " + a.toIndex);
            }
            break;
          case v.EVENT_COLUMN_VISIBLE:
            {
              var p = e, l = e.columnApi.getColumnState(), u = l.map(function(_) {
                return { colId: _.colId, hide: _.hide };
              });
              this.columnModel.applyColumnState({ state: u }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " visible = " + p.visible);
            }
            break;
          case v.EVENT_COLUMN_PINNED:
            {
              var c = e, l = e.columnApi.getColumnState(), u = l.map(function(_) {
                return { colId: _.colId, pinned: _.pinned };
              });
              this.columnModel.applyColumnState({ state: u }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " pinned = " + c.pinned);
            }
            break;
          case v.EVENT_COLUMN_RESIZED:
            var d = e;
            s.forEach(function(C) {
              r.logger.log("onColumnEvent-> processing " + e.type + " actualWidth = " + C.getActualWidth());
              var m = [{ key: C.getColId(), newWidth: C.getActualWidth() }];
              r.columnModel.setColumnWidths(m, !1, d.finished, "alignedGridChanged");
            });
            break;
        }
        var f = this.ctrlsService.getGridBodyCtrl(), g = f.isVerticalScrollShowing(), y = this.gridOptionsWrapper.getAlignedGrids();
        y && y.forEach(function(C) {
          C.api && C.api.setAlwaysShowVerticalScroll(g);
        });
      }
    }, bo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), bo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), bo([
      nm(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), bo([
      G
    ], t.prototype, "init", null), t = bo([
      U("alignedGridsService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var im = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zl = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, sm = (
  /** @class */
  function(n) {
    im(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.adaptFunction = function(e, r) {
      var o = this.componentMetadataProvider.retrieve(e);
      return o && o.functionAdapter ? o.functionAdapter(r) : null;
    }, t.prototype.adaptCellRendererFunction = function(e) {
      var r = (
        /** @class */
        function() {
          function o() {
          }
          return o.prototype.refresh = function(i) {
            return !1;
          }, o.prototype.getGui = function() {
            return this.eGui;
          }, o.prototype.init = function(i) {
            var s = e(i), a = typeof s;
            if (a === "string" || a === "number" || a === "boolean") {
              this.eGui = Ue("<span>" + s + "</span>");
              return;
            }
            if (s == null) {
              this.eGui = Ue("<span></span>");
              return;
            }
            this.eGui = s;
          }, o;
        }()
      );
      return r;
    }, t.prototype.doesImplementIComponent = function(e) {
      return e ? e.prototype && "getGui" in e.prototype : !1;
    }, Zl([
      h("componentMetadataProvider")
    ], t.prototype, "componentMetadataProvider", void 0), t = Zl([
      U("agComponentUtils")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var am = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), rs = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, lm = (
  /** @class */
  function(n) {
    am(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.componentMetaData = {
        dateComponent: {
          mandatoryMethodList: ["getDate", "setDate"],
          optionalMethodList: ["afterGuiAttached", "setInputPlaceholder", "setInputAriaLabel"]
        },
        detailCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        headerComponent: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh"]
        },
        headerGroupComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        loadingCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        loadingOverlayComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        noRowsOverlayComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        floatingFilterComponent: {
          mandatoryMethodList: ["onParentModelChanged"],
          optionalMethodList: ["afterGuiAttached"]
        },
        floatingFilterWrapperComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        cellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        cellEditor: {
          mandatoryMethodList: ["getValue"],
          optionalMethodList: ["isPopup", "isCancelBeforeStart", "isCancelAfterEnd", "getPopupPosition", "focusIn", "focusOut", "afterGuiAttached"]
        },
        innerRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        fullWidthCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        pinnedRowCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        groupRowRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        filter: {
          mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
          optionalMethodList: ["afterGuiAttached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged"]
        },
        filterComponent: {
          mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
          optionalMethodList: ["afterGuiAttached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged"]
        },
        statusPanel: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"]
        },
        toolPanel: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"]
        },
        tooltipComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        }
      };
    }, t.prototype.retrieve = function(e) {
      return this.componentMetaData[e];
    }, rs([
      h("agComponentUtils")
    ], t.prototype, "agComponentUtils", void 0), rs([
      G
    ], t.prototype, "postConstruct", null), t = rs([
      U("componentMetadataProvider")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var um = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), eu = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, os = 8, pm = 4, ns = 4, is = 6, cm = {
  // this item is required for custom themes
  "ag-theme-custom": {
    headerHeight: 25,
    headerCellMinWidth: 24,
    listItemHeight: pm * 5,
    rowHeight: 25,
    chartMenuPanelWidth: 220
  },
  "ag-theme-material": {
    headerHeight: os * 7,
    headerCellMinWidth: 48,
    listItemHeight: os * 4,
    rowHeight: os * 6,
    chartMenuPanelWidth: 240
  },
  "ag-theme-balham": {
    headerHeight: ns * 8,
    headerCellMinWidth: 24,
    listItemHeight: ns * 6,
    rowHeight: ns * 7,
    chartMenuPanelWidth: 220
  },
  "ag-theme-alpine": {
    headerHeight: is * 8,
    headerCellMinWidth: 36,
    listItemHeight: is * 4,
    rowHeight: is * 7,
    chartMenuPanelWidth: 240
  }
}, tu = {
  headerHeight: ["ag-header-row"],
  headerCellMinWidth: ["ag-header-cell"],
  listItemHeight: ["ag-virtual-list-item"],
  rowHeight: ["ag-row"],
  chartMenuPanelWidth: ["ag-chart-docked-container"]
}, Do = {}, Uc = (
  /** @class */
  function(n) {
    um(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getSassVariable = function(e, r) {
      var o = "ag-theme-" + (e.match("material") ? "material" : e.match("balham") ? "balham" : e.match("alpine") ? "alpine" : "custom"), i = cm[o][r], s = 0;
      Do[e] || (Do[e] = {});
      var a = Do[e][r];
      if (a != null)
        return a;
      if (tu[r]) {
        var l = tu[r], u = document.createElement("div");
        u.classList.add(e), u.style.position = "absolute";
        var p = l.reduce(function(d, f) {
          var g = document.createElement("div");
          return g.style.position = "static", g.classList.add(f), d.appendChild(g), g;
        }, u);
        if (document.body) {
          document.body.appendChild(u);
          var c = r.toLowerCase().indexOf("height") !== -1 ? "height" : "width";
          s = parseInt(window.getComputedStyle(p)[c], 10), document.body.removeChild(u);
        }
      }
      return Do[e][r] = s || i, Do[e][r];
    }, t.prototype.isThemeDark = function() {
      var e = this.getTheme().theme;
      return !!e && e.indexOf("dark") >= 0;
    }, t.prototype.chartMenuPanelWidth = function() {
      var e = this.getTheme().themeFamily;
      return this.getSassVariable(e, "chartMenuPanelWidth");
    }, t.prototype.getTheme = function() {
      for (var e = /\bag-(material|(?:theme-([\w\-]*)))\b/, r = this.eGridDiv, o = null; r && (o = e.exec(r.className), !o); )
        r = r.parentElement || void 0;
      if (!o)
        return {};
      var i = o[0], s = o[2] === void 0;
      if (s) {
        var a = i.replace("ag-", "ag-theme-");
        ve(function() {
          return console.warn("AG Grid: As of v19 old theme are no longer provided. Please replace " + i + " with " + a + ".");
        }, "using-old-theme");
      }
      return { theme: i, el: r, themeFamily: i.replace(/-dark$/, "") };
    }, eu([
      h("eGridDiv")
    ], t.prototype, "eGridDiv", void 0), t = eu([
      U("environment")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var dm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ss = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, kc = (
  /** @class */
  function(n) {
    dm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.createTasksP1 = { list: [], sorted: !1 }, e.createTasksP2 = { list: [], sorted: !1 }, e.destroyTasks = [], e.ticking = !1, e.scrollGoingDown = !0, e.lastScrollTop = 0, e.taskCount = 0, e.cancelledTasks = /* @__PURE__ */ new Set(), e;
    }
    return t.prototype.setScrollTop = function(e) {
      this.scrollGoingDown = e > this.lastScrollTop, this.lastScrollTop = e;
    }, t.prototype.init = function() {
      this.useAnimationFrame = !this.gridOptionsWrapper.isSuppressAnimationFrame();
    }, t.prototype.isOn = function() {
      return this.useAnimationFrame;
    }, t.prototype.verifyAnimationFrameOn = function(e) {
      this.useAnimationFrame === !1 && console.warn("AG Grid: AnimationFrameService." + e + " called but animation frames are off");
    }, t.prototype.createTask = function(e, r, o) {
      this.verifyAnimationFrameOn(o);
      var i = { task: e, index: r, createOrder: ++this.taskCount };
      this.addTaskToList(this[o], i), this.schedule();
    }, t.prototype.cancelTask = function(e) {
      this.cancelledTasks.add(e);
    }, t.prototype.addTaskToList = function(e, r) {
      e.list.push(r), e.sorted = !1;
    }, t.prototype.sortTaskList = function(e) {
      if (!e.sorted) {
        var r = this.scrollGoingDown ? 1 : -1;
        e.list.sort(function(o, i) {
          return o.index !== i.index ? r * (i.index - o.index) : i.createOrder - o.createOrder;
        }), e.sorted = !0;
      }
    }, t.prototype.addDestroyTask = function(e) {
      this.verifyAnimationFrameOn("createTasksP3"), this.destroyTasks.push(e), this.schedule();
    }, t.prototype.executeFrame = function(e) {
      this.verifyAnimationFrameOn("executeFrame");
      for (var r = this.createTasksP1, o = r.list, i = this.createTasksP2, s = i.list, a = this.destroyTasks, l = (/* @__PURE__ */ new Date()).getTime(), u = (/* @__PURE__ */ new Date()).getTime() - l, p = e <= 0, c = this.ctrlsService.getGridBodyCtrl(); p || u < e; ) {
        var d = c.getScrollFeature().executeAnimationFrameScroll();
        if (!d) {
          var f = void 0;
          if (o.length)
            this.sortTaskList(r), f = o.pop().task;
          else if (s.length)
            this.sortTaskList(i), f = s.pop().task;
          else if (a.length)
            f = a.pop();
          else {
            this.cancelledTasks.clear();
            break;
          }
          this.cancelledTasks.has(f) || f();
        }
        u = (/* @__PURE__ */ new Date()).getTime() - l;
      }
      o.length || s.length || a.length ? this.requestFrame() : this.stopTicking();
    }, t.prototype.stopTicking = function() {
      this.ticking = !1;
    }, t.prototype.flushAllFrames = function() {
      this.useAnimationFrame && this.executeFrame(-1);
    }, t.prototype.schedule = function() {
      this.useAnimationFrame && (this.ticking || (this.ticking = !0, this.requestFrame()));
    }, t.prototype.requestFrame = function() {
      var e = this.executeFrame.bind(this, 60), r = this.gridOptionsWrapper.getDocument(), o = r.defaultView || window;
      o.requestAnimationFrame ? o.requestAnimationFrame(e) : o.webkitRequestAnimationFrame ? o.webkitRequestAnimationFrame(e) : o.setTimeout(e, 0);
    }, t.prototype.isQueueEmpty = function() {
      return !this.ticking;
    }, t.prototype.debounce = function(e) {
      var r = this, o = !1;
      return function() {
        if (!r.isOn()) {
          r.getFrameworkOverrides().setTimeout(e, 0);
          return;
        }
        o || (o = !0, r.addDestroyTask(function() {
          o = !1, e();
        }));
      };
    }, ss([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), ss([
      G
    ], t.prototype, "init", null), t = ss([
      U("animationFrameService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var hm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Xn = globalThis && globalThis.__assign || function() {
  return Xn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Xn.apply(this, arguments);
}, st = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, zc = (
  /** @class */
  function(n) {
    hm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.timeLastPageEventProcessed = 0, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.gridBodyCon = r.gridBodyCtrl;
      });
    }, t.prototype.handlePageScrollingKey = function(e) {
      var r = e.key, o = e.altKey, i = e.ctrlKey || e.metaKey, s = this.mouseEventService.getCellPositionForEvent(e);
      if (!s)
        return !1;
      var a = !1;
      switch (r) {
        case P.PAGE_HOME:
        case P.PAGE_END:
          !i && !o && (this.onHomeOrEndKey(r), a = !0);
          break;
        case P.LEFT:
        case P.RIGHT:
          i && !o && (this.onCtrlLeftOrRight(r, s), a = !0);
          break;
        case P.UP:
        case P.DOWN:
          i && !o && (this.onCtrlUpOrDown(r, s), a = !0);
          break;
        case P.PAGE_DOWN:
          !i && !o && (this.onPageDown(s), a = !0);
          break;
        case P.PAGE_UP:
          !i && !o && (this.onPageUp(s), a = !0);
          break;
      }
      return a && e.preventDefault(), a;
    }, t.prototype.isTimeSinceLastPageEventToRecent = function() {
      var e = (/* @__PURE__ */ new Date()).getTime(), r = e - this.timeLastPageEventProcessed;
      return r < 100;
    }, t.prototype.setTimeLastPageEventProcessed = function() {
      this.timeLastPageEventProcessed = (/* @__PURE__ */ new Date()).getTime();
    }, t.prototype.navigateTo = function(e) {
      var r = e.scrollIndex, o = e.scrollType, i = e.scrollColumn, s = e.focusIndex, a = e.focusColumn;
      if (O(i) && !i.isPinned() && this.gridBodyCon.getScrollFeature().ensureColumnVisible(i), O(r) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(r, o), this.animationFrameService.flushAllFrames(), this.focusService.setFocusedCell(s, a, null, !0), this.rangeService) {
        var l = { rowIndex: s, rowPinned: null, column: a };
        this.rangeService.setRangeToCell(l);
      }
    }, t.prototype.onPageDown = function(e) {
      if (!this.isTimeSinceLastPageEventToRecent()) {
        var r = this.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.getViewportHeight(), s = this.paginationProxy.getPixelOffset(), a = o.top + i, l = this.paginationProxy.getRowIndexAtPixel(a + s), u = l, p = this.paginationProxy.getRow(e.rowIndex).rowTop, c = p + i - s, d = this.paginationProxy.getRowIndexAtPixel(c + s), f = this.paginationProxy.getPageLastRow();
        d === e.rowIndex && (u = d = e.rowIndex + 1), d > f && (d = f), u > f && (u = f), this.isRowTallerThanView(d) && (u = d), this.navigateTo({
          scrollIndex: u,
          scrollType: "top",
          scrollColumn: null,
          focusIndex: d,
          focusColumn: e.column
        }), this.setTimeLastPageEventProcessed();
      }
    }, t.prototype.onPageUp = function(e) {
      if (!this.isTimeSinceLastPageEventToRecent()) {
        var r = this.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.getViewportHeight(), s = this.paginationProxy.getPixelOffset(), a = o.top, l = this.paginationProxy.getRowIndexAtPixel(a + s), u = l, p = this.paginationProxy.getRow(e.rowIndex), c = p.rowTop + p.rowHeight - i - s, d = this.paginationProxy.getRowIndexAtPixel(c + s), f = this.paginationProxy.getPageFirstRow();
        d === e.rowIndex && (u = d = e.rowIndex - 1), d < f && (d = f), u < f && (u = f);
        var g = "bottom";
        this.isRowTallerThanView(d) && (u = d, g = "top"), this.navigateTo({
          scrollIndex: u,
          scrollType: g,
          scrollColumn: null,
          focusIndex: d,
          focusColumn: e.column
        }), this.setTimeLastPageEventProcessed();
      }
    }, t.prototype.getViewportHeight = function() {
      var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition(), o = this.gridOptionsWrapper.getScrollbarWidth(), i = r.bottom - r.top;
      return this.ctrlsService.getCenterRowContainerCtrl().isHorizontalScrollShowing() && (i -= o), i;
    }, t.prototype.isRowTallerThanView = function(e) {
      var r = this.paginationProxy.getRow(e);
      if (!r)
        return !1;
      var o = r.rowHeight;
      return typeof o != "number" ? !1 : o > this.getViewportHeight();
    }, t.prototype.getIndexToFocus = function(e, r) {
      var o = e;
      if (r) {
        var i = this.paginationProxy.getRow(e);
        i && i.stub && (o -= 1);
      }
      return o;
    }, t.prototype.onCtrlUpOrDown = function(e, r) {
      var o = e === P.UP, i = o ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();
      this.navigateTo({
        scrollIndex: i,
        scrollType: null,
        scrollColumn: r.column,
        focusIndex: this.getIndexToFocus(i, !o),
        focusColumn: r.column
      });
    }, t.prototype.onCtrlLeftOrRight = function(e, r) {
      var o = e === P.LEFT, i = this.columnModel.getAllDisplayedColumns(), s = this.gridOptionsWrapper.isEnableRtl(), a = o !== s ? i[0] : _e(i);
      this.navigateTo({
        scrollIndex: r.rowIndex,
        scrollType: null,
        scrollColumn: a,
        focusIndex: r.rowIndex,
        focusColumn: a
      });
    }, t.prototype.onHomeOrEndKey = function(e) {
      var r = e === P.PAGE_HOME, o = this.columnModel.getAllDisplayedColumns(), i = r ? o[0] : _e(o), s = r ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();
      this.navigateTo({
        scrollIndex: s,
        scrollType: null,
        scrollColumn: i,
        focusIndex: this.getIndexToFocus(s, !r),
        focusColumn: i
      });
    }, t.prototype.onTabKeyDown = function(e, r) {
      var o = r.shiftKey, i = this.tabToNextCellCommon(e, o, r);
      if (i) {
        r.preventDefault();
        return;
      }
      if (o) {
        var s = e.getRowPosition(), a = s.rowIndex, l = s.rowPinned, u = l ? a === 0 : a === this.paginationProxy.getPageFirstRow();
        u && (r.preventDefault(), this.focusService.focusLastHeader(r));
      } else
        e instanceof ar && e.focusCell(!0), this.focusService.focusNextGridCoreContainer(o) && r.preventDefault();
    }, t.prototype.tabToNextCell = function(e, r) {
      var o = this.focusService.getFocusedCell();
      if (!o)
        return !1;
      var i = this.getCellByPosition(o);
      return !i && (i = this.rowRenderer.getRowByPosition(o), !i || !i.isFullWidth()) ? !1 : this.tabToNextCellCommon(i, e, r);
    }, t.prototype.tabToNextCellCommon = function(e, r, o) {
      var i = e.isEditing();
      if (!i && e instanceof ar) {
        var s = e, a = s.getRowCtrl();
        a && (i = a.isEditing());
      }
      var l;
      return i ? this.gridOptionsWrapper.isFullRowEdit() ? l = this.moveToNextEditingRow(e, r, o) : l = this.moveToNextEditingCell(e, r, o) : l = this.moveToNextCellNotEditing(e, r), l || !!this.focusService.getFocusedHeader();
    }, t.prototype.moveToNextEditingCell = function(e, r, o) {
      o === void 0 && (o = null);
      var i = e.getCellPosition();
      e.stopEditing();
      var s = this.findNextCellToFocusOn(i, r, !0);
      return s == null ? !1 : (s.startEditing(null, null, !0, o), s.focusCell(!1), !0);
    }, t.prototype.moveToNextEditingRow = function(e, r, o) {
      o === void 0 && (o = null);
      var i = e.getCellPosition(), s = this.findNextCellToFocusOn(i, r, !0);
      if (s == null)
        return !1;
      var a = s.getCellPosition(), l = this.isCellEditable(i), u = this.isCellEditable(a), p = a && i.rowIndex === a.rowIndex && i.rowPinned === a.rowPinned;
      if (l && e.setFocusOutOnEditor(), !p) {
        var c = e.getRowCtrl();
        c.stopEditing();
        var d = s.getRowCtrl();
        d.startRowEditing(void 0, void 0, void 0, o);
      }
      return u ? (s.setFocusInOnEditor(), s.focusCell()) : s.focusCell(!0), !0;
    }, t.prototype.moveToNextCellNotEditing = function(e, r) {
      var o = this.columnModel.getAllDisplayedColumns(), i;
      e instanceof lr ? i = Xn(Xn({}, e.getRowPosition()), { column: r ? o[0] : _e(o) }) : i = e.getCellPosition();
      var s = this.findNextCellToFocusOn(i, r, !1);
      if (s instanceof ar)
        s.focusCell(!0);
      else if (s)
        return this.tryToFocusFullWidthRow(s.getRowPosition(), r);
      return O(s);
    }, t.prototype.findNextCellToFocusOn = function(e, r, o) {
      for (var i = e; ; ) {
        e !== i && (e = i), r || (i = this.getLastCellOfColSpan(i)), i = this.cellNavigationService.getNextTabbedCell(i, r);
        var s = this.gridOptionsWrapper.getTabToNextCellFunc();
        if (O(s)) {
          var a = {
            backwards: r,
            editing: o,
            previousCellPosition: e,
            nextCellPosition: i || null,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi()
          }, l = s(a);
          O(l) ? (l.floating && (ve(function() {
            console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
          }, "no floating in userCell"), l.rowPinned = l.floating), i = {
            rowIndex: l.rowIndex,
            column: l.column,
            rowPinned: l.rowPinned
          }) : i = null;
        }
        if (!i)
          return null;
        if (i.rowIndex < 0) {
          var u = this.headerNavigationService.getHeaderRowCount();
          return this.focusService.focusHeaderPosition({
            headerPosition: {
              headerRowIndex: u + i.rowIndex,
              column: i.column
            }
          }), null;
        }
        var p = this.gridOptionsWrapper.isFullRowEdit();
        if (o && !p) {
          var c = this.isCellEditable(i);
          if (!c)
            continue;
        }
        this.ensureCellVisible(i);
        var d = this.getCellByPosition(i);
        if (!d) {
          var f = this.rowRenderer.getRowByPosition(i);
          if (!f || !f.isFullWidth())
            continue;
          return f;
        }
        if (!d.isSuppressNavigable())
          return this.rangeService && this.rangeService.setRangeToCell(i), d;
      }
    }, t.prototype.isCellEditable = function(e) {
      var r = this.lookupRowNodeForCell(e);
      return r ? e.column.isCellEditable(r) : !1;
    }, t.prototype.getCellByPosition = function(e) {
      var r = this.rowRenderer.getRowByPosition(e);
      return r ? r.getCellCtrl(e.column) : null;
    }, t.prototype.lookupRowNodeForCell = function(e) {
      return e.rowPinned === w.PINNED_TOP ? this.pinnedRowModel.getPinnedTopRow(e.rowIndex) : e.rowPinned === w.PINNED_BOTTOM ? this.pinnedRowModel.getPinnedBottomRow(e.rowIndex) : this.paginationProxy.getRow(e.rowIndex);
    }, t.prototype.navigateToNextCell = function(e, r, o, i) {
      for (var s = o, a = !1; s && (s === o || !this.isValidNavigateCell(s)); )
        this.gridOptionsWrapper.isEnableRtl() ? r === P.LEFT && (s = this.getLastCellOfColSpan(s)) : r === P.RIGHT && (s = this.getLastCellOfColSpan(s)), s = this.cellNavigationService.getNextCellToFocus(r, s), a = K(s);
      if (a && e && e.key === P.UP && (s = {
        rowIndex: -1,
        rowPinned: null,
        column: o.column
      }), i) {
        var l = this.gridOptionsWrapper.getNavigateToNextCellFunc();
        if (O(l)) {
          var u = {
            key: r,
            previousCellPosition: o,
            nextCellPosition: s || null,
            event: e,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi()
          }, p = l(u);
          O(p) ? (p.floating && (ve(function() {
            console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
          }, "no floating in userCell"), p.rowPinned = p.floating), s = {
            rowPinned: p.rowPinned,
            rowIndex: p.rowIndex,
            column: p.column
          }) : s = null;
        }
      }
      if (s) {
        if (s.rowIndex < 0) {
          var c = this.headerNavigationService.getHeaderRowCount();
          this.focusService.focusHeaderPosition({
            headerPosition: { headerRowIndex: c + s.rowIndex, column: o.column },
            event: e || void 0
          });
          return;
        }
        var d = this.getNormalisedPosition(s);
        d ? this.focusPosition(d) : this.tryToFocusFullWidthRow(s);
      }
    }, t.prototype.getNormalisedPosition = function(e) {
      this.ensureCellVisible(e);
      var r = this.getCellByPosition(e);
      return r ? (e = r.getCellPosition(), this.ensureCellVisible(e), e) : null;
    }, t.prototype.tryToFocusFullWidthRow = function(e, r) {
      r === void 0 && (r = !1);
      var o = this.columnModel.getAllDisplayedColumns(), i = this.rowRenderer.getRowByPosition(e);
      if (!i || !i.isFullWidth())
        return !1;
      var s = {
        rowIndex: e.rowIndex,
        rowPinned: e.rowPinned,
        column: e.column || (r ? _e(o) : o[0])
      };
      return this.focusPosition(s), !0;
    }, t.prototype.focusPosition = function(e) {
      this.focusService.setFocusedCell(e.rowIndex, e.column, e.rowPinned, !0), this.rangeService && this.rangeService.setRangeToCell(e);
    }, t.prototype.isValidNavigateCell = function(e) {
      var r = this.rowPositionUtils.getRowNode(e);
      return !!r;
    }, t.prototype.getLastCellOfColSpan = function(e) {
      var r = this.getCellByPosition(e);
      if (!r)
        return e;
      var o = r.getColSpanningList();
      return o.length === 1 ? e : {
        rowIndex: e.rowIndex,
        column: _e(o),
        rowPinned: e.rowPinned
      };
    }, t.prototype.ensureCellVisible = function(e) {
      K(e.rowPinned) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(e.rowIndex), e.column.isPinned() || this.gridBodyCon.getScrollFeature().ensureColumnVisible(e.column), this.gridBodyCon.getScrollFeature().horizontallyScrollHeaderCenterAndFloatingCenter(), this.animationFrameService.flushAllFrames();
    }, st([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), st([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), st([
      h("focusService")
    ], t.prototype, "focusService", void 0), st([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), st([
      de("rangeService")
    ], t.prototype, "rangeService", void 0), st([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), st([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), st([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), st([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), st([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), st([
      h("cellNavigationService")
    ], t.prototype, "cellNavigationService", void 0), st([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), st([
      G
    ], t.prototype, "postConstruct", null), t = st([
      U("navigationService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var fm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), cn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, gm = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, vm = (
  /** @class */
  function(n) {
    fm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.scrollY = 0, e.uiBodyHeight = 0, e;
    }
    return t.prototype.agWire = function(e) {
      this.logger = e.create("RowContainerHeightService");
    }, t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, v.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this)), this.maxDivHeight = Ju(), this.logger.log("maxDivHeight = " + this.maxDivHeight);
    }, t.prototype.isStretching = function() {
      return this.stretching;
    }, t.prototype.getDivStretchOffset = function() {
      return this.divStretchOffset;
    }, t.prototype.updateOffset = function() {
      if (this.stretching) {
        var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition().top, o = this.getUiBodyHeight(), i = r !== this.scrollY || o !== this.uiBodyHeight;
        i && (this.scrollY = r, this.uiBodyHeight = o, this.calculateOffset());
      }
    }, t.prototype.calculateOffset = function() {
      this.setUiContainerHeight(this.maxDivHeight), this.pixelsToShave = this.modelHeight - this.uiContainerHeight, this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;
      var e = this.scrollY / this.maxScrollY, r = e * this.pixelsToShave;
      this.logger.log("Div Stretch Offset = " + r + " (" + this.pixelsToShave + " * " + e + ")"), this.setDivStretchOffset(r);
    }, t.prototype.setUiContainerHeight = function(e) {
      e !== this.uiContainerHeight && (this.uiContainerHeight = e, this.eventService.dispatchEvent({ type: v.EVENT_ROW_CONTAINER_HEIGHT_CHANGED }));
    }, t.prototype.clearOffset = function() {
      this.setUiContainerHeight(this.modelHeight), this.pixelsToShave = 0, this.setDivStretchOffset(0);
    }, t.prototype.setDivStretchOffset = function(e) {
      var r = typeof e == "number" ? Math.floor(e) : null;
      this.divStretchOffset !== r && (this.divStretchOffset = r, this.eventService.dispatchEvent({ type: v.EVENT_HEIGHT_SCALE_CHANGED }));
    }, t.prototype.setModelHeight = function(e) {
      this.modelHeight = e, this.stretching = e != null && this.maxDivHeight > 0 && e > this.maxDivHeight, this.stretching ? this.calculateOffset() : this.clearOffset();
    }, t.prototype.getUiContainerHeight = function() {
      return this.uiContainerHeight;
    }, t.prototype.getRealPixelPosition = function(e) {
      return e - this.divStretchOffset;
    }, t.prototype.getUiBodyHeight = function() {
      var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition();
      return r.bottom - r.top;
    }, t.prototype.getScrollPositionForPixel = function(e) {
      if (this.pixelsToShave <= 0)
        return e;
      var r = this.modelHeight - this.getUiBodyHeight(), o = e / r, i = this.maxScrollY * o;
      return i;
    }, cn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), cn([
      gm(0, tt("loggerFactory"))
    ], t.prototype, "agWire", null), cn([
      G
    ], t.prototype, "postConstruct", null), t = cn([
      U("rowContainerHeightService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ym = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ru = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, $c = (
  /** @class */
  function(n) {
    ym(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren(), this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();
    }, t.prototype.updateSelectableAfterGrouping = function(e) {
      if (this.isRowSelectableFunc) {
        var r = function(o) {
          return o.childrenAfterGroup;
        };
        this.recurseDown(e.childrenAfterGroup, r);
      }
    }, t.prototype.updateSelectableAfterFiltering = function(e) {
      if (this.isRowSelectableFunc) {
        var r = function(o) {
          return o.childrenAfterFilter;
        };
        this.recurseDown(e.childrenAfterGroup, r);
      }
    }, t.prototype.recurseDown = function(e, r) {
      var o = this;
      e && e.forEach(function(i) {
        if (i.group) {
          i.hasChildren() && o.recurseDown(r(i), r);
          var s;
          if (o.groupSelectsChildren) {
            var a = (r(i) || []).find(function(l) {
              return l.selectable === !0;
            });
            s = O(a);
          } else
            s = o.isRowSelectableFunc ? o.isRowSelectableFunc(i) : !1;
          i.setRowSelectable(s);
        }
      });
    }, ru([
      G
    ], t.prototype, "init", null), t = ru([
      U("selectableService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Cm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Et = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, mm = (
  /** @class */
  function(n) {
    Cm(t, n);
    function t() {
      var e = n.call(this) || this;
      return e.previousAndFirstButtonsDisabled = !1, e.nextButtonDisabled = !1, e.lastButtonDisabled = !1, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.gridOptionsWrapper.isEnableRtl();
      this.setTemplate(this.getTemplate()), this.btFirst.insertAdjacentElement("afterbegin", xe(r ? "last" : "first", this.gridOptionsWrapper)), this.btPrevious.insertAdjacentElement("afterbegin", xe(r ? "next" : "previous", this.gridOptionsWrapper)), this.btNext.insertAdjacentElement("afterbegin", xe(r ? "previous" : "next", this.gridOptionsWrapper)), this.btLast.insertAdjacentElement("afterbegin", xe(r ? "first" : "last", this.gridOptionsWrapper));
      var o = this.gridOptionsWrapper.isPagination(), i = o && !this.gridOptionsWrapper.isSuppressPaginationPanel();
      if (!i) {
        this.setDisplayed(!1);
        return;
      }
      this.addManagedListener(this.eventService, v.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), [
        { el: this.btFirst, fn: this.onBtFirst.bind(this) },
        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },
        { el: this.btNext, fn: this.onBtNext.bind(this) },
        { el: this.btLast, fn: this.onBtLast.bind(this) }
      ].forEach(function(s) {
        var a = s.el, l = s.fn;
        e.addManagedListener(a, "click", l), e.addManagedListener(a, "keydown", function(u) {
          (u.key === P.ENTER || u.key === P.SPACE) && (u.preventDefault(), l());
        });
      }), this.onPaginationChanged();
    }, t.prototype.onPaginationChanged = function() {
      this.enableOrDisableButtons(), this.updateRowLabels(), this.setCurrentPageLabel(), this.setTotalLabels();
    }, t.prototype.onBtFirst = function() {
      this.previousAndFirstButtonsDisabled || this.paginationProxy.goToFirstPage();
    }, t.prototype.setCurrentPageLabel = function() {
      var e = this.paginationProxy.getTotalPages() > 0, r = this.paginationProxy.getCurrentPage(), o = e ? r + 1 : 0;
      this.lbCurrent.innerHTML = this.formatNumber(o);
    }, t.prototype.formatNumber = function(e) {
      var r = this.gridOptionsWrapper.getPaginationNumberFormatterFunc();
      if (r)
        return r({ value: e });
      var o = this.gridOptionsWrapper.getLocaleTextFunc(), i = o("thousandSeparator", ","), s = o("decimalSeparator", ".");
      return va(e, i, s);
    }, t.prototype.getTemplate = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = e("page", "Page"), o = e("to", "to"), i = e("of", "of"), s = e("firstPage", "First Page"), a = e("previousPage", "Previous Page"), l = e("nextPage", "Next Page"), u = e("lastPage", "Last Page"), p = this.getCompId();
      return (
        /* html */
        '<div class="ag-paging-panel ag-unselectable" id="ag-' + p + `">
                <span class="ag-paging-row-summary-panel" role="status">
                    <span id="ag-` + p + `-first-row" ref="lbFirstRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + p + '-to">' + o + `</span>
                    <span id="ag-` + p + `-last-row" ref="lbLastRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + p + '-of">' + i + `</span>
                    <span id="ag-` + p + `-row-count" ref="lbRecordCount" class="ag-paging-row-summary-panel-number"></span>
                </span>
                <span class="ag-paging-page-summary-panel" role="presentation">
                    <div ref="btFirst" class="ag-paging-button" role="button" aria-label="` + s + `" tabindex="0"></div>
                    <div ref="btPrevious" class="ag-paging-button" role="button" aria-label="` + a + `" tabindex="0"></div>
                    <span class="ag-paging-description" role="status">
                        <span id="ag-` + p + '-start-page">' + r + `</span>
                        <span id="ag-` + p + `-start-page-number" ref="lbCurrent" class="ag-paging-number"></span>
                        <span id="ag-` + p + '-of-page">' + i + `</span>
                        <span id="ag-` + p + `-of-page-number" ref="lbTotal" class="ag-paging-number"></span>
                    </span>
                    <div ref="btNext" class="ag-paging-button" role="button" aria-label="` + l + `" tabindex="0"></div>
                    <div ref="btLast" class="ag-paging-button" role="button" aria-label="` + u + `" tabindex="0"></div>
                </span>
            </div>`
      );
    }, t.prototype.onBtNext = function() {
      this.nextButtonDisabled || this.paginationProxy.goToNextPage();
    }, t.prototype.onBtPrevious = function() {
      this.previousAndFirstButtonsDisabled || this.paginationProxy.goToPreviousPage();
    }, t.prototype.onBtLast = function() {
      this.lastButtonDisabled || this.paginationProxy.goToLastPage();
    }, t.prototype.enableOrDisableButtons = function() {
      var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.isLastPageFound(), o = this.paginationProxy.getTotalPages();
      this.previousAndFirstButtonsDisabled = e === 0, this.btFirst.classList.toggle("ag-disabled", this.previousAndFirstButtonsDisabled), kr(this.btFirst, this.previousAndFirstButtonsDisabled), this.btPrevious.classList.toggle("ag-disabled", this.previousAndFirstButtonsDisabled), kr(this.btPrevious, this.previousAndFirstButtonsDisabled);
      var i = this.isZeroPagesToDisplay(), s = r && e === o - 1;
      this.nextButtonDisabled = s || i, this.btNext.classList.toggle("ag-disabled", this.nextButtonDisabled), kr(this.btNext, this.nextButtonDisabled), this.lastButtonDisabled = !r || i || e === o - 1, this.btLast.classList.toggle("ag-disabled", this.lastButtonDisabled), kr(this.btLast, this.lastButtonDisabled);
    }, t.prototype.updateRowLabels = function() {
      var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.getPageSize(), o = this.paginationProxy.isLastPageFound(), i = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null, s, a;
      this.isZeroPagesToDisplay() ? s = a = 0 : (s = r * e + 1, a = s + r - 1, o && a > i && (a = i)), this.lbFirstRowOnPage.innerHTML = this.formatNumber(s), this.rowNodeBlockLoader.isLoading() ? this.lbLastRowOnPage.innerHTML = "?" : this.lbLastRowOnPage.innerHTML = this.formatNumber(a);
    }, t.prototype.isZeroPagesToDisplay = function() {
      var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages();
      return e && r === 0;
    }, t.prototype.setTotalLabels = function() {
      var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages(), o = e ? this.paginationProxy.getMasterRowCount() : null;
      if (o === 1) {
        var i = this.paginationProxy.getRow(0), s = i && i.group && !(i.groupData || i.aggData);
        if (s) {
          this.setTotalLabelsToZero();
          return;
        }
      }
      if (e)
        this.lbTotal.innerHTML = this.formatNumber(r), this.lbRecordCount.innerHTML = this.formatNumber(o);
      else {
        var a = this.gridOptionsWrapper.getLocaleTextFunc()("more", "more");
        this.lbTotal.innerHTML = a, this.lbRecordCount.innerHTML = a;
      }
    }, t.prototype.setTotalLabelsToZero = function() {
      this.lbFirstRowOnPage.innerHTML = this.formatNumber(0), this.lbCurrent.innerHTML = this.formatNumber(0), this.lbLastRowOnPage.innerHTML = this.formatNumber(0), this.lbTotal.innerHTML = this.formatNumber(0), this.lbRecordCount.innerHTML = this.formatNumber(0);
    }, Et([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Et([
      h("rowNodeBlockLoader")
    ], t.prototype, "rowNodeBlockLoader", void 0), Et([
      T("btFirst")
    ], t.prototype, "btFirst", void 0), Et([
      T("btPrevious")
    ], t.prototype, "btPrevious", void 0), Et([
      T("btNext")
    ], t.prototype, "btNext", void 0), Et([
      T("btLast")
    ], t.prototype, "btLast", void 0), Et([
      T("lbRecordCount")
    ], t.prototype, "lbRecordCount", void 0), Et([
      T("lbFirstRowOnPage")
    ], t.prototype, "lbFirstRowOnPage", void 0), Et([
      T("lbLastRowOnPage")
    ], t.prototype, "lbLastRowOnPage", void 0), Et([
      T("lbCurrent")
    ], t.prototype, "lbCurrent", void 0), Et([
      T("lbTotal")
    ], t.prototype, "lbTotal", void 0), Et([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var _m = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wm = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ou = 50, Kc = (
  /** @class */
  function(n) {
    _m(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.polyfillFunctions = [], e;
    }
    return t.prototype.observeResize = function(e, r) {
      var o = this, i = this.gridOptionsWrapper.getDocument(), s = i.defaultView || window, a = ur(r, ou), l = function() {
        var d = new s.ResizeObserver(a);
        return d.observe(e), function() {
          return d.disconnect();
        };
      }, u = function() {
        var d = Is(e), f = Fs(e), g = !0, y = function() {
          if (g) {
            var C = Is(e), m = Fs(e), _ = C !== d || m !== f;
            _ && (d = C, f = m, r()), o.doNextPolyfillTurn(y);
          }
        };
        return y(), function() {
          return g = !1;
        };
      }, p = this.gridOptionsWrapper.isSuppressBrowserResizeObserver(), c = !!s.ResizeObserver;
      return c && !p ? l() : u();
    }, t.prototype.doNextPolyfillTurn = function(e) {
      this.polyfillFunctions.push(e), this.schedulePolyfill();
    }, t.prototype.schedulePolyfill = function() {
      var e = this;
      if (!this.polyfillScheduled) {
        var r = function() {
          var o = e.polyfillFunctions;
          e.polyfillScheduled = !1, e.polyfillFunctions = [], o.forEach(function(i) {
            return i();
          });
        };
        this.polyfillScheduled = !0, this.getFrameworkOverrides().setTimeout(r, ou);
      }
    }, t = wm([
      U("resizeObserverService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Em = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, zr;
(function(n) {
  n[n.Loading = 0] = "Loading", n[n.NoRows = 1] = "NoRows";
})(zr || (zr = {}));
var Rm = (
  /** @class */
  function(n) {
    Em(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.inProgress = !1, e.destroyRequested = !1, e;
    }
    return t.prototype.updateLayoutClasses = function(e, r) {
      var o = this.eOverlayWrapper.classList;
      o.toggle(Le.AUTO_HEIGHT, r.autoHeight), o.toggle(Le.NORMAL, r.normal), o.toggle(Le.PRINT, r.print);
    }, t.prototype.postConstruct = function() {
      this.createManagedBean(new Fa(this)), this.setDisplayed(!1), this.addManagedListener(this.eventService, v.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData() && this.showLoadingOverlay(), this.gridApi.registerOverlayWrapperComp(this);
    }, t.prototype.setWrapperTypeClass = function(e) {
      var r = this.eOverlayWrapper.classList;
      r.toggle("ag-overlay-loading-wrapper", e === zr.Loading), r.toggle("ag-overlay-no-rows-wrapper", e === zr.NoRows);
    }, t.prototype.showLoadingOverlay = function() {
      if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {
        var e = {
          api: this.gridOptionsWrapper.getApi()
        }, r = this.userComponentFactory.getLoadingOverlayCompDetails(e), o = r.newAgStackInstance();
        this.showOverlay(o, zr.Loading);
      }
    }, t.prototype.showNoRowsOverlay = function() {
      if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {
        var e = {
          api: this.gridOptionsWrapper.getApi()
        }, r = this.userComponentFactory.getNoRowsOverlayCompDetails(e), o = r.newAgStackInstance();
        this.showOverlay(o, zr.NoRows);
      }
    }, t.prototype.showOverlay = function(e, r) {
      var o = this;
      this.inProgress || (this.setWrapperTypeClass(r), this.destroyActiveOverlay(), this.inProgress = !0, e && e.then(function(i) {
        o.inProgress = !1, o.eOverlayWrapper.appendChild(i.getGui()), o.activeOverlay = i, o.destroyRequested && (o.destroyRequested = !1, o.destroyActiveOverlay());
      }), this.setDisplayed(!0));
    }, t.prototype.destroyActiveOverlay = function() {
      if (this.inProgress) {
        this.destroyRequested = !0;
        return;
      }
      this.activeOverlay && (this.activeOverlay = this.getContext().destroyBean(this.activeOverlay), Ct(this.eOverlayWrapper));
    }, t.prototype.hideOverlay = function() {
      this.destroyActiveOverlay(), this.setDisplayed(!1);
    }, t.prototype.destroy = function() {
      this.destroyActiveOverlay(), n.prototype.destroy.call(this);
    }, t.prototype.showOrHideOverlay = function() {
      var e = this.paginationProxy.isEmpty(), r = this.gridOptionsWrapper.isSuppressNoRowsOverlay();
      e && !r ? this.showNoRowsOverlay() : this.hideOverlay();
    }, t.prototype.onRowDataChanged = function() {
      this.showOrHideOverlay();
    }, t.prototype.onNewColumnsLoaded = function() {
      this.columnModel.isReady() && !this.paginationProxy.isEmpty() && this.hideOverlay();
    }, t.TEMPLATE = `
        <div class="ag-overlay" aria-hidden="true">
            <div class="ag-overlay-panel">
                <div class="ag-overlay-wrapper" ref="eOverlayWrapper"></div>
            </div>
        </div>`, xr([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), xr([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), xr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), xr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), xr([
      T("eOverlayWrapper")
    ], t.prototype, "eOverlayWrapper", void 0), xr([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Sm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), er = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Yc = (
  /** @class */
  function(n) {
    Sm(t, n);
    function t(e) {
      e === void 0 && (e = {});
      var r = n.call(this, t.getTemplate(e)) || this;
      r.suppressEnabledCheckbox = !0, r.suppressOpenCloseIcons = !1;
      var o = e.title, i = e.enabled, s = e.items, a = e.suppressEnabledCheckbox, l = e.suppressOpenCloseIcons;
      return r.title = o, r.cssIdentifier = e.cssIdentifier || "default", r.enabled = i ?? !0, r.items = s || [], r.alignItems = e.alignItems || "center", a != null && (r.suppressEnabledCheckbox = a), l != null && (r.suppressOpenCloseIcons = l), r;
    }
    return t.getTemplate = function(e) {
      var r = e.cssIdentifier || "default", o = e.direction || "vertical";
      return (
        /* html */
        '<div class="ag-group ag-' + r + `-group" role="presentation">
            <div class="ag-group-title-bar ag-` + r + `-group-title-bar ag-unselectable" ref="eTitleBar" role="button">
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupOpenedIcon" role="presentation"></span>
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupClosedIcon" role="presentation"></span>
                <span ref="eTitle" class="ag-group-title ag-` + r + `-group-title"></span>
            </div>
            <div ref="eToolbar" class="ag-group-toolbar ag-` + r + `-group-toolbar">
                <ag-checkbox ref="cbGroupEnabled"></ag-checkbox>
            </div>
            <div ref="eContainer" class="ag-group-container ag-group-container-` + o + " ag-" + r + `-group-container"></div>
        </div>`
      );
    }, t.prototype.postConstruct = function() {
      if (this.items.length) {
        var e = this.items;
        this.items = [], this.addItems(e);
      }
      var r = this.gridOptionsWrapper.getLocaleTextFunc();
      this.cbGroupEnabled.setLabel(r("enabled", "Enabled")), this.title && this.setTitle(this.title), this.enabled && this.setEnabled(this.enabled), this.setAlignItems(this.alignItems), this.hideEnabledCheckbox(this.suppressEnabledCheckbox), this.hideOpenCloseIcons(this.suppressOpenCloseIcons), this.setupExpandContract(), this.refreshAriaStatus(), this.refreshChildDisplay();
    }, t.prototype.setupExpandContract = function() {
      var e = this;
      this.eGroupClosedIcon.appendChild(Ot("columnSelectClosed", this.gridOptionsWrapper, null)), this.eGroupOpenedIcon.appendChild(Ot("columnSelectOpen", this.gridOptionsWrapper, null)), this.addManagedListener(this.eTitleBar, "click", function() {
        return e.toggleGroupExpand();
      }), this.addManagedListener(this.eTitleBar, "keydown", function(r) {
        switch (r.key) {
          case P.ENTER:
          case P.SPACE:
            r.preventDefault(), e.toggleGroupExpand();
            break;
          case P.RIGHT:
          case P.LEFT:
            r.preventDefault(), e.toggleGroupExpand(r.key === P.RIGHT);
            break;
        }
      });
    }, t.prototype.refreshAriaStatus = function() {
      this.suppressOpenCloseIcons || vt(this.eTitleBar, this.expanded);
    }, t.prototype.refreshChildDisplay = function() {
      var e = !this.suppressOpenCloseIcons;
      Ee(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox), Ee(this.eGroupOpenedIcon, e && this.expanded), Ee(this.eGroupClosedIcon, e && !this.expanded);
    }, t.prototype.isExpanded = function() {
      return this.expanded;
    }, t.prototype.setAlignItems = function(e) {
      this.alignItems !== e && this.removeCssClass("ag-group-item-alignment-" + this.alignItems), this.alignItems = e;
      var r = "ag-group-item-alignment-" + this.alignItems;
      return this.addCssClass(r), this;
    }, t.prototype.toggleGroupExpand = function(e) {
      return this.suppressOpenCloseIcons ? (this.expanded = !0, this.refreshChildDisplay(), Ee(this.eContainer, !0), this) : (e = e ?? !this.expanded, this.expanded === e ? this : (this.expanded = e, this.refreshAriaStatus(), this.refreshChildDisplay(), Ee(this.eContainer, e), this.dispatchEvent({ type: this.expanded ? t.EVENT_EXPANDED : t.EVENT_COLLAPSED }), this));
    }, t.prototype.addItems = function(e) {
      var r = this;
      e.forEach(function(o) {
        return r.addItem(o);
      });
    }, t.prototype.addItem = function(e) {
      var r = this.eContainer, o = e instanceof ee ? e.getGui() : e;
      o.classList.add("ag-group-item", "ag-" + this.cssIdentifier + "-group-item"), r.appendChild(o), this.items.push(o);
    }, t.prototype.hideItem = function(e, r) {
      var o = this.items[r];
      o.classList.toggle("ag-hidden", e);
    }, t.prototype.setTitle = function(e) {
      return this.eTitle.innerText = e, this;
    }, t.prototype.addCssClassToTitleBar = function(e) {
      this.eTitleBar.classList.add(e);
    }, t.prototype.setEnabled = function(e, r) {
      return this.enabled = e, this.refreshDisabledStyles(), this.toggleGroupExpand(e), r || this.cbGroupEnabled.setValue(e), this;
    }, t.prototype.isEnabled = function() {
      return this.enabled;
    }, t.prototype.onEnableChange = function(e) {
      var r = this;
      return this.cbGroupEnabled.onValueChange(function(o) {
        r.setEnabled(o, !0), e(o);
      }), this;
    }, t.prototype.hideEnabledCheckbox = function(e) {
      return this.suppressEnabledCheckbox = e, this.refreshChildDisplay(), this.refreshDisabledStyles(), this;
    }, t.prototype.hideOpenCloseIcons = function(e) {
      return this.suppressOpenCloseIcons = e, e && this.toggleGroupExpand(!0), this;
    }, t.prototype.refreshDisabledStyles = function() {
      this.addOrRemoveCssClass("ag-disabled", !this.enabled), this.suppressEnabledCheckbox && !this.enabled ? (this.eTitleBar.classList.add("ag-disabled-group-title-bar"), this.eTitleBar.removeAttribute("tabindex")) : (this.eTitleBar.classList.remove("ag-disabled-group-title-bar"), this.eTitleBar.setAttribute("tabindex", "0")), this.eContainer.classList.toggle("ag-disabled-group-container", !this.enabled);
    }, t.EVENT_EXPANDED = "expanded", t.EVENT_COLLAPSED = "collapsed", er([
      T("eTitleBar")
    ], t.prototype, "eTitleBar", void 0), er([
      T("eGroupOpenedIcon")
    ], t.prototype, "eGroupOpenedIcon", void 0), er([
      T("eGroupClosedIcon")
    ], t.prototype, "eGroupClosedIcon", void 0), er([
      T("eToolbar")
    ], t.prototype, "eToolbar", void 0), er([
      T("cbGroupEnabled")
    ], t.prototype, "cbGroupEnabled", void 0), er([
      T("eTitle")
    ], t.prototype, "eTitle", void 0), er([
      T("eContainer")
    ], t.prototype, "eContainer", void 0), er([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Om = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nu = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, qc = "ag-resizer-wrapper", Tm = (
  /* html */
  '<div class="' + qc + `">
        <div ref="eTopLeftResizer" class="ag-resizer ag-resizer-topLeft"></div>
        <div ref="eTopResizer" class="ag-resizer ag-resizer-top"></div>
        <div ref="eTopRightResizer" class="ag-resizer ag-resizer-topRight"></div>
        <div ref="eRightResizer" class="ag-resizer ag-resizer-right"></div>
        <div ref="eBottomRightResizer" class="ag-resizer ag-resizer-bottomRight"></div>
        <div ref="eBottomResizer" class="ag-resizer ag-resizer-bottom"></div>
        <div ref="eBottomLeftResizer" class="ag-resizer ag-resizer-bottomLeft"></div>
        <div ref="eLeftResizer" class="ag-resizer ag-resizer-left"></div>
    </div>`
), Xc = (
  /** @class */
  function(n) {
    Om(t, n);
    function t(e, r) {
      var o = n.call(this) || this;
      return o.element = e, o.dragStartPosition = {
        x: 0,
        y: 0
      }, o.position = {
        x: 0,
        y: 0
      }, o.lastSize = {
        width: -1,
        height: -1
      }, o.positioned = !1, o.resizersAdded = !1, o.resizeListeners = [], o.boundaryEl = null, o.isResizing = !1, o.isMoving = !1, o.resizable = {}, o.movable = !1, o.currentResizer = null, o.config = Object.assign({}, { popup: !1 }, r), o;
    }
    return t.prototype.center = function() {
      var e = this.offsetParent, r = e.clientHeight, o = e.clientWidth, i = o / 2 - this.getWidth() / 2, s = r / 2 - this.getHeight() / 2;
      this.offsetElement(i, s);
    }, t.prototype.initialisePosition = function() {
      var e = this.config, r = e.centered, o = e.forcePopupParentAsOffsetParent, i = e.minWidth, s = e.width, a = e.minHeight, l = e.height, u = e.x, p = e.y;
      this.offsetParent || this.setOffsetParent();
      var c = 0, d = 0, f = !!this.element.offsetParent;
      if (f) {
        var g = this.findBoundaryElement(), y = window.getComputedStyle(g);
        if (y.minWidth != null) {
          var C = g.offsetWidth - this.element.offsetWidth;
          d = parseInt(y.minWidth, 10) - C;
        }
        if (y.minHeight != null) {
          var m = g.offsetHeight - this.element.offsetHeight;
          c = parseInt(y.minHeight, 10) - m;
        }
      }
      if (this.minHeight = a || c, this.minWidth = i || d, s && this.setWidth(s), l && this.setHeight(l), (!s || !l) && this.refreshSize(), r)
        this.center();
      else if (u || p)
        this.offsetElement(u, p);
      else if (f && o && this.boundaryEl) {
        var _ = parseFloat(this.boundaryEl.style.top), E = parseFloat(this.boundaryEl.style.left);
        this.offsetElement(isNaN(E) ? 0 : E, isNaN(_) ? 0 : _);
      }
      this.positioned = !!this.offsetParent;
    }, t.prototype.isPositioned = function() {
      return this.positioned;
    }, t.prototype.getPosition = function() {
      return this.position;
    }, t.prototype.setMovable = function(e, r) {
      if (!(!this.config.popup || e === this.movable)) {
        this.movable = e;
        var o = this.moveElementDragListener || {
          eElement: r,
          onDragStart: this.onMoveStart.bind(this),
          onDragging: this.onMove.bind(this),
          onDragStop: this.onMoveEnd.bind(this)
        };
        e ? (this.dragService.addDragSource(o), this.moveElementDragListener = o) : (this.dragService.removeDragSource(o), this.moveElementDragListener = void 0);
      }
    }, t.prototype.setResizable = function(e) {
      var r = this;
      if (this.clearResizeListeners(), e ? this.addResizers() : this.removeResizers(), typeof e == "boolean") {
        if (e === !1)
          return;
        e = {
          topLeft: e,
          top: e,
          topRight: e,
          right: e,
          bottomRight: e,
          bottom: e,
          bottomLeft: e,
          left: e
        };
      }
      Object.keys(e).forEach(function(o) {
        var i = e, s = !!i[o], a = r.getResizerElement(o), l = {
          dragStartPixels: 0,
          eElement: a,
          onDragStart: function(u) {
            return r.onResizeStart(u, o);
          },
          onDragging: r.onResize.bind(r),
          onDragStop: function(u) {
            return r.onResizeEnd(u, o);
          }
        };
        (!!r.resizable[o] !== s || !r.isAlive() && !s) && (s ? (r.dragService.addDragSource(l), r.resizeListeners.push(l), a.style.pointerEvents = "all") : a.style.pointerEvents = "none");
      });
    }, t.prototype.removeSizeFromEl = function() {
      this.element.style.removeProperty("height"), this.element.style.removeProperty("width"), this.element.style.removeProperty("flex");
    }, t.prototype.restoreLastSize = function() {
      this.element.style.flex = "0 0 auto";
      var e = this.lastSize, r = e.height, o = e.width;
      o !== -1 && (this.element.style.width = o + "px"), r !== -1 && (this.element.style.height = r + "px");
    }, t.prototype.getHeight = function() {
      return this.element.offsetHeight;
    }, t.prototype.setHeight = function(e) {
      var r = this.config.popup, o = this.element, i = !1;
      if (typeof e == "string" && e.indexOf("%") !== -1)
        wr(o, e), e = ia(o), i = !0;
      else if (this.positioned) {
        var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect();
        e = Math.max(this.minHeight, e);
        var l = this.offsetParent.clientHeight, u = r ? this.position.y : s.top, p = r ? 0 : a.top;
        l && e + u > l + p && (e = l - u);
      }
      this.getHeight() !== e && (i ? (o.style.maxHeight = "unset", o.style.minHeight = "unset") : r ? wr(o, e) : (o.style.height = e + "px", o.style.flex = "0 0 auto", this.lastSize.height = typeof e == "number" ? e : parseFloat(e)));
    }, t.prototype.getWidth = function() {
      return this.element.offsetWidth;
    }, t.prototype.setWidth = function(e) {
      var r = this.element, o = this.config.popup, i = !1;
      if (typeof e == "string" && e.indexOf("%") !== -1)
        zt(r, e), e = ni(r), i = !0;
      else if (this.positioned) {
        e = Math.max(this.minWidth, e);
        var s = this.offsetParent.clientWidth, a = o ? this.position.x : this.element.getBoundingClientRect().left;
        s && e + a > s && (e = s - a);
      }
      this.getWidth() !== e && (i ? (r.style.maxWidth = "unset", r.style.minWidth = "unset") : this.config.popup ? zt(r, e) : (r.style.width = e + "px", r.style.flex = " unset", this.lastSize.width = typeof e == "number" ? e : parseFloat(e)));
    }, t.prototype.offsetElement = function(e, r) {
      e === void 0 && (e = 0), r === void 0 && (r = 0);
      var o = this.config.forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;
      this.popupService.positionPopup({
        ePopup: o,
        x: e,
        y: r,
        keepWithinBounds: !0
      }), this.setPosition(parseFloat(o.style.left), parseFloat(o.style.top));
    }, t.prototype.setPosition = function(e, r) {
      this.position.x = e, this.position.y = r;
    }, t.prototype.updateDragStartPosition = function(e, r) {
      this.dragStartPosition = { x: e, y: r };
    }, t.prototype.calculateMouseMovement = function(e) {
      var r = e.e, o = e.isLeft, i = e.isTop, s = e.anywhereWithin, a = e.topBuffer, l = r.clientX - this.dragStartPosition.x, u = r.clientY - this.dragStartPosition.y, p = this.shouldSkipX(r, !!o, !!s, l) ? 0 : l, c = this.shouldSkipY(r, !!i, a, u) ? 0 : u;
      return { movementX: p, movementY: c };
    }, t.prototype.shouldSkipX = function(e, r, o, i) {
      var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.x : s.left, p = u <= 0 && a.left >= e.clientX || a.right <= e.clientX && a.right <= l.right;
      return p ? !0 : (r ? p = // skip if we are moving to the left and the cursor
      // is positioned to the right of the left side anchor
      i < 0 && e.clientX > u + a.left || // skip if we are moving to the right and the cursor
      // is positioned to the left of the dialog
      i > 0 && e.clientX < u + a.left : o ? p = i < 0 && e.clientX > l.right || i > 0 && e.clientX < u + a.left : p = // if the movement is bound to the right side of the dialog
      // we skip if we are moving to the left and the cursor
      // is to the right of the dialog
      i < 0 && e.clientX > l.right || // or skip if we are moving to the right and the cursor
      // is to the left of the right side anchor
      i > 0 && e.clientX < l.right, p);
    }, t.prototype.shouldSkipY = function(e, r, o, i) {
      o === void 0 && (o = 0);
      var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.y : s.top, p = u <= 0 && a.top >= e.clientY || a.bottom <= e.clientY && a.bottom <= l.bottom;
      return p ? !0 : (r ? p = // skip if we are moving to towards top and the cursor is
      // below the top anchor + topBuffer
      // note: topBuffer is used when moving the dialog using the title bar
      i < 0 && e.clientY > u + a.top + o || // skip if we are moving to the bottom and the cursor is
      // above the top anchor
      i > 0 && e.clientY < u + a.top : p = // skip if we are moving towards the top and the cursor
      // is below the bottom anchor
      i < 0 && e.clientY > l.bottom || // skip if we are moving towards the bottom and the cursor
      // is above the bottom anchor
      i > 0 && e.clientY < l.bottom, p);
    }, t.prototype.createResizeMap = function() {
      var e = this.element;
      this.resizerMap = {
        topLeft: { element: e.querySelector("[ref=eTopLeftResizer]") },
        top: { element: e.querySelector("[ref=eTopResizer]") },
        topRight: { element: e.querySelector("[ref=eTopRightResizer]") },
        right: { element: e.querySelector("[ref=eRightResizer]") },
        bottomRight: { element: e.querySelector("[ref=eBottomRightResizer]") },
        bottom: { element: e.querySelector("[ref=eBottomResizer]") },
        bottomLeft: { element: e.querySelector("[ref=eBottomLeftResizer]") },
        left: { element: e.querySelector("[ref=eLeftResizer]") }
      };
    }, t.prototype.addResizers = function() {
      if (!this.resizersAdded) {
        var e = this.element;
        if (e) {
          var r = new DOMParser(), o = r.parseFromString(Tm, "text/html").body;
          e.appendChild(o.firstChild), this.createResizeMap(), this.resizersAdded = !0;
        }
      }
    }, t.prototype.removeResizers = function() {
      this.resizerMap = void 0;
      var e = this.element.querySelector("." + qc);
      e && this.element.removeChild(e), this.resizersAdded = !1;
    }, t.prototype.getResizerElement = function(e) {
      return this.resizerMap[e].element;
    }, t.prototype.onResizeStart = function(e, r) {
      this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.currentResizer = {
        isTop: !!r.match(/top/i),
        isRight: !!r.match(/right/i),
        isBottom: !!r.match(/bottom/i),
        isLeft: !!r.match(/left/i)
      }, this.element.classList.add("ag-resizing"), this.resizerMap[r].element.classList.add("ag-active");
      var o = this.config, i = o.popup, s = o.forcePopupParentAsOffsetParent;
      !i && !s && this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop), this.isResizing = !0, this.updateDragStartPosition(e.clientX, e.clientY);
    }, t.prototype.getSiblings = function() {
      var e = this.element, r = e.parentElement;
      return r ? Array.prototype.slice.call(r.children).filter(function(o) {
        return !o.classList.contains("ag-hidden");
      }) : null;
    }, t.prototype.getMinSizeOfSiblings = function() {
      for (var e = this.getSiblings() || [], r = 0, o = 0, i = 0; i < e.length; i++) {
        var s = e[i], a = !!s.style.flex && s.style.flex !== "0 0 auto";
        if (s !== this.element) {
          var l = this.minHeight || 0, u = this.minWidth || 0;
          if (a) {
            var p = window.getComputedStyle(s);
            p.minHeight && (l = parseInt(p.minHeight, 10)), p.minWidth && (u = parseInt(p.minWidth, 10));
          } else
            l = s.offsetHeight, u = s.offsetWidth;
          r += l, o += u;
        }
      }
      return { height: r, width: o };
    }, t.prototype.applySizeToSiblings = function(e) {
      var r = null, o = this.getSiblings();
      if (o) {
        for (var i = 0; i < o.length; i++) {
          var s = o[i];
          s !== r && (e ? s.style.height = s.offsetHeight + "px" : s.style.width = s.offsetWidth + "px", s.style.flex = "0 0 auto", s === this.element && (r = o[i + 1]));
        }
        r && (r.style.removeProperty("height"), r.style.removeProperty("min-height"), r.style.removeProperty("max-height"), r.style.flex = "1 1 auto");
      }
    }, t.prototype.onResize = function(e) {
      if (!(!this.isResizing || !this.currentResizer)) {
        var r = this.config, o = r.popup, i = r.forcePopupParentAsOffsetParent, s = this.currentResizer, a = s.isTop, l = s.isRight, u = s.isBottom, p = s.isLeft, c = l || p, d = u || a, f = this.calculateMouseMovement({ e, isLeft: p, isTop: a }), g = f.movementX, y = f.movementY, C = this.position.x, m = this.position.y, _ = 0, E = 0;
        if (c && g) {
          var S = p ? -1 : 1, b = this.getWidth(), x = b + g * S, I = !1;
          p && (_ = b - x, (C + _ <= 0 || x <= this.minWidth) && (I = !0, _ = 0)), I || this.setWidth(x);
        }
        if (d && y) {
          var S = a ? -1 : 1, A = this.getHeight(), M = A + y * S, V = !1;
          a ? (E = A - M, (m + E <= 0 || M <= this.minHeight) && (V = !0, E = 0)) : !this.config.popup && !this.config.forcePopupParentAsOffsetParent && A < M && this.getMinSizeOfSiblings().height + M > this.element.parentElement.offsetHeight && (V = !0), V || this.setHeight(M);
        }
        this.updateDragStartPosition(e.clientX, e.clientY), ((o || i) && _ || E) && this.offsetElement(C + _, m + E);
      }
    }, t.prototype.onResizeEnd = function(e, r) {
      this.isResizing = !1, this.currentResizer = null, this.boundaryEl = null;
      var o = {
        type: "resize",
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi()
      };
      this.element.classList.remove("ag-resizing"), this.resizerMap[r].element.classList.remove("ag-active"), this.dispatchEvent(o);
    }, t.prototype.refreshSize = function() {
      var e = this.element;
      this.config.popup && (this.config.width || this.setWidth(e.offsetWidth), this.config.height || this.setHeight(e.offsetHeight));
    }, t.prototype.onMoveStart = function(e) {
      this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.isMoving = !0, this.element.classList.add("ag-moving"), this.updateDragStartPosition(e.clientX, e.clientY);
    }, t.prototype.onMove = function(e) {
      if (this.isMoving) {
        var r = this.position, o = r.x, i = r.y, s;
        this.config.calculateTopBuffer && (s = this.config.calculateTopBuffer());
        var a = this.calculateMouseMovement({
          e,
          isTop: !0,
          anywhereWithin: !0,
          topBuffer: s
        }), l = a.movementX, u = a.movementY;
        this.offsetElement(o + l, i + u), this.updateDragStartPosition(e.clientX, e.clientY);
      }
    }, t.prototype.onMoveEnd = function() {
      this.isMoving = !1, this.boundaryEl = null, this.element.classList.remove("ag-moving");
    }, t.prototype.setOffsetParent = function() {
      this.config.forcePopupParentAsOffsetParent ? this.offsetParent = this.popupService.getPopupParent() : this.offsetParent = this.element.offsetParent;
    }, t.prototype.findBoundaryElement = function() {
      for (var e = this.element; e; ) {
        if (window.getComputedStyle(e).position !== "static")
          return e;
        e = e.parentElement;
      }
      return this.element;
    }, t.prototype.clearResizeListeners = function() {
      for (; this.resizeListeners.length; ) {
        var e = this.resizeListeners.pop();
        this.dragService.removeDragSource(e);
      }
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.moveElementDragListener && this.dragService.removeDragSource(this.moveElementDragListener), this.clearResizeListeners(), this.removeResizers();
    }, nu([
      h("popupService")
    ], t.prototype, "popupService", void 0), nu([
      h("dragService")
    ], t.prototype, "dragService", void 0), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Pm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ao = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ia = (
  /** @class */
  function(n) {
    Pm(t, n);
    function t(e) {
      var r = n.call(this, t.getTemplate(e)) || this;
      return r.closable = !0, r.config = e, r;
    }
    return t.getTemplate = function(e) {
      var r = e && e.cssIdentifier || "default";
      return (
        /* html */
        '<div class="ag-panel ag-' + r + `-panel" tabindex="-1">
            <div ref="eTitleBar" class="ag-panel-title-bar ag-` + r + `-panel-title-bar ag-unselectable">
                <span ref="eTitle" class="ag-panel-title-bar-title ag-` + r + `-panel-title-bar-title"></span>
                <div ref="eTitleBarButtons" class="ag-panel-title-bar-buttons ag-` + r + `-panel-title-bar-buttons"></div>
            </div>
            <div ref="eContentWrapper" class="ag-panel-content-wrapper ag-` + r + `-panel-content-wrapper"></div>
        </div>`
      );
    }, t.prototype.postConstruct = function() {
      var e = this, r = this.config, o = r.component, i = r.closable, s = r.hideTitleBar, a = r.title, l = r.minWidth, u = l === void 0 ? 250 : l, p = r.width, c = r.minHeight, d = c === void 0 ? 250 : c, f = r.height, g = r.centered, y = r.popup, C = r.x, m = r.y;
      this.positionableFeature = new Xc(this.getGui(), {
        minWidth: u,
        width: p,
        minHeight: d,
        height: f,
        centered: g,
        x: C,
        y: m,
        popup: y,
        calculateTopBuffer: function() {
          return e.positionableFeature.getHeight() - e.getBodyHeight();
        }
      }), this.createManagedBean(this.positionableFeature);
      var _ = this.getGui();
      o && this.setBodyComponent(o), s ? this.eTitleBar.classList.add("ag-hidden") : (a && this.setTitle(a), this.setClosable(i ?? this.closable)), this.addManagedListener(this.eTitleBar, "mousedown", function(E) {
        var S = e.gridOptionsWrapper.getDocument();
        if (_.contains(E.relatedTarget) || _.contains(S.activeElement) || e.eTitleBarButtons.contains(E.target)) {
          E.preventDefault();
          return;
        }
        var b = e.eContentWrapper.querySelector("button, [href], input, select, textarea, [tabindex]");
        b && b.focus();
      }), !(y && this.positionableFeature.isPositioned()) && (this.renderComponent && this.renderComponent(), this.positionableFeature.initialisePosition(), this.eContentWrapper.style.height = "0");
    }, t.prototype.renderComponent = function() {
      var e = this, r = this.getGui();
      r.focus(), this.close = function() {
        r.parentElement.removeChild(r), e.destroy();
      };
    }, t.prototype.getHeight = function() {
      return this.positionableFeature.getHeight();
    }, t.prototype.setHeight = function(e) {
      this.positionableFeature.setHeight(e);
    }, t.prototype.getWidth = function() {
      return this.positionableFeature.getWidth();
    }, t.prototype.setWidth = function(e) {
      this.positionableFeature.setWidth(e);
    }, t.prototype.setClosable = function(e) {
      if (e !== this.closable && (this.closable = e), e) {
        var r = this.closeButtonComp = new ee(t.CLOSE_BTN_TEMPLATE);
        this.getContext().createBean(r);
        var o = r.getGui(), i = xe("close", this.gridOptionsWrapper);
        i.classList.add("ag-panel-title-bar-button-icon"), o.appendChild(i), this.addTitleBarButton(r), r.addManagedListener(o, "click", this.onBtClose.bind(this));
      } else if (this.closeButtonComp) {
        var o = this.closeButtonComp.getGui();
        o.parentElement.removeChild(o), this.closeButtonComp = this.destroyBean(this.closeButtonComp);
      }
    }, t.prototype.setBodyComponent = function(e) {
      e.setParentComponent(this), this.eContentWrapper.appendChild(e.getGui());
    }, t.prototype.addTitleBarButton = function(e, r) {
      var o = this.eTitleBarButtons, i = o.children, s = i.length;
      r == null && (r = s), r = Math.max(0, Math.min(r, s)), e.addCssClass("ag-panel-title-bar-button");
      var a = e.getGui();
      r === 0 ? o.insertAdjacentElement("afterbegin", a) : r === s ? o.insertAdjacentElement("beforeend", a) : i[r - 1].insertAdjacentElement("afterend", a), e.setParentComponent(this);
    }, t.prototype.getBodyHeight = function() {
      return Uo(this.eContentWrapper);
    }, t.prototype.getBodyWidth = function() {
      return oi(this.eContentWrapper);
    }, t.prototype.setTitle = function(e) {
      this.eTitle.innerText = e;
    }, t.prototype.onBtClose = function() {
      this.close();
    }, t.prototype.destroy = function() {
      this.closeButtonComp && (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
      var e = this.getGui();
      e && e.offsetParent && this.close(), n.prototype.destroy.call(this);
    }, t.CLOSE_BTN_TEMPLATE = '<div class="ag-button"></div>', Ao([
      T("eContentWrapper")
    ], t.prototype, "eContentWrapper", void 0), Ao([
      T("eTitleBar")
    ], t.prototype, "eTitleBar", void 0), Ao([
      T("eTitleBarButtons")
    ], t.prototype, "eTitleBarButtons", void 0), Ao([
      T("eTitle")
    ], t.prototype, "eTitle", void 0), Ao([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var bm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qn = globalThis && globalThis.__assign || function() {
  return Qn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Qn.apply(this, arguments);
}, Dm = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Ma = (
  /** @class */
  function(n) {
    bm(t, n);
    function t(e) {
      var r = n.call(this, Qn(Qn({}, e), { popup: !0 })) || this;
      return r.isMaximizable = !1, r.isMaximized = !1, r.maximizeListeners = [], r.resizeListenerDestroy = null, r.lastPosition = {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      }, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), o = this.config, i = o.movable, s = o.resizable, a = o.maximizable;
      this.addCssClass("ag-dialog"), n.prototype.postConstruct.call(this), this.addManagedListener(r, "focusin", function(l) {
        r.contains(l.relatedTarget) || e.popupService.bringPopupToFront(r);
      }), i && this.setMovable(i), a && this.setMaximizable(a), s && this.setResizable(s);
    }, t.prototype.renderComponent = function() {
      var e = this.getGui(), r = this.config, o = r.alwaysOnTop, i = r.modal, s = r.title, a = this.gridOptionsWrapper.getLocaleTextFunc(), l = this.popupService.addPopup({
        modal: i,
        eChild: e,
        closeOnEsc: !0,
        closedCallback: this.destroy.bind(this),
        alwaysOnTop: o,
        ariaLabel: s || a("ariaLabelDialog", "Dialog")
      });
      l && (this.close = l.hideFunc);
    }, t.prototype.toggleMaximize = function() {
      var e = this.positionableFeature.getPosition();
      if (this.isMaximized) {
        var r = this.lastPosition, o = r.x, i = r.y, s = r.width, a = r.height;
        this.setWidth(s), this.setHeight(a), this.positionableFeature.offsetElement(o, i);
      } else
        this.lastPosition.width = this.getWidth(), this.lastPosition.height = this.getHeight(), this.lastPosition.x = e.x, this.lastPosition.y = e.y, this.positionableFeature.offsetElement(0, 0), this.setHeight("100%"), this.setWidth("100%");
      this.isMaximized = !this.isMaximized, this.refreshMaximizeIcon();
    }, t.prototype.refreshMaximizeIcon = function() {
      Ee(this.maximizeIcon, !this.isMaximized), Ee(this.minimizeIcon, this.isMaximized);
    }, t.prototype.clearMaximizebleListeners = function() {
      this.maximizeListeners.length && (this.maximizeListeners.forEach(function(e) {
        return e();
      }), this.maximizeListeners.length = 0), this.resizeListenerDestroy && (this.resizeListenerDestroy(), this.resizeListenerDestroy = null);
    }, t.prototype.destroy = function() {
      this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp), this.clearMaximizebleListeners(), n.prototype.destroy.call(this);
    }, t.prototype.setResizable = function(e) {
      this.positionableFeature.setResizable(e);
    }, t.prototype.setMovable = function(e) {
      this.positionableFeature.setMovable(e, this.eTitleBar);
    }, t.prototype.setMaximizable = function(e) {
      var r = this;
      if (!e) {
        this.clearMaximizebleListeners(), this.maximizeButtonComp && (this.destroyBean(this.maximizeButtonComp), this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = void 0);
        return;
      }
      var o = this.eTitleBar;
      if (!(!o || e === this.isMaximizable)) {
        var i = this.maximizeButtonComp = this.createBean(new ee(
          /* html */
          '<div class="ag-dialog-button"></span>'
        )), s = i.getGui();
        s.appendChild(this.maximizeIcon = xe("maximize", this.gridOptionsWrapper)), this.maximizeIcon.classList.add("ag-panel-title-bar-button-icon"), s.appendChild(this.minimizeIcon = xe("minimize", this.gridOptionsWrapper)), this.minimizeIcon.classList.add("ag-panel-title-bar-button-icon", "ag-hidden"), i.addManagedListener(s, "click", this.toggleMaximize.bind(this)), this.addTitleBarButton(i, 0), this.maximizeListeners.push(this.addManagedListener(o, "dblclick", this.toggleMaximize.bind(this))), this.resizeListenerDestroy = this.addManagedListener(this, "resize", function() {
          r.isMaximized = !1, r.refreshMaximizeIcon();
        });
      }
    }, Dm([
      h("popupService")
    ], t.prototype, "popupService", void 0), t;
  }(Ia)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Am = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), La = (
  /** @class */
  function(n) {
    Am(t, n);
    function t(e, r, o) {
      return r === void 0 && (r = "ag-text-field"), o === void 0 && (o = "text"), n.call(this, e, r, o) || this;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.config.allowedCharPattern && this.preventDisallowedCharacters();
    }, t.prototype.setValue = function(e, r) {
      var o = n.prototype.setValue.call(this, e, r);
      return this.eInput.value !== e && (this.eInput.value = O(e) ? e : ""), o;
    }, t.prototype.preventDisallowedCharacters = function() {
      var e = new RegExp("[" + this.config.allowedCharPattern + "]"), r = function(o) {
        o.key && !e.test(o.key) && o.preventDefault();
      };
      this.addManagedListener(this.eInput, "keypress", r), this.addManagedListener(this.eInput, "paste", function(o) {
        var i, s = (i = o.clipboardData) === null || i === void 0 ? void 0 : i.getData("text");
        s && s.split("").some(function(a) {
          return !e.test(a);
        }) && o.preventDefault();
      });
    }, t;
  }(Yt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Fm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qc = (
  /** @class */
  function(n) {
    Fm(t, n);
    function t(e) {
      return n.call(this, e, "ag-text-area", null, "textarea") || this;
    }
    return t.prototype.setValue = function(e, r) {
      var o = n.prototype.setValue.call(this, e, r);
      return this.eInput.value = e, o;
    }, t.prototype.setCols = function(e) {
      return this.eInput.cols = e, this;
    }, t.prototype.setRows = function(e) {
      return this.eInput.rows = e, this;
    }, t;
  }(Yt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Im = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), dn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Jc = (
  /** @class */
  function(n) {
    Im(t, n);
    function t(e) {
      var r = n.call(this, e, t.TEMPLATE) || this;
      return r.labelAlignment = "top", r;
    }
    return t.prototype.init = function() {
      this.eSlider.addCssClass("ag-slider-field");
    }, t.prototype.onValueChange = function(e) {
      var r = this, o = jt.EVENT_CHANGED;
      return this.addManagedListener(this.eText, o, function() {
        var i = parseFloat(r.eText.getValue());
        r.eSlider.setValue(i.toString(), !0), e(i || 0);
      }), this.addManagedListener(this.eSlider, o, function() {
        var i = r.eSlider.getValue();
        r.eText.setValue(i, !0), e(parseFloat(i));
      }), this;
    }, t.prototype.setSliderWidth = function(e) {
      return this.eSlider.setWidth(e), this;
    }, t.prototype.setTextFieldWidth = function(e) {
      return this.eText.setWidth(e), this;
    }, t.prototype.setMinValue = function(e) {
      return this.eSlider.setMinValue(e), this.eText.setMin(e), this;
    }, t.prototype.setMaxValue = function(e) {
      return this.eSlider.setMaxValue(e), this.eText.setMax(e), this;
    }, t.prototype.getValue = function() {
      return this.eText.getValue();
    }, t.prototype.setValue = function(e) {
      return this.getValue() === e ? this : (this.eText.setValue(e, !0), this.eSlider.setValue(e, !0), this.dispatchEvent({ type: jt.EVENT_CHANGED }), this);
    }, t.prototype.setStep = function(e) {
      return this.eSlider.setStep(e), this.eText.setStep(e), this;
    }, t.TEMPLATE = `<div class="ag-slider">
            <label ref="eLabel"></label>
            <div class="ag-wrapper ag-slider-wrapper">
                <ag-input-range ref="eSlider"></ag-input-range>
                <ag-input-number-field ref="eText"></ag-input-number-field>
            </div>
        </div>`, dn([
      T("eLabel")
    ], t.prototype, "eLabel", void 0), dn([
      T("eSlider")
    ], t.prototype, "eSlider", void 0), dn([
      T("eText")
    ], t.prototype, "eText", void 0), dn([
      G
    ], t.prototype, "init", null), t;
  }(ma)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Mm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $t = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Lm = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Gm = (
  /** @class */
  function(n) {
    Mm(t, n);
    function t(e) {
      var r = n.call(this, t.TEMPLATE) || this;
      return r.H = 1, r.S = 1, r.B = 1, r.A = 1, r.isSpectrumDragging = !1, r.isSpectrumHueDragging = !1, r.isSpectrumAlphaDragging = !1, r.colorChanged = !1, r.picker = e.picker, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this.getGui();
      this.initRecentColors(), this.addManagedListener(this.spectrumVal, "mousedown", this.onSpectrumDraggerDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumDraggerMove.bind(this)), this.addManagedListener(this.spectrumHue, "mousedown", this.onSpectrumHueDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumHueMove.bind(this)), this.addManagedListener(this.spectrumAlpha, "mousedown", this.onSpectrumAlphaDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumAlphaMove.bind(this)), this.addManagedListener(document, "mouseup", this.onMouseUp.bind(this)), this.addManagedListener(this.recentColors, "click", this.onRecentColorClick.bind(this));
    }, t.prototype.refreshSpectrumRect = function() {
      return this.spectrumValRect = this.spectrumVal.getBoundingClientRect();
    }, t.prototype.refreshHueRect = function() {
      return this.spectrumHueRect = this.spectrumHue.getBoundingClientRect();
    }, t.prototype.refreshAlphaRect = function() {
      return this.spectrumAlphaRect = this.spectrumAlpha.getBoundingClientRect();
    }, t.prototype.onSpectrumDraggerDown = function(e) {
      this.refreshSpectrumRect(), this.isSpectrumDragging = !0, this.moveDragger(e);
    }, t.prototype.onSpectrumDraggerMove = function(e) {
      this.isSpectrumDragging && this.moveDragger(e);
    }, t.prototype.onSpectrumHueDown = function(e) {
      this.refreshHueRect(), this.isSpectrumHueDragging = !0, this.moveHueSlider(e);
    }, t.prototype.onSpectrumHueMove = function(e) {
      this.isSpectrumHueDragging && this.moveHueSlider(e);
    }, t.prototype.onSpectrumAlphaDown = function(e) {
      this.refreshAlphaRect(), this.isSpectrumAlphaDragging = !0, this.moveAlphaSlider(e);
    }, t.prototype.onSpectrumAlphaMove = function(e) {
      this.isSpectrumAlphaDragging && this.moveAlphaSlider(e);
    }, t.prototype.onMouseUp = function() {
      this.isSpectrumDragging = !1, this.isSpectrumHueDragging = !1, this.isSpectrumAlphaDragging = !1;
    }, t.prototype.moveDragger = function(e) {
      var r = this.spectrumValRect;
      if (r) {
        var o = e.clientX - r.left, i = e.clientY - r.top;
        o = Math.max(o, 0), o = Math.min(o, r.width), i = Math.max(i, 0), i = Math.min(i, r.height), this.setSpectrumValue(o / r.width, 1 - i / r.height);
      }
    }, t.prototype.moveHueSlider = function(e) {
      var r = this.spectrumHueRect;
      if (r) {
        var o = this.spectrumHueSlider, i = o.getBoundingClientRect(), s = e.clientX - r.left;
        s = Math.max(s, 0), s = Math.min(s, r.width), this.H = 1 - s / r.width, o.style.left = s + i.width / 2 + "px", this.update();
      }
    }, t.prototype.moveAlphaSlider = function(e) {
      var r = this.spectrumAlphaRect;
      if (r) {
        var o = this.spectrumAlphaSlider, i = o.getBoundingClientRect(), s = e.clientX - r.left;
        s = Math.max(s, 0), s = Math.min(s, r.width), this.A = s / r.width, o.style.left = s + i.width / 2 + "px", this.update();
      }
    }, t.prototype.update = function() {
      var e = Br.fromHSB(this.H * 360, this.S, this.B, this.A), r = Br.fromHSB(this.H * 360, 1, 1), o = e.toRgbaString(), i = this.picker, s = Br.fromString(i.getValue());
      s.toRgbaString() !== o && (this.colorChanged = !0), i.setValue(o), this.spectrumColor.style.backgroundColor = r.toRgbaString(), this.spectrumDragger.style.backgroundColor = o;
    }, t.prototype.setSpectrumValue = function(e, r) {
      var o = this.spectrumValRect || this.refreshSpectrumRect();
      if (o) {
        var i = this.spectrumDragger, s = i.getBoundingClientRect();
        e = Math.max(0, e), e = Math.min(1, e), r = Math.max(0, r), r = Math.min(1, r), this.S = e, this.B = r, i.style.left = e * o.width - s.width / 2 + "px", i.style.top = (1 - r) * o.height - s.height / 2 + "px", this.update();
      }
    }, t.prototype.initRecentColors = function() {
      var e = t.recentColors, r = e.map(function(o, i) {
        return '<div class="ag-recent-color" id=' + i + ' style="background-color: ' + o + '; width: 15px; height: 15px;" recent-color="' + o + '"></div>';
      });
      this.recentColors.innerHTML = r.join("");
    }, t.prototype.setValue = function(e) {
      var r = Br.fromString(e), o = Lm(r.toHSB(), 3), i = o[0], s = o[1], a = o[2];
      this.H = (isNaN(i) ? 0 : i) / 360, this.A = r.a;
      var l = this.spectrumHueRect || this.refreshHueRect(), u = this.spectrumAlphaRect || this.refreshAlphaRect();
      this.spectrumHueSlider.style.left = (this.H - 1) * -l.width + "px", this.spectrumAlphaSlider.style.left = this.A * u.width + "px", this.setSpectrumValue(s, a);
    }, t.prototype.onRecentColorClick = function(e) {
      var r = e.target;
      if (O(r.id)) {
        var o = parseInt(r.id, 10);
        this.setValue(t.recentColors[o]), this.destroy();
      }
    }, t.prototype.addRecentColor = function() {
      var e = Br.fromHSB(this.H * 360, this.S, this.B, this.A), r = e.toRgbaString(), o = t.recentColors;
      !this.colorChanged || o[0] === r || (o = o.filter(function(i) {
        return i != r;
      }), o = [r].concat(o), o.length > t.maxRecentColors && (o = o.slice(0, t.maxRecentColors)), t.recentColors = o);
    }, t.prototype.destroy = function() {
      this.addRecentColor(), n.prototype.destroy.call(this);
    }, t.maxRecentColors = 8, t.recentColors = [], t.TEMPLATE = `<div class="ag-color-panel">
            <div ref="spectrumColor" class="ag-spectrum-color">
                <div class="ag-spectrum-sat ag-spectrum-fill">
                    <div ref="spectrumVal" class="ag-spectrum-val ag-spectrum-fill">
                        <div ref="spectrumDragger" class="ag-spectrum-dragger"></div>
                    </div>
                </div>
            </div>
            <div class="ag-spectrum-tools">
                <div ref="spectrumHue" class="ag-spectrum-hue ag-spectrum-tool">
                    <div class="ag-spectrum-hue-background"></div>
                    <div ref="spectrumHueSlider" class="ag-spectrum-slider"></div>
                </div>
                <div ref="spectrumAlpha" class="ag-spectrum-alpha ag-spectrum-tool">
                    <div class="ag-spectrum-alpha-background"></div>
                    <div ref="spectrumAlphaSlider" class="ag-spectrum-slider"></div>
                </div>
                <div ref="recentColors" class="ag-recent-colors"></div>
            </div>
        </div>`, $t([
      T("spectrumColor")
    ], t.prototype, "spectrumColor", void 0), $t([
      T("spectrumVal")
    ], t.prototype, "spectrumVal", void 0), $t([
      T("spectrumDragger")
    ], t.prototype, "spectrumDragger", void 0), $t([
      T("spectrumHue")
    ], t.prototype, "spectrumHue", void 0), $t([
      T("spectrumHueSlider")
    ], t.prototype, "spectrumHueSlider", void 0), $t([
      T("spectrumAlpha")
    ], t.prototype, "spectrumAlpha", void 0), $t([
      T("spectrumAlphaSlider")
    ], t.prototype, "spectrumAlphaSlider", void 0), $t([
      T("recentColors")
    ], t.prototype, "recentColors", void 0), $t([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Nm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zc = (
  /** @class */
  function(n) {
    Nm(t, n);
    function t(e) {
      var r = n.call(this, e, "ag-color-picker", "colorPicker") || this;
      return e && e.color && (r.value = e.color), r;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.value && this.setValue(this.value);
    }, t.prototype.showPicker = function() {
      var e = this, r = this.getGui().getBoundingClientRect(), o = this.createBean(new Ma({
        closable: !1,
        modal: !0,
        hideTitleBar: !0,
        minWidth: 190,
        width: 190,
        height: 250,
        x: r.right - 190,
        y: r.top - 250
      }));
      this.isPickerDisplayed = !0, o.addCssClass("ag-color-dialog"), vt(this.eWrapper, !0);
      var i = this.createBean(new Gm({ picker: this }));
      return i.addDestroyFunc(function() {
        o.isAlive() && e.destroyBean(o);
      }), o.setParentComponent(this), o.setBodyComponent(i), i.setValue(this.getValue()), o.addDestroyFunc(function() {
        e.isDestroyingPicker ? e.isDestroyingPicker = !1 : (e.isDestroyingPicker = !0, i.isAlive() && e.destroyBean(i)), e.isAlive() && (vt(e.eWrapper, !1), e.getFocusableElement().focus()), e.isPickerDisplayed = !1;
      }), o;
    }, t.prototype.setValue = function(e) {
      return this.value === e ? this : (this.eDisplayField.style.backgroundColor = e, n.prototype.setValue.call(this, e));
    }, t.prototype.getValue = function() {
      return this.value;
    }, t;
  }(Np)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var xm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ed = (
  /** @class */
  function(n) {
    xm(t, n);
    function t(e) {
      return n.call(this, e, "ag-number-field", "number") || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this), this.addManagedListener(this.eInput, "blur", function() {
        var r = parseFloat(e.eInput.value), o = isNaN(r) ? "" : e.normalizeValue(r.toString());
        e.value !== o && e.setValue(o);
      }), this.eInput.step = "any";
    }, t.prototype.normalizeValue = function(e) {
      if (e === "")
        return "";
      this.precision && (e = this.adjustPrecision(e));
      var r = parseFloat(e);
      return this.min != null && r < this.min ? e = this.min.toString() : this.max != null && r > this.max && (e = this.max.toString()), e;
    }, t.prototype.adjustPrecision = function(e) {
      if (this.precision) {
        var r = parseFloat(e).toFixed(this.precision);
        e = parseFloat(r).toString();
      }
      return e;
    }, t.prototype.setMin = function(e) {
      return this.min === e ? this : (this.min = e, Go(this.eInput, "min", e), this);
    }, t.prototype.setMax = function(e) {
      return this.max === e ? this : (this.max = e, Go(this.eInput, "max", e), this);
    }, t.prototype.setPrecision = function(e) {
      return this.precision = e, this;
    }, t.prototype.setStep = function(e) {
      return this.step === e ? this : (this.step = e, Go(this.eInput, "step", e), this);
    }, t.prototype.setValue = function(e, r) {
      e = this.adjustPrecision(e);
      var o = this.normalizeValue(e);
      return e != o ? this : n.prototype.setValue.call(this, e, r);
    }, t;
  }(La)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Hm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), td = (
  /** @class */
  function(n) {
    Hm(t, n);
    function t(e) {
      return n.call(this, e, "ag-range-field", "range") || this;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this);
      var e = this.config, r = e.min, o = e.max, i = e.step;
      r != null && this.setMinValue(r), o != null && this.setMaxValue(o), this.setStep(i || 1);
    }, t.prototype.addInputListeners = function() {
      var e = this;
      this.addManagedListener(this.eInput, "input", function(r) {
        var o = r.target.value;
        e.setValue(o);
      });
    }, t.prototype.setMinValue = function(e) {
      return this.min = e, this.eInput.setAttribute("min", e.toString()), this;
    }, t.prototype.setMaxValue = function(e) {
      return this.max = e, this.eInput.setAttribute("max", e.toString()), this;
    }, t.prototype.setStep = function(e) {
      return this.eInput.setAttribute("step", e.toString()), this;
    }, t.prototype.setValue = function(e, r) {
      this.min != null && (e = Math.max(parseFloat(e), this.min).toString()), this.max != null && (e = Math.min(parseFloat(e), this.max).toString());
      var o = n.prototype.setValue.call(this, e, r);
      return this.eInput.value = e, o;
    }, t;
  }(Yt)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Wm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Fo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, rd = (
  /** @class */
  function(n) {
    Wm(t, n);
    function t(e) {
      var r = n.call(this, e, t.TEMPLATE) || this;
      return r.radius = 0, r.offsetX = 0, r.offsetY = 0, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this), this.dragListener = {
        eElement: this.eParentCircle,
        dragStartPixels: 0,
        onDragStart: function(r) {
          e.parentCircleRect = e.eParentCircle.getBoundingClientRect();
        },
        onDragging: function(r) {
          return e.calculateAngleDrag(r);
        },
        onDragStop: function() {
        }
      }, this.dragService.addDragSource(this.dragListener), this.eAngleValue.setLabel("").setLabelWidth(5).setInputWidth(45).setMin(0).setMax(360).setValue("" + this.degrees).onValueChange(function(r) {
        (r == null || r === "") && (r = "0"), r = e.eAngleValue.normalizeValue(r);
        var o = parseFloat(r);
        o > 180 && (o = o - 360), e.setValue(o);
      }), this.updateNumberInput(), O(this.getValue()) && this.eAngleValue.setValue(this.normalizeNegativeValue(this.getValue()).toString()), this.addManagedListener(this, jt.EVENT_CHANGED, function() {
        var r = e.gridOptionsWrapper.getDocument();
        e.eAngleValue.getInputElement().contains(r.activeElement) || e.updateNumberInput();
      });
    }, t.prototype.updateNumberInput = function() {
      var e = this.normalizeNegativeValue(this.getValue());
      this.eAngleValue.setValue(e.toString());
    }, t.prototype.positionChildCircle = function(e) {
      var r = this.parentCircleRect || { width: 24, height: 24 }, o = this.eChildCircle, i = r.width / 2, s = r.height / 2;
      o.style.left = i + Math.cos(e) * 8 + "px", o.style.top = s + Math.sin(e) * 8 + "px";
    }, t.prototype.calculatePolar = function() {
      var e = this.offsetX, r = this.offsetY, o = Math.atan2(r, e);
      this.degrees = this.toDegrees(o), this.radius = Math.sqrt(e * e + r * r), this.positionChildCircle(o);
    }, t.prototype.calculateCartesian = function() {
      var e = this.toRadians(this.getValue()), r = this.getRadius();
      this.setOffsetX(Math.cos(e) * r).setOffsetY(Math.sin(e) * r);
    }, t.prototype.setOffsetX = function(e) {
      return this.offsetX !== e && (this.offsetX = e, this.calculatePolar()), this;
    }, t.prototype.setOffsetY = function(e) {
      return this.offsetY !== e && (this.offsetY = e, this.calculatePolar()), this;
    }, t.prototype.calculateAngleDrag = function(e) {
      var r = this.parentCircleRect, o = r.width / 2, i = r.height / 2, s = e.clientX - r.left, a = e.clientY - r.top, l = s - o, u = a - i, p = Math.atan2(u, l);
      this.setValue(p, !0);
    }, t.prototype.toDegrees = function(e) {
      return e / Math.PI * 180;
    }, t.prototype.toRadians = function(e) {
      return e / 180 * Math.PI;
    }, t.prototype.normalizeNegativeValue = function(e) {
      return e < 0 ? 360 + e : e;
    }, t.prototype.normalizeAngle180 = function(e) {
      return e %= Math.PI * 2, e < -Math.PI ? e += Math.PI * 2 : e >= Math.PI && (e -= Math.PI * 2), e;
    }, t.prototype.getRadius = function() {
      return this.radius;
    }, t.prototype.setRadius = function(e) {
      return this.radius === e ? this : (this.radius = e, this.calculateCartesian(), this);
    }, t.prototype.onValueChange = function(e) {
      var r = this;
      return this.addManagedListener(this, jt.EVENT_CHANGED, function() {
        e(r.degrees);
      }), this;
    }, t.prototype.getValue = function(e) {
      return e ? this.toRadians(this.degrees) : this.degrees;
    }, t.prototype.setValue = function(e, r) {
      var o;
      return r ? o = e : o = this.normalizeAngle180(this.toRadians(e)), e = this.toDegrees(o), this.degrees !== e && (this.degrees = Math.floor(e), this.calculateCartesian(), this.positionChildCircle(o), this.dispatchEvent({ type: jt.EVENT_CHANGED })), this;
    }, t.prototype.setWidth = function(e) {
      return zt(this.getGui(), e), this;
    }, t.prototype.destroy = function() {
      this.dragService.removeDragSource(this.dragListener), n.prototype.destroy.call(this);
    }, t.TEMPLATE = `<div class="ag-angle-select">
            <div ref="eLabel"></div>
            <div class="ag-wrapper ag-angle-select-wrapper">
                <div ref="eAngleSelectField" class="ag-angle-select-field">
                    <div ref="eParentCircle" class="ag-angle-select-parent-circle">
                        <div ref="eChildCircle" class="ag-angle-select-child-circle"></div>
                    </div>
                </div>
                <ag-input-number-field ref="eAngleValue"></ag-input-number-field>
            </div>
        </div>`, Fo([
      T("eLabel")
    ], t.prototype, "eLabel", void 0), Fo([
      T("eParentCircle")
    ], t.prototype, "eParentCircle", void 0), Fo([
      T("eChildCircle")
    ], t.prototype, "eChildCircle", void 0), Fo([
      T("eAngleValue")
    ], t.prototype, "eAngleValue", void 0), Fo([
      h("dragService")
    ], t.prototype, "dragService", void 0), t;
  }(ma)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Vm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), od = (
  /** @class */
  function(n) {
    Vm(t, n);
    function t(e) {
      return n.call(this, e, "ag-toggle-button") || this;
    }
    return t.prototype.setValue = function(e, r) {
      return n.prototype.setValue.call(this, e, r), this.addOrRemoveCssClass("ag-selected", this.getValue()), this;
    }, t;
  }(eo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Bm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), hn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, nd = (
  /** @class */
  function(n) {
    Bm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getFirstRow = function() {
      var e = 0, r;
      return this.pinnedRowModel.getPinnedTopRowCount() ? r = w.PINNED_TOP : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageFirstRow()) : this.pinnedRowModel.getPinnedBottomRowCount() && (r = w.PINNED_BOTTOM), r === void 0 ? null : { rowIndex: e, rowPinned: r };
    }, t.prototype.getLastRow = function() {
      var e, r = null, o = this.pinnedRowModel.getPinnedBottomRowCount(), i = this.pinnedRowModel.getPinnedTopRowCount();
      return o ? (r = w.PINNED_BOTTOM, e = o - 1) : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageLastRow()) : i && (r = w.PINNED_TOP, e = i - 1), e === void 0 ? null : { rowIndex: e, rowPinned: r };
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case w.PINNED_BOTTOM:
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, t.prototype.sameRow = function(e, r) {
      return !e && !r ? !0 : e && !r || !e && r ? !1 : e.rowIndex === r.rowIndex && e.rowPinned == r.rowPinned;
    }, t.prototype.before = function(e, r) {
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          if (r.rowPinned !== w.PINNED_TOP)
            return !0;
          break;
        case w.PINNED_BOTTOM:
          if (r.rowPinned !== w.PINNED_BOTTOM)
            return !1;
          break;
        default:
          if (O(r.rowPinned))
            return r.rowPinned !== w.PINNED_TOP;
          break;
      }
      return e.rowIndex < r.rowIndex;
    }, hn([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), hn([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), hn([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), t = hn([
      U("rowPositionUtils")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var jm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Um = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, id = (
  /** @class */
  function(n) {
    jm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.createId = function(e) {
      var r = e.rowIndex, o = e.rowPinned, i = e.column;
      return this.createIdFromValues(r, i, o);
    }, t.prototype.createIdFromValues = function(e, r, o) {
      return e + "." + (o ?? "null") + "." + r.getId();
    }, t.prototype.equals = function(e, r) {
      var o = e.column === r.column, i = e.rowPinned === r.rowPinned, s = e.rowIndex === r.rowIndex;
      return o && i && s;
    }, t = Um([
      U("cellPositionUtils")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var km = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Io = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, sd = (
  /** @class */
  function(n) {
    km(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData()), this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());
    }, t.prototype.isEmpty = function(e) {
      var r = e === w.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;
      return gt(r);
    }, t.prototype.isRowsToRender = function(e) {
      return !this.isEmpty(e);
    }, t.prototype.getRowAtPixel = function(e, r) {
      var o = r === w.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;
      if (gt(o))
        return 0;
      for (var i = 0; i < o.length; i++) {
        var s = o[i], a = s.rowTop + s.rowHeight - 1;
        if (a >= e)
          return i;
      }
      return o.length - 1;
    }, t.prototype.setPinnedTopRowData = function(e) {
      this.pinnedTopRows = this.createNodesFromData(e, !0);
      var r = {
        type: v.EVENT_PINNED_ROW_DATA_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.setPinnedBottomRowData = function(e) {
      this.pinnedBottomRows = this.createNodesFromData(e, !1);
      var r = {
        type: v.EVENT_PINNED_ROW_DATA_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.createNodesFromData = function(e, r) {
      var o = this, i = [];
      if (e) {
        var s = 0;
        e.forEach(function(a, l) {
          var u = new te(o.beans);
          u.data = a;
          var p = r ? te.ID_PREFIX_TOP_PINNED : te.ID_PREFIX_BOTTOM_PINNED;
          u.id = p + l, u.rowPinned = r ? w.PINNED_TOP : w.PINNED_BOTTOM, u.setRowTop(s), u.setRowHeight(o.gridOptionsWrapper.getRowHeightForNode(u).height), u.setRowIndex(l), s += u.rowHeight, i.push(u);
        });
      }
      return i;
    }, t.prototype.getPinnedTopRowData = function() {
      return this.pinnedTopRows;
    }, t.prototype.getPinnedBottomRowData = function() {
      return this.pinnedBottomRows;
    }, t.prototype.getPinnedTopTotalHeight = function() {
      return this.getTotalHeight(this.pinnedTopRows);
    }, t.prototype.getPinnedTopRowCount = function() {
      return this.pinnedTopRows ? this.pinnedTopRows.length : 0;
    }, t.prototype.getPinnedBottomRowCount = function() {
      return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;
    }, t.prototype.getPinnedTopRow = function(e) {
      return this.pinnedTopRows[e];
    }, t.prototype.getPinnedBottomRow = function(e) {
      return this.pinnedBottomRows[e];
    }, t.prototype.forEachPinnedTopRow = function(e) {
      gt(this.pinnedTopRows) || this.pinnedTopRows.forEach(e);
    }, t.prototype.forEachPinnedBottomRow = function(e) {
      gt(this.pinnedBottomRows) || this.pinnedBottomRows.forEach(e);
    }, t.prototype.getPinnedBottomTotalHeight = function() {
      return this.getTotalHeight(this.pinnedBottomRows);
    }, t.prototype.getTotalHeight = function(e) {
      if (!e || e.length === 0)
        return 0;
      var r = _e(e);
      return r.rowTop + r.rowHeight;
    }, Io([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Io([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Io([
      h("beans")
    ], t.prototype, "beans", void 0), Io([
      G
    ], t.prototype, "init", null), t = Io([
      U("pinnedRowModel")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var zm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), In = (
  /** @class */
  function() {
    function n(t) {
      this.cellValueChanges = t;
    }
    return n;
  }()
), as = (
  /** @class */
  function(n) {
    zm(t, n);
    function t(e, r, o) {
      var i = n.call(this, e) || this;
      return i.initialRange = r, i.finalRange = o, i;
    }
    return t;
  }(In)
), iu = (
  /** @class */
  function() {
    function n(t) {
      this.actionStack = [], this.maxStackSize = t || n.DEFAULT_STACK_SIZE, this.actionStack = new Array(this.maxStackSize);
    }
    return n.prototype.pop = function() {
      return this.actionStack.pop();
    }, n.prototype.push = function(t) {
      var e = t.cellValueChanges && t.cellValueChanges.length > 0;
      e && (this.actionStack.length === this.maxStackSize && this.actionStack.shift(), this.actionStack.push(t));
    }, n.prototype.clear = function() {
      this.actionStack = [];
    }, n.prototype.getCurrentStackSize = function() {
      return this.actionStack.length;
    }, n.DEFAULT_STACK_SIZE = 10, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var $m = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), tr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Km = (
  /** @class */
  function(n) {
    $m(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.cellValueChanges = [], e.activeCellEdit = null, e.activeRowEdit = null, e.isPasting = !1, e.isFilling = !1, e.onCellValueChanged = function(r) {
        var o = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned }, i = e.activeCellEdit !== null && e.cellPositionUtils.equals(e.activeCellEdit, o), s = e.activeRowEdit !== null && e.rowPositionUtils.sameRow(e.activeRowEdit, o), a = i || s || e.isPasting || e.isFilling;
        if (a) {
          var l = r.rowPinned, u = r.rowIndex, p = r.column, c = r.oldValue, d = r.value, f = {
            rowPinned: l,
            rowIndex: u,
            columnId: p.getColId(),
            newValue: d,
            oldValue: c
          };
          e.cellValueChanges.push(f);
        }
      }, e.clearStacks = function() {
        e.undoStack.clear(), e.redoStack.clear();
      }, e;
    }
    return t.prototype.init = function() {
      if (this.gridOptionsWrapper.isUndoRedoCellEditing()) {
        var e = this.gridOptionsWrapper.getUndoRedoCellEditingLimit();
        e <= 0 || (this.undoStack = new iu(e), this.redoStack = new iu(e), this.addRowEditingListeners(), this.addCellEditingListeners(), this.addPasteListeners(), this.addFillListeners(), this.addManagedListener(this.eventService, v.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged), this.addManagedListener(this.eventService, v.EVENT_MODEL_UPDATED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_GROUP_OPENED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_MOVED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PINNED, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_COLUMN_VISIBLE, this.clearStacks), this.addManagedListener(this.eventService, v.EVENT_ROW_DRAG_END, this.clearStacks));
      }
    }, t.prototype.getCurrentUndoStackSize = function() {
      return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;
    }, t.prototype.getCurrentRedoStackSize = function() {
      return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;
    }, t.prototype.undo = function() {
      if (this.undoStack) {
        var e = this.undoStack.pop();
        !e || !e.cellValueChanges || (this.processAction(e, function(r) {
          return r.oldValue;
        }), e instanceof as ? this.processRangeAndCellFocus(e.cellValueChanges, e.initialRange) : this.processRangeAndCellFocus(e.cellValueChanges), this.redoStack.push(e));
      }
    }, t.prototype.redo = function() {
      if (this.redoStack) {
        var e = this.redoStack.pop();
        !e || !e.cellValueChanges || (this.processAction(e, function(r) {
          return r.newValue;
        }), e instanceof as ? this.processRangeAndCellFocus(e.cellValueChanges, e.finalRange) : this.processRangeAndCellFocus(e.cellValueChanges), this.undoStack.push(e));
      }
    }, t.prototype.processAction = function(e, r) {
      var o = this;
      e.cellValueChanges.forEach(function(i) {
        var s = i.rowIndex, a = i.rowPinned, l = i.columnId, u = { rowIndex: s, rowPinned: a }, p = o.getRowNode(u);
        p.displayed && p.setDataValue(l, r(i));
      });
    }, t.prototype.processRangeAndCellFocus = function(e, r) {
      var o;
      if (r) {
        var i = r.startRow, s = r.endRow;
        o = {
          rowPinned: i.rowPinned,
          rowIndex: i.rowIndex,
          columnId: r.startColumn.getColId()
        }, this.setLastFocusedCell(o);
        var a = {
          rowStartIndex: i.rowIndex,
          rowStartPinned: i.rowPinned,
          rowEndIndex: s.rowIndex,
          rowEndPinned: s.rowPinned,
          columnStart: r.startColumn,
          columns: r.columns
        };
        this.gridApi.addCellRange(a);
        return;
      }
      var l = e[0], u = l.rowIndex, p = l.rowPinned, c = { rowIndex: u, rowPinned: p }, d = this.getRowNode(c);
      o = {
        rowPinned: l.rowPinned,
        rowIndex: d.rowIndex,
        columnId: l.columnId
      }, this.setLastFocusedCell(o);
    }, t.prototype.setLastFocusedCell = function(e) {
      var r = e.rowIndex, o = e.columnId, i = e.rowPinned;
      this.gridApi.ensureIndexVisible(r), this.gridApi.ensureColumnVisible(o), Q.isRegistered(q.RangeSelectionModule) && this.gridApi.clearRangeSelection(), this.focusService.setFocusedCell(r, o, i, !0);
    }, t.prototype.addRowEditingListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_ROW_EDITING_STARTED, function(r) {
        e.activeRowEdit = { rowIndex: r.rowIndex, rowPinned: r.rowPinned };
      }), this.addManagedListener(this.eventService, v.EVENT_ROW_EDITING_STOPPED, function() {
        var r = new In(e.cellValueChanges);
        e.pushActionsToUndoStack(r), e.activeRowEdit = null;
      });
    }, t.prototype.addCellEditingListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_CELL_EDITING_STARTED, function(r) {
        e.activeCellEdit = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned };
      }), this.addManagedListener(this.eventService, v.EVENT_CELL_EDITING_STOPPED, function() {
        e.activeCellEdit = null;
        var r = !e.activeRowEdit && !e.isPasting && !e.isFilling;
        if (r) {
          var o = new In(e.cellValueChanges);
          e.pushActionsToUndoStack(o);
        }
      });
    }, t.prototype.addPasteListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_PASTE_START, function() {
        e.isPasting = !0;
      }), this.addManagedListener(this.eventService, v.EVENT_PASTE_END, function() {
        var r = new In(e.cellValueChanges);
        e.pushActionsToUndoStack(r), e.isPasting = !1;
      });
    }, t.prototype.addFillListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_FILL_START, function() {
        e.isFilling = !0;
      }), this.addManagedListener(this.eventService, v.EVENT_FILL_END, function(r) {
        var o = new as(e.cellValueChanges, r.initialRange, r.finalRange);
        e.pushActionsToUndoStack(o), e.isFilling = !1;
      });
    }, t.prototype.pushActionsToUndoStack = function(e) {
      this.undoStack.push(e), this.cellValueChanges = [], this.redoStack.clear();
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case w.PINNED_TOP:
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case w.PINNED_BOTTOM:
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, tr([
      h("focusService")
    ], t.prototype, "focusService", void 0), tr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), tr([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), tr([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), tr([
      h("cellPositionUtils")
    ], t.prototype, "cellPositionUtils", void 0), tr([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), tr([
      G
    ], t.prototype, "init", null), t = tr([
      U("undoRedoService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ym = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ls = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ad = (
  /** @class */
  function(n) {
    Ym(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.findHeader = function(e, r) {
      var o, i, s;
      if (e.column instanceof qe ? (i = "getDisplayedGroup" + r, o = this.columnModel[i](e.column)) : (s = "getDisplayedCol" + r, o = this.columnModel[s](e.column)), o)
        return {
          column: o,
          headerRowIndex: e.headerRowIndex
        };
    }, t.prototype.findColAtEdgeForHeaderRow = function(e, r) {
      var o = this.columnModel.getAllDisplayedColumns(), i = o[r === "start" ? 0 : o.length - 1];
      if (i) {
        var s = this.ctrlsService.getHeaderRowContainerCtrl(i.getPinned()), a = s.getRowType(e);
        if (a == Xe.COLUMN_GROUP) {
          var l = this.columnModel.getColumnGroupAtLevel(i, e);
          return {
            headerRowIndex: e,
            column: l
          };
        }
        return {
          // if type==null, means the header level didn't exist
          headerRowIndex: a == null ? -1 : e,
          column: i
        };
      }
    }, ls([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ls([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = ls([
      U("headerPositionUtils")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var qm = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Xm = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.buildColumnDefs = function(t, e, r) {
      var o = this, i = [], s = {};
      return t.forEach(function(a) {
        for (var l = o.createDefFromColumn(a, e, r), u = !0, p = l, c = a.getOriginalParent(); c; ) {
          var d = null;
          if (c.isPadding()) {
            c = c.getOriginalParent();
            continue;
          }
          var f = s[c.getGroupId()];
          if (f) {
            f.children.push(p), u = !1;
            break;
          }
          d = o.createDefFromGroup(c), d && (d.children = [p], s[d.groupId] = d, p = d, c = c.getOriginalParent());
        }
        u && i.push(p);
      }), i;
    }, n.prototype.createDefFromGroup = function(t) {
      var e = Ln(t.getColGroupDef(), ["children"]);
      return e && (e.groupId = t.getGroupId()), e;
    }, n.prototype.createDefFromColumn = function(t, e, r) {
      var o = Ln(t.getColDef());
      return o.colId = t.getColId(), o.width = t.getActualWidth(), o.rowGroup = t.isRowGroupActive(), o.rowGroupIndex = t.isRowGroupActive() ? e.indexOf(t) : null, o.pivot = t.isPivotActive(), o.pivotIndex = t.isPivotActive() ? r.indexOf(t) : null, o.aggFunc = t.isValueActive() ? t.getAggFunc() : null, o.hide = t.isVisible() ? void 0 : !0, o.pinned = t.isPinned() ? t.getPinned() : null, o.sort = t.getSort() ? t.getSort() : null, o.sortIndex = t.getSortIndex() != null ? t.getSortIndex() : null, o;
    }, n = qm([
      U("columnDefFactory")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var us = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Qm = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getInitialRowClasses = function(t) {
      var e = [];
      return O(t.extraCssClass) && e.push(t.extraCssClass), e.push("ag-row"), e.push(t.rowFocused ? "ag-row-focus" : "ag-row-no-focus"), t.fadeRowIn && e.push("ag-opacity-zero"), e.push(t.rowIsEven ? "ag-row-even" : "ag-row-odd"), t.rowNode.isRowPinned() && e.push("ag-row-pinned"), t.rowNode.isSelected() && e.push("ag-row-selected"), t.rowNode.footer && e.push("ag-row-footer"), e.push("ag-row-level-" + t.rowLevel), t.rowNode.stub && e.push("ag-row-loading"), t.fullWidthRow && e.push("ag-full-width-row"), t.expandable && (e.push("ag-row-group"), e.push(t.rowNode.expanded ? "ag-row-group-expanded" : "ag-row-group-contracted")), t.rowNode.dragging && e.push("ag-row-dragging"), Os(e, this.processClassesFromGridOptions(t.rowNode, t.scope)), Os(e, this.preProcessRowClassRules(t.rowNode, t.scope)), e.push(t.printLayout ? "ag-row-position-relative" : "ag-row-position-absolute"), t.firstRowOnPage && e.push("ag-row-first"), t.lastRowOnPage && e.push("ag-row-last"), t.fullWidthRow && (t.pinned === w.PINNED_LEFT && e.push("ag-cell-last-left-pinned"), t.pinned === w.PINNED_RIGHT && e.push("ag-cell-first-right-pinned")), e;
    }, n.prototype.processClassesFromGridOptions = function(t, e) {
      var r = [], o = function(u) {
        typeof u == "string" ? r.push(u) : Array.isArray(u) && u.forEach(function(p) {
          return r.push(p);
        });
      }, i = this.gridOptionsWrapper.getRowClass();
      if (i) {
        if (typeof i == "function")
          return console.warn("AG Grid: rowClass should not be a function, please use getRowClass instead"), [];
        o(i);
      }
      var s = this.gridOptionsWrapper.getRowClassFunc();
      if (s) {
        var a = {
          data: t.data,
          node: t,
          rowIndex: t.rowIndex,
          $scope: e,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        }, l = s(a);
        o(l);
      }
      return r;
    }, n.prototype.preProcessRowClassRules = function(t, e) {
      var r = [];
      return this.processRowClassRules(t, e, function(o) {
        r.push(o);
      }, function(o) {
      }), r;
    }, n.prototype.processRowClassRules = function(t, e, r, o) {
      var i = {
        data: t.data,
        node: t,
        rowIndex: t.rowIndex,
        api: this.gridOptionsWrapper.getApi(),
        columnApi: this.gridOptionsWrapper.getColumnApi(),
        $scope: e,
        context: this.gridOptionsWrapper.getContext()
      };
      this.stylingService.processClassRules(this.gridOptionsWrapper.rowClassRules(), i, r, o);
    }, n.prototype.calculateRowLevel = function(t) {
      return t.group ? t.level : t.parent ? t.parent.level + 1 : 0;
    }, us([
      h("stylingService")
    ], n.prototype, "stylingService", void 0), us([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), n = us([
      U("rowCssClassCalculator")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Jm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ks = (
  /** @class */
  function(n) {
    Jm(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.state = t.STATE_WAITING_TO_LOAD, r.version = 0, r.id = e, r;
    }
    return t.prototype.getId = function() {
      return this.id;
    }, t.prototype.load = function() {
      this.state = t.STATE_LOADING, this.loadFromDatasource();
    }, t.prototype.getVersion = function() {
      return this.version;
    }, t.prototype.setStateWaitingToLoad = function() {
      this.version++, this.state = t.STATE_WAITING_TO_LOAD;
    }, t.prototype.getState = function() {
      return this.state;
    }, t.prototype.pageLoadFailed = function(e) {
      var r = this.isRequestMostRecentAndLive(e);
      r && (this.state = t.STATE_FAILED, this.processServerFail()), this.dispatchLoadCompleted(!1);
    }, t.prototype.success = function(e, r) {
      this.successCommon(e, r);
    }, t.prototype.pageLoaded = function(e, r, o) {
      this.successCommon(e, { rowData: r, rowCount: o });
    }, t.prototype.isRequestMostRecentAndLive = function(e) {
      var r = e === this.version, o = this.isAlive();
      return r && o;
    }, t.prototype.successCommon = function(e, r) {
      this.dispatchLoadCompleted();
      var o = this.isRequestMostRecentAndLive(e);
      o && (this.state = t.STATE_LOADED, this.processServerResult(r));
    }, t.prototype.dispatchLoadCompleted = function(e) {
      e === void 0 && (e = !0);
      var r = {
        type: t.EVENT_LOAD_COMPLETE,
        success: e,
        block: this
      };
      this.dispatchEvent(r);
    }, t.EVENT_LOAD_COMPLETE = "loadComplete", t.STATE_WAITING_TO_LOAD = "needsLoading", t.STATE_LOADING = "loading", t.STATE_LOADED = "loaded", t.STATE_FAILED = "failed", t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Zm = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ps = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, e_ = globalThis && globalThis.__param || function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, ld = (
  /** @class */
  function(n) {
    Zm(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.activeBlockLoadsCount = 0, r.blocks = [], r.active = !0, r;
    }
    e = t, t.prototype.postConstruct = function() {
      this.maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();
      var r = this.gridOptionsWrapper.getBlockLoadDebounceMillis();
      r && r > 0 && (this.checkBlockToLoadDebounce = se.debounce(this.performCheckBlocksToLoad.bind(this), r));
    }, t.prototype.setBeans = function(r) {
      this.logger = r.create("RowNodeBlockLoader");
    }, t.prototype.addBlock = function(r) {
      this.blocks.push(r), r.addEventListener(ks.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this)), this.checkBlockToLoad();
    }, t.prototype.removeBlock = function(r) {
      se.removeFromArray(this.blocks, r);
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.active = !1;
    }, t.prototype.loadComplete = function() {
      this.activeBlockLoadsCount--, this.checkBlockToLoad(), this.activeBlockLoadsCount == 0 && this.dispatchEvent({ type: e.BLOCK_LOADER_FINISHED_EVENT });
    }, t.prototype.checkBlockToLoad = function() {
      this.checkBlockToLoadDebounce ? this.checkBlockToLoadDebounce() : this.performCheckBlocksToLoad();
    }, t.prototype.performCheckBlocksToLoad = function() {
      if (this.active) {
        if (this.printCacheStatus(), this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {
          this.logger.log("checkBlockToLoad: max loads exceeded");
          return;
        }
        var r = null;
        this.blocks.forEach(function(o) {
          o.getState() === ks.STATE_WAITING_TO_LOAD && (r = o);
        }), r && (r.load(), this.activeBlockLoadsCount++, this.printCacheStatus());
      }
    }, t.prototype.getBlockState = function() {
      var r = {};
      return this.blocks.forEach(function(o) {
        var i = o.getBlockStateJson(), s = i.id, a = i.state;
        r[s] = a;
      }), r;
    }, t.prototype.printCacheStatus = function() {
      this.logger.isLogging() && this.logger.log("printCacheStatus: activePageLoadsCount = " + this.activeBlockLoadsCount + "," + (" blocks = " + JSON.stringify(this.getBlockState())));
    }, t.prototype.isLoading = function() {
      return this.activeBlockLoadsCount > 0;
    };
    var e;
    return t.BLOCK_LOADER_FINISHED_EVENT = "blockLoaderFinished", ps([
      G
    ], t.prototype, "postConstruct", null), ps([
      e_(0, tt("loggerFactory"))
    ], t.prototype, "setBeans", null), t = e = ps([
      U("rowNodeBlockLoader")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var fn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, ud = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.doFullSort = function(t, e) {
      var r = function(i, s) {
        return { currentPos: s, rowNode: i };
      }, o = t.map(r);
      return o.sort(this.compareRowNodes.bind(this, e)), o.map(function(i) {
        return i.rowNode;
      });
    }, n.prototype.compareRowNodes = function(t, e, r) {
      for (var o = e.rowNode, i = r.rowNode, s = 0, a = t.length; s < a; s++) {
        var l = t[s], u = l.sort === w.SORT_DESC, p = this.getValue(o, l.column), c = this.getValue(i, l.column), d = void 0, f = this.getComparator(l, o);
        f ? d = f(p, c, o, i, u) : d = se.defaultComparator(p, c, this.gridOptionsWrapper.isAccentedSort());
        var g = !isNaN(d);
        if (g && d !== 0)
          return l.sort === w.SORT_ASC ? d : d * -1;
      }
      return e.currentPos - r.currentPos;
    }, n.prototype.getComparator = function(t, e) {
      var r = t.column, o = r.getColDef().comparator;
      if (o != null)
        return o;
      if (e.rowGroupColumn)
        return e.rowGroupColumn.getColDef().comparator;
      if (r.getColDef().showRowGroup) {
        var i = !e.group && r.getColDef().field;
        if (i) {
          var s = this.columnModel.getPrimaryColumn(i);
          if (s)
            return s.getColDef().comparator;
        }
      }
    }, n.prototype.getValue = function(t, e) {
      return this.valueService.getValue(e, t, !1, !1);
    }, fn([
      h("gridOptionsWrapper")
    ], n.prototype, "gridOptionsWrapper", void 0), fn([
      h("valueService")
    ], n.prototype, "valueService", void 0), fn([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), n = fn([
      U("rowNodeSorter")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var t_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), r_ = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, pd = (
  /** @class */
  function(n) {
    t_(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.ready = !1, r.readyCallbacks = [], r;
    }
    e = t, t.prototype.checkReady = function() {
      if (this.ready = this.gridCtrl != null && this.gridBodyCtrl != null && this.centerRowContainerCtrl != null && this.leftRowContainerCtrl != null && this.rightRowContainerCtrl != null && this.bottomCenterRowContainerCtrl != null && this.bottomLeftRowContainerCtrl != null && this.bottomRightRowContainerCtrl != null && this.topCenterRowContainerCtrl != null && this.topLeftRowContainerCtrl != null && this.topRightRowContainerCtrl != null && this.centerHeaderRowContainerCtrl != null && this.leftHeaderRowContainerCtrl != null && this.rightHeaderRowContainerCtrl != null && this.fakeHScrollCtrl != null && this.gridHeaderCtrl != null, this.ready) {
        var r = this.createReadyParams();
        this.readyCallbacks.forEach(function(o) {
          return o(r);
        }), this.readyCallbacks.length = 0;
      }
    }, t.prototype.whenReady = function(r) {
      this.ready ? r(this.createReadyParams()) : this.readyCallbacks.push(r);
    }, t.prototype.createReadyParams = function() {
      return {
        centerRowContainerCtrl: this.centerRowContainerCtrl,
        leftRowContainerCtrl: this.leftRowContainerCtrl,
        rightRowContainerCtrl: this.rightRowContainerCtrl,
        bottomCenterRowContainerCtrl: this.bottomCenterRowContainerCtrl,
        bottomLeftRowContainerCtrl: this.bottomLeftRowContainerCtrl,
        bottomRightRowContainerCtrl: this.bottomRightRowContainerCtrl,
        topCenterRowContainerCtrl: this.topCenterRowContainerCtrl,
        topLeftRowContainerCtrl: this.topLeftRowContainerCtrl,
        topRightRowContainerCtrl: this.topRightRowContainerCtrl,
        centerHeaderRowContainerCtrl: this.centerHeaderRowContainerCtrl,
        leftHeaderRowContainerCtrl: this.leftHeaderRowContainerCtrl,
        rightHeaderRowContainerCtrl: this.rightHeaderRowContainerCtrl,
        fakeHScrollCtrl: this.fakeHScrollCtrl,
        gridBodyCtrl: this.gridBodyCtrl,
        gridCtrl: this.gridCtrl,
        gridHeaderCtrl: this.gridHeaderCtrl
      };
    }, t.prototype.registerFakeHScrollCtrl = function(r) {
      this.fakeHScrollCtrl = r, this.checkReady();
    }, t.prototype.registerGridHeaderCtrl = function(r) {
      this.gridHeaderCtrl = r, this.checkReady();
    }, t.prototype.registerCenterRowContainerCtrl = function(r) {
      this.centerRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerLeftRowContainerCtrl = function(r) {
      this.leftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerRightRowContainerCtrl = function(r) {
      this.rightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopCenterRowContainerCtrl = function(r) {
      this.topCenterRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopLeftRowContainerCon = function(r) {
      this.topLeftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopRightRowContainerCtrl = function(r) {
      this.topRightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomCenterRowContainerCtrl = function(r) {
      this.bottomCenterRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomLeftRowContainerCtrl = function(r) {
      this.bottomLeftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomRightRowContainerCtrl = function(r) {
      this.bottomRightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerHeaderContainer = function(r, o) {
      switch (o) {
        case w.PINNED_LEFT:
          this.leftHeaderRowContainerCtrl = r;
          break;
        case w.PINNED_RIGHT:
          this.rightHeaderRowContainerCtrl = r;
          break;
        default:
          this.centerHeaderRowContainerCtrl = r;
          break;
      }
      this.checkReady();
    }, t.prototype.registerGridBodyCtrl = function(r) {
      this.gridBodyCtrl = r, this.checkReady();
    }, t.prototype.registerGridCtrl = function(r) {
      this.gridCtrl = r, this.checkReady();
    }, t.prototype.getFakeHScrollCtrl = function() {
      return this.fakeHScrollCtrl;
    }, t.prototype.getGridHeaderCtrl = function() {
      return this.gridHeaderCtrl;
    }, t.prototype.getGridCtrl = function() {
      return this.gridCtrl;
    }, t.prototype.getCenterRowContainerCtrl = function() {
      return this.centerRowContainerCtrl;
    }, t.prototype.getTopCenterRowContainerCtrl = function() {
      return this.topCenterRowContainerCtrl;
    }, t.prototype.getBottomCenterRowContainerCtrl = function() {
      return this.bottomCenterRowContainerCtrl;
    }, t.prototype.getGridBodyCtrl = function() {
      return this.gridBodyCtrl;
    }, t.prototype.getHeaderRowContainerCtrls = function() {
      return [this.leftHeaderRowContainerCtrl, this.rightHeaderRowContainerCtrl, this.centerHeaderRowContainerCtrl];
    }, t.prototype.getHeaderRowContainerCtrl = function(r) {
      switch (r) {
        case w.PINNED_LEFT:
          return this.leftHeaderRowContainerCtrl;
        case w.PINNED_RIGHT:
          return this.rightHeaderRowContainerCtrl;
        default:
          return this.centerHeaderRowContainerCtrl;
      }
    };
    var e;
    return t.NAME = "ctrlsService", t = e = r_([
      U(e.NAME)
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var o_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), n_ = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, i_ = (
  /** @class */
  function(n) {
    o_(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.registry = {}, e;
    }
    return t.prototype.register = function(e) {
      this.registry[e.controllerName] = e.controllerClass;
    }, t.prototype.getInstance = function(e) {
      var r = this.registry[e];
      if (r != null)
        return new r();
    }, t = n_([
      U("ctrlsFactory")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var s_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, a_ = (
  /** @class */
  function(n) {
    s_(t, n);
    function t() {
      return n.call(this) || this;
    }
    return t.prototype.setComp = function(e, r, o, i) {
      this.view = e, this.eViewport = o, this.eContainer = i, this.eGui = r, this.addManagedListener(this.eventService, v.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.onScrollVisibilityChanged();
      var s = this.setFakeHScrollSpacerWidths.bind(this);
      this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, s), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, s), this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, s), this.setFakeHScrollSpacerWidths(), this.invisibleScrollbar && (this.hideAndShowInvisibleScrollAsNeeded(), this.addActiveListenerToggles()), this.ctrlsService.registerFakeHScrollCtrl(this);
    }, t.prototype.addActiveListenerToggles = function() {
      var e = this, r = ["mouseenter", "mousedown", "touchstart"], o = ["mouseleave", "mouseup", "touchend"];
      r.forEach(function(i) {
        return e.addManagedListener(e.eGui, i, function() {
          return e.view.addOrRemoveCssClass("ag-scrollbar-active", !0);
        });
      }), o.forEach(function(i) {
        return e.addManagedListener(e.eGui, i, function() {
          return e.view.addOrRemoveCssClass("ag-scrollbar-active", !1);
        });
      });
    }, t.prototype.postConstruct = function() {
      this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.invisibleScrollbar = tp();
    }, t.prototype.onScrollVisibilityChanged = function() {
      this.setScrollVisible(), this.setFakeHScrollSpacerWidths();
    }, t.prototype.hideAndShowInvisibleScrollAsNeeded = function() {
      var e = this;
      this.addManagedListener(this.eventService, v.EVENT_BODY_SCROLL, function(r) {
        r.direction === "horizontal" && e.view.addOrRemoveCssClass("ag-scrollbar-scrolling", !0);
      }), this.addManagedListener(this.eventService, v.EVENT_BODY_SCROLL_END, function() {
        return e.view.addOrRemoveCssClass("ag-scrollbar-scrolling", !1);
      });
    }, t.prototype.setFakeHScrollSpacerWidths = function() {
      var e = this.scrollVisibleService.isVerticalScrollShowing(), r = this.columnModel.getDisplayedColumnsRightWidth(), o = !this.enableRtl && e, i = this.gridOptionsWrapper.getScrollbarWidth();
      o && (r += i), this.view.setRightSpacerFixedWidth(r), this.view.includeRightSpacerScrollerCss("ag-scroller-corner", r <= i);
      var s = this.columnModel.getDisplayedColumnsLeftWidth(), a = this.enableRtl && e;
      a && (s += i), this.view.setLeftSpacerFixedWidth(s), this.view.includeLeftSpacerScrollerCss("ag-scroller-corner", s <= i);
    }, t.prototype.setScrollVisible = function() {
      var e = this.scrollVisibleService.isHorizontalScrollShowing(), r = this.invisibleScrollbar, o = this.gridOptionsWrapper.isSuppressHorizontalScroll(), i = e && this.gridOptionsWrapper.getScrollbarWidth() || 0, s = i === 0 && r ? 15 : i, a = o ? 0 : s;
      this.view.addOrRemoveCssClass("ag-scrollbar-invisible", r), this.view.setHeight(a), this.view.setViewportHeight(a), this.view.setContainerHeight(a);
    }, t.prototype.getViewport = function() {
      return this.eViewport;
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, gn([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), gn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), gn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), gn([
      G
    ], t.prototype, "postConstruct", null), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var l_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, u_ = (
  /** @class */
  function(n) {
    l_(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = {
        addOrRemoveCssClass: function(i, s) {
          return e.addOrRemoveCssClass(i, s);
        },
        setHeight: function(i) {
          return wr(e.getGui(), i);
        },
        setContainerHeight: function(i) {
          return wr(e.eContainer, i);
        },
        setViewportHeight: function(i) {
          return wr(e.eViewport, i);
        },
        setRightSpacerFixedWidth: function(i) {
          return zt(e.eRightSpacer, i);
        },
        setLeftSpacerFixedWidth: function(i) {
          return zt(e.eLeftSpacer, i);
        },
        includeLeftSpacerScrollerCss: function(i, s) {
          return e.eLeftSpacer.classList.toggle(i, s);
        },
        includeRightSpacerScrollerCss: function(i, s) {
          return e.eRightSpacer.classList.toggle(i, s);
        }
      }, o = this.createManagedBean(new a_());
      o.setComp(r, this.getGui(), this.eViewport, this.eContainer), this.createManagedBean(new Pa(function(i) {
        return e.eContainer.style.width = i + "px";
      }));
    }, t.TEMPLATE = `<div class="ag-body-horizontal-scroll" aria-hidden="true">
            <div class="ag-horizontal-left-spacer" ref="eLeftSpacer"></div>
            <div class="ag-body-horizontal-scroll-viewport" ref="eViewport">
                <div class="ag-body-horizontal-scroll-container" ref="eContainer"></div>
            </div>
            <div class="ag-horizontal-right-spacer" ref="eRightSpacer"></div>
        </div>`, Mo([
      T("eLeftSpacer")
    ], t.prototype, "eLeftSpacer", void 0), Mo([
      T("eRightSpacer")
    ], t.prototype, "eRightSpacer", void 0), Mo([
      T("eViewport")
    ], t.prototype, "eViewport", void 0), Mo([
      T("eContainer")
    ], t.prototype, "eContainer", void 0), Mo([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var p_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), cs = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, c_ = (
  /** @class */
  function(n) {
    p_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this.checkContainerWidths.bind(this);
      this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, v.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.addManagedListener(this.gridOptionsWrapper, B.PROP_DOM_LAYOUT, e);
    }, t.prototype.checkContainerWidths = function() {
      var e = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_PRINT, r = e ? 0 : this.columnModel.getDisplayedColumnsLeftWidth(), o = e ? 0 : this.columnModel.getDisplayedColumnsRightWidth();
      r != this.leftWidth && (this.leftWidth = r, this.eventService.dispatchEvent({ type: v.EVENT_LEFT_PINNED_WIDTH_CHANGED })), o != this.rightWidth && (this.rightWidth = o, this.eventService.dispatchEvent({ type: v.EVENT_RIGHT_PINNED_WIDTH_CHANGED }));
    }, t.prototype.getPinnedRightWidth = function() {
      return this.rightWidth;
    }, t.prototype.getPinnedLeftWidth = function() {
      return this.leftWidth;
    }, cs([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), cs([
      G
    ], t.prototype, "postConstruct", null), t = cs([
      U("pinnedWidthService")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var d_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), h_ = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, cd = (
  /** @class */
  function(n) {
    d_(t, n);
    function t(e) {
      var r = n.call(
        this,
        /* html */
        '<div class="ag-popup-editor" tabindex="-1"/>'
      ) || this;
      return r.params = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.gridOptionsWrapper.setDomData(this.getGui(), t.DOM_KEY_POPUP_EDITOR_WRAPPER, !0), this.addKeyDownListener();
    }, t.prototype.addKeyDownListener = function() {
      var e = this, r = this.getGui(), o = this.params, i = function(s) {
        Bn(e.gridOptionsWrapper, s, o.node, o.column, !0) || o.onKeyDown(s);
      };
      this.addManagedListener(r, "keydown", i);
    }, t.DOM_KEY_POPUP_EDITOR_WRAPPER = "popupEditorWrapper", h_([
      G
    ], t.prototype, "postConstruct", null), t;
  }(so)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var f_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zs = globalThis && globalThis.__assign || function() {
  return zs = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, zs.apply(this, arguments);
}, dd = (
  /** @class */
  function(n) {
    f_(t, n);
    function t(e, r, o, i, s, a) {
      var l = n.call(this) || this;
      l.scope = null, l.rendererVersion = 0, l.editorVersion = 0, l.scope = e, l.beans = r, l.column = o.getColumn(), l.rowNode = o.getRowNode(), l.rowCtrl = o.getRowCtrl(), l.eRow = s, l.setTemplate(
        /* html */
        '<div comp-id="' + l.getCompId() + '"/>'
      );
      var u = l.getGui();
      l.forceWrapper = o.isForceWrapper(), l.refreshWrapper(!1);
      var p = function(d, f, g) {
        var y = g || u;
        f != null && f != "" ? y.setAttribute(d, f) : y.removeAttribute(d);
      }, c = {
        addOrRemoveCssClass: function(d, f) {
          return l.addOrRemoveCssClass(d, f);
        },
        setUserStyles: function(d) {
          return la(u, d);
        },
        getFocusableElement: function() {
          return l.getFocusableElement();
        },
        setTabIndex: function(d) {
          return p("tabindex", d.toString());
        },
        setRole: function(d) {
          return rt(u, d);
        },
        setColId: function(d) {
          return p("col-id", d);
        },
        setTitle: function(d) {
          return p("title", d);
        },
        setIncludeSelection: function(d) {
          return l.includeSelection = d;
        },
        setIncludeRowDrag: function(d) {
          return l.includeRowDrag = d;
        },
        setIncludeDndSource: function(d) {
          return l.includeDndSource = d;
        },
        setRenderDetails: function(d, f, g) {
          return l.setRenderDetails(d, f, g);
        },
        setEditDetails: function(d, f, g) {
          return l.setEditDetails(d, f, g);
        },
        getCellEditor: function() {
          return l.cellEditor || null;
        },
        getCellRenderer: function() {
          return l.cellRenderer || null;
        },
        getParentOfValue: function() {
          return l.getParentOfValue();
        }
      };
      return l.cellCtrl = o, o.setComp(c, l.scope, l.getGui(), l.eCellWrapper, i, a), l;
    }
    return t.prototype.getParentOfValue = function() {
      return this.eCellValue ? this.eCellValue : this.eCellWrapper ? this.eCellWrapper : this.getGui();
    }, t.prototype.setRenderDetails = function(e, r, o) {
      var i = this.cellEditor && !this.cellEditorPopupWrapper;
      if (!i) {
        this.firstRender = this.firstRender == null;
        var s = this.isUsingAngular1Template(), a = this.refreshWrapper(!1);
        if (e) {
          var l = o || a, u = l ? !1 : this.refreshCellRenderer(e);
          u || (this.destroyRenderer(), this.createCellRendererInstance(e));
        } else
          this.destroyRenderer(), s ? this.insertValueUsingAngular1Template() : this.insertValueWithoutCellRenderer(r);
      }
    }, t.prototype.setEditDetails = function(e, r, o) {
      e ? this.createCellEditorInstance(e, r, o) : this.destroyEditor();
    }, t.prototype.removeControls = function() {
      this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp), this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp), this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);
    }, t.prototype.refreshWrapper = function(e) {
      var r = this.includeRowDrag || this.includeDndSource || this.includeSelection, o = r || this.forceWrapper, i = o && this.eCellWrapper == null;
      i && (this.eCellWrapper = Ue('<div class="ag-cell-wrapper" role="presentation"></div>'), this.getGui().appendChild(this.eCellWrapper));
      var s = !o && this.eCellWrapper != null;
      s && (Mt(this.eCellWrapper), this.eCellWrapper = void 0), this.addOrRemoveCssClass("ag-cell-value", !o);
      var a = !e && o, l = a && this.eCellValue == null;
      l && (this.eCellValue = Ue('<span class="ag-cell-value" role="presentation"></span>'), this.eCellWrapper.appendChild(this.eCellValue));
      var u = !a && this.eCellValue != null;
      u && (Mt(this.eCellValue), this.eCellValue = void 0);
      var p = i || s || l || u;
      return p && this.removeControls(), !e && r && this.addControls(), p;
    }, t.prototype.addControls = function() {
      var e = this.eCellValue.id = "cell-" + this.getCompId(), r = [];
      this.includeRowDrag && this.rowDraggingComp == null && (this.rowDraggingComp = this.cellCtrl.createRowDragComp(), this.rowDraggingComp && this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue)), this.includeDndSource && this.dndSourceComp == null && (this.dndSourceComp = this.cellCtrl.createDndSource(), this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue)), this.includeSelection && (this.checkboxSelectionComp == null && (this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox(), this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue)), r.push(this.checkboxSelectionComp.getCheckboxId())), r.push(e), ii(this.getGui(), r.join(" "));
    }, t.prototype.createCellEditorInstance = function(e, r, o) {
      var i = this, s = this.editorVersion, a = e.newAgStackInstance();
      if (a) {
        var l = e.params;
        a.then(function(p) {
          return i.afterCellEditorCreated(s, p, l, r, o);
        });
        var u = K(this.cellEditor);
        u && l.cellStartedEdit && this.cellCtrl.focusCell(!0);
      }
    }, t.prototype.insertValueWithoutCellRenderer = function(e) {
      var r = this.getParentOfValue();
      Ct(r);
      var o = e != null ? kt(e) : null;
      o != null && (r.innerHTML = o);
    }, t.prototype.insertValueUsingAngular1Template = function() {
      var e = this, r = this.column.getColDef(), o = r.template, i = r.templateUrl, s;
      if (o != null ? s = o : i != null && (s = this.beans.templateService.getTemplate(i, function() {
        return e.cellCtrl.refreshCell({ forceRefresh: !0 });
      })), s != null) {
        var a = this.getParentOfValue();
        a.innerHTML = s, this.updateAngular1ScopeAndCompile();
      }
    }, t.prototype.destroyEditorAndRenderer = function() {
      this.destroyRenderer(), this.destroyEditor();
    }, t.prototype.destroyRenderer = function() {
      var e = this.beans.context;
      this.cellRenderer = e.destroyBean(this.cellRenderer), Mt(this.cellRendererGui), this.cellRendererGui = null, this.rendererVersion++;
    }, t.prototype.destroyEditor = function() {
      var e = this.beans.context;
      this.hideEditorPopup && this.hideEditorPopup(), this.hideEditorPopup = void 0, this.cellEditor = e.destroyBean(this.cellEditor), this.cellEditorPopupWrapper = e.destroyBean(this.cellEditorPopupWrapper), Mt(this.cellEditorGui), this.cellEditorGui = null, this.editorVersion++;
    }, t.prototype.refreshCellRenderer = function(e) {
      if (this.cellRenderer == null || this.cellRenderer.refresh == null || this.cellRendererClass !== e.componentClass)
        return !1;
      var r = this.cellRenderer.refresh(e.params);
      return r === !0 || r === void 0;
    }, t.prototype.createCellRendererInstance = function(e) {
      var r = this, o = this.beans.gridOptionsWrapper.isAngularCompileRows(), i = this.beans.gridOptionsWrapper.isSuppressAnimationFrame(), s = !o && !i, a = this.rendererVersion, l = e.componentClass, u = function() {
        var p = r.rendererVersion !== a || !r.isAlive();
        if (!p) {
          var c = e.newAgStackInstance(), d = r.afterCellRendererCreated.bind(r, a, l);
          c && c.then(d);
        }
      };
      s && this.firstRender ? this.beans.animationFrameService.createTask(u, this.rowNode.rowIndex, "createTasksP2") : u();
    }, t.prototype.isUsingAngular1Template = function() {
      var e = this.column.getColDef(), r = e.template != null || e.templateUrl != null;
      return r;
    }, t.prototype.getCtrl = function() {
      return this.cellCtrl;
    }, t.prototype.getRowCtrl = function() {
      return this.rowCtrl;
    }, t.prototype.getCellRenderer = function() {
      return this.cellRenderer;
    }, t.prototype.getCellEditor = function() {
      return this.cellEditor;
    }, t.prototype.afterCellRendererCreated = function(e, r, o) {
      var i = !this.isAlive() || e !== this.rendererVersion;
      if (i) {
        this.beans.context.destroyBean(o);
        return;
      }
      if (this.cellRenderer = o, this.cellRendererClass = r, this.cellRendererGui = this.cellRenderer.getGui(), this.cellRendererGui != null) {
        var s = this.getParentOfValue();
        Ct(s), s.appendChild(this.cellRendererGui), this.updateAngular1ScopeAndCompile();
      }
    }, t.prototype.afterCellEditorCreated = function(e, r, o, i, s) {
      var a = e !== this.editorVersion;
      if (a) {
        this.beans.context.destroyBean(r);
        return;
      }
      var l = r.isCancelBeforeStart && r.isCancelBeforeStart();
      if (l) {
        this.beans.context.destroyBean(r), this.cellCtrl.stopEditing();
        return;
      }
      if (!r.getGui) {
        console.warn("AG Grid: cellEditor for column " + this.column.getId() + " is missing getGui() method"), this.beans.context.destroyBean(r);
        return;
      }
      this.cellEditor = r, this.cellEditorGui = r.getGui();
      var u = i || r.isPopup !== void 0 && r.isPopup();
      u ? (i || this.cellCtrl.hackSayEditingInPopup(), this.addPopupCellEditor(o, s)) : this.addInCellEditor(), r.afterGuiAttached && r.afterGuiAttached();
    }, t.prototype.addInCellEditor = function() {
      var e = this.getGui(), r = this.beans.gridOptionsWrapper.getDocument();
      if (e.contains(r.activeElement) && e.focus(), this.destroyRenderer(), this.refreshWrapper(!0), this.clearParentOfValue(), this.cellEditorGui) {
        var o = this.getParentOfValue();
        o.appendChild(this.cellEditorGui);
      }
    }, t.prototype.addPopupCellEditor = function(e, r) {
      var o = this;
      this.beans.gridOptionsWrapper.isFullRowEdit() && console.warn("AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.");
      var i = this.cellEditor;
      this.cellEditorPopupWrapper = this.beans.context.createBean(new cd(e));
      var s = this.cellEditorPopupWrapper.getGui();
      this.cellEditorGui && s.appendChild(this.cellEditorGui);
      var a = this.beans.popupService, l = this.beans.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus(), u = r ?? (i.getPopupPosition ? i.getPopupPosition() : "over"), p = {
        column: this.column,
        rowNode: this.rowNode,
        type: "popupCellEditor",
        eventSource: this.getGui(),
        ePopup: s,
        keepWithinBounds: !0
      }, c = u === "under" ? a.positionPopupUnderComponent.bind(a, p) : a.positionPopupOverComponent.bind(a, p), d = this.beans.gridOptionsWrapper.getLocaleTextFunc(), f = a.addPopup({
        modal: l,
        eChild: s,
        closeOnEsc: !0,
        closedCallback: function() {
          o.cellCtrl.onPopupEditorClosed();
        },
        anchorToElement: this.getGui(),
        positionCallback: c,
        ariaLabel: d("ariaLabelCellEditor", "Cell Editor")
      });
      f && (this.hideEditorPopup = f.hideFunc);
    }, t.prototype.detach = function() {
      this.eRow.removeChild(this.getGui());
    }, t.prototype.destroy = function() {
      this.cellCtrl.stopEditing(), this.destroyEditorAndRenderer(), this.removeControls(), this.angularCompiledElement && (this.angularCompiledElement.remove(), this.angularCompiledElement = void 0), n.prototype.destroy.call(this);
    }, t.prototype.clearParentOfValue = function() {
      var e = this.getGui(), r = this.beans.gridOptionsWrapper.getDocument();
      e.contains(r.activeElement) && e.focus({
        preventScroll: !0
      }), Ct(this.getParentOfValue());
    }, t.prototype.updateAngular1ScopeAndCompile = function() {
      if (this.beans.gridOptionsWrapper.isAngularCompileRows() && this.scope) {
        this.scope.data = zs({}, this.rowNode.data), this.angularCompiledElement && this.angularCompiledElement.remove();
        var e = this.getParentOfValue();
        this.angularCompiledElement = this.beans.$compile(e.children)(this.scope), this.beans.ctrlsService.getGridBodyCtrl().requestAngularApply();
      }
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var g_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), v_ = (
  /** @class */
  function(n) {
    g_(t, n);
    function t(e, r, o) {
      var i = n.call(this) || this;
      i.cellComps = {}, i.beans = r, i.rowCtrl = e, i.setTemplate(
        /* html */
        '<div comp-id="' + i.getCompId() + '" style="' + i.getInitialStyle() + '"/>'
      );
      var s = i.getGui(), a = s.style, l = {
        setDomOrder: function(u) {
          return i.domOrder = u;
        },
        setCellCtrls: function(u) {
          return i.setCellCtrls(u);
        },
        showFullWidth: function(u) {
          return i.showFullWidth(u);
        },
        getFullWidthCellRenderer: function() {
          return i.getFullWidthCellRenderer();
        },
        addOrRemoveCssClass: function(u, p) {
          return i.addOrRemoveCssClass(u, p);
        },
        setUserStyles: function(u) {
          return la(s, u);
        },
        setTop: function(u) {
          return a.top = u;
        },
        setTransform: function(u) {
          return a.transform = u;
        },
        setRowIndex: function(u) {
          return s.setAttribute("row-index", u);
        },
        setRole: function(u) {
          return rt(s, u);
        },
        setRowId: function(u) {
          return s.setAttribute("row-id", u);
        },
        setRowBusinessKey: function(u) {
          return s.setAttribute("row-business-key", u);
        },
        setTabIndex: function(u) {
          return s.setAttribute("tabindex", u.toString());
        }
      };
      return e.setComp(l, i.getGui(), o), i;
    }
    return t.prototype.getInitialStyle = function() {
      var e = this.rowCtrl.getInitialTransform(), r = this.rowCtrl.getInitialRowTop();
      return e ? "transform: " + e : "top: " + r;
    }, t.prototype.showFullWidth = function(e) {
      var r = this, o = function(s) {
        if (r.isAlive()) {
          var a = s.getGui();
          r.getGui().appendChild(a), r.rowCtrl.setupDetailRowAutoHeight(a), r.setFullWidthRowComp(s);
        } else
          r.beans.context.destroyBean(s);
      }, i = e.newAgStackInstance();
      i && i.then(o);
    }, t.prototype.setCellCtrls = function(e) {
      var r = this, o = Object.assign({}, this.cellComps);
      e.forEach(function(s) {
        var a = s.getInstanceId(), l = r.cellComps[a];
        l == null ? r.newCellComp(s) : o[a] = null;
      });
      var i = Lt(o).filter(function(s) {
        return s != null;
      });
      this.destroyCells(i), this.ensureDomOrder(e);
    }, t.prototype.ensureDomOrder = function(e) {
      var r = this;
      if (this.domOrder) {
        var o = [];
        e.forEach(function(i) {
          var s = r.cellComps[i.getInstanceId()];
          s && o.push(s.getGui());
        }), aa(this.getGui(), o);
      }
    }, t.prototype.newCellComp = function(e) {
      var r = new dd(this.rowCtrl.getScope(), this.beans, e, this.rowCtrl.isPrintLayout(), this.getGui(), this.rowCtrl.isEditing());
      this.cellComps[e.getInstanceId()] = r, this.getGui().appendChild(r.getGui());
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.destroyAllCells();
    }, t.prototype.destroyAllCells = function() {
      var e = Lt(this.cellComps).filter(function(r) {
        return r != null;
      });
      this.destroyCells(e);
    }, t.prototype.setFullWidthRowComp = function(e) {
      var r = this;
      this.fullWidthCellRenderer && console.error("AG Grid - should not be setting fullWidthRowComponent twice"), this.fullWidthCellRenderer = e, this.addDestroyFunc(function() {
        r.fullWidthCellRenderer = r.beans.context.destroyBean(r.fullWidthCellRenderer);
      });
    }, t.prototype.getFullWidthCellRenderer = function() {
      return this.fullWidthCellRenderer;
    }, t.prototype.destroyCells = function(e) {
      var r = this;
      e.forEach(function(o) {
        if (o) {
          var i = o.getCtrl().getInstanceId();
          r.cellComps[i] === o && (o.detach(), o.destroy(), r.cellComps[i] = null);
        }
      });
    }, t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var y_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $s = globalThis && globalThis.__assign || function() {
  return $s = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, $s.apply(this, arguments);
}, Hr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
};
function C_() {
  var n = ee.elementGettingCreated.getAttribute("name"), t = Kn.getRowContainerCssClasses(n), e, r = n === F.CENTER, o = n === F.TOP_CENTER || n === F.BOTTOM_CENTER;
  return r ? e = /* html */
  '<div class="' + t.wrapper + `" ref="eWrapper" role="presentation">
                <div class="` + t.viewport + `" ref="eViewport" role="presentation">
                    <div class="` + t.container + `" ref="eContainer" role="rowgroup"></div>
                </div>
            </div>` : o ? e = /* html */
  '<div class="' + t.viewport + `" ref="eViewport" role="presentation">
                <div class="` + t.container + `" ref="eContainer" role="presentation"></div>
            </div>` : e = /* html */
  '<div class="' + t.container + '" ref="eContainer" role="presentation"></div>', e;
}
var hd = (
  /** @class */
  function(n) {
    y_(t, n);
    function t() {
      var e = n.call(this, C_()) || this;
      return e.rowComps = {}, e.name = ee.elementGettingCreated.getAttribute("name"), e.type = Zp(e.name), e;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = {
        setViewportHeight: function(i) {
          return e.eViewport.style.height = i;
        },
        setRowCtrls: function(i) {
          return e.setRowCtrls(i);
        },
        setDomOrder: function(i) {
          e.domOrder = i;
        },
        setContainerWidth: function(i) {
          return e.eContainer.style.width = i;
        }
      }, o = this.createManagedBean(new Kn(this.name));
      o.setComp(r, this.eContainer, this.eViewport, this.eWrapper);
    }, t.prototype.preDestroy = function() {
      this.setRowCtrls([]);
    }, t.prototype.setRowCtrls = function(e) {
      var r = this, o = $s({}, this.rowComps);
      this.rowComps = {}, this.lastPlacedElement = null;
      var i = function(s) {
        var a = s.getInstanceId(), l = o[a];
        if (l)
          r.rowComps[a] = l, delete o[a], r.ensureDomOrder(l.getGui());
        else {
          var u = r.newRowComp(s);
          r.rowComps[a] = u, r.appendRow(u.getGui());
        }
      };
      e.forEach(i), Lt(o).forEach(function(s) {
        r.eContainer.removeChild(s.getGui()), s.destroy();
      });
    }, t.prototype.appendRow = function(e) {
      this.domOrder ? sp(this.eContainer, e, this.lastPlacedElement) : this.eContainer.appendChild(e), this.lastPlacedElement = e;
    }, t.prototype.ensureDomOrder = function(e) {
      this.domOrder && (sa(this.eContainer, e, this.lastPlacedElement), this.lastPlacedElement = e);
    }, t.prototype.newRowComp = function(e) {
      Kn.getPinned(this.name);
      var r = new v_(e, this.beans, this.type);
      return r;
    }, Hr([
      h("beans")
    ], t.prototype, "beans", void 0), Hr([
      T("eViewport")
    ], t.prototype, "eViewport", void 0), Hr([
      T("eContainer")
    ], t.prototype, "eContainer", void 0), Hr([
      T("eWrapper")
    ], t.prototype, "eWrapper", void 0), Hr([
      G
    ], t.prototype, "postConstruct", null), Hr([
      ot
    ], t.prototype, "preDestroy", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var m_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, __ = (
  /** @class */
  function(n) {
    m_(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.events = [], e;
    }
    return t.prototype.postConstruct = function() {
      this.rowModel.getType() == w.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel);
    }, t.prototype.dispatchExpanded = function(e) {
      var r = this;
      if (this.clientSideRowModel == null) {
        this.eventService.dispatchEvent(e);
        return;
      }
      this.events.push(e);
      var o = function() {
        r.clientSideRowModel && r.clientSideRowModel.onRowGroupOpened(), r.events.forEach(function(i) {
          return r.eventService.dispatchEvent(i);
        }), r.events = [];
      };
      this.dispatchExpandedDebounced == null && (this.dispatchExpandedDebounced = this.animationFrameService.debounce(o)), this.dispatchExpandedDebounced();
    }, vn([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), vn([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), vn([
      G
    ], t.prototype, "postConstruct", null), t = vn([
      U("rowNodeEventThrottle")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var w_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lo = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, fd = (
  /** @class */
  function(n) {
    w_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.hideActiveMenu = function() {
      this.hidePopup && this.hidePopup();
    }, t.prototype.showMenuAfterMouseEvent = function(e, r) {
      var o = this;
      this.showPopup(e, function(i) {
        o.popupService.positionPopupUnderMouseEvent({
          column: e,
          type: "columnMenu",
          mouseEvent: r,
          ePopup: i
        });
      }, r.target);
    }, t.prototype.showMenuAfterButtonClick = function(e, r, o) {
      var i = this;
      this.showPopup(e, function(s) {
        i.popupService.positionPopupUnderComponent({
          type: o,
          eventSource: r,
          ePopup: s,
          keepWithinBounds: !0,
          column: e
        });
      }, r);
    }, t.prototype.showPopup = function(e, r, o) {
      var i = this, s = this.filterManager.getOrCreateFilterWrapper(e, "COLUMN_MENU");
      if (!s)
        throw new Error("AG Grid - unable to show popup filter, filter instantiation failed");
      var a = document.createElement("div");
      rt(a, "presentation"), a.classList.add("ag-menu"), this.tabListener = this.addManagedListener(a, "keydown", function(f) {
        return i.trapFocusWithin(f, a);
      }), s.guiPromise.then(function(f) {
        return a.appendChild(f);
      });
      var l, u = o || this.ctrlsService.getGridBodyCtrl().getGui(), p = function(f) {
        e.setMenuVisible(!1, "contextMenu");
        var g = f instanceof KeyboardEvent;
        if (i.tabListener && (i.tabListener = i.tabListener()), g && o && no(o)) {
          var y = i.focusService.findTabbableParent(o);
          y && y.focus();
        }
      }, c = this.gridOptionsWrapper.getLocaleTextFunc(), d = this.popupService.addPopup({
        modal: !0,
        eChild: a,
        closeOnEsc: !0,
        closedCallback: p,
        positionCallback: function() {
          return r(a);
        },
        anchorToElement: u,
        ariaLabel: c("ariaLabelColumnMenu", "Column Menu")
      });
      d && (this.hidePopup = l = d.hideFunc), s.filterPromise.then(function(f) {
        r(a), f.afterGuiAttached && f.afterGuiAttached({ container: "columnMenu", hidePopup: l });
      }), e.setMenuVisible(!0, "contextMenu");
    }, t.prototype.trapFocusWithin = function(e, r) {
      e.key !== P.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(r, !1, e.shiftKey) || (e.preventDefault(), this.focusService.focusInto(r, e.shiftKey));
    }, t.prototype.isMenuEnabled = function(e) {
      return e.isFilterAllowed();
    }, Lo([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), Lo([
      h("popupService")
    ], t.prototype, "popupService", void 0), Lo([
      h("focusService")
    ], t.prototype, "focusService", void 0), Lo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = Lo([
      U("menuFactory")
    ], t), t;
  }(D)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var E_ = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, su = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(E_(arguments[t]));
  return n;
}, gd = (
  /** @class */
  function() {
    function n(t, e, r) {
      if (!e) {
        console.error("AG Grid: no gridOptions provided to the grid");
        return;
      }
      this.gridOptions = e, new vd().create(t, e, function(o) {
        var i = new Ac(t);
        o.createBean(i);
      }, void 0, r);
    }
    return n.prototype.destroy = function() {
      this.gridOptions && this.gridOptions.api && this.gridOptions.api.destroy();
    }, n;
  }()
), vd = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.create = function(t, e, r, o, i) {
      var s = this, a = !!e.debug, l = this.getRegisteredModules(i), u = this.createBeansList(e.rowModelType, l), p = this.createProvidedBeans(t, e, i);
      if (u) {
        var c = {
          providedBeanInstances: p,
          beanClasses: u,
          debug: a
        }, d = new qn("AG Grid", function() {
          return e.debug;
        }), f = new qn("Context", function() {
          return c.debug;
        }), g = new Nu(c, f), y = g.getBean("beans");
        this.registerModuleUserComponents(y, l), this.registerStackComponents(y, l), this.registerControllers(y, l), r(g), y.ctrlsService.whenReady(function() {
          s.setColumnsAndData(y), s.dispatchGridReadyEvent(y, e);
          var C = Q.isRegistered(q.EnterpriseCoreModule);
          d.log("initialised successfully, enterprise = " + C);
        }), o && o(g);
      }
    }, n.prototype.registerControllers = function(t, e) {
      e.forEach(function(r) {
        r.controllers && r.controllers.forEach(function(o) {
          return t.ctrlsFactory.register(o);
        });
      });
    }, n.prototype.registerStackComponents = function(t, e) {
      var r = this.createAgStackComponentsList(e);
      t.agStackComponentsRegistry.setupComponents(r);
    }, n.prototype.getRegisteredModules = function(t) {
      var e = t ? t.modules : null, r = Q.getRegisteredModules(), o = [], i = {};
      function s(a, l) {
        function u(p) {
          i[p.moduleName] || (i[p.moduleName] = !0, o.push(p), Q.register(p, a));
        }
        u(l), l.dependantModules && l.dependantModules.forEach(s.bind(null, a));
      }
      return e && e.forEach(s.bind(null, !0)), r && r.forEach(s.bind(null, !Q.isPackageBased())), o;
    }, n.prototype.registerModuleUserComponents = function(t, e) {
      var r = this.extractModuleEntity(e, function(o) {
        return o.userComponents ? o.userComponents : [];
      });
      r.forEach(function(o) {
        t.userComponentRegistry.registerDefaultComponent(o.componentName, o.componentClass);
      });
    }, n.prototype.createProvidedBeans = function(t, e, r) {
      var o = r ? r.frameworkOverrides : null;
      K(o) && (o = new xc());
      var i = {
        gridOptions: e,
        eGridDiv: t,
        $scope: r ? r.$scope : null,
        $compile: r ? r.$compile : null,
        globalEventListener: r ? r.globalEventListener : null,
        frameworkOverrides: o
      };
      return r && r.providedBeanInstances && Object.assign(i, r.providedBeanInstances), i;
    }, n.prototype.createAgStackComponentsList = function(t) {
      var e = [
        { componentName: "AgCheckbox", componentClass: eo },
        { componentName: "AgRadioButton", componentClass: Nc },
        { componentName: "AgToggleButton", componentClass: od },
        { componentName: "AgInputTextField", componentClass: La },
        { componentName: "AgInputTextArea", componentClass: Qc },
        { componentName: "AgInputNumberField", componentClass: ed },
        { componentName: "AgInputRange", componentClass: td },
        { componentName: "AgSelect", componentClass: _a },
        { componentName: "AgSlider", componentClass: Jc },
        { componentName: "AgAngleSelect", componentClass: rd },
        { componentName: "AgColorPicker", componentClass: Zc },
        { componentName: "AgGridBody", componentClass: wc },
        { componentName: "AgHeaderRoot", componentClass: hc },
        { componentName: "AgPagination", componentClass: mm },
        { componentName: "AgOverlayWrapper", componentClass: Rm },
        { componentName: "AgGroupComponent", componentClass: Yc },
        { componentName: "AgPanel", componentClass: Ia },
        { componentName: "AgDialog", componentClass: Ma },
        { componentName: "AgRowContainer", componentClass: hd },
        { componentName: "AgFakeHorizontalScroll", componentClass: u_ }
      ], r = this.extractModuleEntity(t, function(o) {
        return o.agStackComponents ? o.agStackComponents : [];
      });
      return e = e.concat(r), e;
    }, n.prototype.createBeansList = function(t, e) {
      var r = this.getRowModelClass(t, e);
      if (r) {
        var o = [
          r,
          Ta,
          nd,
          id,
          ad,
          ZC,
          lc,
          Kp,
          sm,
          lm,
          Kc,
          qp,
          vm,
          Pc,
          sd,
          Fc,
          qu,
          qt,
          B,
          Sc,
          Qp,
          fc,
          Ku,
          oc,
          Vc,
          ec,
          Ec,
          Uu,
          Rc,
          jc,
          zc,
          Bc,
          gc,
          Oc,
          Yu,
          Tc,
          fd,
          et,
          Jp,
          Yr,
          Mc,
          Uc,
          Lc,
          Gc,
          Wc,
          Hc,
          Ic,
          $C,
          YC,
          $c,
          XC,
          rm,
          kc,
          Km,
          Xu,
          Xm,
          Qm,
          ld,
          ud,
          pd,
          c_,
          __,
          i_
        ], i = this.extractModuleEntity(e, function(a) {
          return a.beans ? a.beans : [];
        });
        o.push.apply(o, su(i));
        var s = [];
        return o.forEach(function(a) {
          s.indexOf(a) < 0 && s.push(a);
        }), s;
      }
    }, n.prototype.extractModuleEntity = function(t, e) {
      return [].concat.apply([], su(t.map(e)));
    }, n.prototype.setColumnsAndData = function(t) {
      var e = t.gridOptionsWrapper.getColumnDefs();
      t.columnModel.setColumnDefs(e || [], "gridInitializing"), t.rowModel.start();
    }, n.prototype.dispatchGridReadyEvent = function(t, e) {
      var r = {
        type: v.EVENT_GRID_READY,
        api: e.api,
        columnApi: e.columnApi
      };
      t.eventService.dispatchEvent(r);
    }, n.prototype.getRowModelClass = function(t, e) {
      t || (t = w.ROW_MODEL_TYPE_CLIENT_SIDE);
      var r = {};
      e.forEach(function(i) {
        ge(i.rowModels, function(s, a) {
          r[s] = a;
        });
      });
      var o = r[t];
      if (O(o))
        return o;
      t === w.ROW_MODEL_TYPE_INFINITE && console.error('AG Grid: Row Model "Infinite" not found. Please ensure the ' + q.InfiniteRowModelModule + " is registered.';"), console.error("AG Grid: could not find matching row model for rowModelType " + t), t === w.ROW_MODEL_TYPE_VIEWPORT && console.error('AG Grid: Row Model "Viewport" not found. Please ensure the AG Grid Enterprise Module ' + q.ViewportRowModelModule + " is registered.';"), t === w.ROW_MODEL_TYPE_SERVER_SIDE && console.error('AG Grid: Row Model "Server Side" not found. Please ensure the AG Grid Enterprise Module ' + q.ServerSideRowModelModule + " is registered.';"), t === w.ROW_MODEL_TYPE_CLIENT_SIDE && console.error('AG Grid: Row Model "Client Side" not found. Please ensure the ' + q.ClientSideRowModelModule + " is registered.';");
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function R_(n) {
  var t = n.module("agGrid", []);
  t.directive("agGrid", function() {
    return {
      restrict: "A",
      controller: ["$element", "$scope", "$compile", "$attrs", S_],
      scope: !0
    };
  });
}
function S_(n, t, e, r) {
  var o, i = r.agGrid;
  if (o = t.$eval(i), !o) {
    console.warn("WARNING - grid options for AG Grid not found. Please ensure the attribute ag-grid points to a valid object on the scope");
    return;
  }
  var s = n[0], a = {
    $scope: t,
    $compile: e
  }, l = new gd(s, o, a), u = i + ".quickFilterText", p = t.$watch(u, function(c) {
    o.api.setQuickFilter(c);
  });
  t.$on("$destroy", function() {
    p(), l && l.destroy(), l = null;
  });
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var O_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), yn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, T_ = (
  /** @class */
  function(n) {
    O_(t, n);
    function t(e) {
      var r = n.call(this, t.getTemplate(e.cssClass)) || this;
      return r.items = [], r.tabbedItemScrollMap = /* @__PURE__ */ new Map(), r.params = e, e.items && e.items.forEach(function(o) {
        return r.addItem(o);
      }), r;
    }
    return t.prototype.postConstruct = function() {
      this.createManagedBean(new Xt(this.getFocusableElement(), {
        onTabKeyDown: this.onTabKeyDown.bind(this),
        handleKeyDown: this.handleKeyDown.bind(this)
      }));
    }, t.getTemplate = function(e) {
      return (
        /* html */
        '<div class="ag-tabs ' + e + `">
            <div ref="eHeader" role="tablist" class="ag-tabs-header ` + (e ? e + "-header" : "") + `"></div>
            <div ref="eBody" role="presentation" class="ag-tabs-body ` + (e ? e + "-body" : "") + `"></div>
        </div>`
      );
    }, t.prototype.handleKeyDown = function(e) {
      var r = this.gridOptionsWrapper.getDocument();
      switch (e.key) {
        case P.RIGHT:
        case P.LEFT:
          if (!this.eHeader.contains(r.activeElement))
            return;
          var o = this.items.indexOf(this.activeItem), i = e.key === P.RIGHT ? Math.min(o + 1, this.items.length - 1) : Math.max(o - 1, 0);
          if (o === i)
            return;
          e.preventDefault();
          var s = this.items[i];
          this.showItemWrapper(s), s.eHeaderButton.focus();
          break;
        case P.UP:
        case P.DOWN:
          e.stopPropagation();
          break;
      }
    }, t.prototype.onTabKeyDown = function(e) {
      if (!e.defaultPrevented) {
        var r = this, o = r.focusService, i = r.eHeader, s = r.eBody, a = r.activeItem, l = this.gridOptionsWrapper.getDocument(), u = l.activeElement;
        if (e.preventDefault(), i.contains(u))
          o.focusInto(s, e.shiftKey);
        else if (o.isFocusUnderManagedComponent(s))
          a.eHeaderButton.focus();
        else {
          var p = o.findNextFocusableElement(s, !1, e.shiftKey);
          p ? p.focus() : a.eHeaderButton.focus();
        }
      }
    }, t.prototype.setAfterAttachedParams = function(e) {
      this.afterAttachedParams = e;
    }, t.prototype.showFirstItem = function() {
      this.items.length > 0 && this.showItemWrapper(this.items[0]);
    }, t.prototype.addItem = function(e) {
      var r = document.createElement("span");
      rt(r, "tab"), r.setAttribute("tabIndex", "-1"), r.appendChild(e.title), r.classList.add("ag-tab"), this.eHeader.appendChild(r), Tr(r, e.titleLabel);
      var o = {
        tabbedItem: e,
        eHeaderButton: r
      };
      this.items.push(o), r.addEventListener("click", this.showItemWrapper.bind(this, o));
    }, t.prototype.showItem = function(e) {
      var r = this.items.find(function(o) {
        return o.tabbedItem === e;
      });
      r && this.showItemWrapper(r);
    }, t.prototype.showItemWrapper = function(e) {
      var r = this, o = e.tabbedItem, i = e.eHeaderButton;
      if (this.params.onItemClicked && this.params.onItemClicked({ item: o }), this.activeItem === e) {
        Gu(this.params.onActiveItemClicked);
        return;
      }
      this.lastScrollListener && (this.lastScrollListener = this.lastScrollListener()), Ct(this.eBody), o.bodyPromise.then(function(s) {
        r.eBody.appendChild(s);
        var a = !r.focusService.isKeyboardMode();
        if (r.focusService.focusInto(r.eBody, !1, a), o.afterAttachedCallback && o.afterAttachedCallback(r.afterAttachedParams), r.params.keepScrollPosition) {
          var l = o.getScrollableContainer && o.getScrollableContainer() || s;
          r.lastScrollListener = r.addManagedListener(l, "scroll", function() {
            r.tabbedItemScrollMap.set(o.name, l.scrollTop);
          });
          var u = r.tabbedItemScrollMap.get(o.name);
          u !== void 0 && setTimeout(function() {
            l.scrollTop = u;
          }, 0);
        }
      }), this.activeItem && this.activeItem.eHeaderButton.classList.remove("ag-tab-selected"), i.classList.add("ag-tab-selected"), this.activeItem = e;
    }, yn([
      h("focusService")
    ], t.prototype, "focusService", void 0), yn([
      T("eHeader")
    ], t.prototype, "eHeader", void 0), yn([
      T("eBody")
    ], t.prototype, "eBody", void 0), yn([
      G
    ], t.prototype, "postConstruct", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function P_(n) {
  return new ut(function(t) {
    var e = new XMLHttpRequest();
    e.open("GET", n.url), e.send(), e.onreadystatechange = function() {
      e.readyState === 4 && e.status === 200 && t(JSON.parse(e.responseText));
    };
  });
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ks;
(function(n) {
  n.Applied = "Applied", n.StoreNotFound = "StoreNotFound", n.StoreLoading = "StoreLoading", n.StoreWaitingToLoad = "StoreWaitingToLoad", n.StoreLoadingFailed = "StoreLoadingFailed", n.StoreWrongType = "StoreWrongType", n.Cancelled = "Cancelled";
})(Ks || (Ks = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var b_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Jn = globalThis && globalThis.__assign || function() {
  return Jn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var o in t)
        Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
    }
    return n;
  }, Jn.apply(this, arguments);
}, au = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, yd = (
  /** @class */
  function(n) {
    b_(t, n);
    function t(e) {
      e === void 0 && (e = 1);
      var r = n.call(
        this,
        /* html */
        '<div class="ag-menu-list" role="tree"></div>'
      ) || this;
      return r.level = e, r.menuItems = [], r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.initialiseTabGuard({
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        }
      });
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.getParentComponent(), o = r && r.getGui(), i = o && o.classList.contains("ag-focus-managed");
      i || e.preventDefault(), e.shiftKey && this.closeIfIsChild(e);
    }, t.prototype.handleKeyDown = function(e) {
      switch (e.key) {
        case P.UP:
        case P.RIGHT:
        case P.DOWN:
        case P.LEFT:
          e.preventDefault(), this.handleNavKey(e.key);
          break;
        case P.ESCAPE:
          var r = this.findTopMenu();
          r && this.focusService.focusInto(r.getGui());
          break;
      }
    }, t.prototype.clearActiveItem = function() {
      this.activeMenuItem && (this.activeMenuItem.deactivate(), this.activeMenuItem = null);
    }, t.prototype.addMenuItems = function(e) {
      var r = this;
      e != null && e.forEach(function(o) {
        o === "separator" ? r.addSeparator() : typeof o == "string" ? console.warn("AG Grid: unrecognised menu item " + o) : r.addItem(o);
      });
    }, t.prototype.addItem = function(e) {
      var r = this, o = this.createManagedBean(new jr(Jn(Jn({}, e), { isAnotherSubMenuOpen: function() {
        return r.menuItems.some(function(i) {
          return i.isSubMenuOpen();
        });
      } })));
      o.setParentComponent(this), vp(o.getGui(), this.level), this.menuItems.push(o), this.appendChild(o.getGui()), this.addManagedListener(o, jr.EVENT_MENU_ITEM_SELECTED, function(i) {
        r.dispatchEvent(i);
      }), this.addManagedListener(o, jr.EVENT_MENU_ITEM_ACTIVATED, function(i) {
        r.activeMenuItem && r.activeMenuItem !== i.menuItem && r.activeMenuItem.deactivate(), r.activeMenuItem = i.menuItem;
      });
    }, t.prototype.activateFirstItem = function() {
      var e = this.menuItems.filter(function(r) {
        return !r.isDisabled();
      })[0];
      e && e.activate();
    }, t.prototype.addSeparator = function() {
      var e = (
        /* html */
        `
            <div class="ag-menu-separator" aria-hidden="true">
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
            </div>`
      );
      this.appendChild(Ue(e));
    }, t.prototype.findTopMenu = function() {
      var e = this.getParentComponent();
      if (!e && this instanceof t)
        return this;
      for (; ; ) {
        var r = e && e.getParentComponent && e.getParentComponent();
        if (!r || !(r instanceof t || r instanceof jr))
          break;
        e = r;
      }
      return e instanceof t ? e : void 0;
    }, t.prototype.handleNavKey = function(e) {
      switch (e) {
        case P.UP:
        case P.DOWN:
          var r = this.findNextItem(e === P.UP);
          r && r !== this.activeMenuItem && r.activate();
          return;
      }
      var o = this.gridOptionsWrapper.isEnableRtl() ? P.RIGHT : P.LEFT;
      e === o ? this.closeIfIsChild() : this.openChild();
    }, t.prototype.closeIfIsChild = function(e) {
      var r = this.getParentComponent();
      r && r instanceof jr && (e && e.preventDefault(), r.closeSubMenu(), r.getGui().focus());
    }, t.prototype.openChild = function() {
      this.activeMenuItem && this.activeMenuItem.openSubMenu(!0);
    }, t.prototype.findNextItem = function(e) {
      var r = this.menuItems.filter(function(l) {
        return !l.isDisabled();
      });
      if (r.length) {
        if (!this.activeMenuItem)
          return e ? _e(r) : r[0];
        e && r.reverse();
        for (var o, i = !1, s = 0; s < r.length; s++) {
          var a = r[s];
          if (!i) {
            a === this.activeMenuItem && (i = !0);
            continue;
          }
          o = a;
          break;
        }
        return o || this.activeMenuItem;
      }
    }, t.prototype.destroy = function() {
      this.clearActiveItem(), n.prototype.destroy.call(this);
    }, au([
      h("focusService")
    ], t.prototype, "focusService", void 0), au([
      G
    ], t.prototype, "postConstruct", null), t;
  }(Ko)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var D_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), A_ = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Cd = (
  /** @class */
  function(n) {
    D_(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.wrappedComponent = e, r.setTemplateFromElement(e.getGui()), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.initialiseTabGuard({
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        }
      });
    }, t.prototype.handleKeyDown = function(e) {
      e.key === P.ESCAPE && this.closePanel();
    }, t.prototype.onTabKeyDown = function(e) {
      e.defaultPrevented || (this.closePanel(), e.preventDefault());
    }, t.prototype.closePanel = function() {
      var e = this.parentComponent;
      e.closeSubMenu(), setTimeout(function() {
        return e.getGui().focus();
      }, 0);
    }, A_([
      G
    ], t.prototype, "postConstruct", null), t;
  }(Ko)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var F_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), lu = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, jr = (
  /** @class */
  function(n) {
    F_(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.params = e, r.isActive = !1, r.subMenuIsOpen = !1, r.setTemplate(
        /* html */
        '<div class="' + r.getClassName() + '" tabindex="-1" role="treeitem"></div>'
      ), r;
    }
    return t.prototype.init = function() {
      var e = this;
      this.addIcon(), this.addName(), this.addShortcut(), this.addSubMenu(), this.addTooltip();
      var r = this.getGui();
      this.params.disabled ? (this.addCssClass(this.getClassName("disabled")), kr(r, !0)) : (this.addGuiEventListener("click", function(o) {
        return e.onItemSelected(o);
      }), this.addGuiEventListener("keydown", function(o) {
        (o.key === P.ENTER || o.key === P.SPACE) && (o.preventDefault(), e.onItemSelected(o));
      }), this.addGuiEventListener("mousedown", function(o) {
        o.stopPropagation(), o.preventDefault();
      }), this.addGuiEventListener("mouseenter", function() {
        return e.onMouseEnter();
      }), this.addGuiEventListener("mouseleave", function() {
        return e.onMouseLeave();
      })), this.params.cssClasses && this.params.cssClasses.forEach(function(o) {
        return e.addCssClass(o);
      });
    }, t.prototype.isDisabled = function() {
      return !!this.params.disabled;
    }, t.prototype.openSubMenu = function(e) {
      var r = this;
      if (e === void 0 && (e = !1), this.closeSubMenu(), !!this.params.subMenu) {
        var o = Ue(
          /* html */
          '<div class="ag-menu" role="presentation"></div>'
        ), i;
        if (this.params.subMenu instanceof Array) {
          var s = fp(this.getGui()), a = isNaN(s) ? 1 : s + 1, l = this.createBean(new yd(a));
          l.setParentComponent(this), l.addMenuItems(this.params.subMenu), o.appendChild(l.getGui()), this.addManagedListener(l, t.EVENT_MENU_ITEM_SELECTED, function(_) {
            return r.dispatchEvent(_);
          }), l.addGuiEventListener("mouseenter", function() {
            return r.cancelDeactivate();
          }), i = function() {
            return r.destroyBean(l);
          }, e && setTimeout(function() {
            return l.activateFirstItem();
          }, 0);
        } else {
          var u = this.params.subMenu, p = this.createBean(new Cd(u));
          p.setParentComponent(this);
          var c = p.getGui(), d = "mouseenter", f = function() {
            return r.cancelDeactivate();
          };
          c.addEventListener(d, f), i = function() {
            return c.removeEventListener(d, f);
          }, o.appendChild(c), u.afterGuiAttached && setTimeout(function() {
            return u.afterGuiAttached();
          }, 0);
        }
        var g = this.getGui(), y = this.popupService.positionPopupForMenu.bind(this.popupService, { eventSource: g, ePopup: o }), C = this.gridOptionsWrapper.getLocaleTextFunc(), m = this.popupService.addPopup({
          modal: !0,
          eChild: o,
          positionCallback: y,
          anchorToElement: g,
          ariaLabel: C("ariaLabelSubMenu", "SubMenu")
        });
        this.subMenuIsOpen = !0, vt(g, !0), this.hideSubMenu = function() {
          m && m.hideFunc(), r.subMenuIsOpen = !1, vt(g, !1), i();
        };
      }
    }, t.prototype.closeSubMenu = function() {
      this.hideSubMenu && (this.hideSubMenu(), this.hideSubMenu = null, vt(this.getGui(), !1));
    }, t.prototype.isSubMenuOpen = function() {
      return this.subMenuIsOpen;
    }, t.prototype.activate = function(e) {
      var r = this;
      this.cancelActivate(), !this.params.disabled && (this.isActive = !0, this.addCssClass(this.getClassName("active")), this.getGui().focus(), e && this.params.subMenu && window.setTimeout(function() {
        r.isAlive() && r.isActive && r.openSubMenu();
      }, 300), this.onItemActivated());
    }, t.prototype.deactivate = function() {
      this.cancelDeactivate(), this.removeCssClass(this.getClassName("active")), this.isActive = !1, this.subMenuIsOpen && this.hideSubMenu();
    }, t.prototype.addIcon = function() {
      if (!(!this.params.checked && !this.params.icon && this.params.isCompact)) {
        var e = Ue(
          /* html */
          '<span ref="eIcon" class="' + this.getClassName("part") + " " + this.getClassName("icon") + '" role="presentation"></span>'
        );
        this.params.checked ? e.appendChild(xe("check", this.gridOptionsWrapper)) : this.params.icon && (zo(this.params.icon) ? e.appendChild(this.params.icon) : typeof this.params.icon == "string" ? e.innerHTML = this.params.icon : console.warn("AG Grid: menu item icon must be DOM node or string")), this.getGui().appendChild(e);
      }
    }, t.prototype.addName = function() {
      if (!(!this.params.name && this.params.isCompact)) {
        var e = Ue(
          /* html */
          '<span ref="eName" class="' + this.getClassName("part") + " " + this.getClassName("text") + '">' + (this.params.name || "") + "</span>"
        );
        this.getGui().appendChild(e);
      }
    }, t.prototype.addTooltip = function() {
      this.params.tooltip && (this.tooltip = this.params.tooltip, this.gridOptionsWrapper.isEnableBrowserTooltips() ? this.getGui().setAttribute("title", this.tooltip) : this.createManagedBean(new ai(this)));
    }, t.prototype.getTooltipParams = function() {
      return {
        location: "menu",
        value: this.tooltip
      };
    }, t.prototype.addShortcut = function() {
      if (!(!this.params.shortcut && this.params.isCompact)) {
        var e = Ue(
          /* html */
          '<span ref="eShortcut" class="' + this.getClassName("part") + " " + this.getClassName("shortcut") + '">' + (this.params.shortcut || "") + "</span>"
        );
        this.getGui().appendChild(e);
      }
    }, t.prototype.addSubMenu = function() {
      if (!(!this.params.subMenu && this.params.isCompact)) {
        var e = Ue(
          /* html */
          '<span ref="ePopupPointer" class="' + this.getClassName("part") + " " + this.getClassName("popup-pointer") + '"></span>'
        ), r = this.getGui();
        if (this.params.subMenu) {
          var o = this.gridOptionsWrapper.isEnableRtl() ? "smallLeft" : "smallRight";
          vt(r, !1), e.appendChild(xe(o, this.gridOptionsWrapper));
        }
        r.appendChild(e);
      }
    }, t.prototype.onItemSelected = function(e) {
      if (this.params.action ? this.params.action() : this.openSubMenu(e && e.type === "keydown"), !(this.params.subMenu && !this.params.action)) {
        var r = {
          type: t.EVENT_MENU_ITEM_SELECTED,
          action: this.params.action,
          checked: this.params.checked,
          cssClasses: this.params.cssClasses,
          disabled: this.params.disabled,
          icon: this.params.icon,
          name: this.params.name,
          shortcut: this.params.shortcut,
          subMenu: this.params.subMenu,
          tooltip: this.params.tooltip,
          event: e
        };
        this.dispatchEvent(r);
      }
    }, t.prototype.onItemActivated = function() {
      var e = {
        type: t.EVENT_MENU_ITEM_ACTIVATED,
        menuItem: this
      };
      this.dispatchEvent(e);
    }, t.prototype.cancelActivate = function() {
      this.activateTimeoutId && (window.clearTimeout(this.activateTimeoutId), this.activateTimeoutId = 0);
    }, t.prototype.cancelDeactivate = function() {
      this.deactivateTimeoutId && (window.clearTimeout(this.deactivateTimeoutId), this.deactivateTimeoutId = 0);
    }, t.prototype.onMouseEnter = function() {
      var e = this;
      this.cancelDeactivate(), this.params.isAnotherSubMenuOpen() ? this.activateTimeoutId = window.setTimeout(function() {
        return e.activate(!0);
      }, t.ACTIVATION_DELAY) : this.activate(!0);
    }, t.prototype.onMouseLeave = function() {
      var e = this;
      this.cancelActivate(), this.isSubMenuOpen() ? this.deactivateTimeoutId = window.setTimeout(function() {
        return e.deactivate();
      }, t.ACTIVATION_DELAY) : this.deactivate();
    }, t.prototype.getClassName = function(e) {
      var r = this.params.isCompact ? "ag-compact-menu-option" : "ag-menu-option";
      return e ? r + "-" + e : r;
    }, t.EVENT_MENU_ITEM_SELECTED = "menuItemSelected", t.EVENT_MENU_ITEM_ACTIVATED = "menuItemActivated", t.ACTIVATION_DELAY = 80, lu([
      h("popupService")
    ], t.prototype, "popupService", void 0), lu([
      G
    ], t.prototype, "init", null), t;
  }(ee)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var I_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Cn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, M_ = (
  /** @class */
  function(n) {
    I_(t, n);
    function t(e, r, o) {
      e === void 0 && (e = "default"), r === void 0 && (r = "listbox");
      var i = n.call(this, t.getTemplate(e)) || this;
      return i.cssIdentifier = e, i.ariaRole = r, i.listName = o, i.renderedRows = /* @__PURE__ */ new Map(), i.rowHeight = 20, i.isDestroyed = !1, i;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.addScrollListener(), this.rowHeight = this.getItemHeight(), this.addResizeObserver(), this.initialiseTabGuard({
        onFocusIn: function(r) {
          return e.onFocusIn(r);
        },
        onFocusOut: function(r) {
          return e.onFocusOut(r);
        },
        focusInnerElement: function(r) {
          return e.focusInnerElement(r);
        },
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        }
      }), this.setAriaProperties();
    }, t.prototype.setAriaProperties = function() {
      var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = e("ariaDefaultListName", this.listName || "List"), o = this.eContainer;
      rt(o, this.ariaRole), Tr(o, r);
    }, t.prototype.addResizeObserver = function() {
      var e = this.drawVirtualRows.bind(this), r = this.resizeObserverService.observeResize(this.getGui(), e);
      this.addDestroyFunc(r);
    }, t.prototype.focusInnerElement = function(e) {
      this.focusRow(e ? this.model.getRowCount() - 1 : 0);
    }, t.prototype.onFocusIn = function(e) {
      var r = e.target;
      return r.classList.contains("ag-virtual-list-item") && (this.lastFocusedRowIndex = gp(r) - 1), !1;
    }, t.prototype.onFocusOut = function(e) {
      return this.getFocusableElement().contains(e.relatedTarget) || (this.lastFocusedRowIndex = null), !1;
    }, t.prototype.handleKeyDown = function(e) {
      switch (e.key) {
        case P.UP:
        case P.DOWN:
          this.navigate(e.key === P.UP) && e.preventDefault();
          break;
      }
    }, t.prototype.onTabKeyDown = function(e) {
      this.navigate(e.shiftKey) ? e.preventDefault() : this.focusService.focusInto(this.getGui(), !e.shiftKey);
    }, t.prototype.navigate = function(e) {
      if (this.lastFocusedRowIndex == null)
        return !1;
      var r = this.lastFocusedRowIndex + (e ? -1 : 1);
      return r < 0 || r >= this.model.getRowCount() ? !1 : (this.focusRow(r), !0);
    }, t.prototype.getLastFocusedRow = function() {
      return this.lastFocusedRowIndex;
    }, t.prototype.focusRow = function(e) {
      var r = this;
      this.ensureIndexVisible(e), window.setTimeout(function() {
        var o = r.renderedRows.get(e);
        o && o.eDiv.focus();
      }, 10);
    }, t.prototype.getComponentAt = function(e) {
      var r = this.renderedRows.get(e);
      return r && r.rowComponent;
    }, t.getTemplate = function(e) {
      return (
        /* html */
        `
            <div class="ag-virtual-list-viewport ag-` + e + `-virtual-list-viewport" role="presentation">
                <div class="ag-virtual-list-container ag-` + e + `-virtual-list-container" ref="eContainer"></div>
            </div>`
      );
    }, t.prototype.getItemHeight = function() {
      return this.gridOptionsWrapper.getListItemHeight();
    }, t.prototype.ensureIndexVisible = function(e) {
      var r = this.model.getRowCount();
      if (typeof e != "number" || e < 0 || e >= r) {
        console.warn("AG Grid: invalid row index for ensureIndexVisible: " + e);
        return;
      }
      var o = e * this.rowHeight, i = o + this.rowHeight, s = this.getGui(), a = s.scrollTop, l = s.offsetHeight, u = a + l, p = a > o, c = u < i;
      if (p)
        s.scrollTop = o;
      else if (c) {
        var d = i - l;
        s.scrollTop = d;
      }
    }, t.prototype.setComponentCreator = function(e) {
      this.componentCreator = e;
    }, t.prototype.getRowHeight = function() {
      return this.rowHeight;
    }, t.prototype.getScrollTop = function() {
      return this.getGui().scrollTop;
    }, t.prototype.setRowHeight = function(e) {
      this.rowHeight = e, this.refresh();
    }, t.prototype.refresh = function() {
      var e = this;
      if (!(this.model == null || this.isDestroyed)) {
        var r = this.model.getRowCount();
        this.eContainer.style.height = r * this.rowHeight + "px", Lu(function() {
          return e.eContainer.clientHeight >= r * e.rowHeight;
        }, function() {
          e.isDestroyed || (e.clearVirtualRows(), e.drawVirtualRows());
        });
      }
    }, t.prototype.clearVirtualRows = function() {
      var e = this;
      this.renderedRows.forEach(function(r, o) {
        return e.removeRow(o);
      });
    }, t.prototype.drawVirtualRows = function() {
      var e = this.getGui(), r = e.scrollTop, o = r + e.offsetHeight, i = Math.floor(r / this.rowHeight), s = Math.floor(o / this.rowHeight);
      this.ensureRowsRendered(i, s);
    }, t.prototype.ensureRowsRendered = function(e, r) {
      var o = this;
      this.renderedRows.forEach(function(s, a) {
        (a < e || a > r) && a !== o.lastFocusedRowIndex && o.removeRow(a);
      });
      for (var i = e; i <= r; i++)
        this.renderedRows.has(i) || i < this.model.getRowCount() && this.insertRow(i);
    }, t.prototype.insertRow = function(e) {
      var r = this, o = this.model.getRow(e), i = document.createElement("div");
      if (i.classList.add("ag-virtual-list-item", "ag-" + this.cssIdentifier + "-virtual-list-item"), rt(i, this.ariaRole === "tree" ? "treeitem" : "option"), da(i, this.model.getRowCount()), ha(i, e + 1), i.setAttribute("tabindex", "-1"), typeof this.model.isRowSelected == "function") {
        var s = this.model.isRowSelected(e);
        Zr(i, !!s), Rp(i, s);
      }
      i.style.height = this.rowHeight + "px", i.style.top = this.rowHeight * e + "px";
      var a = this.componentCreator(o, i);
      a.addGuiEventListener("focusin", function() {
        return r.lastFocusedRowIndex = e;
      }), i.appendChild(a.getGui()), this.renderedRows.has(e - 1) ? this.renderedRows.get(e - 1).eDiv.insertAdjacentElement("afterend", i) : this.renderedRows.has(e + 1) ? this.renderedRows.get(e + 1).eDiv.insertAdjacentElement("beforebegin", i) : this.eContainer.appendChild(i), this.renderedRows.set(e, { rowComponent: a, eDiv: i });
    }, t.prototype.removeRow = function(e) {
      var r = this.renderedRows.get(e);
      this.eContainer.removeChild(r.eDiv), this.destroyBean(r.rowComponent), this.renderedRows.delete(e);
    }, t.prototype.addScrollListener = function() {
      var e = this;
      this.addGuiEventListener("scroll", function() {
        return e.drawVirtualRows();
      });
    }, t.prototype.setModel = function(e) {
      this.model = e;
    }, t.prototype.destroy = function() {
      this.isDestroyed || (this.clearVirtualRows(), this.isDestroyed = !0, n.prototype.destroy.call(this));
    }, Cn([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Cn([
      h("focusService")
    ], t.prototype, "focusService", void 0), Cn([
      T("eContainer")
    ], t.prototype, "eContainer", void 0), Cn([
      G
    ], t.prototype, "postConstruct", null), t;
  }(Ko)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
function L_(n, t, e, r, o) {
  o === void 0 && (o = !1), console.warn("AG Grid: Since ag-grid 11.0.0 defaultGroupComparator is not necessary. You can remove this from your colDef");
  var i = O(e) && e.group, s = O(r) && r.group, a = i && s, l = !i && !s;
  return a ? ws(e.key, r.key, o) : l ? ws(n, t, o) : i ? 1 : -1;
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var G_ = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.wrap = function(t, e, r, o) {
      var i = this;
      r === void 0 && (r = []);
      var s = this.createWrapper(t, o);
      return e.forEach(function(a) {
        i.createMethod(s, a, !0);
      }), r.forEach(function(a) {
        i.createMethod(s, a, !1);
      }), s;
    }, n.prototype.unwrap = function(t) {
      return t;
    }, n.prototype.createMethod = function(t, e, r) {
      t.addMethod(e, this.createMethodProxy(t, e, r));
    }, n.prototype.createMethodProxy = function(t, e, r) {
      return function() {
        return t.hasMethod(e) ? t.callMethod(e, arguments) : (r && console.warn("AG Grid: Framework component is missing the method " + e + "()"), null);
      };
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var Ys;
(function(n) {
  n.InsideBase = "insideBase", n.InsideEnd = "insideEnd", n.Center = "center", n.OutsideEnd = "outsideEnd";
})(Ys || (Ys = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v27.1.0
 * @link http://www.ag-grid.com/
 * @license MIT
 */
var ao = typeof global > "u" ? {} : global;
ao.HTMLElement = typeof HTMLElement > "u" ? {} : HTMLElement;
ao.HTMLButtonElement = typeof HTMLButtonElement > "u" ? {} : HTMLButtonElement;
ao.HTMLSelectElement = typeof HTMLSelectElement > "u" ? {} : HTMLSelectElement;
ao.HTMLInputElement = typeof HTMLInputElement > "u" ? {} : HTMLInputElement;
ao.Node = typeof Node > "u" ? {} : Node;
ao.MouseEvent = typeof MouseEvent > "u" ? {} : MouseEvent;
const N_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AbstractHeaderCellCtrl: $o,
  AgAbstractField: jt,
  AgAngleSelect: rd,
  AgCheckbox: eo,
  AgColorPicker: Zc,
  AgDialog: Ma,
  AgGroupComponent: Yc,
  AgInputNumberField: ed,
  AgInputRange: td,
  AgInputTextArea: Qc,
  AgInputTextField: La,
  AgMenuItemComponent: jr,
  AgMenuList: yd,
  AgMenuPanel: Cd,
  AgPanel: Ia,
  AgPromise: ut,
  get AgPromiseStatus() {
    return Cr;
  },
  AgRadioButton: Nc,
  AgSelect: _a,
  AgSlider: Jc,
  AgStackComponentsRegistry: Xu,
  AgToggleButton: od,
  AlignedGridsService: jc,
  AnimateShowChangeCellRenderer: Up,
  AnimateSlideCellRenderer: kp,
  AnimationFrameService: kc,
  AutoScrollService: vc,
  AutoWidthCalculator: Tc,
  Autowired: h,
  get BarColumnLabelPlacement() {
    return Ys;
  },
  BaseComponentWrapper: G_,
  Bean: U,
  BeanStub: D,
  Beans: Ta,
  BodyDropPivotTarget: sc,
  BodyDropTarget: ac,
  CellComp: dd,
  CellCtrl: ar,
  CellNavigationService: Lc,
  CellPositionUtils: id,
  get CellRangeType() {
    return mr;
  },
  ChangedPath: pi,
  CheckboxSelectionComponent: Sa,
  get ClientSideRowModelSteps() {
    return fe;
  },
  ColDefUtil: bs,
  Color: Br,
  Column: pe,
  ColumnApi: Jp,
  ColumnFactory: Uu,
  ColumnGroup: qe,
  ColumnKeyCreator: Ou,
  ColumnModel: Ku,
  ColumnUtils: Yu,
  Component: ee,
  ComponentUtil: sr,
  Constants: w,
  Context: Nu,
  CssClassApplier: Aa,
  CssClassManager: Ip,
  CtrlsService: pd,
  CustomTooltipFeature: ai,
  DateFilter: wa,
  DisplayedGroupCreator: qu,
  DragAndDropService: et,
  DragService: Fc,
  get DragSourceType() {
    return mt;
  },
  Environment: Uc,
  EventService: qt,
  Events: v,
  get ExcelFactoryMode() {
    return Kr;
  },
  ExpressionService: Ec,
  FilterManager: fc,
  FloatingFilterMapper: Yp,
  FocusService: Yr,
  Grid: gd,
  GridApi: lc,
  GridBodyComp: wc,
  GridBodyCtrl: _c,
  GridComp: Ac,
  GridCoreCreator: vd,
  GridCtrl: bc,
  GridHeaderComp: hc,
  GridHeaderCtrl: nc,
  GridOptionsWrapper: B,
  GroupCellRenderer: Vs,
  GroupCellRendererCtrl: $p,
  GroupInstanceIdCreator: ku,
  HeaderCellCtrl: pc,
  HeaderFilterCellComp: tc,
  HeaderFilterCellCtrl: uc,
  HeaderGroupCellCtrl: cc,
  get HeaderNavigationDirection() {
    return It;
  },
  HeaderNavigationService: oc,
  HeaderPositionUtils: ad,
  HeaderRowComp: rc,
  HeaderRowContainerComp: Fn,
  HeaderRowContainerCtrl: dc,
  HeaderRowCtrl: An,
  get HeaderRowType() {
    return Xe;
  },
  get HorizontalDirection() {
    return Ft;
  },
  HorizontalResizeService: Pc,
  KeyCode: P,
  LargeTextCellEditor: Vp,
  get LayoutCssClasses() {
    return Le;
  },
  Logger: qn,
  LoggerFactory: Oc,
  ManagedFocusFeature: Xt,
  get ModuleNames() {
    return q;
  },
  ModuleRegistry: Q,
  MouseEventService: Mc,
  MoveColumnFeature: ic,
  NavigationService: zc,
  NumberFilter: Ea,
  NumberSequence: si,
  Optional: de,
  PaginationProxy: Vc,
  PinnedRowModel: sd,
  PopupComponent: so,
  PopupEditorWrapper: cd,
  PopupSelectCellEditor: Bp,
  PopupService: Sc,
  PopupTextCellEditor: jp,
  PositionableFeature: Xc,
  PostConstruct: G,
  PreConstruct: Rs,
  PreDestroy: ot,
  PropertyKeys: Vt,
  ProvidedColumnGroup: Pe,
  ProvidedFilter: Vo,
  Qualifier: tt,
  QuerySelector: Gf,
  RefSelector: T,
  ResizeObserverService: Kc,
  get RowAnimationCssClasses() {
    return Sr;
  },
  RowContainerComp: hd,
  RowContainerCtrl: Kn,
  get RowContainerName() {
    return F;
  },
  get RowContainerType() {
    return lt;
  },
  RowCtrl: lr,
  get RowHighlightPosition() {
    return Ut;
  },
  RowNode: te,
  RowNodeBlock: ks,
  RowNodeBlockLoader: ld,
  RowNodeSorter: ud,
  RowPositionUtils: nd,
  RowRenderer: ec,
  ScalarFilter: Ve,
  ScrollVisibleService: Hc,
  SelectCellEditor: Ra,
  SelectableService: $c,
  get SelectionHandleType() {
    return Bo;
  },
  SelectionService: Qp,
  get ServerSideTransactionResultStatus() {
    return Ks;
  },
  SetLeftFeature: ci,
  SimpleFilter: Ae,
  SortController: Ic,
  StandardMenuFactory: fd,
  StylingService: Wc,
  TabGuardComp: Ko,
  TabGuardCtrl: Dc,
  TabbedLayout: T_,
  TemplateService: Rc,
  TextCellEditor: Un,
  TextFilter: li,
  TextFloatingFilter: Wp,
  Timer: Ff,
  TouchListener: bt,
  UserComponentFactory: qp,
  UserComponentRegistry: Kp,
  ValueCache: Bc,
  ValueFormatterService: Gc,
  ValueService: gc,
  VanillaFrameworkOverrides: xc,
  get VerticalDirection() {
    return Rr;
  },
  VirtualList: M_,
  _: se,
  defaultGroupComparator: L_,
  getRowContainerTypeForName: Zp,
  initialiseAgGridWithAngular1: R_,
  simpleHttpRequest: P_,
  stringToArray: Qu
}, Symbol.toStringTag, { value: "Module" }));
var x_ = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, uu = globalThis && globalThis.__spread || function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(x_(arguments[t]));
  return n;
}, H_ = (
  /** @class */
  function() {
    function n(t, e, r, o, i, s, a, l) {
      this.nextId = 0, this.allNodesMap = {}, this.rootNode = t, this.gridOptionsWrapper = e, this.eventService = r, this.columnModel = o, this.gridApi = i, this.columnApi = s, this.beans = l, this.selectionService = a, this.rootNode.group = !0, this.rootNode.level = -1, this.rootNode.id = n.ROOT_NODE_ID, this.rootNode.allLeafChildren = [], this.rootNode.childrenAfterGroup = [], this.rootNode.childrenAfterSort = [], this.rootNode.childrenAfterFilter = [], this.postConstruct();
    }
    return n.prototype.postConstruct = function() {
      this.suppressParentsInRowNodes = this.gridOptionsWrapper.isSuppressParentsInRowNodes(), this.isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc(), this.doingTreeData = this.gridOptionsWrapper.isTreeData(), this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail();
    }, n.prototype.getCopyOfNodesMap = function() {
      return se.cloneObject(this.allNodesMap);
    }, n.prototype.getRowNode = function(t) {
      return this.allNodesMap[t];
    }, n.prototype.setRowData = function(t) {
      var e = this;
      if (typeof t == "string") {
        console.warn("AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first");
        return;
      }
      var r = this.rootNode, o = this.rootNode.sibling;
      r.childrenAfterFilter = null, r.childrenAfterGroup = null, r.childrenAfterSort = null, r.childrenMapped = null, r.updateHasChildren(), this.nextId = 0, this.allNodesMap = {}, t ? r.allLeafChildren = t.map(function(i) {
        return e.createNode(i, e.rootNode, n.TOP_LEVEL);
      }) : (r.allLeafChildren = [], r.childrenAfterGroup = []), o && (o.childrenAfterFilter = r.childrenAfterFilter, o.childrenAfterGroup = r.childrenAfterGroup, o.childrenAfterSort = r.childrenAfterSort, o.childrenMapped = r.childrenMapped, o.allLeafChildren = r.allLeafChildren);
    }, n.prototype.updateRowData = function(t, e) {
      var r = {
        remove: [],
        update: [],
        add: []
      }, o = [];
      return this.executeRemove(t, r, o), this.executeUpdate(t, r, o), this.executeAdd(t, r), this.updateSelection(o), e && se.sortRowNodesByOrder(this.rootNode.allLeafChildren, e), r;
    }, n.prototype.updateSelection = function(t) {
      var e = t.length > 0;
      if (e && t.forEach(function(o) {
        o.setSelected(!1, !1, !0);
      }), this.selectionService.updateGroupsFromChildrenSelections(), e) {
        var r = {
          type: v.EVENT_SELECTION_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }
    }, n.prototype.executeAdd = function(t, e) {
      var r = this, o = t.add, i = t.addIndex;
      if (!se.missingOrEmpty(o)) {
        var s = o.map(function(c) {
          return r.createNode(c, r.rootNode, n.TOP_LEVEL);
        }), a = typeof i == "number" && i >= 0;
        if (a) {
          var l = this.rootNode.allLeafChildren, u = l.slice(0, i), p = l.slice(i, l.length);
          this.rootNode.allLeafChildren = uu(u, s, p);
        } else
          this.rootNode.allLeafChildren = uu(this.rootNode.allLeafChildren, s);
        this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren), e.add = s;
      }
    }, n.prototype.executeRemove = function(t, e, r) {
      var o = this, i = t.remove;
      if (!se.missingOrEmpty(i)) {
        var s = {};
        i.forEach(function(a) {
          var l = o.lookupRowNode(a);
          l && (l.isSelected() && r.push(l), l.clearRowTopAndRowIndex(), s[l.id] = !0, delete o.allNodesMap[l.id], e.remove.push(l));
        }), this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter(function(a) {
          return !s[a.id];
        }), this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren);
      }
    }, n.prototype.executeUpdate = function(t, e, r) {
      var o = this, i = t.update;
      se.missingOrEmpty(i) || i.forEach(function(s) {
        var a = o.lookupRowNode(s);
        a && (a.updateData(s), !a.selectable && a.isSelected() && r.push(a), o.setMasterForRow(a, s, n.TOP_LEVEL, !1), e.update.push(a));
      });
    }, n.prototype.lookupRowNode = function(t) {
      var e = this.gridOptionsWrapper.getRowIdFunc(), r;
      if (e) {
        var o = e({ data: t, level: 0, api: this.gridApi, columnApi: this.columnApi });
        if (r = this.allNodesMap[o], !r)
          return console.error("AG Grid: could not find row id=" + o + ", data item was not found for this id"), null;
      } else if (r = this.rootNode.allLeafChildren.find(function(i) {
        return i.data === t;
      }), !r)
        return console.error("AG Grid: could not find data item as object was not found", t), console.error("Consider using getRowId to help the Grid find matching row data"), null;
      return r || null;
    }, n.prototype.createNode = function(t, e, r) {
      var o = new te(this.beans);
      return o.group = !1, this.setMasterForRow(o, t, r, !0), e && !this.suppressParentsInRowNodes && (o.parent = e), o.level = r, o.setDataAndId(t, this.nextId.toString()), this.allNodesMap[o.id] && console.warn("AG Grid: duplicate node id '" + o.id + "' detected from getRowNodeId callback, this could cause issues in your grid."), this.allNodesMap[o.id] = o, this.nextId++, o;
    }, n.prototype.setMasterForRow = function(t, e, r, o) {
      if (this.doingTreeData)
        t.setMaster(!1), o && (t.expanded = !1);
      else if (this.doingMasterDetail ? this.isRowMasterFunc ? t.setMaster(this.isRowMasterFunc(e)) : t.setMaster(!0) : t.setMaster(!1), o) {
        var i = this.columnModel.getRowGroupColumns(), s = i ? i.length : 0, a = r + s;
        t.expanded = t.master ? this.isExpanded(a) : !1;
      }
    }, n.prototype.isExpanded = function(t) {
      var e = this.gridOptionsWrapper.getGroupDefaultExpanded();
      return e === -1 ? !0 : t < e;
    }, n.TOP_LEVEL = 0, n.ROOT_NODE_ID = "ROOT_NODE_ID", n;
  }()
), W_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $e = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Wt;
(function(n) {
  n[n.Normal = 0] = "Normal", n[n.AfterFilter = 1] = "AfterFilter", n[n.AfterFilterAndSort = 2] = "AfterFilterAndSort", n[n.PivotNodes = 3] = "PivotNodes";
})(Wt || (Wt = {}));
var V_ = (
  /** @class */
  function(n) {
    W_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      var e = this.refreshModel.bind(this, { step: fe.EVERYTHING }), r = !this.gridOptionsWrapper.isSuppressAnimationFrame(), o = this.refreshModel.bind(this, {
        step: fe.EVERYTHING,
        afterColumnsChanged: !0,
        keepRenderedRows: !0,
        animate: r
      });
      this.addManagedListener(this.eventService, v.EVENT_NEW_COLUMNS_LOADED, o), this.addManagedListener(this.eventService, v.EVENT_COLUMN_ROW_GROUP_CHANGED, e), this.addManagedListener(this.eventService, v.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: fe.PIVOT })), this.addManagedListener(this.eventService, v.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, v.EVENT_COLUMN_PIVOT_MODE_CHANGED, e);
      var i = this.refreshModel.bind(this, {
        step: fe.MAP,
        keepRenderedRows: !0,
        animate: r
      });
      this.addManagedListener(this.gridOptionsWrapper, B.PROP_GROUP_REMOVE_SINGLE_CHILDREN, i), this.addManagedListener(this.gridOptionsWrapper, B.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, i), this.rootNode = new te(this.beans), this.nodeManager = new H_(this.rootNode, this.gridOptionsWrapper, this.eventService, this.columnModel, this.gridApi, this.columnApi, this.selectionService, this.beans);
    }, t.prototype.start = function() {
      var e = this.gridOptionsWrapper.getRowData();
      e && this.setRowData(e);
    }, t.prototype.ensureRowHeightsValid = function(e, r, o, i) {
      var s, a = !1;
      do {
        s = !1;
        for (var l = this.getRowIndexAtPixel(e), u = this.getRowIndexAtPixel(r), p = Math.max(l, o), c = Math.min(u, i), d = p; d <= c; d++) {
          var f = this.getRow(d);
          if (f.rowHeightEstimated) {
            var g = this.gridOptionsWrapper.getRowHeightForNode(f);
            f.setRowHeight(g.height), s = !0, a = !0;
          }
        }
        s && this.setRowTopAndRowIndex();
      } while (s);
      return a;
    }, t.prototype.setRowTopAndRowIndex = function() {
      for (var e = this.gridOptionsWrapper.getDefaultRowHeight(), r = 0, o = /* @__PURE__ */ new Set(), i = this.gridOptionsWrapper.getDomLayout() === w.DOM_LAYOUT_NORMAL, s = 0; s < this.rowsToDisplay.length; s++) {
        var a = this.rowsToDisplay[s];
        if (a.id != null && o.add(a.id), a.rowHeight == null) {
          var l = this.gridOptionsWrapper.getRowHeightForNode(a, i, e);
          a.setRowHeight(l.height, l.estimated);
        }
        a.setRowTop(r), a.setRowIndex(s), r += a.rowHeight;
      }
      return o;
    }, t.prototype.clearRowTopAndRowIndex = function(e, r) {
      var o = e.isActive(), i = function(a) {
        a && a.id != null && !r.has(a.id) && a.clearRowTopAndRowIndex();
      }, s = function(a) {
        if (i(a), i(a.detailNode), i(a.sibling), a.hasChildren() && a.childrenAfterGroup) {
          var l = a.level == -1, u = o && !l && !a.expanded;
          u || a.childrenAfterGroup.forEach(s);
        }
      };
      s(this.rootNode);
    }, t.prototype.ensureRowsAtPixel = function(e, r, o) {
      var i = this;
      o === void 0 && (o = 0);
      var s = this.getRowIndexAtPixel(r), a = this.getRow(s), l = !this.gridOptionsWrapper.isSuppressAnimationFrame();
      return a === e[0] ? !1 : (e.forEach(function(u) {
        se.removeFromArray(i.rootNode.allLeafChildren, u);
      }), e.forEach(function(u, p) {
        se.insertIntoArray(i.rootNode.allLeafChildren, u, Math.max(s + o, 0) + p);
      }), this.refreshModel({
        step: fe.EVERYTHING,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: l
      }), !0);
    }, t.prototype.highlightRowAtPixel = function(e, r) {
      var o = r != null ? this.getRowIndexAtPixel(r) : null, i = o != null ? this.getRow(o) : null;
      if (!i || !e || i === e || r == null) {
        this.lastHighlightedRow && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null);
        return;
      }
      var s = this.getHighlightPosition(r, i);
      this.lastHighlightedRow && this.lastHighlightedRow !== i && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null), i.setHighlighted(s), this.lastHighlightedRow = i;
    }, t.prototype.getHighlightPosition = function(e, r) {
      if (!r) {
        var o = this.getRowIndexAtPixel(e);
        if (r = this.getRow(o || 0), !r)
          return Ut.Below;
      }
      var i = r.rowTop, s = r.rowHeight;
      return e - i < s / 2 ? Ut.Above : Ut.Below;
    }, t.prototype.getLastHighlightedRowNode = function() {
      return this.lastHighlightedRow;
    }, t.prototype.isLastRowIndexKnown = function() {
      return !0;
    }, t.prototype.getRowCount = function() {
      return this.rowsToDisplay ? this.rowsToDisplay.length : 0;
    }, t.prototype.getTopLevelRowCount = function() {
      var e = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
      return e ? 1 : this.rootNode.childrenAfterFilter ? this.rootNode.childrenAfterFilter.length : 0;
    }, t.prototype.getTopLevelRowDisplayedIndex = function(e) {
      var r = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
      if (r)
        return e;
      var o = this.rootNode.childrenAfterSort[e];
      if (this.gridOptionsWrapper.isGroupHideOpenParents())
        for (; o.expanded && o.childrenAfterSort && o.childrenAfterSort.length > 0; )
          o = o.childrenAfterSort[0];
      return o.rowIndex;
    }, t.prototype.getRowBounds = function(e) {
      if (se.missing(this.rowsToDisplay))
        return null;
      var r = this.rowsToDisplay[e];
      return r ? {
        rowTop: r.rowTop,
        rowHeight: r.rowHeight
      } : null;
    }, t.prototype.onRowGroupOpened = function() {
      var e = this.gridOptionsWrapper.isAnimateRows();
      this.refreshModel({ step: fe.MAP, keepRenderedRows: !0, animate: e });
    }, t.prototype.onFilterChanged = function(e) {
      if (!e.afterDataChange) {
        var r = this.gridOptionsWrapper.isAnimateRows();
        this.refreshModel({ step: fe.FILTER, keepRenderedRows: !0, animate: r });
      }
    }, t.prototype.onSortChanged = function() {
      var e = this.gridOptionsWrapper.isAnimateRows();
      this.refreshModel({ step: fe.SORT, keepRenderedRows: !0, animate: e, keepEditingRows: !0 });
    }, t.prototype.getType = function() {
      return w.ROW_MODEL_TYPE_CLIENT_SIDE;
    }, t.prototype.onValueChanged = function() {
      this.columnModel.isPivotActive() ? this.refreshModel({ step: fe.PIVOT }) : this.refreshModel({ step: fe.AGGREGATE });
    }, t.prototype.createChangePath = function(e) {
      var r = se.missingOrEmpty(e), o = new pi(!1, this.rootNode);
      return (r || this.gridOptionsWrapper.isTreeData()) && o.setInactive(), o;
    }, t.prototype.isSuppressModelUpdateAfterUpdateTransaction = function(e) {
      if (!this.gridOptionsWrapper.isSuppressModelUpdateAfterUpdateTransaction() || e.rowNodeTransactions == null)
        return !1;
      var r = e.rowNodeTransactions.filter(function(i) {
        return i.add != null && i.add.length > 0 || i.remove != null && i.remove.length > 0;
      }), o = r == null || r.length == 0;
      return o;
    }, t.prototype.refreshModel = function(e) {
      var r = this;
      if (!this.isSuppressModelUpdateAfterUpdateTransaction(e)) {
        var o = this.createChangePath(e.rowNodeTransactions);
        switch (e.step) {
          case fe.EVERYTHING:
            this.doRowGrouping(e.groupState, e.rowNodeTransactions, e.rowNodeOrder, o, !!e.afterColumnsChanged);
          case fe.FILTER:
            this.doFilter(o);
          case fe.PIVOT:
            this.doPivot(o);
          case fe.AGGREGATE:
            this.doAggregate(o);
          case fe.SORT:
            this.doSort(e.rowNodeTransactions, o);
          case fe.MAP:
            this.doRowsToDisplay();
        }
        var i = this.setRowTopAndRowIndex();
        this.clearRowTopAndRowIndex(o, i);
        var s = {
          type: v.EVENT_MODEL_UPDATED,
          api: this.gridApi,
          columnApi: this.columnApi,
          animate: e.animate,
          keepRenderedRows: e.keepRenderedRows,
          newData: e.newData,
          newPage: !1
        };
        this.eventService.dispatchEvent(s), this.$scope && window.setTimeout(function() {
          r.$scope.$apply();
        }, 0);
      }
    }, t.prototype.isEmpty = function() {
      var e = se.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;
      return se.missing(this.rootNode) || e || !this.columnModel.isReady();
    }, t.prototype.isRowsToRender = function() {
      return se.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;
    }, t.prototype.getNodesInRangeForSelection = function(e, r) {
      var o = !r, i = !1, s, a = [], l = this.gridOptionsWrapper.isGroupSelectsChildren();
      return this.forEachNodeAfterFilterAndSort(function(u) {
        var p = o && !i;
        o || (u === r || u === e) && (o = !0);
        var c = u.group && l;
        if (!c) {
          var d = o && !i, f = u.isParentOfNode(s);
          (d || f) && a.push(u);
        }
        p && (u === r || u === e) && (i = !0, u === r ? s = r : s = e);
      }), a;
    }, t.prototype.setDatasource = function(e) {
      console.error("AG Grid: should never call setDatasource on clientSideRowController");
    }, t.prototype.getTopLevelNodes = function() {
      return this.rootNode ? this.rootNode.childrenAfterGroup : null;
    }, t.prototype.getRootNode = function() {
      return this.rootNode;
    }, t.prototype.getRow = function(e) {
      return this.rowsToDisplay[e];
    }, t.prototype.isRowPresent = function(e) {
      return this.rowsToDisplay.indexOf(e) >= 0;
    }, t.prototype.getRowIndexAtPixel = function(e) {
      if (this.isEmpty())
        return -1;
      var r = 0, o = this.rowsToDisplay.length - 1;
      if (e <= 0)
        return 0;
      var i = se.last(this.rowsToDisplay);
      if (i.rowTop <= e)
        return this.rowsToDisplay.length - 1;
      for (; ; ) {
        var s = Math.floor((r + o) / 2), a = this.rowsToDisplay[s];
        if (this.isRowInPixel(a, e))
          return s;
        a.rowTop < e ? r = s + 1 : a.rowTop > e && (o = s - 1);
      }
    }, t.prototype.isRowInPixel = function(e, r) {
      var o = e.rowTop, i = e.rowTop + e.rowHeight, s = o <= r && i > r;
      return s;
    }, t.prototype.forEachLeafNode = function(e) {
      this.rootNode.allLeafChildren && this.rootNode.allLeafChildren.forEach(function(r, o) {
        return e(r, o);
      });
    }, t.prototype.forEachNode = function(e) {
      this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterGroup, e, Wt.Normal, 0);
    }, t.prototype.forEachNodeAfterFilter = function(e) {
      this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterFilter, e, Wt.AfterFilter, 0);
    }, t.prototype.forEachNodeAfterFilterAndSort = function(e) {
      this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterSort, e, Wt.AfterFilterAndSort, 0);
    }, t.prototype.forEachPivotNode = function(e) {
      this.recursivelyWalkNodesAndCallback([this.rootNode], e, Wt.PivotNodes, 0);
    }, t.prototype.recursivelyWalkNodesAndCallback = function(e, r, o, i) {
      if (!e)
        return i;
      for (var s = 0; s < e.length; s++) {
        var a = e[s];
        if (r(a, i++), a.hasChildren()) {
          var l = null;
          switch (o) {
            case Wt.Normal:
              l = a.childrenAfterGroup;
              break;
            case Wt.AfterFilter:
              l = a.childrenAfterFilter;
              break;
            case Wt.AfterFilterAndSort:
              l = a.childrenAfterSort;
              break;
            case Wt.PivotNodes:
              l = a.leafGroup ? null : a.childrenAfterSort;
              break;
          }
          l && (i = this.recursivelyWalkNodesAndCallback(l, r, o, i));
        }
      }
      return i;
    }, t.prototype.doAggregate = function(e) {
      this.aggregationStage && this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.expandOrCollapseAll = function(e) {
      var r = this.gridOptionsWrapper.isTreeData();
      this.rootNode && o(this.rootNode.childrenAfterGroup);
      function o(a) {
        a && a.forEach(function(l) {
          var u = r ? se.exists(l.childrenAfterGroup) : l.group;
          u && (l.expanded = e, o(l.childrenAfterGroup));
        });
      }
      this.refreshModel({ step: fe.MAP });
      var i = e ? "expandAll" : "collapseAll", s = {
        api: this.gridApi,
        columnApi: this.columnApi,
        type: v.EVENT_EXPAND_COLLAPSE_ALL,
        source: i
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.doSort = function(e, r) {
      this.sortStage.execute({
        rowNode: this.rootNode,
        rowNodeTransactions: e,
        changedPath: r
      });
    }, t.prototype.doRowGrouping = function(e, r, o, i, s) {
      this.groupStage ? (r ? this.groupStage.execute({
        rowNode: this.rootNode,
        rowNodeTransactions: r,
        rowNodeOrder: o,
        changedPath: i
      }) : (this.groupStage.execute({
        rowNode: this.rootNode,
        changedPath: i,
        afterColumnsChanged: s
      }), this.restoreGroupState(e)), this.gridOptionsWrapper.isGroupSelectsChildren() && this.selectionService.updateGroupsFromChildrenSelections(i)) : (this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren, this.rootNode.sibling && (this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup), this.rootNode.updateHasChildren());
    }, t.prototype.restoreGroupState = function(e) {
      e && se.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, o) {
        typeof e[o] == "boolean" && (r.expanded = e[o]);
      });
    }, t.prototype.doFilter = function(e) {
      this.filterStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.doPivot = function(e) {
      this.pivotStage && this.pivotStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.getGroupState = function() {
      if (!this.rootNode.childrenAfterGroup || !this.gridOptionsWrapper.isRememberGroupStateWhenNewData())
        return null;
      var e = {};
      return se.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, o) {
        return e[o] = r.expanded;
      }), e;
    }, t.prototype.getCopyOfNodesMap = function() {
      return this.nodeManager.getCopyOfNodesMap();
    }, t.prototype.getRowNode = function(e) {
      var r = typeof e == "string" && e.indexOf(te.ID_PREFIX_ROW_GROUP) == 0;
      if (r) {
        var o = void 0;
        return this.forEachNode(function(i) {
          i.id === e && (o = i);
        }), o;
      } else
        return this.nodeManager.getRowNode(e);
    }, t.prototype.setRowData = function(e) {
      var r = this.getGroupState();
      this.nodeManager.setRowData(e);
      var o = {
        type: v.EVENT_ROW_DATA_CHANGED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(o), this.refreshModel({
        step: fe.EVERYTHING,
        groupState: r,
        newData: !0
      });
    }, t.prototype.batchUpdateRowData = function(e, r) {
      var o = this;
      if (this.applyAsyncTransactionsTimeout == null) {
        this.rowDataTransactionBatch = [];
        var i = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();
        this.applyAsyncTransactionsTimeout = window.setTimeout(function() {
          o.executeBatchUpdateRowData();
        }, i);
      }
      this.rowDataTransactionBatch.push({ rowDataTransaction: e, callback: r });
    }, t.prototype.flushAsyncTransactions = function() {
      this.applyAsyncTransactionsTimeout != null && (clearTimeout(this.applyAsyncTransactionsTimeout), this.executeBatchUpdateRowData());
    }, t.prototype.executeBatchUpdateRowData = function() {
      var e = this;
      this.valueCache.onDataChanged();
      var r = [], o = [], i = !1;
      if (this.rowDataTransactionBatch && this.rowDataTransactionBatch.forEach(function(a) {
        var l = e.nodeManager.updateRowData(a.rowDataTransaction, void 0);
        o.push(l), a.callback && r.push(a.callback.bind(null, l)), typeof a.rowDataTransaction.addIndex == "number" && (i = !0);
      }), this.commonUpdateRowData(o, void 0, i), r.length > 0 && window.setTimeout(function() {
        r.forEach(function(a) {
          return a();
        });
      }, 0), o.length > 0) {
        var s = {
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          type: v.EVENT_ASYNC_TRANSACTIONS_FLUSHED,
          results: o
        };
        this.eventService.dispatchEvent(s);
      }
      this.rowDataTransactionBatch = null, this.applyAsyncTransactionsTimeout = void 0;
    }, t.prototype.updateRowData = function(e, r) {
      this.valueCache.onDataChanged();
      var o = this.nodeManager.updateRowData(e, r), i = typeof e.addIndex == "number";
      return this.commonUpdateRowData([o], r, i), o;
    }, t.prototype.createRowNodeOrder = function() {
      var e = this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder();
      if (!e) {
        var r = {};
        if (this.rootNode && this.rootNode.allLeafChildren)
          for (var o = 0; o < this.rootNode.allLeafChildren.length; o++) {
            var i = this.rootNode.allLeafChildren[o];
            r[i.id] = o;
          }
        return r;
      }
    }, t.prototype.commonUpdateRowData = function(e, r, o) {
      var i = !this.gridOptionsWrapper.isSuppressAnimationFrame();
      o && (r = this.createRowNodeOrder()), this.refreshModel({
        step: fe.EVERYTHING,
        rowNodeTransactions: e,
        rowNodeOrder: r,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: i
      });
      var s = {
        type: v.EVENT_ROW_DATA_UPDATED,
        api: this.gridApi,
        columnApi: this.columnApi
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.doRowsToDisplay = function() {
      this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });
    }, t.prototype.onRowHeightChanged = function() {
      this.refreshModel({ step: fe.MAP, keepRenderedRows: !0, keepEditingRows: !0 });
    }, t.prototype.resetRowHeights = function() {
      var e = !1;
      this.forEachNode(function(r) {
        r.setRowHeight(r.rowHeight, !0);
        var o = r.detailNode;
        o && o.setRowHeight(o.rowHeight, !0), e = !0;
      }), e && this.onRowHeightChanged();
    }, $e([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), $e([
      h("$scope")
    ], t.prototype, "$scope", void 0), $e([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), $e([
      h("valueCache")
    ], t.prototype, "valueCache", void 0), $e([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), $e([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), $e([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), $e([
      h("beans")
    ], t.prototype, "beans", void 0), $e([
      h("filterStage")
    ], t.prototype, "filterStage", void 0), $e([
      h("sortStage")
    ], t.prototype, "sortStage", void 0), $e([
      h("flattenStage")
    ], t.prototype, "flattenStage", void 0), $e([
      de("groupStage")
    ], t.prototype, "groupStage", void 0), $e([
      de("aggregationStage")
    ], t.prototype, "aggregationStage", void 0), $e([
      de("pivotStage")
    ], t.prototype, "pivotStage", void 0), $e([
      G
    ], t.prototype, "init", null), t = $e([
      U("rowModel")
    ], t), t;
  }(D)
), B_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ds = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, j_ = (
  /** @class */
  function(n) {
    B_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = e.rowNode, o = e.changedPath;
      this.filterService.filter(o), this.selectableService.updateSelectableAfterFiltering(r);
    }, ds([
      h("selectableService")
    ], t.prototype, "selectableService", void 0), ds([
      h("filterService")
    ], t.prototype, "filterService", void 0), t = ds([
      U("filterStage")
    ], t), t;
  }(D)
), U_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), mn = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, k_ = (
  /** @class */
  function(n) {
    U_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = this.sortController.getSortOptions(), o = se.exists(r) && r.length > 0, i = o && se.exists(e.rowNodeTransactions) && this.gridOptionsWrapper.isDeltaSort(), s = i ? this.calculateDirtyNodes(e.rowNodeTransactions) : null, a = se.missingOrEmpty(this.columnModel.getValueColumns()), l = r.some(function(u) {
        return !!u.column.getColDef().showRowGroup;
      });
      this.sortService.sort(r, o, i, s, e.changedPath, a, l);
    }, t.prototype.calculateDirtyNodes = function(e) {
      var r = {}, o = function(i) {
        i && i.forEach(function(s) {
          return r[s.id] = !0;
        });
      };
      return e && e.forEach(function(i) {
        o(i.add), o(i.update), o(i.remove);
      }), r;
    }, mn([
      h("sortService")
    ], t.prototype, "sortService", void 0), mn([
      h("sortController")
    ], t.prototype, "sortController", void 0), mn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), t = mn([
      U("sortStage")
    ], t), t;
  }(D)
), z_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), hs = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, $_ = (
  /** @class */
  function(n) {
    z_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = e.rowNode, o = [], i = { value: 0 }, s = this.columnModel.isPivotMode(), a = s && r.leafGroup, l = a ? [r] : r.childrenAfterSort;
      this.recursivelyAddToRowsToDisplay(l, o, i, s, 0);
      var u = o.length > 0, p = !a && u && this.gridOptionsWrapper.isGroupIncludeTotalFooter();
      return p && (this.ensureFooterNodeExists(r), this.addRowNodeToRowsToDisplay(r.sibling, o, i, 0)), o;
    }, t.prototype.recursivelyAddToRowsToDisplay = function(e, r, o, i, s) {
      if (!se.missingOrEmpty(e))
        for (var a = this.gridOptionsWrapper.isGroupHideOpenParents(), l = this.gridOptionsWrapper.isGroupRemoveSingleChildren(), u = !l && this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren(), p = 0; p < e.length; p++) {
          var c = e[p], d = c.hasChildren(), f = i && !d, g = l && d && c.childrenAfterGroup.length === 1, y = u && d && c.leafGroup && c.childrenAfterGroup.length === 1, C = i && c.leafGroup, m = a && c.expanded && !C, _ = !f && !m && !g && !y;
          if (_ && this.addRowNodeToRowsToDisplay(c, r, o, s), !(i && c.leafGroup)) {
            if (d) {
              var E = g || y;
              if (c.expanded || E) {
                var S = E ? s : s + 1;
                this.recursivelyAddToRowsToDisplay(c.childrenAfterSort, r, o, i, S), this.gridOptionsWrapper.isGroupIncludeFooter() && (this.ensureFooterNodeExists(c), this.addRowNodeToRowsToDisplay(c.sibling, r, o, s));
              }
            } else if (c.master && c.expanded) {
              var b = this.createDetailNode(c);
              this.addRowNodeToRowsToDisplay(b, r, o, s);
            }
          }
        }
    }, t.prototype.addRowNodeToRowsToDisplay = function(e, r, o, i) {
      var s = this.gridOptionsWrapper.isGroupMultiAutoColumn();
      r.push(e), e.setUiLevel(s ? 0 : i);
    }, t.prototype.ensureFooterNodeExists = function(e) {
      if (!se.exists(e.sibling)) {
        var r = new te(this.beans);
        Object.keys(e).forEach(function(o) {
          r[o] = e[o];
        }), r.footer = !0, r.setRowTop(null), r.setRowIndex(null), r.oldRowTop = null, se.exists(r.id) && (r.id = "rowGroupFooter_" + r.id), r.sibling = e, e.sibling = r;
      }
    }, t.prototype.createDetailNode = function(e) {
      if (se.exists(e.detailNode))
        return e.detailNode;
      var r = new te(this.beans);
      return r.detail = !0, r.selectable = !1, r.parent = e, se.exists(e.id) && (r.id = "detail_" + e.id), r.data = e.data, r.level = e.level + 1, e.detailNode = r, r;
    }, hs([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), hs([
      h("beans")
    ], t.prototype, "beans", void 0), t = hs([
      U("flattenStage")
    ], t), t;
  }(D)
), K_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _n = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, Y_ = (
  /** @class */
  function(n) {
    K_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.postSortFunc = this.gridOptionsWrapper.getPostSortFunc();
    }, t.prototype.sort = function(e, r, o, i, s, a, l) {
      var u = this, p = this.gridOptionsWrapper.isGroupMaintainOrder(), c = this.columnModel.getAllGridColumns().some(function(f) {
        return f.isRowGroupActive();
      }), d = function(f) {
        if (u.pullDownGroupDataForHideOpenParents(f.childrenAfterFilter, !0), r) {
          var g = p && c && !f.leafGroup && !l;
          g ? f.childrenAfterSort = f.childrenAfterFilter.slice(0) : f.childrenAfterSort = o ? u.doDeltaSort(f, e, i, s, a) : u.rowNodeSorter.doFullSort(f.childrenAfterFilter, e);
        } else
          f.childrenAfterSort = f.childrenAfterFilter.slice(0);
        f.sibling && (f.sibling.childrenAfterSort = f.childrenAfterSort), u.updateChildIndexes(f), u.postSortFunc && u.postSortFunc(f.childrenAfterSort);
      };
      s && s.forEachChangedNodeDepthFirst(d), this.updateGroupDataForHideOpenParents(s);
    }, t.prototype.mapNodeToSortedNode = function(e, r) {
      return { currentPos: r, rowNode: e };
    }, t.prototype.doDeltaSort = function(e, r, o, i, s) {
      var a = e.childrenAfterSort.filter(function(c) {
        var d = !o[c.id], f = s || i && i.canSkip(c);
        return d && f;
      }).map(this.mapNodeToSortedNode.bind(this)), l = {};
      a.forEach(function(c) {
        return l[c.rowNode.id] = c.rowNode;
      });
      var u = e.childrenAfterFilter.filter(function(c) {
        return !l[c.id];
      }).map(this.mapNodeToSortedNode.bind(this));
      u.sort(this.rowNodeSorter.compareRowNodes.bind(this, r));
      var p;
      return u.length === 0 ? p = a : a.length === 0 ? p = u : p = this.mergeSortedArrays(r, a, u), p.map(function(c) {
        return c.rowNode;
      });
    }, t.prototype.mergeSortedArrays = function(e, r, o) {
      for (var i = [], s = 0, a = 0; s < r.length && a < o.length; ) {
        var l = this.rowNodeSorter.compareRowNodes(e, r[s], o[a]);
        l < 0 ? i.push(r[s++]) : i.push(o[a++]);
      }
      for (; s < r.length; )
        i.push(r[s++]);
      for (; a < o.length; )
        i.push(o[a++]);
      return i;
    }, t.prototype.updateChildIndexes = function(e) {
      if (!se.missing(e.childrenAfterSort))
        for (var r = e.childrenAfterSort, o = 0; o < r.length; o++) {
          var i = r[o], s = o === 0, a = o === e.childrenAfterSort.length - 1;
          i.setFirstChild(s), i.setLastChild(a), i.setChildIndex(o);
        }
    }, t.prototype.updateGroupDataForHideOpenParents = function(e) {
      var r = this;
      if (this.gridOptionsWrapper.isGroupHideOpenParents()) {
        if (this.gridOptionsWrapper.isTreeData()) {
          var o = "AG Grid: The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them (as opposed to Row Grouping, which only has Aggregated Values at the group level).";
          return se.doOnce(function() {
            return console.warn(o);
          }, "sortService.hideOpenParentsWithTreeData"), !1;
        }
        var i = function(s) {
          r.pullDownGroupDataForHideOpenParents(s.childrenAfterSort, !1), s.childrenAfterSort.forEach(function(a) {
            a.hasChildren() && i(a);
          });
        };
        e && e.executeFromRootNode(function(s) {
          return i(s);
        });
      }
    }, t.prototype.pullDownGroupDataForHideOpenParents = function(e, r) {
      var o = this;
      !this.gridOptionsWrapper.isGroupHideOpenParents() || se.missing(e) || e.forEach(function(i) {
        var s = o.columnModel.getGroupDisplayColumns();
        s.forEach(function(a) {
          var l = a.getColDef().showRowGroup;
          if (typeof l != "string") {
            console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");
            return;
          }
          var u = l, p = o.columnModel.getPrimaryColumn(u), c = p === i.rowGroupColumn;
          if (!c)
            if (r)
              i.setGroupValue(a.getId(), void 0);
            else {
              var d = i.getFirstChildOfFirstChild(p);
              d && i.setGroupValue(a.getId(), d.key);
            }
        });
      });
    }, _n([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), _n([
      h("rowNodeSorter")
    ], t.prototype, "rowNodeSorter", void 0), _n([
      G
    ], t.prototype, "init", null), t = _n([
      U("sortService")
    ], t), t;
  }(D)
), q_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), fs = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, X_ = (
  /** @class */
  function(n) {
    q_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.doingTreeData = this.gridOptionsWrapper.isTreeData();
    }, t.prototype.filter = function(e) {
      var r = this.filterManager.isAnyFilterPresent();
      this.filterNodes(r, e);
    }, t.prototype.filterNodes = function(e, r) {
      var o = this, i = function(u, p) {
        u.hasChildren() ? (e && !p ? u.childrenAfterFilter = u.childrenAfterGroup.filter(function(c) {
          var d = c.childrenAfterFilter && c.childrenAfterFilter.length > 0, f = c.data && o.filterManager.doesRowPassFilter({ rowNode: c });
          return d || f;
        }) : u.childrenAfterFilter = u.childrenAfterGroup, o.setAllChildrenCount(u)) : (u.childrenAfterFilter = u.childrenAfterGroup, u.setAllChildrenCount(null)), u.sibling && (u.sibling.childrenAfterFilter = u.childrenAfterFilter);
      };
      if (this.doingTreeDataFiltering()) {
        var s = function(u, p) {
          if (u.childrenAfterGroup)
            for (var c = 0; c < u.childrenAfterGroup.length; c++) {
              var d = u.childrenAfterGroup[c], f = p || o.filterManager.doesRowPassFilter({ rowNode: d });
              d.childrenAfterGroup ? s(u.childrenAfterGroup[c], f) : i(d, f);
            }
          i(u, p);
        }, a = function(u) {
          return s(u, !1);
        };
        r.executeFromRootNode(a);
      } else {
        var l = function(u) {
          return i(u, !1);
        };
        r.forEachChangedNodeDepthFirst(l, !0);
      }
    }, t.prototype.setAllChildrenCountTreeData = function(e) {
      var r = 0;
      e.childrenAfterFilter.forEach(function(o) {
        r++, r += o.allChildrenCount;
      }), e.setAllChildrenCount(r);
    }, t.prototype.setAllChildrenCountGridGrouping = function(e) {
      var r = 0;
      e.childrenAfterFilter.forEach(function(o) {
        o.group ? r += o.allChildrenCount : r++;
      }), e.setAllChildrenCount(r);
    }, t.prototype.setAllChildrenCount = function(e) {
      this.doingTreeData ? this.setAllChildrenCountTreeData(e) : this.setAllChildrenCountGridGrouping(e);
    }, t.prototype.doingTreeDataFiltering = function() {
      return this.gridOptionsWrapper.isTreeData() && !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering();
    }, fs([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), fs([
      G
    ], t.prototype, "postConstruct", null), t = fs([
      U("filterService")
    ], t), t;
  }(D)
), Q_ = globalThis && globalThis.__extends || function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
      r.__proto__ = o;
    } || function(r, o) {
      for (var i in o)
        o.hasOwnProperty(i) && (r[i] = o[i]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wr = globalThis && globalThis.__decorate || function(n, t, e, r) {
  var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
  return o > 3 && i && Object.defineProperty(t, e, i), i;
}, J_ = globalThis && globalThis.__read || function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), o, i = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; )
      i.push(o.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      o && !o.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return i;
}, Z_ = (
  /** @class */
  function(n) {
    Q_(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.rowModel.getType() === w.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel);
    }, t.prototype.isActive = function() {
      return this.gridOptionsWrapper.isImmutableData();
    }, t.prototype.setRowData = function(e) {
      var r = this.createTransactionForRowData(e);
      if (r) {
        var o = J_(r, 2), i = o[0], s = o[1], a = this.clientSideRowModel.updateRowData(i, s);
        a && this.rowRenderer.refreshFullWidthRows(a.update);
      }
    }, t.prototype.createTransactionForRowData = function(e) {
      var r = this;
      if (se.missing(this.clientSideRowModel)) {
        console.error("AG Grid: ImmutableService only works with ClientSideRowModel");
        return;
      }
      var o = this.gridOptionsWrapper.getRowIdFunc();
      if (o == null) {
        console.error("AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");
        return;
      }
      var i = {
        remove: [],
        update: [],
        add: []
      }, s = this.clientSideRowModel.getCopyOfNodesMap(), a = this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder(), l = a ? void 0 : {};
      return se.exists(e) && e.forEach(function(u, p) {
        var c = o({ data: u, level: 0, api: r.gridApi, columnApi: r.columnApi }), d = s[c];
        if (l && (l[c] = p), d) {
          var f = d.data !== u;
          f && i.update.push(u), s[c] = void 0;
        } else
          i.add.push(u);
      }), se.iterateObject(s, function(u, p) {
        p && i.remove.push(p.data);
      }), [i, l];
    }, Wr([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Wr([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Wr([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Wr([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Wr([
      G
    ], t.prototype, "postConstruct", null), t = Wr([
      U("immutableService")
    ], t), t;
  }(D)
), nR = {
  moduleName: q.ClientSideRowModelModule,
  beans: [j_, k_, $_, Y_, X_, Z_],
  rowModels: { clientSide: V_ }
}, Ga = {}, Na = {};
const Be = /* @__PURE__ */ Nd(N_);
var xa = {}, di = {};
Object.defineProperty(di, "__esModule", { value: !0 });
class ew {
}
class tw extends ew {
  constructor(t, e, r) {
    super(), this.portal = null, this.reactComponent = t, this.portalManager = e, this.componentType = r, this.statelessComponent = this.isStateless(this.reactComponent);
  }
  getGui() {
    return this.eParentElement;
  }
  destroy() {
    return this.componentInstance && typeof this.componentInstance.destroy == "function" && this.componentInstance.destroy(), this.portalManager.destroyPortal(this.portal);
  }
  createParentElement(t) {
    const e = this.portalManager.getComponentWrappingElement(), r = document.createElement(e || "div");
    return r.classList.add("ag-react-container"), t.reactContainer = r, r;
  }
  addParentContainerStyleAndClasses() {
    this.componentInstance && (this.componentInstance.getReactContainerStyle && this.componentInstance.getReactContainerStyle() && Object.assign(this.eParentElement.style, this.componentInstance.getReactContainerStyle()), this.componentInstance.getReactContainerClasses && this.componentInstance.getReactContainerClasses() && this.componentInstance.getReactContainerClasses().forEach((e) => this.eParentElement.classList.add(e)));
  }
  statelessComponentRendered() {
    return this.eParentElement.childElementCount > 0 || this.eParentElement.childNodes.length > 0;
  }
  getFrameworkComponentInstance() {
    return this.componentInstance;
  }
  isStatelessComponent() {
    return this.statelessComponent;
  }
  getReactComponentName() {
    return this.reactComponent.name;
  }
  getMemoType() {
    return this.hasSymbol() ? Symbol.for("react.memo") : 60115;
  }
  hasSymbol() {
    return typeof Symbol == "function" && Symbol.for;
  }
  isStateless(t) {
    return typeof t == "function" && !(t.prototype && t.prototype.isReactComponent) || typeof t == "object" && t.$$typeof === this.getMemoType();
  }
  hasMethod(t) {
    const e = this.getFrameworkComponentInstance();
    return !!e && e[t] !== null || this.fallbackMethodAvailable(t);
  }
  callMethod(t, e) {
    const r = this.getFrameworkComponentInstance();
    if (this.isStatelessComponent())
      return this.fallbackMethod(t, e && e[0] ? e[0] : {});
    if (!r) {
      setTimeout(() => this.callMethod(t, e));
      return;
    }
    const o = r[t];
    if (o)
      return o.apply(r, e);
    if (this.fallbackMethodAvailable(t))
      return this.fallbackMethod(t, e && e[0] ? e[0] : {});
  }
  addMethod(t, e) {
    this[t] = e;
  }
}
di.ReactComponent = tw;
var hi = {};
Object.defineProperty(hi, "__esModule", { value: !0 });
let rw = 0;
function ow() {
  return `agPortalKey_${++rw}`;
}
hi.default = ow;
var nw = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(xa, "__esModule", { value: !0 });
const pu = Oe, iw = qs, sw = Be, aw = di, lw = Eu, uw = nw(hi);
class fi extends aw.ReactComponent {
  constructor(t, e, r, o) {
    super(t, r, o), this.staticMarkup = null, this.staticRenderTime = 0, this.parentComponent = e;
  }
  init(t) {
    return this.eParentElement = this.createParentElement(t), this.renderStaticMarkup(t), new sw.AgPromise((e) => this.createReactComponent(t, e));
  }
  createReactComponent(t, e) {
    this.isStatelessComponent() || (t.ref = (i) => {
      this.componentInstance = i, this.addParentContainerStyleAndClasses(), this.removeStaticMarkup();
    });
    const r = pu.createElement(this.reactComponent, t), o = iw.createPortal(
      r,
      this.eParentElement,
      uw.default()
      // fixed deltaRowModeRefreshCompRenderer
    );
    this.portal = o, this.portalManager.mountReactPortal(o, this, (i) => {
      e(i), this.isStatelessComponent() && (this.isSlowRenderer() && this.removeStaticMarkup(), setTimeout(() => {
        this.removeStaticMarkup();
      }));
    });
  }
  fallbackMethodAvailable(t) {
    return !1;
  }
  fallbackMethod(t, e) {
  }
  isSlowRenderer() {
    return this.staticRenderTime >= fi.SLOW_RENDERING_THRESHOLD;
  }
  isNullValue() {
    return this.staticMarkup === "";
  }
  /*
   * Attempt to render the component as static markup if possible
   * What this does is eliminate any visible flicker for the user in the scenario where a component is destroyed and
   * recreated with exactly the same data (ie with force refresh)
   * Note: Some use cases will throw an error (ie when using Context) so if an error occurs just ignore it any move on
   */
  renderStaticMarkup(t) {
    if (this.parentComponent.isDisableStaticMarkup() || !this.componentType.cellRenderer)
      return;
    const e = console.error, r = pu.createElement(this.reactComponent, t);
    try {
      console.error = () => {
      };
      const o = Date.now(), i = lw.renderToStaticMarkup(r);
      this.staticRenderTime = Date.now() - o, console.error = e, i === "" ? this.staticMarkup = i : i && (this.staticMarkup = document.createElement("span"), this.staticMarkup.innerHTML = i, this.eParentElement.appendChild(this.staticMarkup));
    } catch {
    } finally {
      console.error = e;
    }
  }
  removeStaticMarkup() {
    this.parentComponent.isDisableStaticMarkup() || !this.componentType.cellRenderer || this.staticMarkup && (this.staticMarkup.remove ? (this.staticMarkup.remove(), this.staticMarkup = null) : this.eParentElement.removeChild && (this.eParentElement.removeChild(this.staticMarkup), this.staticMarkup = null));
  }
  rendered() {
    return this.isNullValue() || !!this.staticMarkup || this.isStatelessComponent() && this.statelessComponentRendered() || !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());
  }
}
xa.LegacyReactComponent = fi;
fi.SLOW_RENDERING_THRESHOLD = 3;
var Yo = {}, pw = j && j.__rest || function(n, t) {
  var e = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && t.indexOf(r) < 0 && (e[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, r = Object.getOwnPropertySymbols(n); o < r.length; o++)
      t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[o]) && (e[r[o]] = n[r[o]]);
  return e;
}, md = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, cw = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(Yo, "__esModule", { value: !0 });
const gs = md(Oe), lo = cw(Mn), uo = md(Be);
class qr extends gs.Component {
  constructor(t) {
    super(t), this.props = t;
  }
  render() {
    return null;
  }
  static mapChildColumnDefs(t) {
    return gs.default.Children.map(t, (e) => e ? qr.toColDef(e.props) : null);
  }
  static toColDef(t) {
    const { children: e } = t, r = pw(t, ["children"]);
    return qr.hasChildColumns(e) && (r.children = qr.mapChildColumnDefs(e)), r;
  }
  static hasChildColumns(t) {
    return gs.default.Children.count(t) > 0;
  }
}
Yo.AgGridColumn = qr;
po(uo.ColDefUtil.BOOLEAN_PROPERTIES, lo.default.bool);
po(uo.ColDefUtil.STRING_PROPERTIES, lo.default.string);
po(uo.ColDefUtil.OBJECT_PROPERTIES, lo.default.object);
po(uo.ColDefUtil.ARRAY_PROPERTIES, lo.default.array);
po(uo.ColDefUtil.NUMBER_PROPERTIES, lo.default.number);
po(uo.ColDefUtil.FUNCTION_PROPERTIES, lo.default.func);
function po(n, t) {
  n.forEach((e) => {
    qr[e] = t;
  });
}
var gi = {};
(function(n) {
  Object.defineProperty(n, "__esModule", { value: !0 });
  var t;
  (function(i) {
    i.IdentityCheck = "IdentityCheck", i.DeepValueCheck = "DeepValueCheck", i.NoCheck = "NoCheck";
  })(t = n.ChangeDetectionStrategyType || (n.ChangeDetectionStrategyType = {}));
  class e {
    constructor(s) {
      this.strategy = s;
    }
    areEqual(s, a) {
      return this.strategy(s, a);
    }
  }
  class r {
    areEqual(s, a) {
      return r.areEquivalent(r.copy(s), r.copy(a));
    }
    /*
     * deeper object comparison - taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript
     */
    static unwrapStringOrNumber(s) {
      return s instanceof Number || s instanceof String ? s.valueOf() : s;
    }
    // sigh, here for ie compatibility
    static copy(s) {
      if (!s)
        return s;
      if (Array.isArray(s)) {
        const a = [];
        for (let l = 0; l < s.length; l++)
          a.push(this.copy(s[l]));
        return a;
      }
      return typeof s != "object" ? s : [{}, s].reduce((a, l) => (Object.keys(l).forEach(function(u) {
        a[u] = l[u];
      }), a), {});
    }
    static isNaN(s) {
      return Number.isNaN ? Number.isNaN(s) : typeof s == "number" && isNaN(s);
    }
    /*
     * slightly modified, but taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript
     *
     * What we're trying to do here is determine if the property being checked has changed in _value_, not just in reference
     *
     * For eg, if a user updates the columnDefs via property binding, but the actual columns defs are the same before and
     * after, then we don't want the grid to re-render
     */
    static areEquivalent(s, a) {
      if (s = r.unwrapStringOrNumber(s), a = r.unwrapStringOrNumber(a), s === a)
        return !0;
      if (s === null || a === null || typeof s != typeof a)
        return !1;
      if (r.isNaN(s) && r.isNaN(a))
        return !0;
      if (s instanceof Date)
        return a instanceof Date && s.valueOf() === a.valueOf();
      if (typeof s == "function")
        return !1;
      if (typeof s != "object" || s.$$typeof && s.$$typeof.toString() === "Symbol(react.element)")
        return s == a;
      if (Object.isFrozen(s) || Object.isFrozen(a))
        return s === a;
      const l = s.areEquivPropertyTracking === void 0, u = a.areEquivPropertyTracking === void 0;
      try {
        let p;
        if (l)
          s.areEquivPropertyTracking = [];
        else if (s.areEquivPropertyTracking.some(function(d) {
          return d === a;
        }))
          return !0;
        if (u)
          a.areEquivPropertyTracking = [];
        else if (a.areEquivPropertyTracking.some((d) => d === s))
          return !0;
        s.areEquivPropertyTracking.push(a), a.areEquivPropertyTracking.push(s);
        const c = {};
        for (p in s)
          p != "areEquivPropertyTracking" && (c[p] = null);
        for (p in a)
          p != "areEquivPropertyTracking" && (c[p] = null);
        for (p in c)
          if (!this.areEquivalent(s[p], a[p]))
            return !1;
        return !0;
      } finally {
        l && delete s.areEquivPropertyTracking, u && delete a.areEquivPropertyTracking;
      }
    }
  }
  class o {
    constructor() {
      this.strategyMap = {
        [t.DeepValueCheck]: new r(),
        [t.IdentityCheck]: new e((s, a) => s === a),
        [t.NoCheck]: new e((s, a) => !1)
      };
    }
    getStrategy(s) {
      return this.strategyMap[s];
    }
  }
  n.ChangeDetectionService = o;
})(gi);
var vi = {}, dw = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(vi, "__esModule", { value: !0 });
const cu = Oe, hw = qs, fw = Be, gw = di, vw = Eu, du = dw(hi);
class yw extends gw.ReactComponent {
  constructor(t, e, r) {
    super(t, e, r), this.oldPortal = null, this.key = du.default(), this.portalKey = du.default();
  }
  init(t) {
    return this.eParentElement = this.createParentElement(t), this.params = t, this.createOrUpdatePortal(t), new fw.AgPromise((e) => this.createReactComponent(e));
  }
  createOrUpdatePortal(t) {
    this.isStatelessComponent() || (t.ref = (e) => {
      this.componentInstance = e, this.addParentContainerStyleAndClasses();
    }), this.reactElement = cu.createElement(this.reactComponent, Object.assign(Object.assign({}, t), { key: this.key })), this.portal = hw.createPortal(
      this.reactElement,
      this.eParentElement,
      this.portalKey
      // fixed deltaRowModeRefreshCompRenderer
    );
  }
  createReactComponent(t) {
    this.portalManager.mountReactPortal(this.portal, this, (e) => {
      t(e);
    });
  }
  isNullValue() {
    return this.valueRenderedIsNull(this.params);
  }
  rendered() {
    return this.isStatelessComponent() && this.statelessComponentRendered() || !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());
  }
  valueRenderedIsNull(t) {
    if (!this.componentType.cellRenderer)
      return !1;
    const e = console.error;
    try {
      return console.error = () => {
      }, vw.renderToStaticMarkup(cu.createElement(this.reactComponent, t)) === "";
    } catch {
    } finally {
      console.error = e;
    }
    return !1;
  }
  /*
  * fallback methods - these will be invoked if a corresponding instance method is not present
  * for example if refresh is called and is not available on the component instance, then refreshComponent on this
  * class will be invoked instead
  *
  * Currently only refresh is supported
  */
  refreshComponent(t) {
    this.oldPortal = this.portal, this.createOrUpdatePortal(t), this.portalManager.updateReactPortal(this.oldPortal, this.portal);
  }
  fallbackMethod(t, e) {
    const r = this[`${t}Component`];
    if (r)
      return r.bind(this)(e);
  }
  fallbackMethodAvailable(t) {
    return !!this[`${t}Component`];
  }
}
vi.NewReactComponent = yw;
var yi = {};
Object.defineProperty(yi, "__esModule", { value: !0 });
class Ci {
  constructor(t, e, r) {
    this.destroyed = !1, this.portals = [], this.hasPendingPortalUpdate = !1, this.wrappingElement = e || "div", this.parent = t, this.maxComponentCreationTimeMs = r || Ci.MAX_COMPONENT_CREATION_TIME_IN_MS;
  }
  getPortals() {
    return this.portals;
  }
  destroy() {
    this.destroyed = !0;
  }
  destroyPortal(t) {
    this.portals = this.portals.filter((e) => e !== t), this.batchUpdate();
  }
  getComponentWrappingElement() {
    return this.wrappingElement;
  }
  mountReactPortal(t, e, r) {
    this.portals = [...this.portals, t], this.waitForInstance(e, r), this.batchUpdate();
  }
  updateReactPortal(t, e) {
    this.portals[this.portals.indexOf(t)] = e, this.batchUpdate();
  }
  batchUpdate() {
    this.hasPendingPortalUpdate || (setTimeout(() => {
      this.destroyed || this.parent.forceUpdate(() => {
        this.hasPendingPortalUpdate = !1;
      });
    }), this.hasPendingPortalUpdate = !0);
  }
  waitForInstance(t, e, r = Date.now()) {
    if (this.destroyed) {
      e(null);
      return;
    }
    if (t.rendered())
      e(t);
    else {
      if (Date.now() - r >= this.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {
        if (t.isNullValue()) {
          e(t);
          return;
        }
        console.error(`AG Grid: React Component '${t.getReactComponentName()}' not created within ${this.maxComponentCreationTimeMs}ms`);
        return;
      }
      window.setTimeout(() => {
        this.waitForInstance(t, e, r);
      });
    }
  }
}
yi.PortalManager = Ci;
Ci.MAX_COMPONENT_CREATION_TIME_IN_MS = 1e3;
var wn = {}, Ha = {}, ke = {}, Cw = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(ke, "__esModule", { value: !0 });
const mw = Cw(Oe);
ke.BeansContext = mw.default.createContext({});
var Qt = {};
Object.defineProperty(Qt, "__esModule", { value: !0 });
Qt.showJsComp = (n, t, e, r) => {
  if (!n || n.componentFromFramework)
    return;
  const i = n.newAgStackInstance();
  if (!i)
    return;
  let s, a, l = !1;
  return i.then((u) => {
    if (l) {
      t.destroyBean(u);
      return;
    }
    s = u, a = s.getGui(), e.appendChild(a), hu(r, s);
  }), () => {
    l = !0, s && (a && a.parentElement && a.parentElement.removeChild(a), t.destroyBean(s), r && hu(r, void 0));
  };
};
const hu = (n, t) => {
  if (n)
    if (n instanceof Function)
      n(t);
    else {
      const e = n;
      e.current = t;
    }
};
Qt.createSyncJsComp = (n) => {
  const t = n.newAgStackInstance();
  if (t)
    return t.resolveNow(null, (e) => e);
};
var Qe = {};
Object.defineProperty(Qe, "__esModule", { value: !0 });
Qe.classesList = (...n) => n.filter((e) => e != null && e !== "").join(" ");
class Wa {
  constructor() {
    this.classesMap = {};
  }
  setClass(t, e) {
    if (!!this.classesMap[t] == e)
      return this;
    const o = new Wa();
    return o.classesMap = Object.assign({}, this.classesMap), o.classesMap[t] = e, o;
  }
  toString() {
    return Object.keys(this.classesMap).filter((e) => this.classesMap[e]).join(" ");
  }
}
Qe.CssClasses = Wa;
Qe.isComponentStateless = (n) => {
  const t = () => typeof Symbol == "function" && Symbol.for, e = () => t() ? Symbol.for("react.memo") : 60115;
  return typeof n == "function" && !(n.prototype && n.prototype.isReactComponent) || typeof n == "object" && n.$$typeof === e();
};
var _w = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(Ha, "__esModule", { value: !0 });
const ww = Be, ye = _w(Oe), Ew = ke, Rw = Qt, En = Qe, _d = ye.forwardRef((n, t) => {
  const e = ye.useContext(Ew.BeansContext).context, r = ye.useRef(null), o = ye.useRef(null), i = ye.useRef(null), s = ye.useRef(null), a = ye.useRef(null), [l, u] = ye.useState(), [p, c] = ye.useState(), [d, f] = ye.useState(), [g, y] = ye.useState(new En.CssClasses()), [C, m] = ye.useState(new En.CssClasses()), [_, E] = ye.useState(new En.CssClasses()), [S, b] = ye.useState(new En.CssClasses());
  ye.useImperativeHandle(t, () => ({
    // force new instance when grid tries to refresh
    refresh() {
      return !1;
    }
  })), ye.useEffect(() => Rw.showJsComp(l, e, o.current), [l]), ye.useEffect(() => {
    const $ = {
      setInnerRenderer: (X, ce) => {
        u(X), f(ce);
      },
      setChildCount: (X) => c(X),
      addOrRemoveCssClass: (X, ce) => y((Fe) => Fe.setClass(X, ce)),
      setContractedDisplayed: (X) => E((ce) => ce.setClass("ag-hidden", !X)),
      setExpandedDisplayed: (X) => m((ce) => ce.setClass("ag-hidden", !X)),
      setCheckboxVisible: (X) => {
        b((ce) => ce.setClass("ag-invisible", !X));
      }
    }, Z = e.createBean(new ww.GroupCellRendererCtrl());
    return Z.init($, r.current, i.current, s.current, a.current, _d, n), () => {
      e.destroyBean(Z);
    };
  }, []);
  const x = ye.useMemo(() => `ag-cell-wrapper ${g.toString()}`, [g]), I = ye.useMemo(() => `ag-group-expanded ${C.toString()}`, [C]), A = ye.useMemo(() => `ag-group-contracted ${_.toString()}`, [_]), M = ye.useMemo(() => `ag-group-checkbox ${S.toString()}`, [S]), V = l && l.componentFromFramework, H = V ? l.componentClass : void 0, z = l == null && d != null;
  return ye.default.createElement(
    "span",
    Object.assign({ className: x, ref: r }, n.colDef ? {} : { role: "gridcell" }),
    ye.default.createElement("span", { className: I, ref: s }),
    ye.default.createElement("span", { className: A, ref: a }),
    ye.default.createElement("span", { className: M, ref: i }),
    ye.default.createElement(
      "span",
      { className: "ag-group-value", ref: o },
      z && ye.default.createElement(ye.default.Fragment, null, d),
      V && ye.default.createElement(H, Object.assign({}, l.params))
    ),
    ye.default.createElement("span", { className: "ag-group-child-count" }, p)
  );
});
Ha.default = _d;
var Rn = {}, Sn = {}, Va = {}, Ba = {}, ja = {}, Ua = {}, ka = {}, za = {}, Sw = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(za, "__esModule", { value: !0 });
const Me = Sw(Oe), Ow = ke, Tw = Be, Pw = Qe, bw = Qt, Dw = (n) => {
  const { context: t } = Me.useContext(Ow.BeansContext), [e, r] = Me.useState(), [o, i] = Me.useState(), [s, a] = Me.useState(), [l, u] = Me.useState(), [p, c] = Me.useState(), [d, f] = Me.useState(), g = Me.useRef(null), y = Me.useRef(null), C = Me.useRef(), { ctrl: m } = n, _ = Me.useMemo(() => new Tw.CssClassManager(() => g.current), []);
  Me.useEffect(() => {
    const I = {
      setWidth: (M) => r(M),
      addOrRemoveCssClass: (M, V) => _.addOrRemoveCssClass(M, V),
      setAriaSort: (M) => u(M),
      setColId: (M) => a(M),
      setTitle: (M) => i(M),
      setAriaDescribedBy: (M) => c(M),
      setUserCompDetails: (M) => f(M),
      getUserCompInstance: () => C.current || void 0
    };
    m.setComp(I, g.current, y.current);
    const A = m.getSelectAllGui();
    y.current.insertAdjacentElement("afterend", A);
  }, []), Me.useEffect(() => bw.showJsComp(d, t, g.current, C), [d]), Me.useEffect(() => {
    let I;
    g.current.childNodes.forEach((A) => {
      A != null && A !== y.current && (I = A);
    }), m.setDragSource(I);
  }, [d]);
  const E = Me.useMemo(() => ({ width: e }), [e]), S = Me.useMemo(() => {
    var I;
    return !!(((I = d) === null || I === void 0 ? void 0 : I.componentFromFramework) && Pw.isComponentStateless(d.componentClass));
  }, [d]), b = d && d.componentFromFramework, x = d && d.componentClass;
  return Me.default.createElement(
    "div",
    { ref: g, className: "ag-header-cell", style: E, title: o, "col-id": s, "aria-sort": l, role: "columnheader", tabIndex: -1, "aria-describedby": p },
    Me.default.createElement("div", { ref: y, className: "ag-header-cell-resize", role: "presentation" }),
    b && S && Me.default.createElement(x, Object.assign({}, d.params)),
    b && !S && Me.default.createElement(x, Object.assign({}, d.params, { ref: C }))
  );
};
za.default = Me.memo(Dw);
var $a = {}, Aw = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty($a, "__esModule", { value: !0 });
const Ne = Aw(Oe), Fw = ke, Iw = Qt, fu = Qe, Mw = (n) => {
  const { context: t } = Ne.useContext(Fw.BeansContext), [e, r] = Ne.useState(new fu.CssClasses()), [o, i] = Ne.useState(new fu.CssClasses()), [s, a] = Ne.useState(), [l, u] = Ne.useState(), [p, c] = Ne.useState(), [d, f] = Ne.useState(), [g, y] = Ne.useState(), C = Ne.useRef(null), m = Ne.useRef(null), { ctrl: _ } = n;
  Ne.useEffect(() => {
    const A = {
      setWidth: (M) => a(M),
      addOrRemoveCssClass: (M, V) => r((H) => H.setClass(M, V)),
      setColId: (M) => c(M),
      setTitle: (M) => u(M),
      setUserCompDetails: (M) => y(M),
      addOrRemoveResizableCssClass: (M, V) => i((H) => H.setClass(M, V)),
      setAriaExpanded: (M) => f(M)
    };
    _.setComp(A, C.current, m.current);
  }, []), Ne.useEffect(() => Iw.showJsComp(g, t, C.current), [g]), Ne.useEffect(() => {
    let A;
    C.current.childNodes.forEach((M) => {
      M != null && M !== m.current && (A = M);
    }), A && _.setDragSource(A);
  }, [g]);
  const E = Ne.useMemo(() => ({
    width: s
  }), [s]), S = Ne.useMemo(() => "ag-header-group-cell " + e.toString(), [e]), b = Ne.useMemo(() => "ag-header-cell-resize " + o.toString(), [o]), x = g && g.componentFromFramework, I = g && g.componentClass;
  return Ne.default.createElement(
    "div",
    { ref: C, className: S, style: E, title: l, "col-id": p, role: "columnheader", tabIndex: -1, "aria-expanded": d },
    x && Ne.default.createElement(I, Object.assign({}, g.params)),
    Ne.default.createElement("div", { ref: m, className: b })
  );
};
$a.default = Ne.memo(Mw);
var Ka = {}, Lw = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(Ka, "__esModule", { value: !0 });
const Re = Lw(Oe), Gw = ke, Nw = Be, On = Qe, xw = Qt, Hw = (n) => {
  const { context: t } = Re.useContext(Gw.BeansContext), [e, r] = Re.useState(new On.CssClasses()), [o, i] = Re.useState(new On.CssClasses()), [s, a] = Re.useState(new On.CssClasses()), [l, u] = Re.useState(), [p, c] = Re.useState(), d = Re.useRef(null), f = Re.useRef(null), g = Re.useRef(null), y = Re.useRef(null), C = Re.useRef(), m = Re.useMemo(() => new Nw.AgPromise((V) => C.current = V), []), { ctrl: _ } = n;
  Re.useEffect(() => {
    const V = {
      addOrRemoveCssClass: (H, z) => r(($) => $.setClass(H, z)),
      addOrRemoveBodyCssClass: (H, z) => i(($) => $.setClass(H, z)),
      addOrRemoveButtonWrapperCssClass: (H, z) => a(($) => $.setClass(H, z)),
      setWidth: (H) => u(H),
      setCompDetails: (H) => c(H),
      getFloatingFilterComp: () => m,
      setMenuIcon: (H) => y.current.appendChild(H)
    };
    _.setComp(V, d.current, y.current, f.current);
  }, []), Re.useEffect(() => xw.showJsComp(p, t, f.current, C.current), [p]);
  const E = Re.useMemo(() => ({
    width: l
  }), [l]), S = Re.useMemo(() => "ag-header-cell ag-floating-filter " + e.toString(), [e]), b = Re.useMemo(() => o.toString(), [o]), x = Re.useMemo(() => "ag-floating-filter-button " + s.toString(), [o]), I = Re.useMemo(() => !!(p && p.componentFromFramework && On.isComponentStateless(p.componentClass)), [p]), A = p && p.componentFromFramework, M = p && p.componentClass;
  return Re.default.createElement(
    "div",
    { ref: d, className: S, style: E, role: "gridcell", tabIndex: -1 },
    Re.default.createElement(
      "div",
      { ref: f, className: b, role: "presentation" },
      A && I && Re.default.createElement(M, Object.assign({}, p.params)),
      A && !I && Re.default.createElement(M, Object.assign({}, p.params, { ref: C.current }))
    ),
    Re.default.createElement(
      "div",
      { ref: g, className: x, role: "presentation" },
      Re.default.createElement("button", { ref: y, type: "button", "aria-label": "Open Filter Menu", className: "ag-floating-filter-button-button", tabIndex: -1 })
    )
  );
};
Ka.default = Re.memo(Hw);
var Ww = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, Ya = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(ka, "__esModule", { value: !0 });
const vr = Be, je = Ww(Oe), Vw = ke, Bw = Ya(za), jw = Ya($a), Uw = Ya(Ka), kw = (n) => {
  const { gridOptionsWrapper: t } = je.useContext(Vw.BeansContext), [e, r] = je.useState(), [o, i] = je.useState(), [s, a] = je.useState(), [l, u] = je.useState(), [p, c] = je.useState(), [d, f] = je.useState([]), g = je.useRef(null), { ctrl: y } = n, C = y.getType() === vr.HeaderRowType.COLUMN, m = y.getType() === vr.HeaderRowType.COLUMN_GROUP, _ = y.getType() === vr.HeaderRowType.FLOATING_FILTER, E = je.useCallback((I, A) => {
    if (t.isEnsureDomOrder())
      return A;
    const M = vr._.mapById(I, ($) => $.getInstanceId()), V = vr._.mapById(A, ($) => $.getInstanceId()), H = I.filter(($) => V.has($.getInstanceId())), z = A.filter(($) => !M.has($.getInstanceId()));
    return [...H, ...z];
  }, []);
  je.useEffect(() => {
    const I = {
      setTransform: (A) => r(A),
      setHeight: (A) => i(A),
      setTop: (A) => a(A),
      setHeaderCtrls: (A) => f((M) => E(M, A)),
      setWidth: (A) => u(A),
      setAriaRowIndex: (A) => c(A)
    };
    y.setComp(I);
  }, []);
  const S = je.useMemo(() => ({
    transform: e,
    height: o,
    top: s,
    width: l
  }), [e, o, s, l]), b = je.useMemo(() => {
    const I = ["ag-header-row"];
    return C && I.push("ag-header-row-column"), m && I.push("ag-header-row-column-group"), _ && I.push("ag-header-row-column-filter"), I.join(" ");
  }, []), x = je.useCallback((I) => {
    switch (y.getType()) {
      case vr.HeaderRowType.COLUMN_GROUP:
        return je.default.createElement(jw.default, { ctrl: I, key: I.getInstanceId() });
      case vr.HeaderRowType.FLOATING_FILTER:
        return je.default.createElement(Uw.default, { ctrl: I, key: I.getInstanceId() });
      default:
        return je.default.createElement(Bw.default, { ctrl: I, key: I.getInstanceId() });
    }
  }, []);
  return je.default.createElement("div", { ref: g, className: b, role: "row", style: S, "aria-rowindex": p }, d.map(x));
};
ka.default = je.memo(kw);
var zw = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, $w = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(Ua, "__esModule", { value: !0 });
const We = zw(Oe), Kw = ke, vs = Be, Yw = Qe, qw = $w(ka), Xw = (n) => {
  const [t, e] = We.useState(new Yw.CssClasses()), [r, o] = We.useState(), [i, s] = We.useState(), [a, l] = We.useState(), [u, p] = We.useState([]), { context: c } = We.useContext(Kw.BeansContext), d = We.useRef(null), f = n.pinned === vs.Constants.PINNED_LEFT, g = n.pinned === vs.Constants.PINNED_RIGHT, y = !f && !g;
  We.useEffect(() => {
    const S = {
      addOrRemoveCssClass: (x, I) => e((A) => A.setClass(x, I)),
      setCtrls: (x) => p(x),
      // centre only
      setCenterWidth: (x) => o(x),
      setContainerTransform: (x) => s(x),
      // pinned only
      setPinnedContainerWidth: (x) => l(x)
    }, b = c.createBean(new vs.HeaderRowContainerCtrl(n.pinned));
    return b.setComp(S, d.current), () => {
      c.destroyBean(b);
    };
  }, []);
  const C = We.useMemo(() => t.toString(), [t]), m = () => u.map((S) => We.default.createElement(qw.default, { ctrl: S, key: S.getInstanceId() })), _ = We.useMemo(() => ({
    width: r,
    transform: i
  }), [r, i]), E = We.useMemo(() => ({
    width: a,
    minWidth: a,
    maxWidth: a
  }), [a]);
  return We.default.createElement(
    We.default.Fragment,
    null,
    f && We.default.createElement("div", { ref: d, className: "ag-pinned-left-header " + C, role: "presentation", style: E }, m()),
    g && We.default.createElement("div", { ref: d, className: "ag-pinned-right-header " + C, role: "presentation", style: E }, m()),
    y && We.default.createElement(
      "div",
      { ref: d, className: "ag-header-viewport " + C, role: "presentation" },
      We.default.createElement("div", { className: "ag-header-container", role: "rowgroup", style: _ }, m())
    )
  );
};
Ua.default = We.memo(Xw);
var Qw = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, Jw = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(ja, "__esModule", { value: !0 });
const Rt = Qw(Oe), Zw = ke, ys = Be, eE = Qe, Cs = Jw(Ua), tE = () => {
  const [n, t] = Rt.useState(new eE.CssClasses()), [e, r] = Rt.useState(), { context: o } = Rt.useContext(Zw.BeansContext), i = Rt.useRef(null);
  Rt.useEffect(() => {
    const l = {
      addOrRemoveCssClass: (p, c) => t((d) => d.setClass(p, c)),
      setHeightAndMinHeight: (p) => r(p)
    }, u = o.createBean(new ys.GridHeaderCtrl());
    return u.setComp(l, i.current, i.current), () => {
      o.destroyBean(u);
    };
  }, []);
  const s = Rt.useMemo(() => "ag-header " + n.toString(), [n]), a = Rt.useMemo(() => ({
    height: e,
    minHeight: e
  }), [e]);
  return Rt.default.createElement(
    "div",
    { ref: i, className: s, style: a, role: "presentation" },
    Rt.default.createElement(Cs.default, { pinned: ys.Constants.PINNED_LEFT }),
    Rt.default.createElement(Cs.default, { pinned: null }),
    Rt.default.createElement(Cs.default, { pinned: ys.Constants.PINNED_RIGHT })
  );
};
ja.default = Rt.memo(tE);
var qo = {};
Object.defineProperty(qo, "__esModule", { value: !0 });
const rE = Oe, oE = (n, t) => {
  rE.useEffect(() => {
    const e = t.current, r = e.parentElement;
    if (!r)
      return;
    const o = document.createComment(n);
    return r.insertBefore(o, e), () => {
      r.removeChild(o);
    };
  }, []);
};
qo.default = oE;
var qa = {}, Xa = {}, wd = {}, Qa = {}, nE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(Qa, "__esModule", { value: !0 });
const iE = Be, Ur = nE(Oe), sE = qs, aE = ke, lE = (n) => {
  const [t, e] = Ur.useState(), { context: r, popupService: o, gridOptionsWrapper: i } = Ur.useContext(aE.BeansContext);
  return Ur.useEffect(() => {
    const { editDetails: s, cellCtrl: a, eParentCell: l } = n, { compDetails: u } = s, p = i.isStopEditingWhenCellsLoseFocus(), c = r.createBean(new iE.PopupEditorWrapper(u.params)), d = c.getGui();
    if (n.jsChildComp) {
      const _ = n.jsChildComp.getGui();
      _ && d.appendChild(_);
    }
    const f = {
      column: a.getColumn(),
      rowNode: a.getRowNode(),
      type: "popupCellEditor",
      eventSource: l,
      ePopup: d,
      keepWithinBounds: !0
    }, g = s.popupPosition === "under" ? o.positionPopupUnderComponent.bind(o, f) : o.positionPopupOverComponent.bind(o, f), y = i.getLocaleTextFunc(), C = o.addPopup({
      modal: p,
      eChild: d,
      closeOnEsc: !0,
      closedCallback: () => {
        a.onPopupEditorClosed();
      },
      anchorToElement: l,
      positionCallback: g,
      ariaLabel: y("ariaLabelCellEditor", "Cell Editor")
    }), m = C ? C.hideFunc : void 0;
    return e(c), n.jsChildComp && n.jsChildComp.afterGuiAttached && n.jsChildComp.afterGuiAttached(), () => {
      m != null && m(), r.destroyBean(c);
    };
  }, []), Ur.default.createElement(Ur.default.Fragment, null, t && n.wrappedContent && sE.createPortal(n.wrappedContent, t.getGui()));
};
Qa.default = Ur.memo(lE);
var Ja = {};
Object.defineProperty(Ja, "__esModule", { value: !0 });
const Tn = Oe, uE = ke, pE = (n, t, e, r, o, i) => {
  const { context: s, userComponentFactory: a } = Tn.useContext(uE.BeansContext), l = Tn.useCallback(() => {
    const u = o.current;
    if (!u)
      return;
    const p = u.getGui();
    p && p.parentElement && p.parentElement.removeChild(p), s.destroyBean(u), o.current = void 0;
  }, []);
  Tn.useEffect(() => {
    const u = n != null, p = n && n.compDetails && !n.compDetails.componentFromFramework, c = t && e == null;
    if (!(u && p && !c)) {
      l();
      return;
    }
    const f = n.compDetails;
    if (o.current) {
      const _ = o.current, S = _.refresh != null && n.force == !1 ? _.refresh(f.params) : !1;
      if (S === !0 || S === void 0)
        return;
      l();
    }
    const g = f.newAgStackInstance();
    if (!g)
      return;
    const y = g.resolveNow(null, (_) => _);
    if (!y)
      return;
    const C = y.getGui();
    if (!C)
      return;
    (t ? e : i.current).appendChild(C), o.current = y;
  }, [n, t, r]), Tn.useEffect(() => l, []);
};
Ja.default = pE;
(function(n) {
  var t = j && j.__importStar || function(g) {
    if (g && g.__esModule)
      return g;
    var y = {};
    if (g != null)
      for (var C in g)
        Object.hasOwnProperty.call(g, C) && (y[C] = g[C]);
    return y.default = g, y;
  }, e = j && j.__importDefault || function(g) {
    return g && g.__esModule ? g : { default: g };
  };
  Object.defineProperty(n, "__esModule", { value: !0 });
  const r = Be, o = t(Oe), i = Qe, s = e(Qa), a = e(Ja), l = ke, u = Qt;
  (function(g) {
    g[g.ShowValue = 0] = "ShowValue", g[g.EditValue = 1] = "EditValue";
  })(n.CellCompState || (n.CellCompState = {}));
  const p = (g, y, C) => {
    const m = C.getColumn();
    if (!g && y.isPopup && y.isPopup()) {
      const _ = `AG Grid: Found an issue in column ${m.getColId()}. If using React, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid React cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as React needs to know this information BEFORE the component is created.`;
      r._.doOnce(() => console.warn(_), "jsEditorComp-isPopup-" + C.getColumn().getColId());
    }
    if (g && y.getPopupPosition && y.getPopupPosition() != null) {
      const _ = `AG Grid: Found an issue in column ${m.getColId()}. If using React, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid React cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as React needs to know this information BEFORE the component is created.`;
      r._.doOnce(() => console.warn(_), "jsEditorComp-getPopupPosition-" + C.getColumn().getColId());
    }
  }, c = (g, y, C, m, _, E) => {
    const S = g.compDetails, b = S.componentClass, x = S.componentFromFramework && !g.popup, I = S.componentFromFramework && g.popup, A = !S.componentFromFramework && g.popup;
    return o.default.createElement(
      o.default.Fragment,
      null,
      x && o.default.createElement(b, Object.assign({}, g.compDetails.params, { ref: y })),
      I && o.default.createElement(s.default, { editDetails: g, cellCtrl: _, eParentCell: m, wrappedContent: o.default.createElement(b, Object.assign({}, g.compDetails.params, { ref: C })) }),
      A && E && o.default.createElement(s.default, { editDetails: g, cellCtrl: _, eParentCell: m, jsChildComp: E })
    );
  }, d = (g, y, C, m, _, E, S) => {
    const { compDetails: b, value: x } = g, I = !b, A = b && b.componentFromFramework, M = b && b.componentClass, V = x && x.toString ? x.toString() : x, H = () => o.default.createElement(
      o.default.Fragment,
      null,
      I && o.default.createElement(o.default.Fragment, null, V),
      A && !E && o.default.createElement(M, Object.assign({}, b.params, { key: y, ref: m })),
      A && E && o.default.createElement(M, Object.assign({}, b.params, { key: y }))
    );
    return o.default.createElement(o.default.Fragment, null, _ ? o.default.createElement("span", { role: "presentation", id: `cell-${C}`, className: "ag-cell-value", ref: S }, H()) : H());
  }, f = (g) => {
    const { context: y } = o.useContext(l.BeansContext), { cellCtrl: C, printLayout: m, editingRow: _ } = g, [E, S] = o.useState(), [b, x] = o.useState(), [I, A] = o.useState(1), [M, V] = o.useState(new i.CssClasses()), [H, z] = o.useState(), [$, Z] = o.useState(), [X, ce] = o.useState(), [Fe, Gt] = o.useState(), [Je, L] = o.useState(), [k, W] = o.useState(), [N, Y] = o.useState(!1), [ne, re] = o.useState(!1), [oe, ie] = o.useState(!1), [he, ae] = o.useState(), nt = o.useMemo(() => C.isForceWrapper(), []), be = o.useRef(null), pt = o.useRef(null), ol = o.useRef(), nl = o.useRef(), cr = o.useRef(), [Sd, Od] = o.useState(0), Td = o.useCallback((Te) => {
      cr.current = Te, Od((Ie) => Ie + 1);
    }, []), Xo = o.useRef(), [Pd, bd] = o.useState(0), Dd = o.useCallback((Te) => {
      Xo.current = Te, bd((Ie) => Ie + 1);
    }, []), il = E != null && (N || oe || ne), br = nt || il, Qo = o.useCallback((Te, Ie) => {
      nl.current = Ie, Ie && (p(Te, Ie, C), Ie.isCancelBeforeStart && Ie.isCancelBeforeStart() && setTimeout(() => C.stopEditing(), 0));
    }, []), Ad = o.useCallback((Te) => Qo(!0, Te), []), Fd = o.useCallback((Te) => Qo(!1, Te), []);
    a.default(E, br, Xo.current, Pd, ol, be);
    const sl = o.useRef();
    o.useEffect(() => {
      const Te = sl.current, Ie = E;
      if (sl.current = E, Te == null || Te.compDetails == null || Ie == null || Ie.compDetails == null)
        return;
      const le = Te.compDetails, Ge = Ie.compDetails;
      if (le.componentClass != Ge.componentClass || pt.current == null || pt.current.refresh == null)
        return;
      pt.current.refresh(Ge.params) != !0 && A((Gd) => Gd + 1);
    }, [E]), o.useEffect(() => {
      if (!(b && !b.compDetails.componentFromFramework))
        return;
      const Ie = b.compDetails, le = b.popup === !0, Ge = u.createSyncJsComp(Ie);
      if (!Ge)
        return;
      const _t = Ge.getGui();
      return Qo(le, Ge), le || (be.current.appendChild(_t), Ge.afterGuiAttached && Ge.afterGuiAttached()), ae(Ge), () => {
        y.destroyBean(Ge), Qo(le, void 0), ae(void 0), _t && _t.parentElement && _t.parentElement.removeChild(_t);
      };
    }, [b]), o.useEffect(() => {
      if (!C || !y || (ce(cr.current ? `cell-${C.getInstanceId()}` : void 0), !cr.current || !br))
        return;
      const Te = [], Ie = (le) => {
        if (le) {
          const Ge = le.getGui();
          cr.current.insertAdjacentElement("afterbegin", Ge), Te.push(() => {
            y.destroyBean(le), r._.removeFromParent(Ge);
          });
        }
        return le;
      };
      return N && Ie(C.createSelectionCheckbox()), oe && Ie(C.createDndSource()), ne && Ie(C.createRowDragComp()), () => {
        Te.forEach((le) => {
          le();
        });
      };
    }, [br, oe, ne, N, Sd]), o.useEffect(() => {
      if (!C)
        return;
      const Te = {
        addOrRemoveCssClass: (le, Ge) => V((_t) => _t.setClass(le, Ge)),
        setUserStyles: (le) => z(le),
        getFocusableElement: () => be.current,
        setTabIndex: (le) => Z(le),
        setRole: (le) => Gt(le),
        setColId: (le) => L(le),
        setTitle: (le) => W(le),
        setIncludeSelection: (le) => Y(le),
        setIncludeRowDrag: (le) => re(le),
        setIncludeDndSource: (le) => ie(le),
        getCellEditor: () => nl.current || null,
        getCellRenderer: () => pt.current ? pt.current : ol.current,
        getParentOfValue: () => Xo.current ? Xo.current : cr.current ? cr.current : be.current,
        setRenderDetails: (le, Ge, _t) => {
          S({
            value: Ge,
            compDetails: le,
            force: _t
          });
        },
        setEditDetails: (le, Ge, _t) => {
          le ? (x({
            compDetails: le,
            popup: Ge,
            popupPosition: _t
          }), Ge || S(void 0)) : x(void 0);
        }
      }, Ie = cr.current || void 0;
      C.setComp(Te, null, be.current, Ie, m, _);
    }, []);
    const Id = o.useMemo(() => !!(E && E.compDetails && E.compDetails.componentFromFramework && i.isComponentStateless(E.compDetails.componentClass)), [E]), Md = o.useMemo(() => {
      let Te = M.toString();
      return br || (Te += " ag-cell-value"), Te;
    }, [M, il]), Ld = o.useMemo(() => C.getInstanceId(), []), al = () => o.default.createElement(
      o.default.Fragment,
      null,
      E != null && d(E, I, Ld, pt, br, Id, Dd),
      b != null && c(b, Fd, Ad, be.current, C, he)
    );
    return o.default.createElement("div", { ref: be, className: Md, style: H, tabIndex: $, role: Fe, "col-id": Je, title: k, "aria-describedby": X }, br ? o.default.createElement("div", { className: "ag-cell-wrapper", role: "presentation", ref: Td }, al()) : al());
  };
  n.default = o.memo(f);
})(wd);
var cE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, dE = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(Xa, "__esModule", { value: !0 });
const Ce = cE(Oe), hE = Be, fE = Qt, gE = Qe, vE = ke, yE = dE(wd), CE = (n, t, e) => {
  if (e) {
    const l = { list: t, instanceIdMap: /* @__PURE__ */ new Map() };
    return t.forEach((u) => l.instanceIdMap.set(u.getInstanceId(), u)), l;
  }
  const r = [], o = [], i = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map();
  return t.forEach((l) => s.set(l.getInstanceId(), l)), n.list.forEach((l) => {
    const u = l.getInstanceId();
    s.has(u) && (r.push(l), i.set(u, l));
  }), t.forEach((l) => {
    const u = l.getInstanceId();
    n.instanceIdMap.has(u) || (o.push(l), i.set(u, l));
  }), {
    list: [...r, ...o],
    instanceIdMap: i
  };
}, mE = (n) => {
  const { context: t } = Ce.useContext(vE.BeansContext), { rowCtrl: e, containerType: r } = n, [o, i] = Ce.useState(), [s, a] = Ce.useState(), [l, u] = Ce.useState(), [p, c] = Ce.useState(), [d, f] = Ce.useState(), [g, y] = Ce.useState(), [C, m] = Ce.useState({ list: [], instanceIdMap: /* @__PURE__ */ new Map() }), [_, E] = Ce.useState(), [S, b] = Ce.useState(!1), [x, I] = Ce.useState(e.getInitialRowTop()), [A, M] = Ce.useState(e.getInitialTransform()), V = Ce.useRef(null), H = Ce.useRef(), z = Ce.useRef(!1), [$, Z] = Ce.useState(0);
  Ce.useEffect(() => {
    var W;
    if (z.current || !_ || $ > 10)
      return;
    const N = (W = V.current) === null || W === void 0 ? void 0 : W.firstChild;
    N ? (e.setupDetailRowAutoHeight(N), z.current = !0) : Z((Y) => Y + 1);
  }, [_, $]);
  const X = Ce.useMemo(() => new hE.CssClassManager(() => V.current), []);
  Ce.useEffect(() => {
    if (!e.isAlive())
      return;
    const W = {
      // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)
      // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.
      setTop: (N) => I(N),
      setTransform: (N) => M(N),
      // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of
      // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.
      addOrRemoveCssClass: (N, Y) => X.addOrRemoveCssClass(N, Y),
      setDomOrder: (N) => b(N),
      setRowIndex: (N) => i(N),
      setRowId: (N) => a(N),
      setRowBusinessKey: (N) => c(N),
      setTabIndex: (N) => f(N),
      setUserStyles: (N) => y(N),
      setRole: (N) => u(N),
      // if we don't maintain the order, then cols will be ripped out and into the dom
      // when cols reordered, which would stop the CSS transitions from working
      setCellCtrls: (N) => m((Y) => CE(Y, N, S)),
      showFullWidth: (N) => E(N),
      getFullWidthCellRenderer: () => H.current
    };
    e.setComp(W, V.current, r);
  }, []), Ce.useEffect(() => fE.showJsComp(_, t, V.current, H), [_]);
  const ce = Ce.useMemo(() => {
    const W = { top: x, transform: A };
    return Object.assign(W, g), W;
  }, [x, A, g]), Fe = _ && _.componentFromFramework, Gt = C != null, Je = Ce.useMemo(() => {
    var W;
    return !!(((W = _) === null || W === void 0 ? void 0 : W.componentFromFramework) && gE.isComponentStateless(_.componentClass));
  }, [_]), L = () => C.list.map((W) => Ce.default.createElement(yE.default, { cellCtrl: W, editingRow: e.isEditing(), printLayout: e.isPrintLayout(), key: W.getInstanceId() })), k = () => {
    const W = _.componentClass;
    return Ce.default.createElement(
      Ce.default.Fragment,
      null,
      Je && Ce.default.createElement(W, Object.assign({}, _.params)),
      !Je && Ce.default.createElement(W, Object.assign({}, _.params, { ref: H }))
    );
  };
  return Ce.default.createElement(
    "div",
    { ref: V, role: l, style: ce, "row-index": o, "row-id": s, "row-business-key": p, tabIndex: d },
    Gt && L(),
    Fe && k()
  );
};
Xa.default = Ce.memo(mE);
var _E = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, Ed = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(qa, "__esModule", { value: !0 });
const Vr = Be, Se = _E(Oe), ms = Qe, wE = Ed(qo), EE = Ed(Xa), RE = ke, SE = (n) => {
  const { context: t } = Se.useContext(RE.BeansContext), [e, r] = Se.useState(""), [o, i] = Se.useState([]), [s, a] = Se.useState([]), [l, u] = Se.useState(!1), [p, c] = Se.useState(""), { name: d } = n, f = Se.useMemo(() => Vr.getRowContainerTypeForName(d), [d]), g = Se.useRef(null), y = Se.useRef(null), C = Se.useRef(null), m = Se.useMemo(() => Vr.RowContainerCtrl.getRowContainerCssClasses(d), [d]), _ = Se.useMemo(() => ms.classesList(m.wrapper), []), E = Se.useMemo(() => ms.classesList(m.viewport), []), S = Se.useMemo(() => ms.classesList(m.container), []), b = d === Vr.RowContainerName.CENTER, x = d === Vr.RowContainerName.TOP_CENTER || d === Vr.RowContainerName.BOTTOM_CENTER, I = !b && !x, A = b ? g : x ? y : C;
  wE.default(" AG Row Container " + d + " ", A), Se.useEffect(() => {
    i((z) => {
      if (l)
        return s;
      const $ = z.filter((ce) => s.indexOf(ce) >= 0), Z = s.filter((ce) => $.indexOf(ce) < 0);
      return [...$, ...Z];
    });
  }, [l, s]), Se.useEffect(() => {
    const z = [], $ = {
      setViewportHeight: r,
      setRowCtrls: (X) => a(X),
      setDomOrder: (X) => u(X),
      setContainerWidth: (X) => c(X)
    }, Z = t.createBean(new Vr.RowContainerCtrl(d));
    return z.push(Z), Z.setComp($, C.current, y.current, g.current), () => {
      t.destroyBeans(z);
    };
  }, []);
  const M = Se.useMemo(() => ({
    height: e
  }), [e]), V = Se.useMemo(() => ({
    width: p
  }), [p]), H = () => Se.default.createElement("div", { className: S, ref: C, role: "rowgroup", style: V }, o.map((z) => Se.default.createElement(EE.default, { rowCtrl: z, containerType: f, key: z.getInstanceId() })));
  return Se.default.createElement(
    Se.default.Fragment,
    null,
    b && Se.default.createElement(
      "div",
      { className: _, ref: g, role: "presentation" },
      Se.default.createElement("div", { className: E, ref: y, role: "presentation", style: M }, H())
    ),
    x && Se.default.createElement("div", { className: E, ref: y, role: "presentation", style: M }, H()),
    I && H()
  );
};
qa.default = Se.memo(SE);
var OE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, Za = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(Ba, "__esModule", { value: !0 });
const ft = Be, me = OE(Oe), TE = ke, PE = Za(ja), Pn = Za(qo), bE = Za(qa), bn = Qe, DE = () => {
  const { context: n, agStackComponentsRegistry: t, resizeObserverService: e } = me.useContext(TE.BeansContext), [r, o] = me.useState(""), [i, s] = me.useState(0), [a, l] = me.useState(0), [u, p] = me.useState(0), [c, d] = me.useState(0), [f, g] = me.useState(""), [y, C] = me.useState(""), [m, _] = me.useState(null), [E, S] = me.useState(""), [b, x] = me.useState(null), [I, A] = me.useState(""), [M, V] = me.useState(null), H = me.useRef(null), z = me.useRef(null), $ = me.useRef(null), Z = me.useRef(null);
  Pn.default(" AG Grid Body ", H), Pn.default(" AG Pinned Top ", z), Pn.default(" AG Middle ", $), Pn.default(" AG Pinned Bottom ", Z), me.useEffect(() => {
    const N = [], Y = [];
    if (!n)
      return;
    const ne = (ie) => {
      const he = t.getComponentClass(ie), ae = n.createBean(new he());
      return N.push(ae), ae;
    };
    H.current.appendChild(document.createComment(" AG Fake Horizontal Scroll ")), H.current.appendChild(ne("AG-FAKE-HORIZONTAL-SCROLL").getGui()), H.current.appendChild(document.createComment(" AG Overlay Wrapper ")), H.current.appendChild(ne("AG-OVERLAY-WRAPPER").getGui());
    const re = {
      setRowAnimationCssOnBodyViewport: o,
      setColumnCount: s,
      setRowCount: l,
      setTopHeight: p,
      setBottomHeight: d,
      setTopDisplay: g,
      setBottomDisplay: C,
      setColumnMovingCss: _,
      updateLayoutClasses: S,
      setAlwaysVerticalScrollClass: x,
      setPinnedTopBottomOverflowY: A,
      setCellSelectableCss: V,
      registerBodyViewportResizeListener: (ie) => {
        const he = e.observeResize($.current, ie);
        Y.push(() => he());
      }
    }, oe = n.createBean(new ft.GridBodyCtrl());
    return N.push(oe), oe.setComp(re, H.current, $.current, z.current, Z.current), () => {
      n.destroyBeans(N), Y.forEach((ie) => ie());
    };
  }, []);
  const X = me.useMemo(() => bn.classesList("ag-root", "ag-unselectable", m, E), [m, E]), ce = me.useMemo(() => bn.classesList("ag-body-viewport", r, E, b, M), [r, E, b, M]), Fe = me.useMemo(() => bn.classesList("ag-floating-top", M), [M]), Gt = me.useMemo(() => bn.classesList("ag-floating-bottom", M), [M]), Je = me.useMemo(() => ({
    height: u,
    minHeight: u,
    display: f,
    overflowY: I
  }), [u, f, I]), L = me.useMemo(() => ({
    height: c,
    minHeight: c,
    display: y,
    overflowY: I
  }), [c, y, I]), k = (N) => me.default.createElement(bE.default, { name: N, key: `${N}-container` }), W = ({ section: N, children: Y, className: ne, style: re }) => me.default.createElement("div", { ref: N, className: ne, role: "presentation", style: re }, Y.map(k));
  return me.default.createElement(
    "div",
    { ref: H, className: X, role: "grid", "aria-colcount": i, "aria-rowcount": a },
    me.default.createElement(PE.default, null),
    W({ section: z, className: Fe, style: Je, children: [
      ft.RowContainerName.TOP_LEFT,
      ft.RowContainerName.TOP_CENTER,
      ft.RowContainerName.TOP_RIGHT,
      ft.RowContainerName.TOP_FULL_WIDTH
    ] }),
    W({ section: $, className: ce, children: [
      ft.RowContainerName.LEFT,
      ft.RowContainerName.CENTER,
      ft.RowContainerName.RIGHT,
      ft.RowContainerName.FULL_WIDTH
    ] }),
    W({ section: Z, className: Gt, style: L, children: [
      ft.RowContainerName.BOTTOM_LEFT,
      ft.RowContainerName.BOTTOM_CENTER,
      ft.RowContainerName.BOTTOM_RIGHT,
      ft.RowContainerName.BOTTOM_FULL_WIDTH
    ] })
  );
};
Ba.default = me.memo(DE);
var el = {}, AE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(el, "__esModule", { value: !0 });
const St = AE(Oe), FE = Be, IE = ke, ME = (n, t) => {
  const { children: e, eFocusableElement: r, onTabKeyDown: o, gridCtrl: i } = n, { context: s } = St.useContext(IE.BeansContext), a = St.useRef(null), l = St.useRef(null), u = St.useRef(), [p, c] = St.useState();
  St.useImperativeHandle(t, () => ({
    forceFocusOutOfContainer() {
      u.current.forceFocusOutOfContainer();
    }
  })), St.useEffect(() => {
    const f = a.current, g = l.current, y = {
      setTabIndex: (m) => m == null ? c(void 0) : c(parseInt(m, 10))
    }, C = u.current = s.createBean(new FE.TabGuardCtrl({
      comp: y,
      eTopGuard: f,
      eBottomGuard: g,
      eFocusableElement: r,
      onTabKeyDown: o,
      focusInnerElement: (m) => i.focusInnerElement(m)
    }));
    return () => {
      s.destroyBean(C);
    };
  }, []);
  const d = (f) => St.default.createElement("div", { className: `ag-tab-guard ag-tab-guard-${f}`, role: "presentation", tabIndex: p, ref: f === "top" ? a : l });
  return St.default.createElement(
    St.default.Fragment,
    null,
    d("top"),
    e,
    d("bottom")
  );
}, LE = St.forwardRef(ME);
el.default = St.memo(LE);
var GE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
}, tl = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
};
Object.defineProperty(Va, "__esModule", { value: !0 });
const gu = Be, we = GE(Oe), NE = ke, xE = tl(Ba), HE = tl(qo), WE = tl(el), vu = Qe, VE = ({ context: n }) => {
  const [t, e] = we.useState(""), [r, o] = we.useState(""), [i, s] = we.useState(""), [a, l] = we.useState(null), [u, p] = we.useState(null), [c, d] = we.useState(!1), [f, g] = we.useState(), y = we.useRef(null), C = we.useRef(null), m = we.useRef(), _ = we.useRef(null), E = we.useRef(() => {
  }), S = we.useCallback(() => {
  }, []), b = we.useMemo(() => n.getBean("beans"), []);
  HE.default(" AG Grid ", C), we.useEffect(() => {
    const H = y.current = n.createBean(new gu.GridCtrl());
    return () => {
      n.destroyBean(H), y.current = null;
    };
  }, []), we.useEffect(() => {
    const H = y.current;
    E.current = H.focusInnerElement.bind(H);
    const z = {
      destroyGridUi: () => {
      },
      setRtlClass: e,
      addOrRemoveKeyboardFocusClass: ($) => o($ ? gu.FocusService.AG_KEYBOARD_FOCUS : ""),
      forceFocusOutOfContainer: () => {
        m.current.forceFocusOutOfContainer();
      },
      updateLayoutClasses: s,
      getFocusableContainers: () => {
        const $ = [], Z = C.current.querySelector(".ag-root"), X = C.current.querySelector(".ag-side-bar");
        return Z && $.push(Z), X && $.push(X), $;
      },
      setCursor: l,
      setUserSelect: p
    };
    H.setComp(z, C.current, C.current), d(!0);
  }, []), we.useEffect(() => {
    if (!f)
      return;
    const H = y.current, z = [], { agStackComponentsRegistry: $ } = b, Z = $.getComponentClass("AG-GRID-HEADER-DROP-ZONES"), X = $.getComponentClass("AG-SIDE-BAR"), ce = $.getComponentClass("AG-STATUS-BAR"), Fe = $.getComponentClass("AG-WATERMARK"), Gt = $.getComponentClass("AG-PAGINATION"), Je = [], L = C.current, k = _.current;
    if (H.showDropZones() && Z) {
      const W = n.createBean(new Z()), N = W.getGui();
      L.insertAdjacentElement("afterbegin", N), Je.push(N), z.push(W);
    }
    if (H.showSideBar() && X) {
      const W = n.createBean(new X()), N = W.getGui(), Y = k.querySelector(".ag-tab-guard-bottom");
      Y && (Y.insertAdjacentElement("beforebegin", N), Je.push(N)), z.push(W);
    }
    if (H.showStatusBar() && ce) {
      const W = n.createBean(new ce()), N = W.getGui();
      L.insertAdjacentElement("beforeend", N), Je.push(N), z.push(W);
    }
    if (Gt) {
      const W = n.createBean(new Gt()), N = W.getGui();
      L.insertAdjacentElement("beforeend", N), Je.push(N), z.push(W);
    }
    if (H.showWatermark() && Fe) {
      const W = n.createBean(new Fe()), N = W.getGui();
      L.insertAdjacentElement("beforeend", N), Je.push(N), z.push(W);
    }
    return () => {
      n.destroyBeans(z), Je.forEach((W) => {
        W.parentElement && W.parentElement.removeChild(W);
      });
    };
  }, [f]);
  const x = we.useMemo(() => vu.classesList("ag-root-wrapper", t, r, i), [t, r, i]), I = we.useMemo(() => vu.classesList("ag-root-wrapper-body", "ag-focus-managed", i), [i]), A = we.useMemo(() => ({
    userSelect: u ?? "",
    WebkitUserSelect: u ?? "",
    cursor: a ?? ""
  }), [u, a]), M = _.current, V = we.useCallback((H) => {
    m.current = H, g(!0);
  }, []);
  return we.default.createElement(
    "div",
    { ref: C, className: x, style: A },
    we.default.createElement("div", { className: I, ref: _ }, c && M && we.default.createElement(
      NE.BeansContext.Provider,
      { value: b },
      we.default.createElement(
        WE.default,
        { ref: V, eFocusableElement: M, onTabKeyDown: S, gridCtrl: y.current },
        // we wait for initialised before rending the children, so GridComp has created and registered with it's
        // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,
        // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that
        // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,
        // hangs the UI)
        we.default.createElement(xE.default, null)
      )
    ))
  );
};
Va.default = we.memo(VE);
var yu;
function rl() {
  if (yu)
    return Sn;
  yu = 1;
  var n = j && j.__importStar || function(d) {
    if (d && d.__esModule)
      return d;
    var f = {};
    if (d != null)
      for (var g in d)
        Object.hasOwnProperty.call(d, g) && (f[g] = d[g]);
    return f.default = d, f;
  }, t = j && j.__importDefault || function(d) {
    return d && d.__esModule ? d : { default: d };
  };
  Object.defineProperty(Sn, "__esModule", { value: !0 });
  const e = Be, r = n(Oe), o = Yo, i = gi, s = vi, a = yi, l = t(Va), u = Rd();
  class p extends r.Component {
    constructor(f) {
      super(f), this.props = f, this.destroyFuncs = [], this.changeDetectionService = new i.ChangeDetectionService(), this.eGui = r.default.createRef(), this.whenReadyFuncs = [], this.ready = !1, this.state = { context: void 0 }, this.portalManager = new a.PortalManager(this, f.componentWrappingElement, f.maxComponentCreationTimeMs);
    }
    render() {
      return r.default.createElement(
        "div",
        { style: this.createStyleForDiv(), className: this.props.className, ref: this.eGui },
        this.state.context && r.default.createElement(l.default, { context: this.state.context }),
        this.portalManager.getPortals()
      );
    }
    createStyleForDiv() {
      return Object.assign({ height: "100%" }, this.props.containerStyle || {});
    }
    componentDidMount() {
      const f = this.props.modules || [], g = {
        providedBeanInstances: {
          frameworkComponentWrapper: new c(this.portalManager)
        },
        modules: f,
        frameworkOverrides: new u.ReactFrameworkOverrides(!0)
      };
      this.gridOptions = this.props.gridOptions || {};
      const { children: y } = this.props;
      o.AgGridColumn.hasChildColumns(y) && (this.gridOptions.columnDefs = o.AgGridColumn.mapChildColumnDefs(y)), this.gridOptions = e.ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this.props);
      const C = (E) => {
        this.setState({ context: E }), E.getBean(e.CtrlsService.NAME).whenReady(() => {
          this.api = this.gridOptions.api, this.columnApi = this.gridOptions.columnApi, this.props.setGridApi(this.api, this.columnApi), this.destroyFuncs.push(() => this.api.destroy());
        });
      }, m = (E) => {
        E.getBean(e.CtrlsService.NAME).whenReady(() => {
          this.whenReadyFuncs.forEach((b) => b()), this.whenReadyFuncs.length = 0, this.ready = !0;
        });
      };
      new e.GridCoreCreator().create(this.eGui.current, this.gridOptions, C, m, g);
    }
    componentWillUnmount() {
      this.destroyFuncs.forEach((f) => f());
    }
    componentDidUpdate(f) {
      this.processPropsChanges(f, this.props);
    }
    processPropsChanges(f, g) {
      const y = {};
      this.extractGridPropertyChanges(f, g, y), this.extractDeclarativeColDefChanges(g, y), this.processChanges(y);
    }
    extractDeclarativeColDefChanges(f, g) {
      if (this.props.gridOptions && this.props.gridOptions.columnDefs || this.props.columnDefs)
        return;
      const y = !!f.debug, C = "columnDefs", m = this.gridOptions.columnDefs;
      if (o.AgGridColumn.hasChildColumns(f.children)) {
        const _ = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(C)), E = o.AgGridColumn.mapChildColumnDefs(f.children);
        _.areEqual(m, E) || (y && console.log("agGridReact: colDefs definitions changed"), g[C] = {
          previousValue: m,
          currentValue: E
        });
      } else
        m && m.length > 0 && (g[C] = {
          previousValue: m,
          currentValue: []
        });
    }
    extractGridPropertyChanges(f, g, y) {
      const C = !!g.debug;
      Object.keys(g).forEach((m) => {
        e._.includes(e.ComponentUtil.ALL_PROPERTIES, m) && (this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(m)).areEqual(f[m], g[m]) || (C && console.log(`agGridReact: [${m}] property changed`), y[m] = {
          previousValue: f[m],
          currentValue: g[m]
        }));
      }), e.ComponentUtil.getEventCallbacks().forEach((m) => {
        f[m] !== g[m] && (C && console.log(`agGridReact: [${m}] event callback changed`), y[m] = {
          previousValue: f[m],
          currentValue: g[m]
        });
      });
    }
    processChanges(f) {
      this.processWhenReady(() => e.ComponentUtil.processOnChange(f, this.gridOptions, this.api, this.columnApi));
    }
    processWhenReady(f) {
      this.ready ? f() : this.whenReadyFuncs.push(f);
    }
    getStrategyTypeForProp(f) {
      if (f === "rowData") {
        if (this.props.rowDataChangeDetectionStrategy)
          return this.props.rowDataChangeDetectionStrategy;
        if (this.isImmutableDataActive())
          return i.ChangeDetectionStrategyType.IdentityCheck;
      }
      return i.ChangeDetectionStrategyType.DeepValueCheck;
    }
    isImmutableDataActive() {
      return this.props.deltaRowDataMode || this.props.immutableData || this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData);
    }
  }
  Sn.AgGridReactUi = p;
  class c extends e.BaseComponentWrapper {
    constructor(f) {
      super(), this.parent = f;
    }
    createWrapper(f, g) {
      return new s.NewReactComponent(f, this.parent, g);
    }
  }
  return Sn;
}
var Cu;
function BE() {
  if (Cu)
    return Rn;
  Cu = 1;
  var n = j && j.__importStar || function(s) {
    if (s && s.__esModule)
      return s;
    var a = {};
    if (s != null)
      for (var l in s)
        Object.hasOwnProperty.call(s, l) && (a[l] = s[l]);
    return a.default = s, a;
  };
  Object.defineProperty(Rn, "__esModule", { value: !0 });
  const t = n(Oe), e = Qe, r = ke, o = rl(), i = (s, a) => {
    const { ctrlsFactory: l, context: u, gridOptionsWrapper: p, resizeObserverService: c, clientSideRowModel: d, serverSideRowModel: f } = t.useContext(r.BeansContext), [g, y] = t.useState(new e.CssClasses()), [C, m] = t.useState(new e.CssClasses()), [_, E] = t.useState(), [S, b] = t.useState(), x = t.useRef(), I = t.useRef(null), A = t.useMemo(() => g.toString() + " ag-details-row", [g]), M = t.useMemo(() => C.toString() + " ag-details-grid", [C]);
    a && t.useImperativeHandle(a, () => ({
      refresh() {
        return x.current.refresh();
      }
    })), t.useEffect(() => {
      s.template && typeof s.template == "string" && console.warn("AG Grid: detailCellRendererParams.template is not supported by React - this only works with frameworks that work against String templates. To change the template, please provide your own React Detail Cell Renderer.");
    }, []), t.useEffect(() => {
      const H = {
        addOrRemoveCssClass: ($, Z) => y((X) => X.setClass($, Z)),
        addOrRemoveDetailGridCssClass: ($, Z) => m((X) => X.setClass($, Z)),
        setDetailGrid: ($) => E($),
        setRowData: ($) => b($)
      }, z = l.getInstance("detailCellRenderer");
      if (z) {
        if (u.createBean(z), z.init(H, s), x.current = z, p.isDetailRowAutoHeight()) {
          const $ = () => {
            if (I.current == null)
              return;
            const Z = I.current.clientHeight;
            Z != null && Z > 0 && setTimeout(() => {
              s.node.setRowHeight(Z), d ? d.onRowHeightChanged() : f && f.onRowHeightChanged();
            }, 0);
          };
          c.observeResize(I.current, $), $();
        }
        return () => {
          u.destroyBean(z);
        };
      }
    }, []);
    const V = t.useCallback((H, z) => {
      x.current.registerDetailWithMaster(H, z);
    }, []);
    return t.default.createElement("div", { className: A, ref: I }, _ && t.default.createElement(o.AgGridReactUi, Object.assign({ className: M }, _, { rowData: S, setGridApi: V })));
  };
  return Rn.default = t.forwardRef(i), Rn;
}
var mu;
function Rd() {
  if (mu)
    return wn;
  mu = 1;
  var n = j && j.__importDefault || function(i) {
    return i && i.__esModule ? i : { default: i };
  };
  Object.defineProperty(wn, "__esModule", { value: !0 });
  const t = Be, e = n(Ha), r = n(BE());
  class o extends t.VanillaFrameworkOverrides {
    constructor(s) {
      super(), this.frameworkComponents = {
        agGroupCellRenderer: e.default,
        agGroupRowRenderer: e.default,
        agDetailCellRenderer: r.default
      }, this.reactUi = s;
    }
    frameworkComponent(s) {
      if (this.reactUi)
        return this.frameworkComponents[s];
    }
    isFrameworkComponent(s) {
      if (!s)
        return !1;
      const a = s.prototype;
      return !(a && "getGui" in a);
    }
  }
  return wn.ReactFrameworkOverrides = o, wn;
}
var jE = j && j.__importDefault || function(n) {
  return n && n.__esModule ? n : { default: n };
}, UE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(Na, "__esModule", { value: !0 });
const Ze = Be, pr = jE(Mn), _u = UE(Oe), kE = xa, Dn = Yo, _s = gi, zE = vi, $E = yi, KE = Rd();
class to extends _u.Component {
  constructor(t) {
    super(t), this.props = t, this.changeDetectionService = new _s.ChangeDetectionService(), this.api = null, this.destroyed = !1, this.SYNCHRONOUS_CHANGE_PROPERTIES = ["context"], this.portalManager = new $E.PortalManager(this, t.componentWrappingElement, t.maxComponentCreationTimeMs);
  }
  render() {
    return _u.default.createElement("div", {
      style: this.createStyleForDiv(),
      className: this.props.className,
      ref: (t) => {
        this.eGridDiv = t;
      }
    }, this.portalManager.getPortals());
  }
  createStyleForDiv() {
    return Object.assign({ height: "100%" }, this.props.containerStyle || {});
  }
  componentDidMount() {
    const t = this.props.modules || [], e = {
      providedBeanInstances: {
        agGridReact: this,
        frameworkComponentWrapper: new YE(this, this.portalManager)
      },
      modules: t,
      frameworkOverrides: new KE.ReactFrameworkOverrides(!1)
    }, r = this.props.gridOptions || {}, { children: o } = this.props;
    Dn.AgGridColumn.hasChildColumns(o) && (r.columnDefs = Dn.AgGridColumn.mapChildColumnDefs(o)), this.gridOptions = Ze.ComponentUtil.copyAttributesToGridOptions(r, this.props), new Ze.Grid(this.eGridDiv, this.gridOptions, e), this.api = this.gridOptions.api, this.columnApi = this.gridOptions.columnApi, this.props.setGridApi(this.api, this.columnApi);
  }
  getStrategyTypeForProp(t) {
    if (t === "rowData") {
      if (this.props.rowDataChangeDetectionStrategy)
        return this.props.rowDataChangeDetectionStrategy;
      if (this.isImmutableDataActive())
        return _s.ChangeDetectionStrategyType.IdentityCheck;
    }
    return _s.ChangeDetectionStrategyType.DeepValueCheck;
  }
  isImmutableDataActive() {
    return this.props.deltaRowDataMode || this.props.immutableData || this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData || this.props.gridOptions.getRowId);
  }
  shouldComponentUpdate(t) {
    return this.processPropsChanges(this.props, t), !1;
  }
  componentDidUpdate(t) {
    this.processPropsChanges(t, this.props);
  }
  processPropsChanges(t, e) {
    const r = {};
    this.extractGridPropertyChanges(t, e, r), this.extractDeclarativeColDefChanges(e, r), this.processSynchronousChanges(r), this.processAsynchronousChanges(r);
  }
  extractDeclarativeColDefChanges(t, e) {
    if (this.props.gridOptions && this.props.gridOptions.columnDefs || this.props.columnDefs)
      return;
    const r = !!t.debug, o = "columnDefs", i = this.gridOptions.columnDefs;
    if (Dn.AgGridColumn.hasChildColumns(t.children)) {
      const s = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(o)), a = Dn.AgGridColumn.mapChildColumnDefs(t.children);
      s.areEqual(i, a) || (r && console.log("agGridReact: colDefs definitions changed"), e[o] = {
        previousValue: i,
        currentValue: a
      });
    } else
      i && i.length > 0 && (e[o] = {
        previousValue: i,
        currentValue: []
      });
  }
  extractGridPropertyChanges(t, e, r) {
    const o = !!e.debug;
    Object.keys(e).forEach((i) => {
      Ze._.includes(Ze.ComponentUtil.ALL_PROPERTIES, i) && (this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(i)).areEqual(t[i], e[i]) || (o && console.log(`agGridReact: [${i}] property changed`), r[i] = {
        previousValue: t[i],
        currentValue: e[i]
      }));
    }), Ze.ComponentUtil.getEventCallbacks().forEach((i) => {
      t[i] !== e[i] && (o && console.log(`agGridReact: [${i}] event callback changed`), r[i] = {
        previousValue: t[i],
        currentValue: e[i]
      });
    });
  }
  componentWillUnmount() {
    this.api && (this.api.destroy(), this.api = null), this.destroyed = !0, this.portalManager.destroy();
  }
  isDisableStaticMarkup() {
    return this.props.disableStaticMarkup === !0;
  }
  isLegacyComponentRendering() {
    return this.props.legacyComponentRendering === !0;
  }
  processSynchronousChanges(t) {
    const e = Object.assign({}, t);
    if (Object.keys(e).length > 0) {
      const r = {};
      this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach((o) => {
        e[o] && (r[o] = e[o], delete e[o]);
      }), Object.keys(r).length > 0 && this.api && Ze.ComponentUtil.processOnChange(r, this.gridOptions, this.api, this.columnApi);
    }
    return e;
  }
  processAsynchronousChanges(t) {
    Object.keys(t).length > 0 && window.setTimeout(() => {
      this.api && Ze.ComponentUtil.processOnChange(t, this.gridOptions, this.api, this.columnApi);
    });
  }
}
Na.AgGridReactLegacy = to;
to.MAX_COMPONENT_CREATION_TIME_IN_MS = 1e3;
to.defaultProps = {
  legacyComponentRendering: !1,
  disableStaticMarkup: !1,
  maxComponentCreationTimeMs: to.MAX_COMPONENT_CREATION_TIME_IN_MS
};
to.propTypes = {
  gridOptions: pr.default.object
};
Pr(Ze.ComponentUtil.getEventCallbacks(), pr.default.func);
Pr(Ze.ComponentUtil.BOOLEAN_PROPERTIES, pr.default.bool);
Pr(Ze.ComponentUtil.STRING_PROPERTIES, pr.default.string);
Pr(Ze.ComponentUtil.OBJECT_PROPERTIES, pr.default.object);
Pr(Ze.ComponentUtil.ARRAY_PROPERTIES, pr.default.array);
Pr(Ze.ComponentUtil.NUMBER_PROPERTIES, pr.default.number);
Pr(Ze.ComponentUtil.FUNCTION_PROPERTIES, pr.default.func);
function Pr(n, t) {
  n.forEach((e) => {
    to[e] = t;
  });
}
class YE extends Ze.BaseComponentWrapper {
  constructor(t, e) {
    super(), this.agGridReact = t, this.portalManager = e;
  }
  createWrapper(t, e) {
    return this.agGridReact.isLegacyComponentRendering() ? new kE.LegacyReactComponent(t, this.agGridReact, this.portalManager, e) : new zE.NewReactComponent(t, this.portalManager, e);
  }
}
var qE = j && j.__importStar || function(n) {
  if (n && n.__esModule)
    return n;
  var t = {};
  if (n != null)
    for (var e in n)
      Object.hasOwnProperty.call(n, e) && (t[e] = n[e]);
  return t.default = n, t;
};
Object.defineProperty(Ga, "__esModule", { value: !0 });
const wu = qE(Oe), XE = Na, QE = rl();
let JE = class extends wu.Component {
  constructor() {
    super(...arguments), this.setGridApi = (t, e) => {
      this.api = t, this.columnApi = e;
    };
  }
  render() {
    const t = this.props.suppressReactUi ? XE.AgGridReactLegacy : QE.AgGridReactUi;
    return wu.default.createElement(t, Object.assign({}, this.props, { setGridApi: this.setGridApi }));
  }
};
Ga.AgGridReact = JE;
var sR = Ga.AgGridReact;
Yo.AgGridColumn;
gi.ChangeDetectionStrategyType;
rl().AgGridReactUi;
export {
  sR as A,
  nR as C,
  Q as M,
  te as R,
  oR as a,
  gi as b,
  j as c,
  Nd as g,
  Mn as p
};
